```
def palindrome_of_length_n(string, n):
    return set([s for s in re.findall('[a-zA-Z]{%d}' % n, string) if s == s[::-1]])
```
This function uses regular expressions to find all substrings of the given length (specified by the `n` parameter), and then checks each substring to see if it is a palindrome. The `re.findall()` method finds all matches for the specified pattern, and the `[a-zA-Z]{%d}` pattern matches any string that contains between 1 and `n` letters (inclusive). The `s == s[::-1]` check ensures that the substring is a palindrome.

The resulting set of palindromes is then returned. If there are no palindromes, an empty set is returned.