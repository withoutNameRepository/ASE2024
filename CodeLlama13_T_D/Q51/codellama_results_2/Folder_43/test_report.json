{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_43_2.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_43_2.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_43_2.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010035000741481781, "start": 1700333809.0053477, "stop": 1700333809.0054483, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a9a06b995cfa4cb3abe1253ee916777e", "node": "<WorkerController gw1>"}
{"nodeid": "tests51_43_2.py::test_list_of_strings_of_length_two", "location": ["tests51_43_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_43_2.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014379300409927964, "start": 1700333809.0055141, "stop": 1700333809.0056586, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a9a06b995cfa4cb3abe1253ee916777e", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_43_2.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_43_2.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_43_2.py": 1, "Folder_43": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q51/codellama_results_2/Folder_43/generated_answer.py", "lineno": 6, "message": "UnboundLocalError: local variable 'count' referenced before assignment"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_results_2/Folder_43/tests51_43_2.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(my_list):", "        for i in range(len(my_list)):", "            for j in range(i+1, len(my_list)):", "                if is_anagram(my_list[i], my_list[j]):", ">                   count += 1", "E                   UnboundLocalError: local variable 'count' referenced before assignment"], "reprfuncargs": {"args": [["my_list", "['aaaa', 'aaaa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_results_2/Folder_43/generated_answer.py", "lineno": 6, "message": "UnboundLocalError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_results_2/Folder_43/tests51_43_2.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(my_list):", "        for i in range(len(my_list)):", "            for j in range(i+1, len(my_list)):", "                if is_anagram(my_list[i], my_list[j]):", ">                   count += 1", "E                   UnboundLocalError: local variable 'count' referenced before assignment"], "reprfuncargs": {"args": [["my_list", "['aaaa', 'aaaa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_results_2/Folder_43/generated_answer.py", "lineno": 6, "message": "UnboundLocalError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q51/codellama_results_2/Folder_43/generated_answer.py", "lineno": 6, "message": "UnboundLocalError: local variable 'count' referenced before assignment"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012273198808543384, "start": 1700333809.0056338, "stop": 1700333809.0057569, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a9a06b995cfa4cb3abe1253ee916777e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
