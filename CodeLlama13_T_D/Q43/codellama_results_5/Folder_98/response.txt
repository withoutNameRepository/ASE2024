```
def find_primes_between_indices(nums):
    primes = []
    for i in range(1, len(nums)):
        if nums[i] > 1:
            for j in range(2, int(math.sqrt(nums[i])) + 1):
                if nums[i] % j == 0:
                    break
            else:
                primes.append(nums[i])
    return sorted(primes, reverse=True)
```
This function first initializes an empty list called `primes` to store the prime numbers in the given range. Then it iterates through each element of the input list `nums` using a `for` loop, and checks if the current element is greater than 1 (since 1 is not considered a prime number). If the current element is a prime number, the function then iterates from 2 to the square root of the current element in steps of 1, and checks if the current element divided by any of these numbers leaves a remainder of 0. If no such number exists, it means that the current element is indeed a prime number, and it is appended to the `primes` list. Finally, the function returns the sorted list of prime numbers in descending order using the `sorted()` built-in function with the `reverse` parameter set to `True`. If no prime number exists in the specified range, the function returns an empty list.