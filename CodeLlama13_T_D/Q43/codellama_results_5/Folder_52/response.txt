```python
def find_primes_between_indices(my_list):
    prime_nums = []
    for i in range(33, 60):
        if my_list[i] > 1:
            for j in range(2, int(my_list[i]**0.5) + 1):
                if my_list[i] % j == 0:
                    break
            else:
                prime_nums.append(my_list[i])
    return sorted(prime_nums, reverse=True)
```
This code defines a function called `find_primes_between_indices` that takes in a list of integers as an argument. The function first initializes an empty list `prime_nums`. Then it iterates over the indices between 33 and 59, both inclusive, using a for loop. For each index `i`, it checks if the value at that index is greater than 1. If so, it then uses another for loop to iterate from 2 to the square root of the value at index `i` (rounded up) and checks if the current value is divisible by any of the numbers in this range. If none of them divides the value, then we know that the number at index `i` is prime, and it is appended to the list `prime_nums`. Finally, the function returns the sorted list `prime_nums`, with all elements in descending order (largest first). If no prime numbers exist in the specified range, the function will return an empty list.