{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests43_31_3.py::test_list_of_non_prime_nums", "location": ["tests43_31_3.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_31_3.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012914600665681064, "start": 1700330659.0536935, "stop": 1700330659.053823, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "266881e71bb64f5688175efc09ffce80", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_31_3.py::test_list_of_primes", "location": ["tests43_31_3.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_31_3.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015156299923546612, "start": 1700330659.0537195, "stop": 1700330659.0538716, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "266881e71bb64f5688175efc09ffce80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_31_3.py::test_list_of_non_prime_nums", "location": ["tests43_31_3.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_31_3.py": 1, "Folder_31": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q43/codellama_results_3/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError: 'float' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (95 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_3/Folder_31/tests43_31_3.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for i in range(37, 96):", "            if nums[i] > 1:", ">               for j in range(2, int(nums[i]) ** 0.5 + 1):", "E               TypeError: 'float' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["nums", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_3/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (95 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_3/Folder_31/tests43_31_3.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for i in range(37, 96):", "            if nums[i] > 1:", ">               for j in range(2, int(nums[i]) ** 0.5 + 1):", "E               TypeError: 'float' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["nums", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_3/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q43/codellama_results_3/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError: 'float' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001262360019609332, "start": 1700330659.0539768, "stop": 1700330659.0541034, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "266881e71bb64f5688175efc09ffce80", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
