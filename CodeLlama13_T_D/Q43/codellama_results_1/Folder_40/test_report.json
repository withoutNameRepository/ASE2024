{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests43_40_1.py::test_list_of_non_prime_nums", "location": ["tests43_40_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011499601532705128, "start": 1700330571.3404133, "stop": 1700330571.340529, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_40_1.py::test_list_of_primes", "location": ["tests43_40_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001809299865271896, "start": 1700330571.3406987, "stop": 1700330571.3408806, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_40_1.py::test_list_of_non_prime_nums", "location": ["tests43_40_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012826602323912084, "start": 1700330571.3407073, "stop": 1700330571.340836, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_40_1.py::test_list_of_non_prime_nums", "location": ["tests43_40_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.241799565032125e-05, "start": 1700330571.3410153, "stop": 1700330571.341078, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_40_1.py::test_list_of_negative_nums", "location": ["tests43_40_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.858000415377319e-05, "start": 1700330571.3421414, "stop": 1700330571.3422105, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_40_1.py::test_list_of_negative_nums", "location": ["tests43_40_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_40_1.py": 1, "Folder_40": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 12, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(1 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/tests43_40_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_prime(my_list[i]):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 5, "message": "in find_primes_between_indices"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_prime(n):", "        if n == 1:", "            return False", ">       for i in range(2, int(n**0.5) + 1):", "E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["n", "-2"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 12, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(1 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/tests43_40_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_prime(my_list[i]):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 5, "message": "in find_primes_between_indices"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_prime(n):", "        if n == 1:", "            return False", ">       for i in range(2, int(n**0.5) + 1):", "E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["n", "-2"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 12, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q43/codellama_results_1/Folder_40/generated_answer.py", "lineno": 12, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 8.214099216274917e-05, "start": 1700330571.342297, "stop": 1700330571.3423798, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4d5d731f2d1b4c01a304c6779d931aba", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
