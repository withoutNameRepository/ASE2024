{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests43_4_4.py::test_list_of_non_prime_nums", "location": ["tests43_4_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_4_4.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.832601062953472e-05, "start": 1700330688.45942, "stop": 1700330688.4595184, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bbdc1c0cb370438bb71990d76b18813c", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_4_4.py::test_list_of_primes", "location": ["tests43_4_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_4_4.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014110899064689875, "start": 1700330688.459496, "stop": 1700330688.4596376, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bbdc1c0cb370438bb71990d76b18813c", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_4_4.py::test_list_of_non_prime_nums", "location": ["tests43_4_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_4_4.py": 1, "Folder_4": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q43/codellama_results_4/Folder_4/generated_answer.py", "lineno": 6, "message": "TypeError: 'float' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (83 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_4/Folder_4/tests43_4_4.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(my_list):", "        primes = []", "        for i in range(24, 84):", "            if my_list[i] > 1:", ">               for j in range(2, int(my_list[i])**0.5 + 1):", "E               TypeError: 'float' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["my_list", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_4/Folder_4/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (83 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_4/Folder_4/tests43_4_4.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(my_list):", "        primes = []", "        for i in range(24, 84):", "            if my_list[i] > 1:", ">               for j in range(2, int(my_list[i])**0.5 + 1):", "E               TypeError: 'float' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["my_list", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codellama_results_4/Folder_4/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q43/codellama_results_4/Folder_4/generated_answer.py", "lineno": 6, "message": "TypeError: 'float' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001209900074172765, "start": 1700330688.4596817, "stop": 1700330688.459803, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bbdc1c0cb370438bb71990d76b18813c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
