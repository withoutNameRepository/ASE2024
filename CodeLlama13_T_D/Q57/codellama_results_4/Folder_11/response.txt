```python
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the submatrices with particular sum
    submatrices = []
    
    # Loop through each submatrix of the given matrix
    for i in range(matrix.shape[0] - 1):
        for j in range(matrix.shape[1] - 1):
            # Check if the sum of all integers in the current submatrix is equal to 38
            if np.sum(matrix[i:i+2, j:j+2]) == 38:
                # If the sum is equal to 38, add the submatrix to the list of submatrices
                submatrices.append(matrix[i:i+2, j:j+2])
    
    # Return the list of submatrices with particular sum
    return submatrices
```
This code defines a function called `submatrix_with_particular_sum` that takes one argument `matrix`, which is a two-dimensional numpy matrix of integers. The function returns a list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals 38. If no such submatrix is found, the function returns an empty list.

The function first initializes an empty list `submatrices` to store the submatrices with particular sum. Then, it loops through each submatrix of the given matrix using nested for-loops. For each submatrix, it checks if the sum of all integers in the current submatrix is equal to 38 using the `np.sum()` function from NumPy library. If the sum is equal to 38, the function adds the submatrix to the list of submatrices `submatrices`. Finally, the function returns the list of submatrices with particular sum.