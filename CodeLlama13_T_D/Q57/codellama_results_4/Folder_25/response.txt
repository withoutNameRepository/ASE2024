```python
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the found submatrices
    found_submatrices = []

    # Iterate over each row of the matrix
    for i in range(matrix.shape[0]):
        # Iterate over each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a variable to store the current submatrix
            current_submatrix = []

            # Iterate over each row and column of the submatrix, starting from (i,j)
            for k in range(i, matrix.shape[0]):
                for l in range(j, matrix.shape[1]):
                    # Add the current element to the submatrix
                    current_submatrix.append(matrix[k,l])

            # Check if the sum of all elements in the submatrix is equal to -20
            if np.sum(current_submatrix) == -20:
                # If so, add the submatrix to the list of found submatrices
                found_submatrices.append(current_submatrix)

    # Return the list of found submatrices
    return found_submatrices
```
Please note that this code assumes that the input matrix is a two-dimensional numpy array of integers.