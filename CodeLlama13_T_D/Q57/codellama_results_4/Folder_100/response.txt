```python
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the found submatrices
    found_submatrices = []

    # Loop through each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop through each column of the matrix
        for j in range(matrix.shape[1]):
            # Find the submatrix that starts from (i, j) and has a sum of 28
            submatrix = np.zeros((3, 3), dtype=int)
            submatrix[0, 0] = matrix[i, j]
            submatrix[0, 1] = matrix[i + 1, j]
            submatrix[0, 2] = matrix[i + 2, j]
            submatrix[1, 0] = matrix[i, j + 1]
            submatrix[1, 1] = matrix[i + 1, j + 1]
            submatrix[1, 2] = matrix[i + 2, j + 1]
            submatrix[2, 0] = matrix[i, j + 2]
            submatrix[2, 1] = matrix[i + 1, j + 2]
            submatrix[2, 2] = matrix[i + 2, j + 2]

            # If the sum of all integers in the submatrix is 28, add it to the list of found submatrices
            if np.sum(submatrix) == 28:
                found_submatrices.append(submatrix)

    return found_submatrices
```