```
import numpy as np

def submatrix_with_particular_sum(matrix):
    n, m = matrix.shape
    for i in range(n-1):
        for j in range(m-1):
            for k in range(i+1, n):
                for l in range(j+1, m):
                    submatrix = matrix[i:k+1, j:l+1]
                    if np.sum(submatrix) == 411:
                        return submatrix
    return []
```
Note that the function uses NumPy's `shape` attribute to get the dimensions of the matrix and loops over all possible submatrices using nested for-loops. The `np.sum()` method is used to calculate the sum of integers in each submatrix, and if the sum equals 411, the submatrix is returned. If no such submatrix is found, an empty list is returned.