```python
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the results
    result = []

    # Iterate over each row of the matrix
    for i in range(matrix.shape[0]):
        # Iterate over each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a temporary list to store the sum of integers in each submatrix
            temp_sum = 0

            # Iterate over each row and column of the submatrix starting from (i, j)
            for k in range(i, matrix.shape[0]):
                for l in range(j, matrix.shape[1]):
                    # Add the integer at position (k, l) to the temporary sum
                    temp_sum += matrix[k, l]

                    # If the temporary sum equals -90, add the submatrix to the result list and break out of the loops
                    if temp_sum == -90:
                        result.append(matrix[i:k+1, j:l+1])
                        break
                else:
                    continue
                break
            else:
                continue
            break
    return result
```
Note: This solution uses nested loops to iterate over the rows and columns of the matrix. The `else` clause is used to handle the case where no submatrix with a sum of -90 is found.