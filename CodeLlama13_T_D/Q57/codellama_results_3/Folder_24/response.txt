```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the found submatrices
    submatrices = []
    
    # Iterate over each row of the matrix
    for i in range(matrix.shape[0]):
        # Iterate over each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a 2D numpy array to store the current submatrix
            curr_submatrix = np.zeros((matrix.shape[0], matrix.shape[1]), dtype=int)
            
            # Set the elements of the current submatrix based on the indices i and j
            for k in range(i, matrix.shape[0]):
                for l in range(j, matrix.shape[1]):
                    curr_submatrix[k-i][l-j] = matrix[k][l]
            
            # Check if the current submatrix has a sum equal to -36
            if np.sum(curr_submatrix) == -36:
                # If so, add it to the list of found submatrices
                submatrices.append(curr_submatrix)
    
    return submatrices
```