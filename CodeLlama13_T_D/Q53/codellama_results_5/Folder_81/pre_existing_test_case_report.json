{
  "parameter(s)": [
    33
  ],
  "test_string_of_similar_chars_of_length_33": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_similar_chars_of_length_greater_than_33": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', ...}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00101
  ]
}