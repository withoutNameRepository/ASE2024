{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017414201283827424, "start": 1700336998.0931563, "stop": 1700336998.0933313, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_horizontal_matrix", "location": ["tests58_33_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020875298650935292, "start": 1700336998.0931723, "stop": 1700336998.0933821, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000201849004952237, "start": 1700336998.093642, "stop": 1700336998.0938444, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.913001511245966e-05, "start": 1700336998.0941412, "stop": 1700336998.094231, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.952000644057989e-05, "start": 1700336998.0946362, "stop": 1700336998.094726, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-59,  54],\\n        [-40,  12],\\n        [  3,  64],\\n        [ 22,  11],\\n        [-12,  35],\\n        [ 19,  99],\\n        [ 51, -24],\\n        [-39, -46],\\n        [-94, -76],\\n        [ -9,  42],\\n        [  1,  94],\\n        [-70,  18],\\n        [-28,  14],\\n        [ 82,  46],\\n        [ 99, -21],\\n        [ 49, -75],\\n        [ 10,  29],\\n        [-72,  78],\\n        [ 79,  38],\\n        [ 30, -91],\\n        [  6, -17],\\n        [ 55,  13],\\n        [ 70, -48],\\n        [ 62,  17],\\n        [-15, -78],\\n        [ 77, -47],\\n        [-36,  60],\\n        [ 61, -53],\\n        [-41,  68],\\n        [  0,   3],\\n        [-72,  41],\\n        [-94,  68],\\n        [-90,  -7],\\n        [-13,   8],\\n        [ 13,   6],\\n        [ 60,  18],\\n        [ 39,   5],\\n        [-56,  94],\\n        [ 25,  18],\\n        [-14, -55],\\n        [-16,  81],\\n        [ 89, -64],\\n        [ 33, -61],\\n        [ 49,  44],\\n        [-82,  66],\\n        [ 18,  80],\\n        [ 68, -93],\\n        [  1, -20],\\n        [ 66,  44],\\n        [ 67,  30],\\n        [ -3, -50],\\n        [ 39,  35],\\n        [ 17, -61],\\n        [-67,   0],\\n        [-18, -53],\\n        [ 10,  66],\\n        [-63,  34],\\n        [ 22,  85],\\n        [ 71, -61]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-59,  54],\\n        [-40,  12],\\n        [  3,  64],\\n        [ 22,  11],\\n        [-12,  35],\\n        [ 19,  99],\\n        [ 51, -24],\\n        [-39, -46],\\n        [-94, -76],\\n        [ -9,  42],\\n        [  1,  94],\\n        [-70,  18],\\n        [-28,  14],\\n        [ 82,  46],\\n        [ 99, -21],\\n        [ 49, -75],\\n        [ 10,  29],\\n        [-72,  78],\\n        [ 79,  38],\\n        [ 30, -91],\\n        [  6, -17],\\n        [ 55,  13],\\n        [ 70, -48],\\n        [ 62,  17],\\n        [-15, -78],\\n        [ 77, -47],\\n        [-36,  60],\\n        [ 61, -53],\\n        [-41,  68],\\n        [  0,   3],\\n        [-72,  41],\\n        [-94,  68],\\n        [-90,  -7],\\n        [-13,   8],\\n        [ 13,   6],\\n        [ 60,  18],\\n        [ 39,   5],\\n        [-56,  94],\\n        [ 25,  18],\\n        [-14, -55],\\n        [-16,  81],\\n        [ 89, -64],\\n        [ 33, -61],\\n        [ 49,  44],\\n        [-82,  66],\\n        [ 18,  80],\\n        [ 68, -93],\\n        [  1, -20],\\n        [ 66,  44],\\n        [ 67,  30],\\n        [ -3, -50],\\n        [ 39,  35],\\n        [ 17, -61],\\n        [-67,   0],\\n        [-18, -53],\\n        [ 10,  66],\\n        [-63,  34],\\n        [ 22,  85],\\n        [ 71, -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-59,  54],\\n        [-40,  12],\\n        [  3,  64],\\n        [ 22,  11],\\n        [-12,  35],\\n        [ 19,  99],\\n        [ 51, -24],\\n        [-39, -46],\\n        [-94, -76],\\n        [ -9,  42],\\n        [  1,  94],\\n        [-70,  18],\\n        [-28,  14],\\n        [ 82,  46],\\n        [ 99, -21],\\n        [ 49, -75],\\n        [ 10,  29],\\n        [-72,  78],\\n        [ 79,  38],\\n        [ 30, -91],\\n        [  6, -17],\\n        [ 55,  13],\\n        [ 70, -48],\\n        [ 62,  17],\\n        [-15, -78],\\n        [ 77, -47],\\n        [-36,  60],\\n        [ 61, -53],\\n        [-41,  68],\\n        [  0,   3],\\n        [-72,  41],\\n        [-94,  68],\\n        [-90,  -7],\\n        [-13,   8],\\n        [ 13,   6],\\n        [ 60,  18],\\n        [ 39,   5],\\n        [-56,  94],\\n        [ 25,  18],\\n        [-14, -55],\\n        [-16,  81],\\n        [ 89, -64],\\n        [ 33, -61],\\n        [ 49,  44],\\n        [-82,  66],\\n        [ 18,  80],\\n        [ 68, -93],\\n        [  1, -20],\\n        [ 66,  44],\\n        [ 67,  30],\\n        [ -3, -50],\\n        [ 39,  35],\\n        [ 17, -61],\\n        [-67,   0],\\n        [-18, -53],\\n        [ 10,  66],\\n        [-63,  34],\\n        [ 22,  85],\\n        [ 71, -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-59,  54],\\n        [-40,  12],\\n        [  3,  64],\\n        [ 22,  11],\\n        [-12,  35],\\n        [ 19,  99],\\n        [ 51, -24],\\n        [-39, -46],\\n        [-94, -76],\\n        [ -9,  42],\\n        [  1,  94],\\n        [-70,  18],\\n        [-28,  14],\\n        [ 82,  46],\\n        [ 99, -21],\\n        [ 49, -75],\\n        [ 10,  29],\\n        [-72,  78],\\n        [ 79,  38],\\n        [ 30, -91],\\n        [  6, -17],\\n        [ 55,  13],\\n        [ 70, -48],\\n        [ 62,  17],\\n        [-15, -78],\\n        [ 77, -47],\\n        [-36,  60],\\n        [ 61, -53],\\n        [-41,  68],\\n        [  0,   3],\\n        [-72,  41],\\n        [-94,  68],\\n        [-90,  -7],\\n        [-13,   8],\\n        [ 13,   6],\\n        [ 60,  18],\\n        [ 39,   5],\\n        [-56,  94],\\n        [ 25,  18],\\n        [-14, -55],\\n        [-16,  81],\\n        [ 89, -64],\\n        [ 33, -61],\\n        [ 49,  44],\\n        [-82,  66],\\n        [ 18,  80],\\n        [ 68, -93],\\n        [  1, -20],\\n        [ 66,  44],\\n        [ 67,  30],\\n        [ -3, -50],\\n        [ 39,  35],\\n        [ 17, -61],\\n        [-67,   0],\\n        [-18, -53],\\n        [ 10,  66],\\n        [-63,  34],\\n        [ 22,  85],\\n        [ 71, -61]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008603489841334522, "start": 1700336998.0948548, "stop": 1700336998.0957162, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "28e6d8a3f58d4aaf90d1378dfca4f1de", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
