{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_5.py::test_horizontal_matrix", "location": ["tests58_46_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017752099665813148, "start": 1700337071.4555752, "stop": 1700337071.4557538, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017731700791046023, "start": 1700337071.4552162, "stop": 1700337071.4553943, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001946980191860348, "start": 1700337071.4556744, "stop": 1700337071.4558697, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.844700641930103e-05, "start": 1700337071.4561648, "stop": 1700337071.4562538, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.794702054932714e-05, "start": 1700337071.4570107, "stop": 1700337071.4571092, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 14, -53],\\n        [-21,  64],\\n        [ 14,  71],\\n        [-46,  76],\\n        [  3,  13],\\n        [ 60, -35],\\n        [-45,  35],\\n        [ 93, -68],\\n        [-23, -69],\\n        [-67,  93],\\n        [-83, -31],\\n        [-96, -94],\\n        [ 79, -75],\\n        [-54,  96],\\n        [ 73, -55],\\n        [-80,  57],\\n        [-73,  87],\\n        [ -7, -58],\\n        [-41,  41],\\n        [ -2,  13],\\n        [-12,  76],\\n        [-14, -78],\\n        [ 33, -69],\\n        [-26,  81],\\n        [-32,  75],\\n        [ 66, -36],\\n        [ 60,  79],\\n        [-90, 100],\\n        [ 78,   1],\\n        [-52, -46],\\n        [-99,  -3],\\n        [-51,   6],\\n        [-83, -59],\\n        [-51, -83],\\n        [-49,  30],\\n        [ 22, -25],\\n        [-98,  47],\\n        [ 34,  36],\\n        [-57,  83],\\n        [-34,  59],\\n        [-76,  86],\\n        [ 90, -23],\\n        [ 17, -27],\\n        [ 49,  35],\\n        [ -5,  -9],\\n        [-62, -25],\\n        [ 32, -99],\\n        [ -5,  -4],\\n        [ 49,  21],\\n        [-10,  -7],\\n        [-26,  96],\\n        [ 17,  75],\\n        [ 61,  37],\\n        [ 74,  16],\\n        [ 97,  24],\\n        [-25,  80],\\n        [-73,  69],\\n        [-68,  78],\\n        [-38,  96],\\n        [ 63, -57],\\n        [-53, -39],\\n        [ 18, -10],\\n        [ 55, -71],\\n        [-68, -20],\\n        [-47,  91],\\n        [-80, -21],\\n        [ 43,  41],\\n        [ 10, -67],\\n        [-83,   3],\\n        [ 18,  -6],\\n        [ 80, -61],\\n        [ 36, -37]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 14, -53],\\n        [-21,  64],\\n        [ 14,  71],\\n        [-46,  76],\\n        [  3,  13],\\n        [ 60, -35],\\n        [-45,  35],\\n        [ 93, -68],\\n        [-23, -69],\\n        [-67,  93],\\n        [-83, -31],\\n        [-96, -94],\\n        [ 79, -75],\\n        [-54,  96],\\n        [ 73, -55],\\n        [-80,  57],\\n        [-73,  87],\\n        [ -7, -58],\\n        [-41,  41],\\n        [ -2,  13],\\n        [-12,  76],\\n        [-14, -78],\\n        [ 33, -69],\\n        [-26,  81],\\n        [-32,  75],\\n        [ 66, -36],\\n        [ 60,  79],\\n        [-90, 100],\\n        [ 78,   1],\\n        [-52, -46],\\n        [-99,  -3],\\n        [-51,   6],\\n        [-83, -59],\\n        [-51, -83],\\n        [-49,  30],\\n        [ 22, -25],\\n        [-98,  47],\\n        [ 34,  36],\\n        [-57,  83],\\n        [-34,  59],\\n        [-76,  86],\\n        [ 90, -23],\\n        [ 17, -27],\\n        [ 49,  35],\\n        [ -5,  -9],\\n        [-62, -25],\\n        [ 32, -99],\\n        [ -5,  -4],\\n        [ 49,  21],\\n        [-10,  -7],\\n        [-26,  96],\\n        [ 17,  75],\\n        [ 61,  37],\\n        [ 74,  16],\\n        [ 97,  24],\\n        [-25,  80],\\n        [-73,  69],\\n        [-68,  78],\\n        [-38,  96],\\n        [ 63, -57],\\n        [-53, -39],\\n        [ 18, -10],\\n        [ 55, -71],\\n        [-68, -20],\\n        [-47,  91],\\n        [-80, -21],\\n        [ 43,  41],\\n        [ 10, -67],\\n        [-83,   3],\\n        [ 18,  -6],\\n        [ 80, -61],\\n        [ 36, -37]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 14, -53],\\n        [-21,  64],\\n        [ 14,  71],\\n        [-46,  76],\\n        [  3,  13],\\n        [ 60, -35],\\n        [-45,  35],\\n        [ 93, -68],\\n        [-23, -69],\\n        [-67,  93],\\n        [-83, -31],\\n        [-96, -94],\\n        [ 79, -75],\\n        [-54,  96],\\n        [ 73, -55],\\n        [-80,  57],\\n        [-73,  87],\\n        [ -7, -58],\\n        [-41,  41],\\n        [ -2,  13],\\n        [-12,  76],\\n        [-14, -78],\\n        [ 33, -69],\\n        [-26,  81],\\n        [-32,  75],\\n        [ 66, -36],\\n        [ 60,  79],\\n        [-90, 100],\\n        [ 78,   1],\\n        [-52, -46],\\n        [-99,  -3],\\n        [-51,   6],\\n        [-83, -59],\\n        [-51, -83],\\n        [-49,  30],\\n        [ 22, -25],\\n        [-98,  47],\\n        [ 34,  36],\\n        [-57,  83],\\n        [-34,  59],\\n        [-76,  86],\\n        [ 90, -23],\\n        [ 17, -27],\\n        [ 49,  35],\\n        [ -5,  -9],\\n        [-62, -25],\\n        [ 32, -99],\\n        [ -5,  -4],\\n        [ 49,  21],\\n        [-10,  -7],\\n        [-26,  96],\\n        [ 17,  75],\\n        [ 61,  37],\\n        [ 74,  16],\\n        [ 97,  24],\\n        [-25,  80],\\n        [-73,  69],\\n        [-68,  78],\\n        [-38,  96],\\n        [ 63, -57],\\n        [-53, -39],\\n        [ 18, -10],\\n        [ 55, -71],\\n        [-68, -20],\\n        [-47,  91],\\n        [-80, -21],\\n        [ 43,  41],\\n        [ 10, -67],\\n        [-83,   3],\\n        [ 18,  -6],\\n        [ 80, -61],\\n        [ 36, -37]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 14, -53],\\n        [-21,  64],\\n        [ 14,  71],\\n        [-46,  76],\\n        [  3,  13],\\n        [ 60, -35],\\n        [-45,  35],\\n        [ 93, -68],\\n        [-23, -69],\\n        [-67,  93],\\n        [-83, -31],\\n        [-96, -94],\\n        [ 79, -75],\\n        [-54,  96],\\n        [ 73, -55],\\n        [-80,  57],\\n        [-73,  87],\\n        [ -7, -58],\\n        [-41,  41],\\n        [ -2,  13],\\n        [-12,  76],\\n        [-14, -78],\\n        [ 33, -69],\\n        [-26,  81],\\n        [-32,  75],\\n        [ 66, -36],\\n        [ 60,  79],\\n        [-90, 100],\\n        [ 78,   1],\\n        [-52, -46],\\n        [-99,  -3],\\n        [-51,   6],\\n        [-83, -59],\\n        [-51, -83],\\n        [-49,  30],\\n        [ 22, -25],\\n        [-98,  47],\\n        [ 34,  36],\\n        [-57,  83],\\n        [-34,  59],\\n        [-76,  86],\\n        [ 90, -23],\\n        [ 17, -27],\\n        [ 49,  35],\\n        [ -5,  -9],\\n        [-62, -25],\\n        [ 32, -99],\\n        [ -5,  -4],\\n        [ 49,  21],\\n        [-10,  -7],\\n        [-26,  96],\\n        [ 17,  75],\\n        [ 61,  37],\\n        [ 74,  16],\\n        [ 97,  24],\\n        [-25,  80],\\n        [-73,  69],\\n        [-68,  78],\\n        [-38,  96],\\n        [ 63, -57],\\n        [-53, -39],\\n        [ 18, -10],\\n        [ 55, -71],\\n        [-68, -20],\\n        [-47,  91],\\n        [-80, -21],\\n        [ 43,  41],\\n        [ 10, -67],\\n        [-83,   3],\\n        [ 18,  -6],\\n        [ 80, -61],\\n        [ 36, -37]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010085170215461403, "start": 1700337071.4572406, "stop": 1700337071.4582496, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e423d614f7d4466688e2ffe2dc8276ae", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
