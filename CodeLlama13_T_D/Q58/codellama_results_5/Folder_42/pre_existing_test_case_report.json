{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00026
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.0003
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   26,  -92,   24,    8,   -8,  -22,   36,  -54,  -90,\\n          -97,   11,  -98,  -87,   53,   18,  -91,  -66,  -83,    1,\\n          -14,  -13,   57,   25,  -24,   74,  -82,  -38,   64,  -18,\\n          -80,   66,   62,  -27,   85,  -29,   48,   18,  -38,  -59,\\n           82,  -71,   28,   18,  -26,   -8,   25,   27,  -23,   10,\\n          -25,   65,  -97,   53,  -95,  -60,  -71,   31,  -27,  -92,\\n           -5,  -96,   68,   42,   40,   84,  -69,   31,  -75,   11,\\n           -2,   35,  -70,   -4,  -85,  -56,  -41,  -61,   -7,  -89,\\n           -6,  -50,   49,   48,   76,  -75,   -5,   35,   -2,   54,\\n           26,  -70,   34,   45,  -34,   66,   16,   68,   93,  -85,\\n            5,   60,  -70,  -71,   80,    0,   -1,   -6,   19,  -50,\\n           89,  -49,  -68,    1,   15,  -22,  -74,  -22,   94,   52,\\n          -52,  -92,   98,    5,  -41,   83,    0,  -16,   75,  -90,\\n          -88,   83,   95,   44,   62,  -22, -100,   11,  -69,  -95,\\n          -16,  -30,  -27,  -43,  -32,  -87,  -86,   37,   21,   89,\\n            4,  -78,   21,  -90,  -79,    6,   -4,   32,   80,   99,\\n           80,   32,   83,  -49,  -50,   93,   86,  -51,   81,   34,\\n            1,   40,    7,   60,  -92,  -55,   55,  -86,   20,  -55,\\n          -57,   15,   35,   88,  -56,  -42,   23,   -4,  -30,  -41,\\n          -64,   72,   34]]))",
    0.00105
  ]
}