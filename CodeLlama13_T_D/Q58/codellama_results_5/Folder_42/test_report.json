{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_42_5.py::test_matrix_of_one_integer", "location": ["tests58_42_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002579860156401992, "start": 1700337068.5622802, "stop": 1700337068.5625393, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_5.py::test_matrix_of_one_integer", "location": ["tests58_42_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032477002241648734, "start": 1700337068.5628135, "stop": 1700337068.5631385, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_5.py::test_matrix_of_one_integer", "location": ["tests58_42_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020753199351020157, "start": 1700337068.563441, "stop": 1700337068.5636492, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_5.py::test_matrix_of_having_193_integers", "location": ["tests58_42_5.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026619702111929655, "start": 1700337068.5640478, "stop": 1700337068.5643146, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_5.py::test_horizontal_matrix", "location": ["tests58_42_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00030211801640689373, "start": 1700337068.5698164, "stop": 1700337068.5701191, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_42_5.py::test_matrix_of_having_193_integers", "location": ["tests58_42_5.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_5.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_5/Folder_42/tests58_42_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   26,  -92,   24,    8,   -8,  -22,   36,  -54,  -90,\\n          -97,   11,  -98,  -87,   53,   18,  -91,  -66,  -83,    1,\\n          -14,  -13,   57,   25,  -24,   74,  -82,  -38,   64,  -18,\\n          -80,   66,   62,  -27,   85,  -29,   48,   18,  -38,  -59,\\n           82,  -71,   28,   18,  -26,   -8,   25,   27,  -23,   10,\\n          -25,   65,  -97,   53,  -95,  -60,  -71,   31,  -27,  -92,\\n           -5,  -96,   68,   42,   40,   84,  -69,   31,  -75,   11,\\n           -2,   35,  -70,   -4,  -85,  -56,  -41,  -61,   -7,  -89,\\n           -6,  -50,   49,   48,   76,  -75,   -5,   35,   -2,   54,\\n           26,  -70,   34,   45,  -34,   66,   16,   68,   93,  -85,\\n            5,   60,  -70,  -71,   80,    0,   -1,   -6,   19,  -50,\\n           89,  -49,  -68,    1,   15,  -22,  -74,  -22,   94,   52,\\n          -52,  -92,   98,    5,  -41,   83,    0,  -16,   75,  -90,\\n          -88,   83,   95,   44,   62,  -22, -100,   11,  -69,  -95,\\n          -16,  -30,  -27,  -43,  -32,  -87,  -86,   37,   21,   89,\\n            4,  -78,   21,  -90,  -79,    6,   -4,   32,   80,   99,\\n           80,   32,   83,  -49,  -50,   93,   86,  -51,   81,   34,\\n            1,   40,    7,   60,  -92,  -55,   55,  -86,   20,  -55,\\n          -57,   15,   35,   88,  -56,  -42,   23,   -4,  -30,  -41,\\n          -64,   72,   34]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   26,  -92,   24,    8,   -8,  -22,   36,  -54,  -90,\\n          -97,   11,  -98,  -87,   53,   18,  -91,  -66,  -83,    1,\\n          -14,  -13,   57,   25,  -24,   74,  -82,  -38,   64,  -18,\\n          -80,   66,   62,  -27,   85,  -29,   48,   18,  -38,  -59,\\n           82,  -71,   28,   18,  -26,   -8,   25,   27,  -23,   10,\\n          -25,   65,  -97,   53,  -95,  -60,  -71,   31,  -27,  -92,\\n           -5,  -96,   68,   42,   40,   84,  -69,   31,  -75,   11,\\n           -2,   35,  -70,   -4,  -85,  -56,  -41,  -61,   -7,  -89,\\n           -6,  -50,   49,   48,   76,  -75,   -5,   35,   -2,   54,\\n           26,  -70,   34,   45,  -34,   66,   16,   68,   93,  -85,\\n            5,   60,  -70,  -71,   80,    0,   -1,   -6,   19,  -50,\\n           89,  -49,  -68,    1,   15,  -22,  -74,  -22,   94,   52,\\n          -52,  -92,   98,    5,  -41,   83,    0,  -16,   75,  -90,\\n          -88,   83,   95,   44,   62,  -22, -100,   11,  -69,  -95,\\n          -16,  -30,  -27,  -43,  -32,  -87,  -86,   37,   21,   89,\\n            4,  -78,   21,  -90,  -79,    6,   -4,   32,   80,   99,\\n           80,   32,   83,  -49,  -50,   93,   86,  -51,   81,   34,\\n            1,   40,    7,   60,  -92,  -55,   55,  -86,   20,  -55,\\n          -57,   15,   35,   88,  -56,  -42,   23,   -4,  -30,  -41,\\n          -64,   72,   34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_42/tests58_42_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   26,  -92,   24,    8,   -8,  -22,   36,  -54,  -90,\\n          -97,   11,  -98,  -87,   53,   18,  -91,  -66,  -83,    1,\\n          -14,  -13,   57,   25,  -24,   74,  -82,  -38,   64,  -18,\\n          -80,   66,   62,  -27,   85,  -29,   48,   18,  -38,  -59,\\n           82,  -71,   28,   18,  -26,   -8,   25,   27,  -23,   10,\\n          -25,   65,  -97,   53,  -95,  -60,  -71,   31,  -27,  -92,\\n           -5,  -96,   68,   42,   40,   84,  -69,   31,  -75,   11,\\n           -2,   35,  -70,   -4,  -85,  -56,  -41,  -61,   -7,  -89,\\n           -6,  -50,   49,   48,   76,  -75,   -5,   35,   -2,   54,\\n           26,  -70,   34,   45,  -34,   66,   16,   68,   93,  -85,\\n            5,   60,  -70,  -71,   80,    0,   -1,   -6,   19,  -50,\\n           89,  -49,  -68,    1,   15,  -22,  -74,  -22,   94,   52,\\n          -52,  -92,   98,    5,  -41,   83,    0,  -16,   75,  -90,\\n          -88,   83,   95,   44,   62,  -22, -100,   11,  -69,  -95,\\n          -16,  -30,  -27,  -43,  -32,  -87,  -86,   37,   21,   89,\\n            4,  -78,   21,  -90,  -79,    6,   -4,   32,   80,   99,\\n           80,   32,   83,  -49,  -50,   93,   86,  -51,   81,   34,\\n            1,   40,    7,   60,  -92,  -55,   55,  -86,   20,  -55,\\n          -57,   15,   35,   88,  -56,  -42,   23,   -4,  -30,  -41,\\n          -64,   72,   34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_42/tests58_42_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_5/Folder_42/tests58_42_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   26,  -92,   24,    8,   -8,  -22,   36,  -54,  -90,\\n          -97,   11,  -98,  -87,   53,   18,  -91,  -66,  -83,    1,\\n          -14,  -13,   57,   25,  -24,   74,  -82,  -38,   64,  -18,\\n          -80,   66,   62,  -27,   85,  -29,   48,   18,  -38,  -59,\\n           82,  -71,   28,   18,  -26,   -8,   25,   27,  -23,   10,\\n          -25,   65,  -97,   53,  -95,  -60,  -71,   31,  -27,  -92,\\n           -5,  -96,   68,   42,   40,   84,  -69,   31,  -75,   11,\\n           -2,   35,  -70,   -4,  -85,  -56,  -41,  -61,   -7,  -89,\\n           -6,  -50,   49,   48,   76,  -75,   -5,   35,   -2,   54,\\n           26,  -70,   34,   45,  -34,   66,   16,   68,   93,  -85,\\n            5,   60,  -70,  -71,   80,    0,   -1,   -6,   19,  -50,\\n           89,  -49,  -68,    1,   15,  -22,  -74,  -22,   94,   52,\\n          -52,  -92,   98,    5,  -41,   83,    0,  -16,   75,  -90,\\n          -88,   83,   95,   44,   62,  -22, -100,   11,  -69,  -95,\\n          -16,  -30,  -27,  -43,  -32,  -87,  -86,   37,   21,   89,\\n            4,  -78,   21,  -90,  -79,    6,   -4,   32,   80,   99,\\n           80,   32,   83,  -49,  -50,   93,   86,  -51,   81,   34,\\n            1,   40,    7,   60,  -92,  -55,   55,  -86,   20,  -55,\\n          -57,   15,   35,   88,  -56,  -42,   23,   -4,  -30,  -41,\\n          -64,   72,   34]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010476959869265556, "start": 1700337068.5644476, "stop": 1700337068.5654962, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e26b1ff1b63641fd96f142c3c3c6e457", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
