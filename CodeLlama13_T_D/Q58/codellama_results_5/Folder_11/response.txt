```python
import numpy as np
def submatrix_with_n_numbers(matrix, n):
    count = 0
    for i in range(len(matrix) - n + 1):
        for j in range(len(matrix[i]) - n + 1):
            if sum([matrix[x][y] for x in range(i, i + n) for y in range(j, j + n)]) == n * (n + 1) // 2:
                count += 1
    return count
```
Note that this function uses the `sum` function to calculate the sum of all numbers in a submatrix and checks if it is equal to `n * (n + 1) // 2`. This formula calculates the expected sum of an n x n matrix, which is known as the "magic constant" for that size. If the actual sum of the submatrix matches this value, then it means that all rows and columns in the submatrix contain the same number of integers.

Also note that the `range` function is used to iterate over the indices of the matrix, and the `sum` function is used to calculate the sum of all numbers in a submatrix. The `len` function is also used to get the length of the matrix.