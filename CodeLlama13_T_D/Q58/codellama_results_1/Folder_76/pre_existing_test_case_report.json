{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00053
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00053
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-39,  28,  -7, -40, -26, -83, -46, -72,  86,  73, -39,  64,  53,\\n         100,  81, -84,  54,  52,  97,  12,  85, -49,   8, -19, 100,  81,\\n          68,  87, 100,  -5, -66,  35,  30, -19,  66,  36,  -8, -37,  20,\\n          27,  40,  83, -77,  37,  -4,  94, -13,  69,  43,  52,  20, -96,\\n          -1, -20, -43, -97,  -2, -22, -78,  85,  60,  73, -13, -65,  31,\\n          30,  70, -78,  -4, -41, -21, -60, -45, -81, -61,  91,  54, -67,\\n         -62,   0,  23,  32,  93,  60, -35,  53,   5,  78,  39, -28, -17,\\n          26, -31, -86,  18,  76, -88,  51, -87, -64,  95,  38, -79, -33,\\n         -55, -59,  67,  28,  34,  76,  -6, -60,  45,  96,  82,  99, -30,\\n          60, -86, -64,  47, -93, -44, -37,  -7,  73,  22, -39, -44,  60,\\n         -43, -90,  94, -83, -42, -96, -15,  29,  -6,  16,  40, -51, -41,\\n         -44,  88,  83,  19, -79,   1, -72, -46,  45, -20, -37, -36,  97,\\n          97,  23,  10]]))",
    0.00108
  ]
}