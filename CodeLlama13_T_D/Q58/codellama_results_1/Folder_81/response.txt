```
import numpy as np

def submatrix_with_n_numbers(matrix, n):
    rows, cols = matrix.shape
    for i in range(rows-n+1):
        for j in range(cols-n+1):
            submat = matrix[i:i+n, j:j+n]
            if np.all(submat == 97):
                return True
    return False
```
This function takes a two-dimensional numpy matrix of integers as input and checks if there are any submatrices that contain all 97s. If such a submatrix is found, the function returns `True`. Otherwise, it returns `False`.

For example:
```
import numpy as np

# Create a sample matrix
matrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Call the function with the given matrix and check if there are any submatrices that contain all 97s
result = submatrix_with_n_numbers(matrix, 3)

print(result) # Output: False
```
In this example, the input matrix does not have any submatrices that contain all 97s, so the function returns `False`.