{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_1.py::test_horizontal_matrix", "location": ["tests58_97_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001480459759477526, "start": 1700336859.9035692, "stop": 1700336859.903718, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001776220160536468, "start": 1700336859.9035814, "stop": 1700336859.90376, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002070259943138808, "start": 1700336859.9040504, "stop": 1700336859.9042583, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001065440010279417, "start": 1700336859.904594, "stop": 1700336859.9047012, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.568799239583313e-05, "start": 1700336859.9051025, "stop": 1700336859.9051886, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-85,   2],\\n        [ 46, -52],\\n        [ 79, -90],\\n        [ 53,  50],\\n        [-50,  74],\\n        [  0, -59],\\n        [  8,  74],\\n        [ 17,   3],\\n        [ 65, -82],\\n        [-86,  33],\\n        [ 23, -33],\\n        [-82, -19],\\n        [ 89, -83],\\n        [-74,  67],\\n        [ 14,  91],\\n        [-82, -23],\\n        [-86, -62],\\n        [-64, -86],\\n        [ 74, -36],\\n        [ 73,  78],\\n        [ 90, -77],\\n        [-73,  -4],\\n        [ 90,  -9],\\n        [ 39, -58],\\n        [-23,  31],\\n        [-82,  -4],\\n        [-40,  30],\\n        [ 24,  65],\\n        [-44,  32],\\n        [-31,  52],\\n        [ -9,  -1],\\n        [-20, -70],\\n        [ -5,  29],\\n        [ 18, -85],\\n        [-18,  66],\\n        [-80,  77],\\n        [-12, -17],\\n        [-95, -31],\\n        [-90,  77],\\n        [ -3,  27],\\n        [  4, -71],\\n        [-84,  -5],\\n        [ 69, -54],\\n        [ 81, -32],\\n        [-85,  -2],\\n        [-85,  39],\\n        [-26,  15],\\n        [ 41,  41],\\n        [ 46,  54],\\n        [ 97, -99],\\n        [ 80, -19],\\n        [-90, -26],\\n        [-60,  58],\\n        [-17,  62],\\n        [-14, -46],\\n        [-96, -14],\\n        [ 99,  47],\\n        [ 90, -19],\\n        [ 93,  85],\\n        [ 76, -39]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-85,   2],\\n        [ 46, -52],\\n        [ 79, -90],\\n        [ 53,  50],\\n        [-50,  74],\\n        [  0, -59],\\n        [  8,  74],\\n        [ 17,   3],\\n        [ 65, -82],\\n        [-86,  33],\\n        [ 23, -33],\\n        [-82, -19],\\n        [ 89, -83],\\n        [-74,  67],\\n        [ 14,  91],\\n        [-82, -23],\\n        [-86, -62],\\n        [-64, -86],\\n        [ 74, -36],\\n        [ 73,  78],\\n        [ 90, -77],\\n        [-73,  -4],\\n        [ 90,  -9],\\n        [ 39, -58],\\n        [-23,  31],\\n        [-82,  -4],\\n        [-40,  30],\\n        [ 24,  65],\\n        [-44,  32],\\n        [-31,  52],\\n        [ -9,  -1],\\n        [-20, -70],\\n        [ -5,  29],\\n        [ 18, -85],\\n        [-18,  66],\\n        [-80,  77],\\n        [-12, -17],\\n        [-95, -31],\\n        [-90,  77],\\n        [ -3,  27],\\n        [  4, -71],\\n        [-84,  -5],\\n        [ 69, -54],\\n        [ 81, -32],\\n        [-85,  -2],\\n        [-85,  39],\\n        [-26,  15],\\n        [ 41,  41],\\n        [ 46,  54],\\n        [ 97, -99],\\n        [ 80, -19],\\n        [-90, -26],\\n        [-60,  58],\\n        [-17,  62],\\n        [-14, -46],\\n        [-96, -14],\\n        [ 99,  47],\\n        [ 90, -19],\\n        [ 93,  85],\\n        [ 76, -39]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-85,   2],\\n        [ 46, -52],\\n        [ 79, -90],\\n        [ 53,  50],\\n        [-50,  74],\\n        [  0, -59],\\n        [  8,  74],\\n        [ 17,   3],\\n        [ 65, -82],\\n        [-86,  33],\\n        [ 23, -33],\\n        [-82, -19],\\n        [ 89, -83],\\n        [-74,  67],\\n        [ 14,  91],\\n        [-82, -23],\\n        [-86, -62],\\n        [-64, -86],\\n        [ 74, -36],\\n        [ 73,  78],\\n        [ 90, -77],\\n        [-73,  -4],\\n        [ 90,  -9],\\n        [ 39, -58],\\n        [-23,  31],\\n        [-82,  -4],\\n        [-40,  30],\\n        [ 24,  65],\\n        [-44,  32],\\n        [-31,  52],\\n        [ -9,  -1],\\n        [-20, -70],\\n        [ -5,  29],\\n        [ 18, -85],\\n        [-18,  66],\\n        [-80,  77],\\n        [-12, -17],\\n        [-95, -31],\\n        [-90,  77],\\n        [ -3,  27],\\n        [  4, -71],\\n        [-84,  -5],\\n        [ 69, -54],\\n        [ 81, -32],\\n        [-85,  -2],\\n        [-85,  39],\\n        [-26,  15],\\n        [ 41,  41],\\n        [ 46,  54],\\n        [ 97, -99],\\n        [ 80, -19],\\n        [-90, -26],\\n        [-60,  58],\\n        [-17,  62],\\n        [-14, -46],\\n        [-96, -14],\\n        [ 99,  47],\\n        [ 90, -19],\\n        [ 93,  85],\\n        [ 76, -39]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-85,   2],\\n        [ 46, -52],\\n        [ 79, -90],\\n        [ 53,  50],\\n        [-50,  74],\\n        [  0, -59],\\n        [  8,  74],\\n        [ 17,   3],\\n        [ 65, -82],\\n        [-86,  33],\\n        [ 23, -33],\\n        [-82, -19],\\n        [ 89, -83],\\n        [-74,  67],\\n        [ 14,  91],\\n        [-82, -23],\\n        [-86, -62],\\n        [-64, -86],\\n        [ 74, -36],\\n        [ 73,  78],\\n        [ 90, -77],\\n        [-73,  -4],\\n        [ 90,  -9],\\n        [ 39, -58],\\n        [-23,  31],\\n        [-82,  -4],\\n        [-40,  30],\\n        [ 24,  65],\\n        [-44,  32],\\n        [-31,  52],\\n        [ -9,  -1],\\n        [-20, -70],\\n        [ -5,  29],\\n        [ 18, -85],\\n        [-18,  66],\\n        [-80,  77],\\n        [-12, -17],\\n        [-95, -31],\\n        [-90,  77],\\n        [ -3,  27],\\n        [  4, -71],\\n        [-84,  -5],\\n        [ 69, -54],\\n        [ 81, -32],\\n        [-85,  -2],\\n        [-85,  39],\\n        [-26,  15],\\n        [ 41,  41],\\n        [ 46,  54],\\n        [ 97, -99],\\n        [ 80, -19],\\n        [-90, -26],\\n        [-60,  58],\\n        [-17,  62],\\n        [-14, -46],\\n        [-96, -14],\\n        [ 99,  47],\\n        [ 90, -19],\\n        [ 93,  85],\\n        [ 76, -39]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000759077986003831, "start": 1700336859.9052966, "stop": 1700336859.9060562, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "267f4a1aca6a491abf79b4a798a24a37", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
