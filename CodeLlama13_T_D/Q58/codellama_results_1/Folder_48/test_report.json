{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004657749959733337, "start": 1700336839.132341, "stop": 1700336839.1328077, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005287899984978139, "start": 1700336839.1330955, "stop": 1700336839.1336248, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005185719928704202, "start": 1700336839.1339402, "stop": 1700336839.1344595, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005372729792725295, "start": 1700336839.1348832, "stop": 1700336839.135421, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_horizontal_matrix", "location": ["tests58_48_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017260797903873026, "start": 1700336839.156612, "stop": 1700336839.1567857, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 41,  22],\\n        [ 19, -90],\\n        [-28,  -2],\\n        [ 27, -13],\\n        [ 55,  65],\\n        [-26,  22],\\n        [-79,  -1],\\n        [ 21,  97],\\n        [-39, -93],\\n        [-64,  21],\\n        [  8, -30],\\n        [ 66, -80],\\n        [ 64, -60],\\n        [ 20,  78],\\n        [-35,  -1],\\n        [-54, -44],\\n        [-41, -89],\\n        [ 54, -66],\\n        [ 43, -36],\\n        [-34, -35],\\n        [ 97, -52],\\n        [-28,  81],\\n        [ 70,  63],\\n        [-93,  -6],\\n        [-93,  -8],\\n        [-69, -42],\\n        [-11, -68],\\n        [ 33, -10],\\n        [-40,  84],\\n        [-25, -87],\\n        [ 38, -36],\\n        [ -1, -70],\\n        [ 38,  33],\\n        [ 17, -70],\\n        [-67,  18],\\n        [-63, -17],\\n        [-72,  74],\\n        [ 77,  79],\\n        [-63,  77],\\n        [ 57, -61],\\n        [ 50, -51],\\n        [ 59, -19],\\n        [ 38,  92],\\n        [ 92,  77],\\n        [-25, -18],\\n        [-48, -58],\\n        [ 39,  -1],\\n        [-27,  41],\\n        [ 31, -63],\\n        [ 80,  62],\\n        [ 19, -81],\\n        [-64,  78],\\n        [ 95,  57],\\n        [-21,  65],\\n        [-23,  -8],\\n        [-37,  -8],\\n        [ 59,  94],\\n        [ 94,  -5],\\n        [ 86, -90],\\n        [ 31,  37],\\n        [ 31, -71],\\n        [-14, -83],\\n        [-68,  29],\\n        [-24,  19],\\n        [-71,  54]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 41,  22],\\n        [ 19, -90],\\n        [-28,  -2],\\n        [ 27, -13],\\n        [ 55,  65],\\n        [-26,  22],\\n        [-79,  -1],\\n        [ 21,  97],\\n        [-39, -93],\\n        [-64,  21],\\n        [  8, -30],\\n        [ 66, -80],\\n        [ 64, -60],\\n        [ 20,  78],\\n        [-35,  -1],\\n        [-54, -44],\\n        [-41, -89],\\n        [ 54, -66],\\n        [ 43, -36],\\n        [-34, -35],\\n        [ 97, -52],\\n        [-28,  81],\\n        [ 70,  63],\\n        [-93,  -6],\\n        [-93,  -8],\\n        [-69, -42],\\n        [-11, -68],\\n        [ 33, -10],\\n        [-40,  84],\\n        [-25, -87],\\n        [ 38, -36],\\n        [ -1, -70],\\n        [ 38,  33],\\n        [ 17, -70],\\n        [-67,  18],\\n        [-63, -17],\\n        [-72,  74],\\n        [ 77,  79],\\n        [-63,  77],\\n        [ 57, -61],\\n        [ 50, -51],\\n        [ 59, -19],\\n        [ 38,  92],\\n        [ 92,  77],\\n        [-25, -18],\\n        [-48, -58],\\n        [ 39,  -1],\\n        [-27,  41],\\n        [ 31, -63],\\n        [ 80,  62],\\n        [ 19, -81],\\n        [-64,  78],\\n        [ 95,  57],\\n        [-21,  65],\\n        [-23,  -8],\\n        [-37,  -8],\\n        [ 59,  94],\\n        [ 94,  -5],\\n        [ 86, -90],\\n        [ 31,  37],\\n        [ 31, -71],\\n        [-14, -83],\\n        [-68,  29],\\n        [-24,  19],\\n        [-71,  54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 41,  22],\\n        [ 19, -90],\\n        [-28,  -2],\\n        [ 27, -13],\\n        [ 55,  65],\\n        [-26,  22],\\n        [-79,  -1],\\n        [ 21,  97],\\n        [-39, -93],\\n        [-64,  21],\\n        [  8, -30],\\n        [ 66, -80],\\n        [ 64, -60],\\n        [ 20,  78],\\n        [-35,  -1],\\n        [-54, -44],\\n        [-41, -89],\\n        [ 54, -66],\\n        [ 43, -36],\\n        [-34, -35],\\n        [ 97, -52],\\n        [-28,  81],\\n        [ 70,  63],\\n        [-93,  -6],\\n        [-93,  -8],\\n        [-69, -42],\\n        [-11, -68],\\n        [ 33, -10],\\n        [-40,  84],\\n        [-25, -87],\\n        [ 38, -36],\\n        [ -1, -70],\\n        [ 38,  33],\\n        [ 17, -70],\\n        [-67,  18],\\n        [-63, -17],\\n        [-72,  74],\\n        [ 77,  79],\\n        [-63,  77],\\n        [ 57, -61],\\n        [ 50, -51],\\n        [ 59, -19],\\n        [ 38,  92],\\n        [ 92,  77],\\n        [-25, -18],\\n        [-48, -58],\\n        [ 39,  -1],\\n        [-27,  41],\\n        [ 31, -63],\\n        [ 80,  62],\\n        [ 19, -81],\\n        [-64,  78],\\n        [ 95,  57],\\n        [-21,  65],\\n        [-23,  -8],\\n        [-37,  -8],\\n        [ 59,  94],\\n        [ 94,  -5],\\n        [ 86, -90],\\n        [ 31,  37],\\n        [ 31, -71],\\n        [-14, -83],\\n        [-68,  29],\\n        [-24,  19],\\n        [-71,  54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 41,  22],\\n        [ 19, -90],\\n        [-28,  -2],\\n        [ 27, -13],\\n        [ 55,  65],\\n        [-26,  22],\\n        [-79,  -1],\\n        [ 21,  97],\\n        [-39, -93],\\n        [-64,  21],\\n        [  8, -30],\\n        [ 66, -80],\\n        [ 64, -60],\\n        [ 20,  78],\\n        [-35,  -1],\\n        [-54, -44],\\n        [-41, -89],\\n        [ 54, -66],\\n        [ 43, -36],\\n        [-34, -35],\\n        [ 97, -52],\\n        [-28,  81],\\n        [ 70,  63],\\n        [-93,  -6],\\n        [-93,  -8],\\n        [-69, -42],\\n        [-11, -68],\\n        [ 33, -10],\\n        [-40,  84],\\n        [-25, -87],\\n        [ 38, -36],\\n        [ -1, -70],\\n        [ 38,  33],\\n        [ 17, -70],\\n        [-67,  18],\\n        [-63, -17],\\n        [-72,  74],\\n        [ 77,  79],\\n        [-63,  77],\\n        [ 57, -61],\\n        [ 50, -51],\\n        [ 59, -19],\\n        [ 38,  92],\\n        [ 92,  77],\\n        [-25, -18],\\n        [-48, -58],\\n        [ 39,  -1],\\n        [-27,  41],\\n        [ 31, -63],\\n        [ 80,  62],\\n        [ 19, -81],\\n        [-64,  78],\\n        [ 95,  57],\\n        [-21,  65],\\n        [-23,  -8],\\n        [-37,  -8],\\n        [ 59,  94],\\n        [ 94,  -5],\\n        [ 86, -90],\\n        [ 31,  37],\\n        [ 31, -71],\\n        [-14, -83],\\n        [-68,  29],\\n        [-24,  19],\\n        [-71,  54]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012345519789960235, "start": 1700336839.135566, "stop": 1700336839.1368012, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d2e2f7e448da4d1f87d6b17461db1721", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
