{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_1.py::test_matrix_of_one_integer", "location": ["tests58_46_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015184501535259187, "start": 1700336838.3502877, "stop": 1700336838.3504403, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_1.py::test_horizontal_matrix", "location": ["tests58_46_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013848100206814706, "start": 1700336838.3505473, "stop": 1700336838.3506863, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_1.py::test_matrix_of_one_integer", "location": ["tests58_46_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001844360085669905, "start": 1700336838.350805, "stop": 1700336838.3509903, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_1.py::test_matrix_of_one_integer", "location": ["tests58_46_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019283799338154495, "start": 1700336838.3512626, "stop": 1700336838.3514557, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_1.py::test_matrix_of_having_144_integers", "location": ["tests58_46_1.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.779699030332267e-05, "start": 1700336838.3519826, "stop": 1700336838.3520808, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_1.py::test_matrix_of_having_144_integers", "location": ["tests58_46_1.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_1.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_46/tests58_46_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -86,   59],\\n        [  98,   41],\\n        [ -44,   94],\\n        [  20,   -2],\\n        [  79,  -92],\\n        [  17,  -68],\\n        [  71,  -64],\\n        [  47,   23],\\n        [ -52,  -64],\\n        [ -85,  -22],\\n        [  40,   16],\\n        [ -63,   -1],\\n        [  -8,   35],\\n        [ 100,  -31],\\n        [ -28,   21],\\n        [ -34,  -60],\\n        [  25,   94],\\n        [ -70,  -92],\\n        [ -77,   93],\\n        [  54,   24],\\n        [  56,  -83],\\n        [ -95,   20],\\n        [ -64,   44],\\n        [ -99,  -44],\\n        [ -91,  -59],\\n        [ -39,  -22],\\n        [ -48,   -7],\\n        [  71,    1],\\n        [ -78,   23],\\n        [  41,  -37],\\n        [  22,  -28],\\n        [ -23,   92],\\n        [ -34,   37],\\n        [ -96,  -49],\\n        [ -17,  -20],\\n        [  68,   22],\\n        [  29,  -11],\\n        [   6,   75],\\n        [ -90,   17],\\n        [   6,  -44],\\n        [ -94,   90],\\n        [  48,   61],\\n        [  41,   83],\\n        [  78,  -93],\\n        [ -69,   20],\\n        [ -85,   20],\\n        [  -2,  -68],\\n        [  47,  -49],\\n        [-100,   42],\\n        [  40,    6],\\n        [ -77,  -86],\\n        [  57,   19],\\n        [  18,  -41],\\n        [ -63,  -37],\\n        [ -49,  -68],\\n        [ -70,  -10],\\n        [ -51,   63],\\n        [  80,  -12],\\n        [  27,   18],\\n        [ -81,  -60],\\n        [  99,   44],\\n        [ -46,  -81],\\n        [ -80,  -84],\\n        [  70,   47],\\n        [  31,  -95],\\n        [  22,  -72],\\n        [  -1,  -52],\\n        [ -22,   20],\\n        [ -53,   24],\\n        [  37,  -35],\\n        [ -32,  -48],\\n        [  64,    3]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -86,   59],\\n        [  98,   41],\\n        [ -44,   94],\\n        [  20,   -2],\\n        [  79,  -92],\\n        [  17,  -68],\\n        [  71,  -64],\\n        [  47,   23],\\n        [ -52,  -64],\\n        [ -85,  -22],\\n        [  40,   16],\\n        [ -63,   -1],\\n        [  -8,   35],\\n        [ 100,  -31],\\n        [ -28,   21],\\n        [ -34,  -60],\\n        [  25,   94],\\n        [ -70,  -92],\\n        [ -77,   93],\\n        [  54,   24],\\n        [  56,  -83],\\n        [ -95,   20],\\n        [ -64,   44],\\n        [ -99,  -44],\\n        [ -91,  -59],\\n        [ -39,  -22],\\n        [ -48,   -7],\\n        [  71,    1],\\n        [ -78,   23],\\n        [  41,  -37],\\n        [  22,  -28],\\n        [ -23,   92],\\n        [ -34,   37],\\n        [ -96,  -49],\\n        [ -17,  -20],\\n        [  68,   22],\\n        [  29,  -11],\\n        [   6,   75],\\n        [ -90,   17],\\n        [   6,  -44],\\n        [ -94,   90],\\n        [  48,   61],\\n        [  41,   83],\\n        [  78,  -93],\\n        [ -69,   20],\\n        [ -85,   20],\\n        [  -2,  -68],\\n        [  47,  -49],\\n        [-100,   42],\\n        [  40,    6],\\n        [ -77,  -86],\\n        [  57,   19],\\n        [  18,  -41],\\n        [ -63,  -37],\\n        [ -49,  -68],\\n        [ -70,  -10],\\n        [ -51,   63],\\n        [  80,  -12],\\n        [  27,   18],\\n        [ -81,  -60],\\n        [  99,   44],\\n        [ -46,  -81],\\n        [ -80,  -84],\\n        [  70,   47],\\n        [  31,  -95],\\n        [  22,  -72],\\n        [  -1,  -52],\\n        [ -22,   20],\\n        [ -53,   24],\\n        [  37,  -35],\\n        [ -32,  -48],\\n        [  64,    3]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_46/tests58_46_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -86,   59],\\n        [  98,   41],\\n        [ -44,   94],\\n        [  20,   -2],\\n        [  79,  -92],\\n        [  17,  -68],\\n        [  71,  -64],\\n        [  47,   23],\\n        [ -52,  -64],\\n        [ -85,  -22],\\n        [  40,   16],\\n        [ -63,   -1],\\n        [  -8,   35],\\n        [ 100,  -31],\\n        [ -28,   21],\\n        [ -34,  -60],\\n        [  25,   94],\\n        [ -70,  -92],\\n        [ -77,   93],\\n        [  54,   24],\\n        [  56,  -83],\\n        [ -95,   20],\\n        [ -64,   44],\\n        [ -99,  -44],\\n        [ -91,  -59],\\n        [ -39,  -22],\\n        [ -48,   -7],\\n        [  71,    1],\\n        [ -78,   23],\\n        [  41,  -37],\\n        [  22,  -28],\\n        [ -23,   92],\\n        [ -34,   37],\\n        [ -96,  -49],\\n        [ -17,  -20],\\n        [  68,   22],\\n        [  29,  -11],\\n        [   6,   75],\\n        [ -90,   17],\\n        [   6,  -44],\\n        [ -94,   90],\\n        [  48,   61],\\n        [  41,   83],\\n        [  78,  -93],\\n        [ -69,   20],\\n        [ -85,   20],\\n        [  -2,  -68],\\n        [  47,  -49],\\n        [-100,   42],\\n        [  40,    6],\\n        [ -77,  -86],\\n        [  57,   19],\\n        [  18,  -41],\\n        [ -63,  -37],\\n        [ -49,  -68],\\n        [ -70,  -10],\\n        [ -51,   63],\\n        [  80,  -12],\\n        [  27,   18],\\n        [ -81,  -60],\\n        [  99,   44],\\n        [ -46,  -81],\\n        [ -80,  -84],\\n        [  70,   47],\\n        [  31,  -95],\\n        [  22,  -72],\\n        [  -1,  -52],\\n        [ -22,   20],\\n        [ -53,   24],\\n        [  37,  -35],\\n        [ -32,  -48],\\n        [  64,    3]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_46/tests58_46_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_1/Folder_46/tests58_46_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -86,   59],\\n        [  98,   41],\\n        [ -44,   94],\\n        [  20,   -2],\\n        [  79,  -92],\\n        [  17,  -68],\\n        [  71,  -64],\\n        [  47,   23],\\n        [ -52,  -64],\\n        [ -85,  -22],\\n        [  40,   16],\\n        [ -63,   -1],\\n        [  -8,   35],\\n        [ 100,  -31],\\n        [ -28,   21],\\n        [ -34,  -60],\\n        [  25,   94],\\n        [ -70,  -92],\\n        [ -77,   93],\\n        [  54,   24],\\n        [  56,  -83],\\n        [ -95,   20],\\n        [ -64,   44],\\n        [ -99,  -44],\\n        [ -91,  -59],\\n        [ -39,  -22],\\n        [ -48,   -7],\\n        [  71,    1],\\n        [ -78,   23],\\n        [  41,  -37],\\n        [  22,  -28],\\n        [ -23,   92],\\n        [ -34,   37],\\n        [ -96,  -49],\\n        [ -17,  -20],\\n        [  68,   22],\\n        [  29,  -11],\\n        [   6,   75],\\n        [ -90,   17],\\n        [   6,  -44],\\n        [ -94,   90],\\n        [  48,   61],\\n        [  41,   83],\\n        [  78,  -93],\\n        [ -69,   20],\\n        [ -85,   20],\\n        [  -2,  -68],\\n        [  47,  -49],\\n        [-100,   42],\\n        [  40,    6],\\n        [ -77,  -86],\\n        [  57,   19],\\n        [  18,  -41],\\n        [ -63,  -37],\\n        [ -49,  -68],\\n        [ -70,  -10],\\n        [ -51,   63],\\n        [  80,  -12],\\n        [  27,   18],\\n        [ -81,  -60],\\n        [  99,   44],\\n        [ -46,  -81],\\n        [ -80,  -84],\\n        [  70,   47],\\n        [  31,  -95],\\n        [  22,  -72],\\n        [  -1,  -52],\\n        [ -22,   20],\\n        [ -53,   24],\\n        [  37,  -35],\\n        [ -32,  -48],\\n        [  64,    3]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010335260012652725, "start": 1700336838.3523402, "stop": 1700336838.3533745, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1c845e0c3d2f40c299f6b826020b0855", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
