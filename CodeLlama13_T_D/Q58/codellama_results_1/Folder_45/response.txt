```python
import numpy as np

def submatrix_with_n_numbers(matrix):
    # Initialize a counter for the number of submatrices with 28 integers
    count = 0
    
    # Iterate over each row of the matrix
    for i in range(matrix.shape[0]):
        # Iterate over each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a submatrix with the current element as its top-left corner
            submatrix = np.array([[matrix[i, j]]])
            
            # Check if the submatrix contains 28 integers
            if np.sum(submatrix) == 28:
                count += 1
            
            # If the current element is not in the last row or column, check its neighbors recursively
            if i < matrix.shape[0] - 1 and j < matrix.shape[1] - 1:
                # Check the submatrix that includes the current element and its neighboring elements
                count += submatrix_with_n_numbers(np.array([[matrix[i, j], matrix[i + 1, j]], [matrix[i, j + 1], matrix[i + 1, j + 1]]]))
    
    return count
```