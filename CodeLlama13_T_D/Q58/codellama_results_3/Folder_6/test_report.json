{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_3.py::test_matrix_of_one_integer", "location": ["tests58_6_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014047400327399373, "start": 1700336917.1078815, "stop": 1700336917.1080225, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_3.py::test_matrix_of_one_integer", "location": ["tests58_6_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001806550135370344, "start": 1700336917.1082695, "stop": 1700336917.108451, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_3.py::test_matrix_of_one_integer", "location": ["tests58_6_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.619099389761686e-05, "start": 1700336917.1087344, "stop": 1700336917.108821, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_3.py::test_matrix_of_having_122_integers", "location": ["tests58_6_3.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.59299795795232e-05, "start": 1700336917.1092103, "stop": 1700336917.1093068, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_3.py::test_horizontal_matrix", "location": ["tests58_6_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00043626100523397326, "start": 1700336917.1089969, "stop": 1700336917.109434, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_3.py::test_matrix_of_having_122_integers", "location": ["tests58_6_3.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_3.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_3/Folder_6/tests58_6_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   27],\\n        [ -79,  -45],\\n        [ -19,  -60],\\n        [  70,   87],\\n        [  29,  100],\\n        [ -25,  -20],\\n        [ -26,  -16],\\n        [ -24,   61],\\n        [  58,   98],\\n        [ -67,  -66],\\n        [ -52,  -25],\\n        [ -73,   88],\\n        [  16,  -23],\\n        [ -37,  -29],\\n        [ -42,  -80],\\n        [   1,  -62],\\n        [  40,   27],\\n        [ -32,   82],\\n        [  79, -100],\\n        [  71,  -67],\\n        [  73,   96],\\n        [  93,   27],\\n        [  58,  -78],\\n        [ -41,   88],\\n        [ -59,   50],\\n        [  64,   44],\\n        [ -70,   59],\\n        [  43,  -76],\\n        [   9,  -22],\\n        [ -12,  -55],\\n        [ -57,  -95],\\n        [  -7,   65],\\n        [  32,   96],\\n        [ -40,   37],\\n        [ -47,   22],\\n        [ -60,  -17],\\n        [  23,   55],\\n        [ -74,  -72],\\n        [ -52,  -71],\\n        [  62,   73],\\n        [ -72,  -30],\\n        [ -80,    1],\\n        [ -91,   25],\\n        [  18,  -89],\\n        [ -67,  -31],\\n        [  90,   45],\\n        [ -76,  -62],\\n        [  46, -100],\\n        [  30,   61],\\n        [  24,  -25],\\n        [  80,  -76],\\n        [  14,  -60],\\n        [  60,   60],\\n        [ -13,   34],\\n        [ -72,  -49],\\n        [  26,   97],\\n        [ -31,  -30],\\n        [  29,  -91],\\n        [ 100,   59],\\n        [   4,   73],\\n        [ -31,  -19]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   27],\\n        [ -79,  -45],\\n        [ -19,  -60],\\n        [  70,   87],\\n        [  29,  100],\\n        [ -25,  -20],\\n        [ -26,  -16],\\n        [ -24,   61],\\n        [  58,   98],\\n        [ -67,  -66],\\n        [ -52,  -25],\\n        [ -73,   88],\\n        [  16,  -23],\\n        [ -37,  -29],\\n        [ -42,  -80],\\n        [   1,  -62],\\n        [  40,   27],\\n        [ -32,   82],\\n        [  79, -100],\\n        [  71,  -67],\\n        [  73,   96],\\n        [  93,   27],\\n        [  58,  -78],\\n        [ -41,   88],\\n        [ -59,   50],\\n        [  64,   44],\\n        [ -70,   59],\\n        [  43,  -76],\\n        [   9,  -22],\\n        [ -12,  -55],\\n        [ -57,  -95],\\n        [  -7,   65],\\n        [  32,   96],\\n        [ -40,   37],\\n        [ -47,   22],\\n        [ -60,  -17],\\n        [  23,   55],\\n        [ -74,  -72],\\n        [ -52,  -71],\\n        [  62,   73],\\n        [ -72,  -30],\\n        [ -80,    1],\\n        [ -91,   25],\\n        [  18,  -89],\\n        [ -67,  -31],\\n        [  90,   45],\\n        [ -76,  -62],\\n        [  46, -100],\\n        [  30,   61],\\n        [  24,  -25],\\n        [  80,  -76],\\n        [  14,  -60],\\n        [  60,   60],\\n        [ -13,   34],\\n        [ -72,  -49],\\n        [  26,   97],\\n        [ -31,  -30],\\n        [  29,  -91],\\n        [ 100,   59],\\n        [   4,   73],\\n        [ -31,  -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_6/tests58_6_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   27],\\n        [ -79,  -45],\\n        [ -19,  -60],\\n        [  70,   87],\\n        [  29,  100],\\n        [ -25,  -20],\\n        [ -26,  -16],\\n        [ -24,   61],\\n        [  58,   98],\\n        [ -67,  -66],\\n        [ -52,  -25],\\n        [ -73,   88],\\n        [  16,  -23],\\n        [ -37,  -29],\\n        [ -42,  -80],\\n        [   1,  -62],\\n        [  40,   27],\\n        [ -32,   82],\\n        [  79, -100],\\n        [  71,  -67],\\n        [  73,   96],\\n        [  93,   27],\\n        [  58,  -78],\\n        [ -41,   88],\\n        [ -59,   50],\\n        [  64,   44],\\n        [ -70,   59],\\n        [  43,  -76],\\n        [   9,  -22],\\n        [ -12,  -55],\\n        [ -57,  -95],\\n        [  -7,   65],\\n        [  32,   96],\\n        [ -40,   37],\\n        [ -47,   22],\\n        [ -60,  -17],\\n        [  23,   55],\\n        [ -74,  -72],\\n        [ -52,  -71],\\n        [  62,   73],\\n        [ -72,  -30],\\n        [ -80,    1],\\n        [ -91,   25],\\n        [  18,  -89],\\n        [ -67,  -31],\\n        [  90,   45],\\n        [ -76,  -62],\\n        [  46, -100],\\n        [  30,   61],\\n        [  24,  -25],\\n        [  80,  -76],\\n        [  14,  -60],\\n        [  60,   60],\\n        [ -13,   34],\\n        [ -72,  -49],\\n        [  26,   97],\\n        [ -31,  -30],\\n        [  29,  -91],\\n        [ 100,   59],\\n        [   4,   73],\\n        [ -31,  -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_6/tests58_6_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_3/Folder_6/tests58_6_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   27],\\n        [ -79,  -45],\\n        [ -19,  -60],\\n        [  70,   87],\\n        [  29,  100],\\n        [ -25,  -20],\\n        [ -26,  -16],\\n        [ -24,   61],\\n        [  58,   98],\\n        [ -67,  -66],\\n        [ -52,  -25],\\n        [ -73,   88],\\n        [  16,  -23],\\n        [ -37,  -29],\\n        [ -42,  -80],\\n        [   1,  -62],\\n        [  40,   27],\\n        [ -32,   82],\\n        [  79, -100],\\n        [  71,  -67],\\n        [  73,   96],\\n        [  93,   27],\\n        [  58,  -78],\\n        [ -41,   88],\\n        [ -59,   50],\\n        [  64,   44],\\n        [ -70,   59],\\n        [  43,  -76],\\n        [   9,  -22],\\n        [ -12,  -55],\\n        [ -57,  -95],\\n        [  -7,   65],\\n        [  32,   96],\\n        [ -40,   37],\\n        [ -47,   22],\\n        [ -60,  -17],\\n        [  23,   55],\\n        [ -74,  -72],\\n        [ -52,  -71],\\n        [  62,   73],\\n        [ -72,  -30],\\n        [ -80,    1],\\n        [ -91,   25],\\n        [  18,  -89],\\n        [ -67,  -31],\\n        [  90,   45],\\n        [ -76,  -62],\\n        [  46, -100],\\n        [  30,   61],\\n        [  24,  -25],\\n        [  80,  -76],\\n        [  14,  -60],\\n        [  60,   60],\\n        [ -13,   34],\\n        [ -72,  -49],\\n        [  26,   97],\\n        [ -31,  -30],\\n        [  29,  -91],\\n        [ 100,   59],\\n        [   4,   73],\\n        [ -31,  -19]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012566920195240527, "start": 1700336917.1094353, "stop": 1700336917.1106925, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4c0e1cf00e41450eb88a8a120cb2f063", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
