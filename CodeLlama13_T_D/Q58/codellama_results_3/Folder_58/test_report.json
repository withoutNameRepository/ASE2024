{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_58_3.py::test_matrix_of_one_integer", "location": ["tests58_58_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040549799450673163, "start": 1700336947.5206938, "stop": 1700336947.5211003, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_3.py::test_matrix_of_one_integer", "location": ["tests58_58_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033300797804258764, "start": 1700336947.52139, "stop": 1700336947.5217235, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_3.py::test_horizontal_matrix", "location": ["tests58_58_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002734800218604505, "start": 1700336947.522058, "stop": 1700336947.5223322, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_58_3.py::test_matrix_of_one_integer", "location": ["tests58_58_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0009183869988191873, "start": 1700336947.5220218, "stop": 1700336947.5229409, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_3.py::test_matrix_of_having_185_integers", "location": ["tests58_58_3.py", 28, "test_matrix_of_having_185_integers"], "keywords": {"test_matrix_of_having_185_integers": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023976797820068896, "start": 1700336947.523685, "stop": 1700336947.5239253, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_3.py::test_matrix_of_having_185_integers", "location": ["tests58_58_3.py", 28, "test_matrix_of_having_185_integers"], "keywords": {"test_matrix_of_having_185_integers": 1, "__wrapped__": 1, "tests58_58_3.py": 1, "Folder_58": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q58/codellama_results_3/Folder_58/tests58_58_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -91,   21,   -6,   -5,   27,  -49,   48,  -91,   -3,   85,\\n           -4,   97,   87,   65,   90,   60,   33,    2,  -80,    7,\\n           15,   50,  -57,   50,  -58,   17,  -27,   -2,  -42,  -38,\\n           96,  -82,  -52,   11,  -25,  -43,  -41,  -59,  -48,   24,\\n           -2,   79,   70,   -3,  -97,   66,   98,  -74,   42,   38,\\n          -30,   29,   67,   85,   66,  -72,   40,  -36,   17,   80,\\n          -36,  -75,  -48,  -93,    7,   71,   78,  100,   66,  -53,\\n          -54,   37,  -55,  -52,   50,    3,  -54,  -43,   32,   87,\\n          -25,  -14,  -76,  -75,  -64,  -52,  -89,  -20,   48,  -22,\\n          -63,   44,   -2,  -59,   26,   61,    1,    7,   45,   59,\\n           33,  -13,   57,   22,   75,  -82,  -16,  -30,   70,  -86,\\n          -91,   37,   55,   -9,   29,   59,  -81,   79,   12,   38,\\n          -23,   33,   46,   25,  -31,   30,   96,   64,  -29,  -77,\\n           39,  -63,  -31,   -1,  -14,  -42,  -26,   95,   66,  -19,\\n           84,  -20,   15,  -32, -100,  -87,   26,   -5,   -8,   48,\\n          100,  -14,  -46,   71,   16,   55,  -80,   25,  -82,  -69,\\n           71,   53,   34,  -78,   86,  -95,   55,  -22,   -9,  -47,\\n           81,  -42,  -29,  -40,   92,  -75,   83,   62,  -18,  -88,\\n          -81,   68,  -66,   93,  -57]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_185_integers():", "        if 185 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(185 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(185)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -91,   21,   -6,   -5,   27,  -49,   48,  -91,   -3,   85,\\n           -4,   97,   87,   65,   90,   60,   33,    2,  -80,    7,\\n           15,   50,  -57,   50,  -58,   17,  -27,   -2,  -42,  -38,\\n           96,  -82,  -52,   11,  -25,  -43,  -41,  -59,  -48,   24,\\n           -2,   79,   70,   -3,  -97,   66,   98,  -74,   42,   38,\\n          -30,   29,   67,   85,   66,  -72,   40,  -36,   17,   80,\\n          -36,  -75,  -48,  -93,    7,   71,   78,  100,   66,  -53,\\n          -54,   37,  -55,  -52,   50,    3,  -54,  -43,   32,   87,\\n          -25,  -14,  -76,  -75,  -64,  -52,  -89,  -20,   48,  -22,\\n          -63,   44,   -2,  -59,   26,   61,    1,    7,   45,   59,\\n           33,  -13,   57,   22,   75,  -82,  -16,  -30,   70,  -86,\\n          -91,   37,   55,   -9,   29,   59,  -81,   79,   12,   38,\\n          -23,   33,   46,   25,  -31,   30,   96,   64,  -29,  -77,\\n           39,  -63,  -31,   -1,  -14,  -42,  -26,   95,   66,  -19,\\n           84,  -20,   15,  -32, -100,  -87,   26,   -5,   -8,   48,\\n          100,  -14,  -46,   71,   16,   55,  -80,   25,  -82,  -69,\\n           71,   53,   34,  -78,   86,  -95,   55,  -22,   -9,  -47,\\n           81,  -42,  -29,  -40,   92,  -75,   83,   62,  -18,  -88,\\n          -81,   68,  -66,   93,  -57]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_58/tests58_58_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_185_integers():", "        if 185 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(185 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(185)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -91,   21,   -6,   -5,   27,  -49,   48,  -91,   -3,   85,\\n           -4,   97,   87,   65,   90,   60,   33,    2,  -80,    7,\\n           15,   50,  -57,   50,  -58,   17,  -27,   -2,  -42,  -38,\\n           96,  -82,  -52,   11,  -25,  -43,  -41,  -59,  -48,   24,\\n           -2,   79,   70,   -3,  -97,   66,   98,  -74,   42,   38,\\n          -30,   29,   67,   85,   66,  -72,   40,  -36,   17,   80,\\n          -36,  -75,  -48,  -93,    7,   71,   78,  100,   66,  -53,\\n          -54,   37,  -55,  -52,   50,    3,  -54,  -43,   32,   87,\\n          -25,  -14,  -76,  -75,  -64,  -52,  -89,  -20,   48,  -22,\\n          -63,   44,   -2,  -59,   26,   61,    1,    7,   45,   59,\\n           33,  -13,   57,   22,   75,  -82,  -16,  -30,   70,  -86,\\n          -91,   37,   55,   -9,   29,   59,  -81,   79,   12,   38,\\n          -23,   33,   46,   25,  -31,   30,   96,   64,  -29,  -77,\\n           39,  -63,  -31,   -1,  -14,  -42,  -26,   95,   66,  -19,\\n           84,  -20,   15,  -32, -100,  -87,   26,   -5,   -8,   48,\\n          100,  -14,  -46,   71,   16,   55,  -80,   25,  -82,  -69,\\n           71,   53,   34,  -78,   86,  -95,   55,  -22,   -9,  -47,\\n           81,  -42,  -29,  -40,   92,  -75,   83,   62,  -18,  -88,\\n          -81,   68,  -66,   93,  -57]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_58/tests58_58_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q58/codellama_results_3/Folder_58/tests58_58_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -91,   21,   -6,   -5,   27,  -49,   48,  -91,   -3,   85,\\n           -4,   97,   87,   65,   90,   60,   33,    2,  -80,    7,\\n           15,   50,  -57,   50,  -58,   17,  -27,   -2,  -42,  -38,\\n           96,  -82,  -52,   11,  -25,  -43,  -41,  -59,  -48,   24,\\n           -2,   79,   70,   -3,  -97,   66,   98,  -74,   42,   38,\\n          -30,   29,   67,   85,   66,  -72,   40,  -36,   17,   80,\\n          -36,  -75,  -48,  -93,    7,   71,   78,  100,   66,  -53,\\n          -54,   37,  -55,  -52,   50,    3,  -54,  -43,   32,   87,\\n          -25,  -14,  -76,  -75,  -64,  -52,  -89,  -20,   48,  -22,\\n          -63,   44,   -2,  -59,   26,   61,    1,    7,   45,   59,\\n           33,  -13,   57,   22,   75,  -82,  -16,  -30,   70,  -86,\\n          -91,   37,   55,   -9,   29,   59,  -81,   79,   12,   38,\\n          -23,   33,   46,   25,  -31,   30,   96,   64,  -29,  -77,\\n           39,  -63,  -31,   -1,  -14,  -42,  -26,   95,   66,  -19,\\n           84,  -20,   15,  -32, -100,  -87,   26,   -5,   -8,   48,\\n          100,  -14,  -46,   71,   16,   55,  -80,   25,  -82,  -69,\\n           71,   53,   34,  -78,   86,  -95,   55,  -22,   -9,  -47,\\n           81,  -42,  -29,  -40,   92,  -75,   83,   62,  -18,  -88,\\n          -81,   68,  -66,   93,  -57]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011511659831739962, "start": 1700336947.5240605, "stop": 1700336947.525212, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4f2cae8d2c74433aaa32328d1404ec7c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
