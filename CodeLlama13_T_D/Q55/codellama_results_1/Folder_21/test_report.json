{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_21_1.py::test_list_of_several_same_number", "location": ["tests55_21_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011607198393903673, "start": 1700335048.631393, "stop": 1700335048.6315098, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_list_of_single_number", "location": ["tests55_21_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013821100583299994, "start": 1700335048.6313941, "stop": 1700335048.6315331, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_21_1.py::test_list_of_several_same_number", "location": ["tests55_21_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014714201097376645, "start": 1700335048.631686, "stop": 1700335048.6318333, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_list_of_single_number", "location": ["tests55_21_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010104101966135204, "start": 1700335048.631735, "stop": 1700335048.6318364, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_21_1.py::test_list_of_single_number", "location": ["tests55_21_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.0888007283210754e-05, "start": 1700335048.632031, "stop": 1700335048.6320925, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_21_1.py::test_list_of_several_same_number", "location": ["tests55_21_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.194398156367242e-05, "start": 1700335048.6320207, "stop": 1700335048.6320832, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_21_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.59249781165272e-05, "start": 1700335048.6330192, "stop": 1700335048.6330855, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_21_1.py::test_list_of_not_containing_number", "location": ["tests55_21_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.577898213639855e-05, "start": 1700335048.6332593, "stop": 1700335048.6333356, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_list_of_not_containing_number", "location": ["tests55_21_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.475499296560884e-05, "start": 1700335048.6334298, "stop": 1700335048.633505, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_list_of_not_containing_number", "location": ["tests55_21_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.288800457492471e-05, "start": 1700335048.633659, "stop": 1700335048.6337123, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_return_elements_are_in_given_list", "location": ["tests55_21_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013206098810769618, "start": 1700335048.6344163, "stop": 1700335048.634549, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_return_elements_are_in_given_list", "location": ["tests55_21_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017086099251173437, "start": 1700335048.6347141, "stop": 1700335048.6348855, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_return_elements_are_in_given_list", "location": ["tests55_21_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.650000720284879e-05, "start": 1700335048.6351445, "stop": 1700335048.6352417, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_if_sublist_product_equals_number", "location": ["tests55_21_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010933398152701557, "start": 1700335048.6359007, "stop": 1700335048.6360104, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_21_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_21_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_21_1.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q55/codellama_results_1/Folder_21/tests55_21_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc804b74dc0>([851])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc804b74dc0>([1, 851])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count\n +  and   0 = <built-in method count of list object at 0x7fc804b74dc0>([851, 1])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 851, 1, 851, 1, 851]", "        result = lists_with_product_equal_n(input_list)", "        if 851 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 851 == 1:", "            assert result.count([851]) == 6 and result.count([1, 851]) == 6 and result.count([851, 1]) == 6 and result.count([1, 851, 1]) == 6", "        else:", ">           assert result.count([851]) == 3 and result.count([1, 851]) == 3 and result.count([851, 1]) == 3 and result.count([1, 851, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 0 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc804b74dc0>([851])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc804b74dc0>([1, 851])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count", "E            +  and   0 = <built-in method count of list object at 0x7fc804b74dc0>([851, 1])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codellama_results_1/Folder_21/tests55_21_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 851, 1, 851, 1, 851]", "        result = lists_with_product_equal_n(input_list)", "        if 851 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 851 == 1:", "            assert result.count([851]) == 6 and result.count([1, 851]) == 6 and result.count([851, 1]) == 6 and result.count([1, 851, 1]) == 6", "        else:", ">           assert result.count([851]) == 3 and result.count([1, 851]) == 3 and result.count([851, 1]) == 3 and result.count([1, 851, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 0 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc804b74dc0>([851])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc804b74dc0>([1, 851])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count", "E            +  and   0 = <built-in method count of list object at 0x7fc804b74dc0>([851, 1])", "E            +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codellama_results_1/Folder_21/tests55_21_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q55/codellama_results_1/Folder_21/tests55_21_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc804b74dc0>([851])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc804b74dc0>([1, 851])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count\n +  and   0 = <built-in method count of list object at 0x7fc804b74dc0>([851, 1])\n +    where <built-in method count of list object at 0x7fc804b74dc0> = [[1, 851], [1, 1], [851], [1], [1, 851], [1, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002901190018747002, "start": 1700335048.6331663, "stop": 1700335048.633457, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bdbebc22e1a44076be43da81b01696fe", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
