```python
def find_subset_of_length_n(elements, n):
    return len([x for x in powerset(elements) if len(x) == n])

def powerset(iterable):
    s = list(iterable)
    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1))
```
This code defines two functions: `find_subset_of_length_n` and `powerset`. The `find_subset_of_length_n` function takes a set of elements as its first argument and an integer `n` as its second argument. It returns the number of all subsets of size `n` in the input set.

The `powerset` function generates the powerset of the input iterable using the `itertools` module's `combinations` function. The `chain.from_iterable` method is used to flatten the list of tuples generated by `combinations` into a single list of tuples, which can be further filtered to find subsets of size `n`.