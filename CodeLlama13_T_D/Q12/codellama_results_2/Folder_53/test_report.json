{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests12_53_2.py::test_all_zero_range", "location": ["tests12_53_2.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010934402234852314, "start": 1700315267.065471, "stop": 1700315267.0655808, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_all_zero_range", "location": ["tests12_53_2.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010820801253430545, "start": 1700315267.0657558, "stop": 1700315267.0658646, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_all_zero_range", "location": ["tests12_53_2.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.0892984038218856e-05, "start": 1700315267.0660524, "stop": 1700315267.0661137, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_result_is_in_range", "location": ["tests12_53_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001275080139748752, "start": 1700315267.0655105, "stop": 1700315267.0656383, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_53_2.py::test_all_n_range", "location": ["tests12_53_2.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.928897346369922e-05, "start": 1700315267.0674117, "stop": 1700315267.0674813, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_all_n_range", "location": ["tests12_53_2.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001968260039575398, "start": 1700315267.0675664, "stop": 1700315267.0677638, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_all_n_range", "location": ["tests12_53_2.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.309699918143451e-05, "start": 1700315267.067918, "stop": 1700315267.0679715, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_unsorted_large_range", "location": ["tests12_53_2.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.402897997759283e-05, "start": 1700315267.0688372, "stop": 1700315267.0689015, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_53_2.py::test_result_is_in_range", "location": ["tests12_53_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006790686980821192, "start": 1700315267.065828, "stop": 1700315267.0726194, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_53_2.py::test_result_is_in_range", "location": ["tests12_53_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.320498793385923e-05, "start": 1700315267.0729182, "stop": 1700315267.073012, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_53_2.py::test_large_range", "location": ["tests12_53_2.py", 10, "test_large_range"], "keywords": {"test_large_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.478899301029742e-05, "start": 1700315267.0741203, "stop": 1700315267.0742157, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_53_2.py::test_unsorted_large_range", "location": ["tests12_53_2.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_53_2.py": 1, "Folder_53": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q12/codellama_results_2/Folder_53/tests12_53_2.py", "lineno": 33, "message": "assert -900 == -990\n +  where -900 = find_smallest_num([-456, 136, -349, -960, -42, -12, ...])\n +  and   -990 = min([-990, -980, -973, -959, -945, -920, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, (200 + 1) * 3)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[100:200 + 1]", "        sliced_list.sort()", ">       assert find_smallest_num(initial_list) == min(sliced_list)", "E       assert -900 == -990", "E        +  where -900 = find_smallest_num([-456, 136, -349, -960, -42, -12, ...])", "E        +  and   -990 = min([-990, -980, -973, -959, -945, -920, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/codellama_results_2/Folder_53/tests12_53_2.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, (200 + 1) * 3)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[100:200 + 1]", "        sliced_list.sort()", ">       assert find_smallest_num(initial_list) == min(sliced_list)", "E       assert -900 == -990", "E        +  where -900 = find_smallest_num([-456, 136, -349, -960, -42, -12, ...])", "E        +  and   -990 = min([-990, -980, -973, -959, -945, -920, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/codellama_results_2/Folder_53/tests12_53_2.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q12/codellama_results_2/Folder_53/tests12_53_2.py", "lineno": 33, "message": "assert -900 == -990\n +  where -900 = find_smallest_num([-456, 136, -349, -960, -42, -12, ...])\n +  and   -990 = min([-990, -980, -973, -959, -945, -920, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005861810059286654, "start": 1700315267.068983, "stop": 1700315267.0695698, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "966ca2374d1a43ba988fe66007e419c8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
