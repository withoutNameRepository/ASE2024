{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests12_48_5.py::test_result_is_in_range", "location": ["tests12_48_5.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001217359967995435, "start": 1700315650.3701465, "stop": 1700315650.3702688, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_48_5.py::test_all_zero_range", "location": ["tests12_48_5.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.483599569648504e-05, "start": 1700315650.3700163, "stop": 1700315650.3701115, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_all_zero_range", "location": ["tests12_48_5.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011796099715866148, "start": 1700315650.3702915, "stop": 1700315650.3704097, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_all_zero_range", "location": ["tests12_48_5.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.709100514650345e-05, "start": 1700315650.3705773, "stop": 1700315650.370635, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_all_n_range", "location": ["tests12_48_5.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.132997805252671e-05, "start": 1700315650.371503, "stop": 1700315650.3715649, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_all_n_range", "location": ["tests12_48_5.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028711900813505054, "start": 1700315650.3716445, "stop": 1700315650.3719316, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_all_n_range", "location": ["tests12_48_5.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.3580006351694465e-05, "start": 1700315650.3721006, "stop": 1700315650.3721545, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_unsorted_large_range", "location": ["tests12_48_5.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.203199154697359e-05, "start": 1700315650.3727133, "stop": 1700315650.3727758, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_unsorted_large_range", "location": ["tests12_48_5.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000565486989216879, "start": 1700315650.372854, "stop": 1700315650.37342, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_unsorted_large_range", "location": ["tests12_48_5.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.915398312732577e-05, "start": 1700315650.3735585, "stop": 1700315650.3736079, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_reversed_range", "location": ["tests12_48_5.py", 35, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.4895004723221064e-05, "start": 1700315650.3741379, "stop": 1700315650.3741932, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_48_5.py::test_reversed_range", "location": ["tests12_48_5.py", 35, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests12_48_5.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q12/codellama_results_5/Folder_48/tests12_48_5.py", "lineno": 40, "message": "assert 1115 == 1114\n +  where 1115 = find_smallest_num([1670, 1669, 1668, 1667, 1666, 1665, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_reversed_range():", "        initial_list = [i for i in range(-1000, (556 + 1) * 3)]", "        initial_list.reverse()", "        expected_result = initial_list[556]", ">       assert find_smallest_num(initial_list) == expected_result", "E       assert 1115 == 1114", "E        +  where 1115 = find_smallest_num([1670, 1669, 1668, 1667, 1666, 1665, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/codellama_results_5/Folder_48/tests12_48_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_reversed_range():", "        initial_list = [i for i in range(-1000, (556 + 1) * 3)]", "        initial_list.reverse()", "        expected_result = initial_list[556]", ">       assert find_smallest_num(initial_list) == expected_result", "E       assert 1115 == 1114", "E        +  where 1115 = find_smallest_num([1670, 1669, 1668, 1667, 1666, 1665, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/codellama_results_5/Folder_48/tests12_48_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q12/codellama_results_5/Folder_48/tests12_48_5.py", "lineno": 40, "message": "assert 1115 == 1114\n +  where 1115 = find_smallest_num([1670, 1669, 1668, 1667, 1666, 1665, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020556699018925428, "start": 1700315650.3742664, "stop": 1700315650.3744724, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "de78fd6c7bdb406fa11a1fee372bd9e1", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
