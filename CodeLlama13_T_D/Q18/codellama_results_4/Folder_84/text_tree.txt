Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        └── If
            ├── Compare
            │   ├── Call
            │   │   ├── Name
            │   │   │   └── Load
            │   │   └── Name
            │   │       └── Load
            │   ├── Lt
            │   └── Constant
            ├── Return
            │   └── Constant
            └── Return
                └── Call
                    ├── Name
                    │   └── Load
                    └── ListComp
                        ├── Name
                        │   └── Load
                        └── comprehension
                            ├── Name
                            │   └── Store
                            ├── Subscript
                            │   ├── Name
                            │   │   └── Load
                            │   ├── Slice
                            │   │   ├── Constant
                            │   │   └── Constant
                            │   └── Load
                            └── BoolOp
                                ├── Or
                                ├── Compare
                                │   ├── BinOp
                                │   │   ├── Name
                                │   │   │   └── Load
                                │   │   ├── Mod
                                │   │   └── Constant
                                │   ├── Eq
                                │   └── Constant
                                └── Compare
                                    ├── BinOp
                                    │   ├── Name
                                    │   │   └── Load
                                    │   ├── Mod
                                    │   └── Constant
                                    ├── Eq
                                    └── Constant
