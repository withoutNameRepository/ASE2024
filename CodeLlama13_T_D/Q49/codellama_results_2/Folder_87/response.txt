```python
def if_decimal_is_divisible(binary_repr: str) -> bool:
    fibonacci = [0, 1]
    for i in range(2, 181):
        fibonacci.append(fibonacci[i-1] + fibonacci[i-2])
    decimal = int(binary_repr, 2)
    return decimal % fibonacci[180] == 0
```
This code defines a function called `if_decimal_is_divisible` that takes a binary representation string of a non-negative decimal integer as its only argument. The function returns `True` if the decimal integer corresponding to the given binary representation is divisible by the 180th number in the Fibonacci sequence, and `False` otherwise.

To calculate the 180th number in the Fibonacci sequence, the code first defines a list called `fibonacci` containing the first two numbers in the sequence (0 and 1). Then it loops through the remaining numbers in the sequence using a for loop and appends each new number to the end of the list.

Next, the function converts the binary representation string into an integer using the built-in `int()` function with a base of 2 (i.e., binary). This gives us the decimal representation of the number we're working with.

Finally, the code checks whether the decimal number is divisible by the 180th Fibonacci number using the modulo operator (`%`). If it is, the function returns `True`. Otherwise, it returns `False`.