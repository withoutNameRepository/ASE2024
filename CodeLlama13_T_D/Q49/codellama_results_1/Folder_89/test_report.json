{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests49_89_1.py::test_binary_of_two", "location": ["tests49_89_1.py", 11, "test_binary_of_two"], "keywords": {"test_binary_of_two": 1, "tests49_89_1.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011861600796692073, "start": 1700332623.8654327, "stop": 1700332623.865552, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e62a1b425c514aeeb12031a420f77c1f", "node": "<WorkerController gw1>"}
{"nodeid": "tests49_89_1.py::test_binary_of_zero", "location": ["tests49_89_1.py", 3, "test_binary_of_zero"], "keywords": {"test_binary_of_zero": 1, "tests49_89_1.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015516098937951028, "start": 1700332623.8654826, "stop": 1700332623.8656385, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e62a1b425c514aeeb12031a420f77c1f", "node": "<WorkerController gw0>"}
{"nodeid": "tests49_89_1.py::test_binary_of_two", "location": ["tests49_89_1.py", 11, "test_binary_of_two"], "keywords": {"test_binary_of_two": 1, "tests49_89_1.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q49/codellama_results_1/Folder_89/generated_answer.py", "lineno": 7, "message": "IndexError: list index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_binary_of_two():", "        if 126 == 4:", "            assert if_decimal_is_divisible('10')", "        else:", ">           assert not if_decimal_is_divisible('10')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q49/codellama_results_1/Folder_89/tests49_89_1.py", "lineno": 16, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_decimal_is_divisible(binary_string):", "        binary = int(binary_string, 2)", "        fibonacci = [0, 1]", "        while len(fibonacci) <= binary:", "            fibonacci.append(fibonacci[-1] + fibonacci[-2])", ">       return binary % fibonacci[126] == 0", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["binary_string", "'10'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q49/codellama_results_1/Folder_89/generated_answer.py", "lineno": 7, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_binary_of_two():", "        if 126 == 4:", "            assert if_decimal_is_divisible('10')", "        else:", ">           assert not if_decimal_is_divisible('10')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q49/codellama_results_1/Folder_89/tests49_89_1.py", "lineno": 16, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_decimal_is_divisible(binary_string):", "        binary = int(binary_string, 2)", "        fibonacci = [0, 1]", "        while len(fibonacci) <= binary:", "            fibonacci.append(fibonacci[-1] + fibonacci[-2])", ">       return binary % fibonacci[126] == 0", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["binary_string", "'10'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q49/codellama_results_1/Folder_89/generated_answer.py", "lineno": 7, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q49/codellama_results_1/Folder_89/generated_answer.py", "lineno": 7, "message": "IndexError: list index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010635802755132318, "start": 1700332623.865732, "stop": 1700332623.8658385, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e62a1b425c514aeeb12031a420f77c1f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
