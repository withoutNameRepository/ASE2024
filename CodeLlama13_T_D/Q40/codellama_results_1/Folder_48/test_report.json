{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_48_1.py::test_if_result_is_sorted", "location": ["tests40_48_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.142400813288987e-05, "start": 1700329205.7952006, "stop": 1700329205.7952924, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_strings_of_size_equal_to_12", "location": ["tests40_48_1.py", 5, "test_strings_of_size_equal_to_12"], "keywords": {"test_strings_of_size_equal_to_12": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001092790043912828, "start": 1700329205.795229, "stop": 1700329205.7953389, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_48_1.py::test_if_result_is_sorted", "location": ["tests40_48_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010335599654354155, "start": 1700329205.7954445, "stop": 1700329205.7955482, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_if_result_is_sorted", "location": ["tests40_48_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9165002312511206e-05, "start": 1700329205.795719, "stop": 1700329205.7957783, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_if_result_contains_highest_chars", "location": ["tests40_48_1.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.8330013416707516e-05, "start": 1700329205.7960236, "stop": 1700329205.7960823, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_if_result_contains_highest_chars", "location": ["tests40_48_1.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.41749894991517e-05, "start": 1700329205.7961605, "stop": 1700329205.7962549, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_if_result_contains_highest_chars", "location": ["tests40_48_1.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.357898771762848e-05, "start": 1700329205.7963948, "stop": 1700329205.7964487, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_48_1.py::test_strings_of_size_equal_to_12", "location": ["tests40_48_1.py", 5, "test_strings_of_size_equal_to_12"], "keywords": {"test_strings_of_size_equal_to_12": 1, "tests40_48_1.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_1/Folder_48/tests40_48_1.py", "lineno": 10, "message": "AssertionError: assert ['0', '0', '0...'0', '0', ...] == ['0', '2', '8...'>', 'D', ...]\n  At index 1 diff: '0' != '2'\n  Full diff:\n  - ['0', '2', '8', ';', '>', 'D', 'E', 'g', 'o', 's', 'y', '|']\n  ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^\n  + ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']\n  ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_12():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=12))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['0', '0', '0...'0', '0', ...] == ['0', '2', '8...'>', 'D', ...]", "E             At index 1 diff: '0' != '2'", "E             Full diff:", "E             - ['0', '2', '8', ';', '>', 'D', 'E', 'g', 'o', 's', 'y', '|']", "E             ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^", "E             + ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']", "E             ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_1/Folder_48/tests40_48_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_12():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=12))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['0', '0', '0...'0', '0', ...] == ['0', '2', '8...'>', 'D', ...]", "E             At index 1 diff: '0' != '2'", "E             Full diff:", "E             - ['0', '2', '8', ';', '>', 'D', 'E', 'g', 'o', 's', 'y', '|']", "E             ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^", "E             + ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']", "E             ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_1/Folder_48/tests40_48_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_1/Folder_48/tests40_48_1.py", "lineno": 10, "message": "AssertionError: assert ['0', '0', '0...'0', '0', ...] == ['0', '2', '8...'>', 'D', ...]\n  At index 1 diff: '0' != '2'\n  Full diff:\n  - ['0', '2', '8', ';', '>', 'D', 'E', 'g', 'o', 's', 'y', '|']\n  ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^\n  + ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']\n  ?        ^    ^    ^    ^    ^    ^    ^    ^    ^    ^    ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006603059882763773, "start": 1700329205.7955112, "stop": 1700329205.7961721, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e5ada3e696c4a07abcbdd3cd0666ea8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
