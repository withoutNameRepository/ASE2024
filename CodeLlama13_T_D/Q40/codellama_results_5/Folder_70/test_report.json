{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_70_5.py::test_if_result_is_sorted", "location": ["tests40_70_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012478698045015335, "start": 1700329679.791692, "stop": 1700329679.7918172, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d808846158754927b0270096f9579ff6", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_5.py::test_strings_of_size_equal_to_2", "location": ["tests40_70_5.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001391640107613057, "start": 1700329679.791854, "stop": 1700329679.7919936, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d808846158754927b0270096f9579ff6", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_70_5.py::test_strings_of_size_equal_to_2", "location": ["tests40_70_5.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_70_5.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_5/Folder_70/tests40_70_5.py", "lineno": 12, "message": "AssertionError: assert ['F', 'i'] == ['i', 'F']\n  At index 0 diff: 'F' != 'i'\n  Full diff:\n  - ['i', 'F']\n  + ['F', 'i']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['F', 'i'] == ['i', 'F']", "E             At index 0 diff: 'F' != 'i'", "E             Full diff:", "E             - ['i', 'F']", "E             + ['F', 'i']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_5/Folder_70/tests40_70_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['F', 'i'] == ['i', 'F']", "E             At index 0 diff: 'F' != 'i'", "E             Full diff:", "E             - ['i', 'F']", "E             + ['F', 'i']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_5/Folder_70/tests40_70_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_5/Folder_70/tests40_70_5.py", "lineno": 12, "message": "AssertionError: assert ['F', 'i'] == ['i', 'F']\n  At index 0 diff: 'F' != 'i'\n  Full diff:\n  - ['i', 'F']\n  + ['F', 'i']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003280279925093055, "start": 1700329679.7921963, "stop": 1700329679.7925248, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d808846158754927b0270096f9579ff6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
