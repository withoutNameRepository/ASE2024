{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_76_4.py::test_if_result_is_sorted", "location": ["tests40_76_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_76_4.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.892199886962771e-05, "start": 1700329551.7512934, "stop": 1700329551.751393, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6c9ef446907d4737aad61d1cf21b64f5", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_76_4.py::test_strings_of_size_equal_to_3", "location": ["tests40_76_4.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests40_76_4.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014205698971636593, "start": 1700329551.7513897, "stop": 1700329551.7515326, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6c9ef446907d4737aad61d1cf21b64f5", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_76_4.py::test_if_result_is_sorted", "location": ["tests40_76_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_76_4.py": 1, "Folder_76": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_4/Folder_76/tests40_76_4.py", "lineno": 28, "message": "AssertionError: assert ['$', '.', 'C'] == ['C', '.', '$']\n  At index 0 diff: '$' != 'C'\n  Full diff:\n  - ['C', '.', '$']\n  ?   ^         ^\n  + ['$', '.', 'C']\n  ?   ^         ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['$', '.', 'C'] == ['C', '.', '$']", "E             At index 0 diff: '$' != 'C'", "E             Full diff:", "E             - ['C', '.', '$']", "E             ?   ^         ^", "E             + ['$', '.', 'C']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_4/Folder_76/tests40_76_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['$', '.', 'C'] == ['C', '.', '$']", "E             At index 0 diff: '$' != 'C'", "E             Full diff:", "E             - ['C', '.', '$']", "E             ?   ^         ^", "E             + ['$', '.', 'C']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_4/Folder_76/tests40_76_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_4/Folder_76/tests40_76_4.py", "lineno": 28, "message": "AssertionError: assert ['$', '.', 'C'] == ['C', '.', '$']\n  At index 0 diff: '$' != 'C'\n  Full diff:\n  - ['C', '.', '$']\n  ?   ^         ^\n  + ['$', '.', 'C']\n  ?   ^         ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00034197900095023215, "start": 1700329551.751588, "stop": 1700329551.7519305, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6c9ef446907d4737aad61d1cf21b64f5", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
