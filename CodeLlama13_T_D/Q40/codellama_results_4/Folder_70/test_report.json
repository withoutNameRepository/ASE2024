{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_70_4.py::test_if_result_is_sorted", "location": ["tests40_70_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001032110012602061, "start": 1700329543.5936215, "stop": 1700329543.593725, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "54fd870218f44a7bb5c2d3c60ca3453b", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_4.py::test_strings_of_size_equal_to_2", "location": ["tests40_70_4.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013167300494387746, "start": 1700329543.5938377, "stop": 1700329543.59397, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "54fd870218f44a7bb5c2d3c60ca3453b", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_70_4.py::test_if_result_is_sorted", "location": ["tests40_70_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_4.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_4/Folder_70/tests40_70_4.py", "lineno": 28, "message": "AssertionError: assert ['/', '1'] == ['1', '/']\n  At index 0 diff: '/' != '1'\n  Full diff:\n  - ['1', '/']\n  + ['/', '1']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['/', '1'] == ['1', '/']", "E             At index 0 diff: '/' != '1'", "E             Full diff:", "E             - ['1', '/']", "E             + ['/', '1']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_4/Folder_70/tests40_70_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['/', '1'] == ['1', '/']", "E             At index 0 diff: '/' != '1'", "E             Full diff:", "E             - ['1', '/']", "E             + ['/', '1']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_4/Folder_70/tests40_70_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_4/Folder_70/tests40_70_4.py", "lineno": 28, "message": "AssertionError: assert ['/', '1'] == ['1', '/']\n  At index 0 diff: '/' != '1'\n  Full diff:\n  - ['1', '/']\n  + ['/', '1']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003004800237249583, "start": 1700329543.5938911, "stop": 1700329543.594192, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "54fd870218f44a7bb5c2d3c60ca3453b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
