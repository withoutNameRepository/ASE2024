{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_1_2.py::test_if_result_is_sorted", "location": ["tests40_1_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_1_2.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010527399717830122, "start": 1700329249.4589176, "stop": 1700329249.4590235, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "055d87ca8d8f40b9b00c44f071fee8a7", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_1_2.py::test_strings_of_size_equal_to_11", "location": ["tests40_1_2.py", 5, "test_strings_of_size_equal_to_11"], "keywords": {"test_strings_of_size_equal_to_11": 1, "tests40_1_2.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001306109770666808, "start": 1700329249.4591024, "stop": 1700329249.4592338, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "055d87ca8d8f40b9b00c44f071fee8a7", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_1_2.py::test_if_result_is_sorted", "location": ["tests40_1_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_1_2.py": 1, "Folder_1": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_2/Folder_1/tests40_1_2.py", "lineno": 28, "message": "AssertionError: assert ['*', '.', '0...'F', 'K', ...] == ['k', 'e', ']...'P', 'K', ...]\n  At index 0 diff: '*' != 'k'\n  Full diff:\n  - ['k', 'e', ']', 'W', 'P', 'K', 'F', ':', '0', '.', '*']\n  + ['*', '.', '0', ':', 'F', 'K', 'P', 'W', ']', 'e', 'k']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['*', '.', '0...'F', 'K', ...] == ['k', 'e', ']...'P', 'K', ...]", "E             At index 0 diff: '*' != 'k'", "E             Full diff:", "E             - ['k', 'e', ']', 'W', 'P', 'K', 'F', ':', '0', '.', '*']", "E             + ['*', '.', '0', ':', 'F', 'K', 'P', 'W', ']', 'e', 'k']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_1/tests40_1_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['*', '.', '0...'F', 'K', ...] == ['k', 'e', ']...'P', 'K', ...]", "E             At index 0 diff: '*' != 'k'", "E             Full diff:", "E             - ['k', 'e', ']', 'W', 'P', 'K', 'F', ':', '0', '.', '*']", "E             + ['*', '.', '0', ':', 'F', 'K', 'P', 'W', ']', 'e', 'k']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_1/tests40_1_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_2/Folder_1/tests40_1_2.py", "lineno": 28, "message": "AssertionError: assert ['*', '.', '0...'F', 'K', ...] == ['k', 'e', ']...'P', 'K', ...]\n  At index 0 diff: '*' != 'k'\n  Full diff:\n  - ['k', 'e', ']', 'W', 'P', 'K', 'F', ':', '0', '.', '*']\n  + ['*', '.', '0', ':', 'F', 'K', 'P', 'W', ']', 'e', 'k']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004599670064635575, "start": 1700329249.4592006, "stop": 1700329249.4596608, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "055d87ca8d8f40b9b00c44f071fee8a7", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
