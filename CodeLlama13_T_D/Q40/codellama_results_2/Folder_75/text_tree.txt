Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        ├── Assign
        │   ├── Name
        │   │   └── Store
        │   └── Dict
        ├── For
        │   ├── Name
        │   │   └── Store
        │   ├── Name
        │   │   └── Load
        │   └── If
        │       ├── Compare
        │       │   ├── Name
        │       │   │   └── Load
        │       │   ├── NotIn
        │       │   └── Name
        │       │       └── Load
        │       └── Assign
        │           ├── Subscript
        │           │   ├── Name
        │           │   │   └── Load
        │           │   ├── Name
        │           │   │   └── Load
        │           │   └── Store
        │           └── Call
        │               ├── Name
        │               │   └── Load
        │               └── Name
        │                   └── Load
        ├── Assign
        │   ├── Name
        │   │   └── Store
        │   └── Call
        │       ├── Name
        │       │   └── Load
        │       ├── Call
        │       │   └── Attribute
        │       │       ├── Name
        │       │       │   └── Load
        │       │       └── Load
        │       └── keyword
        │           └── Lambda
        │               ├── arguments
        │               │   └── arg
        │               └── Subscript
        │                   ├── Name
        │                   │   └── Load
        │                   ├── Constant
        │                   └── Load
        └── Return
            └── ListComp
                ├── Subscript
                │   ├── Name
                │   │   └── Load
                │   ├── Constant
                │   └── Load
                └── comprehension
                    ├── Name
                    │   └── Store
                    └── Subscript
                        ├── Name
                        │   └── Load
                        ├── Slice
                        │   └── Constant
                        └── Load
