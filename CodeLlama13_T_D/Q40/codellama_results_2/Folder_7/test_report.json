{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_7_2.py::test_strings_of_size_equal_to_49", "location": ["tests40_7_2.py", 5, "test_strings_of_size_equal_to_49"], "keywords": {"test_strings_of_size_equal_to_49": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001390069955959916, "start": 1700329253.8833714, "stop": 1700329253.883511, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_7_2.py::test_if_result_is_sorted", "location": ["tests40_7_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011284498032182455, "start": 1700329253.8833, "stop": 1700329253.8834136, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_7_2.py::test_if_result_is_sorted", "location": ["tests40_7_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001271840010304004, "start": 1700329253.8835897, "stop": 1700329253.883717, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_7_2.py::test_if_result_is_sorted", "location": ["tests40_7_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.098800804466009e-05, "start": 1700329253.883896, "stop": 1700329253.8839574, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_7_2.py::test_if_result_contains_highest_chars", "location": ["tests40_7_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.293697515502572e-05, "start": 1700329253.8842142, "stop": 1700329253.8842776, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_7_2.py::test_strings_of_size_equal_to_49", "location": ["tests40_7_2.py", 5, "test_strings_of_size_equal_to_49"], "keywords": {"test_strings_of_size_equal_to_49": 1, "tests40_7_2.py": 1, "Folder_7": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q40/codellama_results_2/Folder_7/tests40_7_2.py", "lineno": 10, "message": "AssertionError: assert ['R', 'T', 'V...'Y', ']', ...] == ['!', '#', '%...'(', ',', ...]\n  At index 0 diff: 'R' != '!'\n  Full diff:\n    [\n  -  '!',\n  ?   ^\n  +  'R',\n  ?   ^...\n  \n  ...Full output truncated (97 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_49():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['R', 'T', 'V...'Y', ']', ...] == ['!', '#', '%...'(', ',', ...]", "E             At index 0 diff: 'R' != '!'", "E             Full diff:", "E               [", "E             -  '!',", "E             ?   ^", "E             +  'R',", "E             ?   ^...", "E             ", "E             ...Full output truncated (97 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_7/tests40_7_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_49():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['R', 'T', 'V...'Y', ']', ...] == ['!', '#', '%...'(', ',', ...]", "E             At index 0 diff: 'R' != '!'", "E             Full diff:", "E               [", "E             -  '!',", "E             ?   ^", "E             +  'R',", "E             ?   ^...", "E             ", "E             ...Full output truncated (97 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_7/tests40_7_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q40/codellama_results_2/Folder_7/tests40_7_2.py", "lineno": 10, "message": "AssertionError: assert ['R', 'T', 'V...'Y', ']', ...] == ['!', '#', '%...'(', ',', ...]\n  At index 0 diff: 'R' != '!'\n  Full diff:\n    [\n  -  '!',\n  ?   ^\n  +  'R',\n  ?   ^...\n  \n  ...Full output truncated (97 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009174190054181963, "start": 1700329253.883706, "stop": 1700329253.8846238, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1305ee0bcfa64f249a72fd5202cbaf88", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
