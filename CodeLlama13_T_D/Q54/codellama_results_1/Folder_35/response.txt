```
def all_right_truncatable_prime(numbers):
    x = numbers[177]
    primes = []
    for i in range(2, x+1):
        if is_prime(i) and is_right_truncatable(i):
            primes.append(i)
    return sorted(primes)
```
This function takes a tuple of positive integers as input and returns a list of all right-truncatable prime numbers less than the integer at index 177 in the tuple, sorted in ascending order. If there are no such prime numbers, an empty list is returned.

The `is_prime` function checks if the given number is a prime number and returns `True` if it is a prime number, otherwise `False`. The `is_right_truncatable` function checks if the given number is a right-truncatable prime number and returns `True` if it is a right-truncatable prime number, otherwise `False`.

The main logic of the function is to iterate over all numbers from 2 to x+1 and check if each number is a prime number and also a right-truncatable prime number. If both conditions are met, the number is added to the list of primes. Finally, the list of primes is sorted in ascending order and returned as the final output.