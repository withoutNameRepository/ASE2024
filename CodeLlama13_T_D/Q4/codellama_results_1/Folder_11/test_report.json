{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests4_11_1.py::test_even_range", "location": ["tests4_11_1.py", 15, "test_even_range"], "keywords": {"test_even_range": 1, "tests4_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001296359987463802, "start": 1700310982.7875962, "stop": 1700310982.7877264, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6969507224a04a99abae512b4b86e765", "node": "<WorkerController gw1>"}
{"nodeid": "tests4_11_1.py::test_large_range", "location": ["tests4_11_1.py", 3, "test_large_range"], "keywords": {"test_large_range": 1, "tests4_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014266101061366498, "start": 1700310982.7876427, "stop": 1700310982.7877858, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6969507224a04a99abae512b4b86e765", "node": "<WorkerController gw0>"}
{"nodeid": "tests4_11_1.py::test_large_range", "location": ["tests4_11_1.py", 3, "test_large_range"], "keywords": {"test_large_range": 1, "tests4_11_1.py": 1, "Folder_11": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q4/codellama_results_1/Folder_11/tests4_11_1.py", "lineno": 7, "message": "AssertionError: assert [16, 17, 18, 19, 20, 21, ...] == [17, 18, 19, 20, 21, 22, ...]\n  At index 0 diff: 16 != 17\n  Full diff:\n    [\n  +  16,\n     17,\n     18,\n     19,...\n  \n  ...Full output truncated (81 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = list(range(1, 99 + 1000))", "        expected_list = large_list[15 + 1:99]", ">       assert all_pos_ints_exclusive(large_list) == expected_list", "E       AssertionError: assert [16, 17, 18, 19, 20, 21, ...] == [17, 18, 19, 20, 21, 22, ...]", "E         At index 0 diff: 16 != 17", "E         Full diff:", "E           [", "E         +  16,", "E            17,", "E            18,", "E            19,...", "E         ", "E         ...Full output truncated (81 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q4/codellama_results_1/Folder_11/tests4_11_1.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = list(range(1, 99 + 1000))", "        expected_list = large_list[15 + 1:99]", ">       assert all_pos_ints_exclusive(large_list) == expected_list", "E       AssertionError: assert [16, 17, 18, 19, 20, 21, ...] == [17, 18, 19, 20, 21, 22, ...]", "E         At index 0 diff: 16 != 17", "E         Full diff:", "E           [", "E         +  16,", "E            17,", "E            18,", "E            19,...", "E         ", "E         ...Full output truncated (81 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q4/codellama_results_1/Folder_11/tests4_11_1.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q4/codellama_results_1/Folder_11/tests4_11_1.py", "lineno": 7, "message": "AssertionError: assert [16, 17, 18, 19, 20, 21, ...] == [17, 18, 19, 20, 21, 22, ...]\n  At index 0 diff: 16 != 17\n  Full diff:\n    [\n  +  16,\n     17,\n     18,\n     19,...\n  \n  ...Full output truncated (81 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005014670023228973, "start": 1700310982.78795, "stop": 1700310982.788452, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6969507224a04a99abae512b4b86e765", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
