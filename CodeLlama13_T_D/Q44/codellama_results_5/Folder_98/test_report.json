{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests44_98_5.py::test_list_of_non_prime_nums", "location": ["tests44_98_5.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_98_5.py": 1, "Folder_98": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010428400128148496, "start": 1700331171.3666053, "stop": 1700331171.36671, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c3c7bde93e0d4812b1cb923acec7142a", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_98_5.py::test_list_of_primes", "location": ["tests44_98_5.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_98_5.py": 1, "Folder_98": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014039099914953113, "start": 1700331171.366778, "stop": 1700331171.3669193, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c3c7bde93e0d4812b1cb923acec7142a", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_98_5.py::test_list_of_non_prime_nums", "location": ["tests44_98_5.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_98_5.py": 1, "Folder_98": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q44/codellama_results_5/Folder_98/tests44_98_5.py", "lineno": 19, "message": "assert {4, 6, 8, 12} == {4, 6, 8, 10, 12, 14, ...}\n  Extra items in the right set:\n  16\n  10\n  14\n  Full diff:\n  - {4, 6, 8, 10, 12, 14, 16}\n  + {8, 4, 12, 6}"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (6 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[0:6 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {4, 6, 8, 12} == {4, 6, 8, 10, 12, 14, ...}", "E             Extra items in the right set:", "E             16", "E             10", "E             14", "E             Full diff:", "E             - {4, 6, 8, 10, 12, 14, 16}", "E             + {8, 4, 12, 6}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_results_5/Folder_98/tests44_98_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (6 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[0:6 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {4, 6, 8, 12} == {4, 6, 8, 10, 12, 14, ...}", "E             Extra items in the right set:", "E             16", "E             10", "E             14", "E             Full diff:", "E             - {4, 6, 8, 10, 12, 14, 16}", "E             + {8, 4, 12, 6}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_results_5/Folder_98/tests44_98_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q44/codellama_results_5/Folder_98/tests44_98_5.py", "lineno": 19, "message": "assert {4, 6, 8, 12} == {4, 6, 8, 10, 12, 14, ...}\n  Extra items in the right set:\n  16\n  10\n  14\n  Full diff:\n  - {4, 6, 8, 10, 12, 14, 16}\n  + {8, 4, 12, 6}"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003117099986411631, "start": 1700331171.3668811, "stop": 1700331171.367193, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c3c7bde93e0d4812b1cb923acec7142a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
