{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests44_65_3.py::test_list_of_non_prime_nums", "location": ["tests44_65_3.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.497199789620936e-05, "start": 1700330980.6737707, "stop": 1700330980.673866, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "cbdb90304cb24bf3974c796a5d3c8060", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_65_3.py::test_list_of_primes", "location": ["tests44_65_3.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001321030140388757, "start": 1700330980.673871, "stop": 1700330980.674004, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cbdb90304cb24bf3974c796a5d3c8060", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_65_3.py::test_list_of_non_prime_nums", "location": ["tests44_65_3.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_65_3.py": 1, "Folder_65": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q44/codellama_results_3/Folder_65/tests44_65_3.py", "lineno": 19, "message": "assert {170, 174} == {168, 170, 172, 174, 176}\n  Extra items in the right set:\n  168\n  172\n  176\n  Full diff:\n  - {168, 170, 172, 174, 176}\n  + {170, 174}"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (86 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[82:86 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {170, 174} == {168, 170, 172, 174, 176}", "E             Extra items in the right set:", "E             168", "E             172", "E             176", "E             Full diff:", "E             - {168, 170, 172, 174, 176}", "E             + {170, 174}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_results_3/Folder_65/tests44_65_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (86 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[82:86 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {170, 174} == {168, 170, 172, 174, 176}", "E             Extra items in the right set:", "E             168", "E             172", "E             176", "E             Full diff:", "E             - {168, 170, 172, 174, 176}", "E             + {170, 174}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_results_3/Folder_65/tests44_65_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q44/codellama_results_3/Folder_65/tests44_65_3.py", "lineno": 19, "message": "assert {170, 174} == {168, 170, 172, 174, 176}\n  Extra items in the right set:\n  168\n  172\n  176\n  Full diff:\n  - {168, 170, 172, 174, 176}\n  + {170, 174}"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003050600062124431, "start": 1700330980.6740234, "stop": 1700330980.6743288, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "cbdb90304cb24bf3974c796a5d3c8060", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
