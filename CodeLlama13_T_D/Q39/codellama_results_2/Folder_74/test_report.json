{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_74_2.py::test_if_result_is_sorted", "location": ["tests39_74_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_2.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001590730098541826, "start": 1700328756.0429618, "stop": 1700328756.0431216, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1b56904761a2495aa962ce689dc7a455", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_74_2.py::test_strings_of_size_equal_to_5", "location": ["tests39_74_2.py", 5, "test_strings_of_size_equal_to_5"], "keywords": {"test_strings_of_size_equal_to_5": 1, "tests39_74_2.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017696598661132157, "start": 1700328756.043035, "stop": 1700328756.0432131, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1b56904761a2495aa962ce689dc7a455", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_74_2.py::test_if_result_is_sorted", "location": ["tests39_74_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_2.py": 1, "Folder_74": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_2/Folder_74/tests39_74_2.py", "lineno": 26, "message": "AssertionError: assert ['p', 'Q', 'I', 'E', ':'] == [':', 'E', 'I', 'Q', 'p']\n  At index 0 diff: 'p' != ':'\n  Full diff:\n  - [':', 'E', 'I', 'Q', 'p']\n  + ['p', 'Q', 'I', 'E', ':']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['p', 'Q', 'I', 'E', ':'] == [':', 'E', 'I', 'Q', 'p']", "E             At index 0 diff: 'p' != ':'", "E             Full diff:", "E             - [':', 'E', 'I', 'Q', 'p']", "E             + ['p', 'Q', 'I', 'E', ':']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_2/Folder_74/tests39_74_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['p', 'Q', 'I', 'E', ':'] == [':', 'E', 'I', 'Q', 'p']", "E             At index 0 diff: 'p' != ':'", "E             Full diff:", "E             - [':', 'E', 'I', 'Q', 'p']", "E             + ['p', 'Q', 'I', 'E', ':']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_2/Folder_74/tests39_74_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_2/Folder_74/tests39_74_2.py", "lineno": 26, "message": "AssertionError: assert ['p', 'Q', 'I', 'E', ':'] == [':', 'E', 'I', 'Q', 'p']\n  At index 0 diff: 'p' != ':'\n  Full diff:\n  - [':', 'E', 'I', 'Q', 'p']\n  + ['p', 'Q', 'I', 'E', ':']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000514749001013115, "start": 1700328756.0433738, "stop": 1700328756.043889, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1b56904761a2495aa962ce689dc7a455", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
