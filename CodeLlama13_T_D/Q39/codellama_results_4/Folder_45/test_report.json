{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_45_4.py::test_if_result_is_sorted", "location": ["tests39_45_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_45_4.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.714800398796797e-05, "start": 1700328937.8351524, "stop": 1700328937.83525, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "41b56431fa14452c8aee9cf607827674", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_45_4.py::test_strings_of_size_equal_to_52", "location": ["tests39_45_4.py", 5, "test_strings_of_size_equal_to_52"], "keywords": {"test_strings_of_size_equal_to_52": 1, "tests39_45_4.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015092399553395808, "start": 1700328937.8352432, "stop": 1700328937.8353949, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "41b56431fa14452c8aee9cf607827674", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_45_4.py::test_if_result_is_sorted", "location": ["tests39_45_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_45_4.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_4/Folder_45/tests39_45_4.py", "lineno": 26, "message": "AssertionError: assert '~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!' == ['!', '&', ')', '*', '+', '-', ...]\n +  where ['!', '&', ')', '*', '+', '-', ...] = sorted('~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!' == ['!', '&', ')', '*', '+', '-', ...]", "E            +  where ['!', '&', ')', '*', '+', '-', ...] = sorted('~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_4/Folder_45/tests39_45_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!' == ['!', '&', ')', '*', '+', '-', ...]", "E            +  where ['!', '&', ')', '*', '+', '-', ...] = sorted('~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_4/Folder_45/tests39_45_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_4/Folder_45/tests39_45_4.py", "lineno": 26, "message": "AssertionError: assert '~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!' == ['!', '&', ')', '*', '+', '-', ...]\n +  where ['!', '&', ')', '*', '+', '-', ...] = sorted('~{zyxwvutonmkjgfb_^ZXWVTSRNMLKJIHCBA>=;:75431.-+*)&!')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021443402511067688, "start": 1700328937.835437, "stop": 1700328937.8356519, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "41b56431fa14452c8aee9cf607827674", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
