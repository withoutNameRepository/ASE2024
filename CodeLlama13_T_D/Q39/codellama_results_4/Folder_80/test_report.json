{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_80_4.py::test_if_result_is_sorted", "location": ["tests39_80_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_4.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000113440997665748, "start": 1700328980.633343, "stop": 1700328980.6334572, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a0e3d3289e0c45a9b6081dd04de2a6ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_4.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_4.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_4.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014994500088505447, "start": 1700328980.6334195, "stop": 1700328980.6335702, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a0e3d3289e0c45a9b6081dd04de2a6ea", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_80_4.py::test_if_result_is_sorted", "location": ["tests39_80_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_4.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_4/Folder_80/tests39_80_4.py", "lineno": 26, "message": "AssertionError: assert '|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!' == ['!', '#', '&', '(', ')', '*', ...]\n +  where ['!', '#', '&', '(', ')', '*', ...] = sorted('|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!' == ['!', '#', '&', '(', ')', '*', ...]", "E            +  where ['!', '#', '&', '(', ')', '*', ...] = sorted('|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_4/Folder_80/tests39_80_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!' == ['!', '#', '&', '(', ')', '*', ...]", "E            +  where ['!', '#', '&', '(', ')', '*', ...] = sorted('|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_4/Folder_80/tests39_80_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_4/Folder_80/tests39_80_4.py", "lineno": 26, "message": "AssertionError: assert '|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!' == ['!', '#', '&', '(', ')', '*', ...]\n +  where ['!', '#', '&', '(', ')', '*', ...] = sorted('|wvtrqlkca_^[XVSPNMJIC>;5321+*)(&#!')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022506102686747909, "start": 1700328980.6336355, "stop": 1700328980.633861, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a0e3d3289e0c45a9b6081dd04de2a6ea", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
