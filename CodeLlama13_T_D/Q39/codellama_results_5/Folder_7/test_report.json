{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_7_5.py::test_if_result_is_sorted", "location": ["tests39_7_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_7_5.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011478998931124806, "start": 1700329014.9364593, "stop": 1700329014.9365747, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a958de7d13d54a70b1e960629051336c", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_7_5.py::test_strings_of_size_equal_to_49", "location": ["tests39_7_5.py", 5, "test_strings_of_size_equal_to_49"], "keywords": {"test_strings_of_size_equal_to_49": 1, "tests39_7_5.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015006298781372607, "start": 1700329014.9364903, "stop": 1700329014.9366415, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a958de7d13d54a70b1e960629051336c", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_7_5.py::test_if_result_is_sorted", "location": ["tests39_7_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_7_5.py": 1, "Folder_7": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_5/Folder_7/tests39_7_5.py", "lineno": 26, "message": "AssertionError: assert '{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!' == ['!', '#', '$', '*', '+', '-', ...]\n +  where ['!', '#', '$', '*', '+', '-', ...] = sorted('{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!' == ['!', '#', '$', '*', '+', '-', ...]", "E            +  where ['!', '#', '$', '*', '+', '-', ...] = sorted('{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_5/Folder_7/tests39_7_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!' == ['!', '#', '$', '*', '+', '-', ...]", "E            +  where ['!', '#', '$', '*', '+', '-', ...] = sorted('{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_5/Folder_7/tests39_7_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_5/Folder_7/tests39_7_5.py", "lineno": 26, "message": "AssertionError: assert '{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!' == ['!', '#', '$', '*', '+', '-', ...]\n +  where ['!', '#', '$', '*', '+', '-', ...] = sorted('{wvtsrqnmkfedcb_^]ZYWUSRQMLKIHGECA@>=984320-+*$#!')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021628401009365916, "start": 1700329014.9367437, "stop": 1700329014.9369602, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a958de7d13d54a70b1e960629051336c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
