{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012862501898780465, "start": 1700328853.5965037, "stop": 1700328853.5966332, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "89786ad47fb1494ca3543259c278b85c", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_3.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_3.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001733230019453913, "start": 1700328853.5964935, "stop": 1700328853.5966678, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "89786ad47fb1494ca3543259c278b85c", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['}', '{', 's...'d', '_', ...] == ['.', 'B', 'D...'L', 'O', ...]\n  At index 0 diff: '}' != '.'\n  Full diff:\n  - ['.', 'B', 'D', 'G', 'L', 'O', 'V', ']', '_', 'd', 'r', 's', '{', '}']\n  + ['}', '{', 's', 'r', 'd', '_', ']', 'V', 'O', 'L', 'G', 'D', 'B', '.']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['}', '{', 's...'d', '_', ...] == ['.', 'B', 'D...'L', 'O', ...]", "E             At index 0 diff: '}' != '.'", "E             Full diff:", "E             - ['.', 'B', 'D', 'G', 'L', 'O', 'V', ']', '_', 'd', 'r', 's', '{', '}']", "E             + ['}', '{', 's', 'r', 'd', '_', ']', 'V', 'O', 'L', 'G', 'D', 'B', '.']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['}', '{', 's...'d', '_', ...] == ['.', 'B', 'D...'L', 'O', ...]", "E             At index 0 diff: '}' != '.'", "E             Full diff:", "E             - ['.', 'B', 'D', 'G', 'L', 'O', 'V', ']', '_', 'd', 'r', 's', '{', '}']", "E             + ['}', '{', 's', 'r', 'd', '_', ']', 'V', 'O', 'L', 'G', 'D', 'B', '.']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['}', '{', 's...'d', '_', ...] == ['.', 'B', 'D...'L', 'O', ...]\n  At index 0 diff: '}' != '.'\n  Full diff:\n  - ['.', 'B', 'D', 'G', 'L', 'O', 'V', ']', '_', 'd', 'r', 's', '{', '}']\n  + ['}', '{', 's', 'r', 'd', '_', ']', 'V', 'O', 'L', 'G', 'D', 'B', '.']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004600810061674565, "start": 1700328853.5967984, "stop": 1700328853.5972593, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "89786ad47fb1494ca3543259c278b85c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
