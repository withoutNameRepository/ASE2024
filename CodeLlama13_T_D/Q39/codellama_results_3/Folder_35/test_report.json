{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_35_3.py::test_if_result_is_sorted", "location": ["tests39_35_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012092199176549911, "start": 1700328816.150086, "stop": 1700328816.1502073, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "60695c3b335a4d699d165972cd41484d", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_35_3.py::test_strings_of_size_equal_to_7", "location": ["tests39_35_3.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests39_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001048270205501467, "start": 1700328816.1501555, "stop": 1700328816.150261, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "60695c3b335a4d699d165972cd41484d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_35_3.py::test_strings_of_size_equal_to_7", "location": ["tests39_35_3.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests39_35_3.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_3/Folder_35/tests39_35_3.py", "lineno": 10, "message": "AssertionError: assert ['}', 'k', 'W...';', '2', ...] == ['!', '2', ';...'W', 'k', ...]\n  At index 0 diff: '}' != '!'\n  Full diff:\n  - ['!', '2', ';', 'H', 'W', 'k', '}']\n  + ['}', 'k', 'W', 'H', ';', '2', '!']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['}', 'k', 'W...';', '2', ...] == ['!', '2', ';...'W', 'k', ...]", "E             At index 0 diff: '}' != '!'", "E             Full diff:", "E             - ['!', '2', ';', 'H', 'W', 'k', '}']", "E             + ['}', 'k', 'W', 'H', ';', '2', '!']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_3/Folder_35/tests39_35_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['}', 'k', 'W...';', '2', ...] == ['!', '2', ';...'W', 'k', ...]", "E             At index 0 diff: '}' != '!'", "E             Full diff:", "E             - ['!', '2', ';', 'H', 'W', 'k', '}']", "E             + ['}', 'k', 'W', 'H', ';', '2', '!']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_3/Folder_35/tests39_35_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_3/Folder_35/tests39_35_3.py", "lineno": 10, "message": "AssertionError: assert ['}', 'k', 'W...';', '2', ...] == ['!', '2', ';...'W', 'k', ...]\n  At index 0 diff: '}' != '!'\n  Full diff:\n  - ['!', '2', ';', 'H', 'W', 'k', '}']\n  + ['}', 'k', 'W', 'H', ';', '2', '!']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035937398206442595, "start": 1700328816.150431, "stop": 1700328816.1507907, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "60695c3b335a4d699d165972cd41484d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
