{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_45_1.py::test_if_result_is_sorted", "location": ["tests39_45_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_45_1.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001340970047749579, "start": 1700328640.0478272, "stop": 1700328640.047962, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0ea576b1c9fb4893a9cb5020db244988", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_45_1.py::test_strings_of_size_equal_to_52", "location": ["tests39_45_1.py", 5, "test_strings_of_size_equal_to_52"], "keywords": {"test_strings_of_size_equal_to_52": 1, "tests39_45_1.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014466801076196134, "start": 1700328640.0478973, "stop": 1700328640.0480428, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0ea576b1c9fb4893a9cb5020db244988", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_45_1.py::test_if_result_is_sorted", "location": ["tests39_45_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_45_1.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_1/Folder_45/tests39_45_1.py", "lineno": 26, "message": "AssertionError: assert '}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!' == ['!', '#', '$', '%', '&', '(', ...]\n +  where ['!', '#', '$', '%', '&', '(', ...] = sorted('}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!' == ['!', '#', '$', '%', '&', '(', ...]", "E            +  where ['!', '#', '$', '%', '&', '(', ...] = sorted('}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_1/Folder_45/tests39_45_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!' == ['!', '#', '$', '%', '&', '(', ...]", "E            +  where ['!', '#', '$', '%', '&', '(', ...] = sorted('}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_1/Folder_45/tests39_45_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_1/Folder_45/tests39_45_1.py", "lineno": 26, "message": "AssertionError: assert '}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!' == ['!', '#', '$', '%', '&', '(', ...]\n +  where ['!', '#', '$', '%', '&', '(', ...] = sorted('}{zyxtsrqpnljifedcba_^]ZYVUNKHGFDBA?<7621/.,*)(&%$#!')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002407400170341134, "start": 1700328640.0481544, "stop": 1700328640.0483956, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0ea576b1c9fb4893a9cb5020db244988", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
