{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_63_1.py::test_if_result_is_sorted", "location": ["tests39_63_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010094398749060929, "start": 1700328656.7638545, "stop": 1700328656.7639556, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8ba8a309e9cd42b1b2dbc8386a47638b", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_63_1.py::test_strings_of_size_equal_to_44", "location": ["tests39_63_1.py", 5, "test_strings_of_size_equal_to_44"], "keywords": {"test_strings_of_size_equal_to_44": 1, "tests39_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018194699077866971, "start": 1700328656.7640557, "stop": 1700328656.7642386, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8ba8a309e9cd42b1b2dbc8386a47638b", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_63_1.py::test_if_result_is_sorted", "location": ["tests39_63_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q39/codellama_results_1/Folder_63/tests39_63_1.py", "lineno": 26, "message": "AssertionError: assert '(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~' == ['(', '+', '-', '2', '3', '4', ...]\n +  where ['(', '+', '-', '2', '3', '4', ...] = sorted('(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=44 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~' == ['(', '+', '-', '2', '3', '4', ...]", "E            +  where ['(', '+', '-', '2', '3', '4', ...] = sorted('(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_1/Folder_63/tests39_63_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=44 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~' == ['(', '+', '-', '2', '3', '4', ...]", "E            +  where ['(', '+', '-', '2', '3', '4', ...] = sorted('(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_1/Folder_63/tests39_63_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q39/codellama_results_1/Folder_63/tests39_63_1.py", "lineno": 26, "message": "AssertionError: assert '(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~' == ['(', '+', '-', '2', '3', '4', ...]\n +  where ['(', '+', '-', '2', '3', '4', ...] = sorted('(+-234:;=>?AFIJMOQRTUXYZ[]abdeghjlmnrstwx{}~')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002062179846689105, "start": 1700328656.76412, "stop": 1700328656.7643266, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8ba8a309e9cd42b1b2dbc8386a47638b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
