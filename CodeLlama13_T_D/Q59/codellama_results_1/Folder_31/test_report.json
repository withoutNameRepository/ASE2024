{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests59_31_1.py::test_list_of_all_one_digit_nums", "location": ["tests59_31_1.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011369300773367286, "start": 1700337130.7626572, "stop": 1700337130.7627714, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_31_1.py::test_if_result_is_less_than_50", "location": ["tests59_31_1.py", 34, "test_if_result_is_less_than_50"], "keywords": {"test_if_result_is_less_than_50": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011466298019513488, "start": 1700337130.7626922, "stop": 1700337130.7628074, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_if_result_is_less_than_50", "location": ["tests59_31_1.py", 34, "test_if_result_is_less_than_50"], "keywords": {"test_if_result_is_less_than_50": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003277250216342509, "start": 1700337130.7629995, "stop": 1700337130.7633278, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_if_result_is_less_than_50", "location": ["tests59_31_1.py", 34, "test_if_result_is_less_than_50"], "keywords": {"test_if_result_is_less_than_50": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.165102240629494e-05, "start": 1700337130.763522, "stop": 1700337130.7635837, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_if_result_order_is_correct", "location": ["tests59_31_1.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.239500362426043e-05, "start": 1700337130.7641647, "stop": 1700337130.7642274, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_if_result_order_is_correct", "location": ["tests59_31_1.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019493597210384905, "start": 1700337130.7643108, "stop": 1700337130.764506, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_if_result_order_is_correct", "location": ["tests59_31_1.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.903101944364607e-05, "start": 1700337130.7646487, "stop": 1700337130.764698, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_result_size_is_less_than_specified_number", "location": ["tests59_31_1.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.4728006944060326e-05, "start": 1700337130.765175, "stop": 1700337130.7652302, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_result_size_is_less_than_specified_number", "location": ["tests59_31_1.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00039782599196769297, "start": 1700337130.7653217, "stop": 1700337130.7657201, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_result_size_is_less_than_specified_number", "location": ["tests59_31_1.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.277100717648864e-05, "start": 1700337130.7658672, "stop": 1700337130.7659204, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_31_1.py::test_list_of_all_one_digit_nums", "location": ["tests59_31_1.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_31_1.py": 1, "Folder_31": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q59/codellama_results_1/Folder_31/tests59_31_1.py", "lineno": 9, "message": "assert not [2]\n +  where [2] = all_left_truncatable_prime((2, 2, 2, 2, 2, 2, ...))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (50 + 1)", "            if i <= 2:", ">               assert not all_left_truncatable_prime(input_list)", "E               assert not [2]", "E                +  where [2] = all_left_truncatable_prime((2, 2, 2, 2, 2, 2, ...))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codellama_results_1/Folder_31/tests59_31_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (50 + 1)", "            if i <= 2:", ">               assert not all_left_truncatable_prime(input_list)", "E               assert not [2]", "E                +  where [2] = all_left_truncatable_prime((2, 2, 2, 2, 2, 2, ...))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codellama_results_1/Folder_31/tests59_31_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q59/codellama_results_1/Folder_31/tests59_31_1.py", "lineno": 9, "message": "assert not [2]\n +  where [2] = all_left_truncatable_prime((2, 2, 2, 2, 2, 2, ...))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001701640139799565, "start": 1700337130.7629874, "stop": 1700337130.7631578, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb47bc04f443434789cf35ca720c628f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
