{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests50_17_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_17_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.636397589929402e-05, "start": 1700333449.529002, "stop": 1700333449.5290987, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_17_4.py::test_list_of_strings_of_length_two", "location": ["tests50_17_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013745800242759287, "start": 1700333449.5291295, "stop": 1700333449.5292675, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_17_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_17_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.044501348398626e-05, "start": 1700333449.529296, "stop": 1700333449.5293868, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_17_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_17_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.958802648819983e-05, "start": 1700333449.5295672, "stop": 1700333449.529627, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_17_4.py::test_list_of_anagrams_of_size_n", "location": ["tests50_17_4.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.9052021242678165e-05, "start": 1700333449.5301938, "stop": 1700333449.5302534, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_17_4.py::test_list_of_anagrams_of_size_n", "location": ["tests50_17_4.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_17_4.py": 1, "Folder_17": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q50/codellama_results_4/Folder_17/tests50_17_4.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 97 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 97 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/codellama_results_4/Folder_17/tests50_17_4.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 97 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 97 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/codellama_results_4/Folder_17/tests50_17_4.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q50/codellama_results_4/Folder_17/tests50_17_4.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012496797717176378, "start": 1700333449.5303352, "stop": 1700333449.5304606, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "c084404a7bf44bc9a8caf5758198ed0f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
