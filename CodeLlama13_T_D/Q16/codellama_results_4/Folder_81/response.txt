```python
def sum_even_ints_inclusive(my_list):
    return sum(filter(lambda x: x % 2 == 0, my_list[10:101]))
```
Here is the explanation of how this code works:

* `sum`: This is a built-in function in Python that takes an iterable (like a list) as input and returns its sum.
* `filter`: This is another built-in function in Python that takes a function (in this case, `lambda x: x % 2 == 0`) and an iterable (like a list) as inputs, and applies the function to each element of the iterable, returning only the elements for which the function returns `True`.
* `lambda`: This is a way of defining an anonymous function in Python. In this case, it takes one argument (`x`), and returns `True` if `x % 2 == 0`, or `False` otherwise.
* `[10:101]`: This is slicing the list, starting from index 10 (inclusive) to index 100 (exclusive).

Note that this code assumes that the input list is a list of integers. If it's not, you'll need to convert it to an integer before passing it to `sum`.