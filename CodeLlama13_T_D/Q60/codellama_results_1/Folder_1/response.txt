```
def all_left_right_truncatable_prime(nums):
    x = nums[20]
    left_truncatable_primes = []
    right_truncatable_primes = []
    for i in range(1, x+1):
        if is_left_truncatable_prime(i) and is_right_truncatable_prime(i):
            left_truncatable_primes.append(i)
            right_truncatable_primes.append(i)
    return sorted(set(left_truncatable_primes + right_truncatable_primes), reverse=True)
```
This function uses the `is_left_truncatable_prime` and `is_right_truncatable_prime` functions to check if a number is left-and-right truncatable prime. It then appends the numbers that are both left-and right-truncatable primes to the respective lists, and returns the sorted list of all left-and-right-truncatable primes.

The `is_left_truncatable_prime` function checks if a number is left truncatable prime by checking if it is a prime number and then removing the leading digit until it is a one- or two-digit prime. The `is_right_truncatable_prime` function does the same but for right truncatable primes, removing the last digit instead of the first digit.

The `sorted` function sorts the list of left and right truncatable primes in descending order, and the `set` function removes any duplicates in the list. Finally, the `reverse=True` parameter reverses the sorted list to be in descending order.