```
def all_left_right_truncatable_prime(x):
    primes = []
    for i in range(2, x+1):
        if is_prime(i) and not '0' in str(i):
            primes.append(i)
    
    left_truncatable_primes = []
    right_truncatable_primes = []
    for p in primes:
        if is_left_truncatable_prime(p, x):
            left_truncatable_primes.append(p)
        if is_right_truncatable_prime(p, x):
            right_truncatable_primes.append(p)
    
    return sorted(set(left_truncatable_primes).intersection(right_truncatable_primes), reverse=True)

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            return False
    return True

def is_left_truncatable_prime(p, x):
    while p > 9 and not is_prime(p%10):
        p = int(str(p)[:-1])
        if p <= x:
            break
    return is_prime(p)

def is_right_truncatable_prime(p, x):
    while p > 9 and not is_prime(p%10):
        p = int(str(p)[1:])
        if p <= x:
            break
    return is_prime(p)
```