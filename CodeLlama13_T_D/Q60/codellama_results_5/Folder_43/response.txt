```python
def all_left_right_truncatable_prime(numbers):
    result = []
    for number in numbers:
        if is_prime(number) and is_truncatable_prime(number):
            result.append(number)
    return sorted(result, reverse=True)

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def is_truncatable_prime(n):
    if not is_prime(n):
        return False
    for i in range(len(str(n)) - 1):
        if not is_prime(int(str(n)[:i])) or not is_prime(int(str(n)[i+1:])):
            return False
    return True
```