```python
def all_left_right_truncatable_prime(numbers):
    result = []
    for number in numbers:
        if is_left_and_right_truncatable_prime(number):
            result.append(number)
    return sorted(result, reverse=True)

def is_left_and_right_truncatable_prime(number):
    if number < 10:
        return False
    for i in range(1, len(str(number)) // 2 + 1):
        prefix = str(number)[:i]
        suffix = str(number)[-i:]
        if not is_prime(int(prefix)) or not is_prime(int(suffix)):
            return False
    return True

def is_prime(number):
    if number < 2:
        return False
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            return False
    return True
```