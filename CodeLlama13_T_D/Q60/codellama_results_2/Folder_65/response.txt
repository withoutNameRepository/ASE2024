```python
def all_left_right_truncatable_prime(x):
    primes = []
    for i in range(2, x+1):
        if is_prime(i) and not contains_zero(i) and can_be_truncated(i):
            primes.append(i)
    return sorted(primes)

def is_prime(n):
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            return False
    return True

def contains_zero(n):
    while n > 0:
        if n % 10 == 0:
            return True
        n //= 10
    return False

def can_be_truncated(n):
    if len(str(n)) <= 2:
        return False
    for i in range(1, len(str(n))-1):
        if not is_prime(int(str(n)[:i])) or not is_prime(int(str(n)[i+1:])):
            return False
    return True
```