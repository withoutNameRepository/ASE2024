```python
def all_left_right_truncatable_prime(tuple_of_positive_integers):
    # Initialize an empty list to store the left-and-right-truncatable prime numbers
    left_right_truncatable_primes = []
    
    # Iterate over the tuple of positive integers
    for i in range(len(tuple_of_positive_integers)):
        # Get the current integer and its string representation
        current_integer = tuple_of_positive_integers[i]
        current_string = str(current_integer)
        
        # Check if the current integer is a left-and-right-truncatable prime number
        if all_left_right_truncatable_prime_helper(current_string):
            # If it is, add it to the list of left-and-right-truncatable prime numbers
            left_right_truncatable_primes.append(current_integer)
    
    # Sort the list of left-and-right-truncatable prime numbers in descending order
    left_right_truncatable_primes.sort(reverse=True)
    
    # Return the list of left-and-right-truncatable prime numbers
    return left_right_truncatable_primes

def all_left_right_truncatable_prime_helper(current_string):
    # Check if the current string contains a 0
    if "0" in current_string:
        return False
    
    # Iterate over the characters of the current string, starting from the end
    for i in range(len(current_string) - 1, -1, -1):
        # Check if the substring of the current string up to the current index is a prime number
        if not is_prime(int(current_string[:i + 1])):
            return False
    
    # If all substrings up to the current index are prime numbers, the current string is a left-and-right-truncatable prime number
    return True

def is_prime(n):
    # Check if n is less than 2
    if n < 2:
        return False
    
    # Iterate over the integers from 2 to the square root of n, incrementing by 1
    for i in range(2, int(n ** 0.5) + 1):
        # Check if n is divisible by the current integer
        if n % i == 0:
            return False
    
    # If none of the integers from 2 to the square root of n divide n, it is a prime number
    return True
```