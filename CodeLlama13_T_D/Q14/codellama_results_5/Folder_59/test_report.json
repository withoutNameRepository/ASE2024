{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests14_59_5.py::test_unsorted_large_range", "location": ["tests14_59_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.396500536240637e-05, "start": 1700316517.1546266, "stop": 1700316517.1547208, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_59_5.py::test_smallest_is_in_range", "location": ["tests14_59_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012459399295039475, "start": 1700316517.1546516, "stop": 1700316517.1547768, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_smallest_is_in_range", "location": ["tests14_59_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010051298886537552, "start": 1700316517.1549602, "stop": 1700316517.155061, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_smallest_is_in_range", "location": ["tests14_59_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.053299875929952e-05, "start": 1700316517.1552453, "stop": 1700316517.1553066, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_large_range", "location": ["tests14_59_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013968799612484872, "start": 1700316517.1565542, "stop": 1700316517.156695, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_large_range", "location": ["tests14_59_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005260659963823855, "start": 1700316517.156859, "stop": 1700316517.1573858, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_large_range", "location": ["tests14_59_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010361301247030497, "start": 1700316517.157649, "stop": 1700316517.1577532, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_reversed_range", "location": ["tests14_59_5.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012289301957935095, "start": 1700316517.1587987, "stop": 1700316517.1589222, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_reversed_range", "location": ["tests14_59_5.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014347399701364338, "start": 1700316517.1590765, "stop": 1700316517.1592207, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_reversed_range", "location": ["tests14_59_5.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010743300663307309, "start": 1700316517.15948, "stop": 1700316517.159588, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_5.py::test_unsorted_large_range", "location": ["tests14_59_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_59_5.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q14/codellama_results_5/Folder_59/tests14_59_5.py", "lineno": 30, "message": "assert -999 == -937\n +  where -999 = find_second_smallest_num([-937, -132, -344, 398, 515, -971, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 9 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 9:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:9 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -937", "E            +  where -999 = find_second_smallest_num([-937, -132, -344, 398, 515, -971, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_5/Folder_59/tests14_59_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 9 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 9:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:9 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -937", "E            +  where -999 = find_second_smallest_num([-937, -132, -344, 398, 515, -971, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_5/Folder_59/tests14_59_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q14/codellama_results_5/Folder_59/tests14_59_5.py", "lineno": 30, "message": "assert -999 == -937\n +  where -999 = find_second_smallest_num([-937, -132, -344, 398, 515, -971, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006618679908569902, "start": 1700316517.1548774, "stop": 1700316517.1555398, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3ca7199af19443728a25aa67d75a0a1d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
