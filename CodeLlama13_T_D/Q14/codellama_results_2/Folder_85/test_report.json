{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests14_85_2.py::test_unsorted_large_range", "location": ["tests14_85_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.198501356877387e-05, "start": 1700316278.5944457, "stop": 1700316278.5945382, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_85_2.py::test_smallest_is_in_range", "location": ["tests14_85_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014067499432712793, "start": 1700316278.5945365, "stop": 1700316278.5946777, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_smallest_is_in_range", "location": ["tests14_85_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.924499318003654e-05, "start": 1700316278.594878, "stop": 1700316278.5949779, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_smallest_is_in_range", "location": ["tests14_85_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.945598240941763e-05, "start": 1700316278.5951867, "stop": 1700316278.5952466, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_large_range", "location": ["tests14_85_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.652799831703305e-05, "start": 1700316278.596076, "stop": 1700316278.596153, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_large_range", "location": ["tests14_85_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002463959972374141, "start": 1700316278.5962427, "stop": 1700316278.5964894, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_large_range", "location": ["tests14_85_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.2938004955649376e-05, "start": 1700316278.5966518, "stop": 1700316278.596705, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_reversed_range", "location": ["tests14_85_2.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.129699224606156e-05, "start": 1700316278.597624, "stop": 1700316278.5976958, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_reversed_range", "location": ["tests14_85_2.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.177100633271039e-05, "start": 1700316278.5977848, "stop": 1700316278.597857, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_reversed_range", "location": ["tests14_85_2.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.295197479426861e-05, "start": 1700316278.598001, "stop": 1700316278.5980542, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_85_2.py::test_unsorted_large_range", "location": ["tests14_85_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_85_2.py": 1, "Folder_85": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q14/codellama_results_2/Folder_85/tests14_85_2.py", "lineno": 30, "message": "assert -999 == -579\n +  where -999 = find_second_smallest_num([-16, 483, 295, -890, -140, -312, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 6 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 6:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:6 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -579", "E            +  where -999 = find_second_smallest_num([-16, 483, 295, -890, -140, -312, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_2/Folder_85/tests14_85_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 6 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 6:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:6 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -579", "E            +  where -999 = find_second_smallest_num([-16, 483, 295, -890, -140, -312, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_2/Folder_85/tests14_85_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q14/codellama_results_2/Folder_85/tests14_85_2.py", "lineno": 30, "message": "assert -999 == -579\n +  where -999 = find_second_smallest_num([-16, 483, 295, -890, -140, -312, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006731730245519429, "start": 1700316278.5947127, "stop": 1700316278.5953863, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "97398e5d8f814568ba1c3016c833c316", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
