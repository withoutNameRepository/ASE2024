{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests14_64_4.py::test_unsorted_large_range", "location": ["tests14_64_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011453600018285215, "start": 1700316426.9257383, "stop": 1700316426.9258533, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_64_4.py::test_smallest_is_in_range", "location": ["tests14_64_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016879901522770524, "start": 1700316426.925773, "stop": 1700316426.9259422, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_smallest_is_in_range", "location": ["tests14_64_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012852298095822334, "start": 1700316426.9261332, "stop": 1700316426.9262624, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_smallest_is_in_range", "location": ["tests14_64_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.332999328151345e-05, "start": 1700316426.9264781, "stop": 1700316426.9265418, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_large_range", "location": ["tests14_64_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.773400284349918e-05, "start": 1700316426.9275236, "stop": 1700316426.9276018, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_large_range", "location": ["tests14_64_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00031041199690662324, "start": 1700316426.9276936, "stop": 1700316426.9280043, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_large_range", "location": ["tests14_64_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.3552997997030616e-05, "start": 1700316426.9281616, "stop": 1700316426.9282155, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_reversed_range", "location": ["tests14_64_4.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.243300206027925e-05, "start": 1700316426.9288456, "stop": 1700316426.9289186, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_reversed_range", "location": ["tests14_64_4.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.763699977658689e-05, "start": 1700316426.9290068, "stop": 1700316426.929085, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_reversed_range", "location": ["tests14_64_4.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.126898759044707e-05, "start": 1700316426.9292297, "stop": 1700316426.9292812, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_64_4.py::test_unsorted_large_range", "location": ["tests14_64_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_64_4.py": 1, "Folder_64": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q14/codellama_results_4/Folder_64/tests14_64_4.py", "lineno": 30, "message": "assert -999 == -256\n +  where -999 = find_second_smallest_num([473, -299, -256, 38, 183, 208, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 4 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 4:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:4 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -256", "E            +  where -999 = find_second_smallest_num([473, -299, -256, 38, 183, 208, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_4/Folder_64/tests14_64_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 4 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 4:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:4 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -256", "E            +  where -999 = find_second_smallest_num([473, -299, -256, 38, 183, 208, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_4/Folder_64/tests14_64_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q14/codellama_results_4/Folder_64/tests14_64_4.py", "lineno": 30, "message": "assert -999 == -256\n +  where -999 = find_second_smallest_num([473, -299, -256, 38, 183, 208, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006038419960532337, "start": 1700316426.926053, "stop": 1700316426.9266572, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5cdbcfed3fe45858904931681b1bd18", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
