{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests14_92_1.py::test_unsorted_large_range", "location": ["tests14_92_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010971201118081808, "start": 1700316214.924327, "stop": 1700316214.924437, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017293999553658068, "start": 1700316214.9244149, "stop": 1700316214.924589, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014744201325811446, "start": 1700316214.9247885, "stop": 1700316214.9249363, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.010099943727255e-05, "start": 1700316214.9251504, "stop": 1700316214.9252212, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_large_range", "location": ["tests14_92_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.29410205874592e-05, "start": 1700316214.9263928, "stop": 1700316214.926456, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_large_range", "location": ["tests14_92_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011331599671393633, "start": 1700316214.9265366, "stop": 1700316214.9266503, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_large_range", "location": ["tests14_92_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.0462986109778285e-05, "start": 1700316214.9267945, "stop": 1700316214.9268456, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_reversed_range", "location": ["tests14_92_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.661501199938357e-05, "start": 1700316214.9274206, "stop": 1700316214.9274778, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_reversed_range", "location": ["tests14_92_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.543300696648657e-05, "start": 1700316214.9275537, "stop": 1700316214.9276192, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_reversed_range", "location": ["tests14_92_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.795700078830123e-05, "start": 1700316214.9277496, "stop": 1700316214.927798, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_unsorted_large_range", "location": ["tests14_92_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B/Q14/codellama_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "assert -999 == 429\n +  where -999 = find_second_smallest_num([429, -270, -564, -208, 430, 354, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 1 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 1:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:1 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == 429", "E            +  where -999 = find_second_smallest_num([429, -270, -564, -208, 430, 354, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 1 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 1:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:1 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == 429", "E            +  where -999 = find_second_smallest_num([429, -270, -564, -208, 430, 354, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B/Q14/codellama_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "assert -999 == 429\n +  where -999 = find_second_smallest_num([429, -270, -564, -208, 430, 354, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007186549773905426, "start": 1700316214.9246457, "stop": 1700316214.9253647, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fe2b18de525b4664b89554f2c8b17c63", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
