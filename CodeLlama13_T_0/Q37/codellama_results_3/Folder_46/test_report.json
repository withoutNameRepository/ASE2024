{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests37_46_3.py::test_compare_lengths_with_large_string", "location": ["tests37_46_3.py", 22, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011075800284743309, "start": 1700328852.1752326, "stop": 1700328852.1753442, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw1>"}
{"nodeid": "tests37_46_3.py::test_repeat_char", "location": ["tests37_46_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019146600970998406, "start": 1700328852.1754253, "stop": 1700328852.1756175, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw0>"}
{"nodeid": "tests37_46_3.py::test_compare_lengths_with_large_string", "location": ["tests37_46_3.py", 22, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014881689858157188, "start": 1700328852.17552, "stop": 1700328852.1770086, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw1>"}
{"nodeid": "tests37_46_3.py::test_compare_lengths_with_large_string", "location": ["tests37_46_3.py", 22, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.572200800292194e-05, "start": 1700328852.1772099, "stop": 1700328852.177276, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw1>"}
{"nodeid": "tests37_46_3.py::test_chars_not_in_range", "location": ["tests37_46_3.py", 27, "test_chars_not_in_range"], "keywords": {"test_chars_not_in_range": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.60570221953094e-05, "start": 1700328852.1779838, "stop": 1700328852.1780503, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw1>"}
{"nodeid": "tests37_46_3.py::test_chars_not_in_range", "location": ["tests37_46_3.py", 27, "test_chars_not_in_range"], "keywords": {"test_chars_not_in_range": 1, "tests37_46_3.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q37/codellama_results_3/Folder_46/generated_answer.py", "lineno": 5, "message": "IndexError: string index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_chars_not_in_range():", "        s = ''", "        given_range = list(range(ord('i'), ord('v') + 1))", "        for _ in range(72 + 10):", "            char = random.choice(string.ascii_letters + '$ % & * + < = > @ ')", "            if ord(char) not in given_range:", "                s += char", "    ", ">       assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q37/codellama_results_3/Folder_46/tests37_46_3.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", "        result = \"\"", "        for i in range(11, 73):", ">           if string[i].isalpha() and string[i] >= \"i\" and string[i] <= \"v\":", "E           IndexError: string index out of range"], "reprfuncargs": {"args": [["string", "'GL U h$fgAE HZAJZW  XMW  dZ@Q+ YV<TC Sc<WI$WafXf X D>aENT=wh ZN+y '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q37/codellama_results_3/Folder_46/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_chars_not_in_range():", "        s = ''", "        given_range = list(range(ord('i'), ord('v') + 1))", "        for _ in range(72 + 10):", "            char = random.choice(string.ascii_letters + '$ % & * + < = > @ ')", "            if ord(char) not in given_range:", "                s += char", "    ", ">       assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q37/codellama_results_3/Folder_46/tests37_46_3.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", "        result = \"\"", "        for i in range(11, 73):", ">           if string[i].isalpha() and string[i] >= \"i\" and string[i] <= \"v\":", "E           IndexError: string index out of range"], "reprfuncargs": {"args": [["string", "'GL U h$fgAE HZAJZW  XMW  dZ@Q+ YV<TC Sc<WI$WafXf X D>aENT=wh ZN+y '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q37/codellama_results_3/Folder_46/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q37/codellama_results_3/Folder_46/generated_answer.py", "lineno": 5, "message": "IndexError: string index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001117209903895855, "start": 1700328852.1781323, "stop": 1700328852.1782444, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "f245b4d1bcaa4387bdc4184e33431cf8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
