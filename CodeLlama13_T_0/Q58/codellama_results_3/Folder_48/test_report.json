{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_3.py::test_horizontal_matrix", "location": ["tests58_48_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012916201376356184, "start": 1700338448.4591863, "stop": 1700338448.459316, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013999399379827082, "start": 1700338448.459442, "stop": 1700338448.459583, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014211199595592916, "start": 1700338448.4597886, "stop": 1700338448.4599311, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.509502418339252e-05, "start": 1700338448.4601352, "stop": 1700338448.4602008, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.392300176434219e-05, "start": 1700338448.4604821, "stop": 1700338448.4605563, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  47],\\n        [ 49, -73],\\n        [-40,  47],\\n        [-90,  86],\\n        [-21,  98],\\n        [-57,  41],\\n        [-95,  46],\\n        [-48, -99],\\n        [-64,  82],\\n        [ 79,  65],\\n        [-58,  16],\\n        [ 92,  43],\\n        [ 37,  74],\\n        [ 37, -46],\\n        [-61,  74],\\n        [  9,  39],\\n        [ 69,  67],\\n        [  9, -21],\\n        [ 11, -35],\\n        [ 61,  30],\\n        [-59,  27],\\n        [ 60, -93],\\n        [-12, -16],\\n        [-27, -19],\\n        [ 79,   7],\\n        [ 97,  40],\\n        [ 71, -19],\\n        [ 96, -40],\\n        [-10,  48],\\n        [ 61,  44],\\n        [-31,  31],\\n        [ -2,  -4],\\n        [  8,  85],\\n        [100,  17],\\n        [ 67,  51],\\n        [-62,  -7],\\n        [-58,  13],\\n        [-58,  93],\\n        [-47, -18],\\n        [ 58,  85],\\n        [ 77,  81],\\n        [ 57,  31],\\n        [ -8, -27],\\n        [-91, -72],\\n        [ 14, -47],\\n        [-46,  57],\\n        [-99,  63],\\n        [ 54,  -5],\\n        [ 32,  73],\\n        [-91,  26],\\n        [ 36, -13],\\n        [ 80,  86],\\n        [-18, -13],\\n        [ 80,  23],\\n        [ 31,   6],\\n        [-90, -66],\\n        [ 26,   5],\\n        [ -6,  63],\\n        [ 74,  61],\\n        [-22, -98],\\n        [-14,  52],\\n        [-48,   6],\\n        [-20,  44],\\n        [-64,   6],\\n        [ 13,  65]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  47],\\n        [ 49, -73],\\n        [-40,  47],\\n        [-90,  86],\\n        [-21,  98],\\n        [-57,  41],\\n        [-95,  46],\\n        [-48, -99],\\n        [-64,  82],\\n        [ 79,  65],\\n        [-58,  16],\\n        [ 92,  43],\\n        [ 37,  74],\\n        [ 37, -46],\\n        [-61,  74],\\n        [  9,  39],\\n        [ 69,  67],\\n        [  9, -21],\\n        [ 11, -35],\\n        [ 61,  30],\\n        [-59,  27],\\n        [ 60, -93],\\n        [-12, -16],\\n        [-27, -19],\\n        [ 79,   7],\\n        [ 97,  40],\\n        [ 71, -19],\\n        [ 96, -40],\\n        [-10,  48],\\n        [ 61,  44],\\n        [-31,  31],\\n        [ -2,  -4],\\n        [  8,  85],\\n        [100,  17],\\n        [ 67,  51],\\n        [-62,  -7],\\n        [-58,  13],\\n        [-58,  93],\\n        [-47, -18],\\n        [ 58,  85],\\n        [ 77,  81],\\n        [ 57,  31],\\n        [ -8, -27],\\n        [-91, -72],\\n        [ 14, -47],\\n        [-46,  57],\\n        [-99,  63],\\n        [ 54,  -5],\\n        [ 32,  73],\\n        [-91,  26],\\n        [ 36, -13],\\n        [ 80,  86],\\n        [-18, -13],\\n        [ 80,  23],\\n        [ 31,   6],\\n        [-90, -66],\\n        [ 26,   5],\\n        [ -6,  63],\\n        [ 74,  61],\\n        [-22, -98],\\n        [-14,  52],\\n        [-48,   6],\\n        [-20,  44],\\n        [-64,   6],\\n        [ 13,  65]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  47],\\n        [ 49, -73],\\n        [-40,  47],\\n        [-90,  86],\\n        [-21,  98],\\n        [-57,  41],\\n        [-95,  46],\\n        [-48, -99],\\n        [-64,  82],\\n        [ 79,  65],\\n        [-58,  16],\\n        [ 92,  43],\\n        [ 37,  74],\\n        [ 37, -46],\\n        [-61,  74],\\n        [  9,  39],\\n        [ 69,  67],\\n        [  9, -21],\\n        [ 11, -35],\\n        [ 61,  30],\\n        [-59,  27],\\n        [ 60, -93],\\n        [-12, -16],\\n        [-27, -19],\\n        [ 79,   7],\\n        [ 97,  40],\\n        [ 71, -19],\\n        [ 96, -40],\\n        [-10,  48],\\n        [ 61,  44],\\n        [-31,  31],\\n        [ -2,  -4],\\n        [  8,  85],\\n        [100,  17],\\n        [ 67,  51],\\n        [-62,  -7],\\n        [-58,  13],\\n        [-58,  93],\\n        [-47, -18],\\n        [ 58,  85],\\n        [ 77,  81],\\n        [ 57,  31],\\n        [ -8, -27],\\n        [-91, -72],\\n        [ 14, -47],\\n        [-46,  57],\\n        [-99,  63],\\n        [ 54,  -5],\\n        [ 32,  73],\\n        [-91,  26],\\n        [ 36, -13],\\n        [ 80,  86],\\n        [-18, -13],\\n        [ 80,  23],\\n        [ 31,   6],\\n        [-90, -66],\\n        [ 26,   5],\\n        [ -6,  63],\\n        [ 74,  61],\\n        [-22, -98],\\n        [-14,  52],\\n        [-48,   6],\\n        [-20,  44],\\n        [-64,   6],\\n        [ 13,  65]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  47],\\n        [ 49, -73],\\n        [-40,  47],\\n        [-90,  86],\\n        [-21,  98],\\n        [-57,  41],\\n        [-95,  46],\\n        [-48, -99],\\n        [-64,  82],\\n        [ 79,  65],\\n        [-58,  16],\\n        [ 92,  43],\\n        [ 37,  74],\\n        [ 37, -46],\\n        [-61,  74],\\n        [  9,  39],\\n        [ 69,  67],\\n        [  9, -21],\\n        [ 11, -35],\\n        [ 61,  30],\\n        [-59,  27],\\n        [ 60, -93],\\n        [-12, -16],\\n        [-27, -19],\\n        [ 79,   7],\\n        [ 97,  40],\\n        [ 71, -19],\\n        [ 96, -40],\\n        [-10,  48],\\n        [ 61,  44],\\n        [-31,  31],\\n        [ -2,  -4],\\n        [  8,  85],\\n        [100,  17],\\n        [ 67,  51],\\n        [-62,  -7],\\n        [-58,  13],\\n        [-58,  93],\\n        [-47, -18],\\n        [ 58,  85],\\n        [ 77,  81],\\n        [ 57,  31],\\n        [ -8, -27],\\n        [-91, -72],\\n        [ 14, -47],\\n        [-46,  57],\\n        [-99,  63],\\n        [ 54,  -5],\\n        [ 32,  73],\\n        [-91,  26],\\n        [ 36, -13],\\n        [ 80,  86],\\n        [-18, -13],\\n        [ 80,  23],\\n        [ 31,   6],\\n        [-90, -66],\\n        [ 26,   5],\\n        [ -6,  63],\\n        [ 74,  61],\\n        [-22, -98],\\n        [-14,  52],\\n        [-48,   6],\\n        [-20,  44],\\n        [-64,   6],\\n        [ 13,  65]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006264279945753515, "start": 1700338448.4606395, "stop": 1700338448.4612665, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "a109854a265745e3ad291be4c8c68275", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
