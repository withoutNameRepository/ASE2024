{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 75,  78,   1,  40, -70,  17,  61, -45,  46, -44, -63, -57,  83,\\n         -53,  58,  -1,  68,  41, -24,  88, -26,  85, -38,  -7, -60,   2,\\n          39, -77,  65, -87, -57,  11,  70, -96,   8,   4, -13,  20,   2,\\n         -75,  91, -18, -84,  39,  18,  -8,  62,  22,  -2,  77, -30, -54,\\n         -62,  92, -50, -43, -37, -33, -77, -78, -19,  30,  81,  71,  50,\\n          37,  21, -56,  56, -89, -37,  24, -73, -77,  60,   0,  -1,  51,\\n         -25, -16, -99,   7,   3,  90,  31,  61, -10, -93,  70,  41,  77,\\n          -1, -74,  54, -37,  43,  65,   1,  62, -43, -16, -86, -97, -43,\\n         -94,  94,  52, -28, -89,  57,  22,  56, -74,  -7, -34, -20, -72,\\n         -30,  90,  55, -26,   0, -31,  84, -96, -89, -83, -49,   8, -39,\\n          10,  -3, -66,  11, -63, -89, -61,   2, -83, -92, -71,  75, -98,\\n          63, -83,  91, -24, -29,  50,  66,  -1, -14,  50, -53, -19,  34,\\n         -16, -74, -37,  34,  -4, -50,  70, -93, -96, -88,  31,  42, 100,\\n          85, -59,  51, -12, -97, -66,  91,  27,  82,  46]]))",
    0.00091
  ]
}