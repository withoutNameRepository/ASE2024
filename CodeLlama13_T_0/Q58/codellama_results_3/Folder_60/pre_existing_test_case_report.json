{
  "parameter(s)": [
    88
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,   20],\\n        [  38,   44],\\n        [ -71,  -41],\\n        [  58,  -33],\\n        [ -40,  -71],\\n        [ -65,  -66],\\n        [ -11,   58],\\n        [  23,   -3],\\n        [  90,  -53],\\n        [  73,  -78],\\n        [  87,   93],\\n        [ -58,    1],\\n        [  60,   38],\\n        [  26,   35],\\n        [  75,  -30],\\n        [ -71,   -8],\\n        [  62,   28],\\n        [ -40,  -43],\\n        [  10,    2],\\n        [   0,  -70],\\n        [  71,   -5],\\n        [ -36,   43],\\n        [ -96,  -31],\\n        [  49,  -36],\\n        [ -65,  -63],\\n        [ -81,   73],\\n        [ -16,  -78],\\n        [ -60,  -45],\\n        [ -27, -100],\\n        [ -78,  -84],\\n        [  79,   -2],\\n        [  44,  -62],\\n        [  65,    1],\\n        [ -47,  -44],\\n        [ -28,  -37],\\n        [ -12,  -21],\\n        [ -22,  -24],\\n        [  26,  -89],\\n        [  32,    0],\\n        [  17,    5],\\n        [ -63,  -37],\\n        [ -93,   -1],\\n        [   3,  -11],\\n        [  55,  -79]]))",
    0.00101
  ]
}