{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023226099438033998, "start": 1700338622.219184, "stop": 1700338622.2194169, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00031395701807923615, "start": 1700338622.219671, "stop": 1700338622.2199857, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020057900110259652, "start": 1700338622.2202637, "stop": 1700338622.2204647, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000508430995978415, "start": 1700338622.2208564, "stop": 1700338622.2213652, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_horizontal_matrix", "location": ["tests58_44_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002586310147307813, "start": 1700338622.2240984, "stop": 1700338622.2243576, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -72,   32,    8,   43,  -39,   96,  -12,   35,  -12,   68,\\n          -60,  -76,   54,   73,  100,  -49,  100,  -88, -100,  -97,\\n           64,  -69,  -89,   69,    8,  -54,  -99,  -48,   35,   88,\\n          -66,  -41,   87,  -36,   11,  -18,    2,  -19,  -18,   30,\\n           17,  -72,   46,  -23,   -8,   56,   65,    8,   81,  -57,\\n          -51,   16,  -13,   44,    2,  -30,  -38,   64,  -49,  -12,\\n           27,   76,  -46,   82,  -72,  -87,   32,  -44,   -1,   -9,\\n          -66,  -18,  -47,  -93,   27,   86,  -28,  -14,   31,  -34,\\n          -58,    7,    6,  -10,  -90,  -58,    7,   37,   51,   41,\\n           15,  -64,  -36,  -28,   43,   21,   30,  -44,  -99,   86,\\n           82,    7,  -33,   29,   50,   77,   61,  -82,    8,  -35,\\n           56,   70,  -78,  -82,   57,   84,  -85,   55,  -51,   -2,\\n          -71,  -17,   95,   16,  -15,   44,   62,   56,   17,   -5,\\n           95,    6,    7,   17,  -41,   88,   41,  -32,  -38,   85,\\n           27,  -68,   30,   16,    8,   -1,   51,  -16,   98,   31,\\n           38,   89,  -58,  -38,  -51,   58,   61,  -92,  -33,   57,\\n           49,   82,  -36,  -88,    3,    3,  -72,  -15,   95,   50,\\n          -87,   65,   -5,   29,   97,   20,   70,   77,   74,   35,\\n            6,   55,  -87,   86,  -67,  -68,  -47,   76,   49,   56,\\n          -55]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -72,   32,    8,   43,  -39,   96,  -12,   35,  -12,   68,\\n          -60,  -76,   54,   73,  100,  -49,  100,  -88, -100,  -97,\\n           64,  -69,  -89,   69,    8,  -54,  -99,  -48,   35,   88,\\n          -66,  -41,   87,  -36,   11,  -18,    2,  -19,  -18,   30,\\n           17,  -72,   46,  -23,   -8,   56,   65,    8,   81,  -57,\\n          -51,   16,  -13,   44,    2,  -30,  -38,   64,  -49,  -12,\\n           27,   76,  -46,   82,  -72,  -87,   32,  -44,   -1,   -9,\\n          -66,  -18,  -47,  -93,   27,   86,  -28,  -14,   31,  -34,\\n          -58,    7,    6,  -10,  -90,  -58,    7,   37,   51,   41,\\n           15,  -64,  -36,  -28,   43,   21,   30,  -44,  -99,   86,\\n           82,    7,  -33,   29,   50,   77,   61,  -82,    8,  -35,\\n           56,   70,  -78,  -82,   57,   84,  -85,   55,  -51,   -2,\\n          -71,  -17,   95,   16,  -15,   44,   62,   56,   17,   -5,\\n           95,    6,    7,   17,  -41,   88,   41,  -32,  -38,   85,\\n           27,  -68,   30,   16,    8,   -1,   51,  -16,   98,   31,\\n           38,   89,  -58,  -38,  -51,   58,   61,  -92,  -33,   57,\\n           49,   82,  -36,  -88,    3,    3,  -72,  -15,   95,   50,\\n          -87,   65,   -5,   29,   97,   20,   70,   77,   74,   35,\\n            6,   55,  -87,   86,  -67,  -68,  -47,   76,   49,   56,\\n          -55]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -72,   32,    8,   43,  -39,   96,  -12,   35,  -12,   68,\\n          -60,  -76,   54,   73,  100,  -49,  100,  -88, -100,  -97,\\n           64,  -69,  -89,   69,    8,  -54,  -99,  -48,   35,   88,\\n          -66,  -41,   87,  -36,   11,  -18,    2,  -19,  -18,   30,\\n           17,  -72,   46,  -23,   -8,   56,   65,    8,   81,  -57,\\n          -51,   16,  -13,   44,    2,  -30,  -38,   64,  -49,  -12,\\n           27,   76,  -46,   82,  -72,  -87,   32,  -44,   -1,   -9,\\n          -66,  -18,  -47,  -93,   27,   86,  -28,  -14,   31,  -34,\\n          -58,    7,    6,  -10,  -90,  -58,    7,   37,   51,   41,\\n           15,  -64,  -36,  -28,   43,   21,   30,  -44,  -99,   86,\\n           82,    7,  -33,   29,   50,   77,   61,  -82,    8,  -35,\\n           56,   70,  -78,  -82,   57,   84,  -85,   55,  -51,   -2,\\n          -71,  -17,   95,   16,  -15,   44,   62,   56,   17,   -5,\\n           95,    6,    7,   17,  -41,   88,   41,  -32,  -38,   85,\\n           27,  -68,   30,   16,    8,   -1,   51,  -16,   98,   31,\\n           38,   89,  -58,  -38,  -51,   58,   61,  -92,  -33,   57,\\n           49,   82,  -36,  -88,    3,    3,  -72,  -15,   95,   50,\\n          -87,   65,   -5,   29,   97,   20,   70,   77,   74,   35,\\n            6,   55,  -87,   86,  -67,  -68,  -47,   76,   49,   56,\\n          -55]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -72,   32,    8,   43,  -39,   96,  -12,   35,  -12,   68,\\n          -60,  -76,   54,   73,  100,  -49,  100,  -88, -100,  -97,\\n           64,  -69,  -89,   69,    8,  -54,  -99,  -48,   35,   88,\\n          -66,  -41,   87,  -36,   11,  -18,    2,  -19,  -18,   30,\\n           17,  -72,   46,  -23,   -8,   56,   65,    8,   81,  -57,\\n          -51,   16,  -13,   44,    2,  -30,  -38,   64,  -49,  -12,\\n           27,   76,  -46,   82,  -72,  -87,   32,  -44,   -1,   -9,\\n          -66,  -18,  -47,  -93,   27,   86,  -28,  -14,   31,  -34,\\n          -58,    7,    6,  -10,  -90,  -58,    7,   37,   51,   41,\\n           15,  -64,  -36,  -28,   43,   21,   30,  -44,  -99,   86,\\n           82,    7,  -33,   29,   50,   77,   61,  -82,    8,  -35,\\n           56,   70,  -78,  -82,   57,   84,  -85,   55,  -51,   -2,\\n          -71,  -17,   95,   16,  -15,   44,   62,   56,   17,   -5,\\n           95,    6,    7,   17,  -41,   88,   41,  -32,  -38,   85,\\n           27,  -68,   30,   16,    8,   -1,   51,  -16,   98,   31,\\n           38,   89,  -58,  -38,  -51,   58,   61,  -92,  -33,   57,\\n           49,   82,  -36,  -88,    3,    3,  -72,  -15,   95,   50,\\n          -87,   65,   -5,   29,   97,   20,   70,   77,   74,   35,\\n            6,   55,  -87,   86,  -67,  -68,  -47,   76,   49,   56,\\n          -55]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010793879919219762, "start": 1700338622.2214959, "stop": 1700338622.222576, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "641d6718f3374f4ca001ad1ecf796cd6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
