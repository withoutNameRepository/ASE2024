{
  "parameter(s)": [
    175
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-55, -42,  74,  -3,  98,  92, -29, -33, -12, -39, -68, -92,  48,\\n          46,  -6,  50, -78,   8,  67, -65,  73,  69,  95,  45,  26,  30,\\n          21, -69,  43,  54,  96, -99, -64, -48,  40,  10,  97, -48,   4,\\n          30, -86,  -5,  84,  10,  79,  52, -14,  79, -62, -76,  74,  -7,\\n          29,  19,  -2,  25,  18,  89, -64, -94,  13, -30, -67,  78,  52,\\n          49,   8,  36,  81, -94,  13, -87,  84,  43, -84, 100, -27,  35,\\n         -72, -59,   5, -54, -10,  47,  45,  80,  25,   2,  15, -95,  13,\\n         -62, -42,  15,  90,  13,  19, -17,  58,  82,  83,  33,  20, -89,\\n          36,  -3, -36, -57,  67, -70, -38, -30, -88, -63,  20, -73,  -7,\\n         -86, -49, -47, -94, -39,  39, -87, -47,  76,   4, -56, -56, -28,\\n          -8,  47, -10,  40, -28,   1,  -1, -83, -50,  85, -66,  90, -13,\\n         -64, 100, -92, -25,  89, -84,  79, -56, -34,  -7, -20,  38, -24,\\n          60, -29,  30, -48, -28, -81,  80,  95,  36,  29,  92, -42,  57,\\n          74,  36, -56, -85,  39,  76]]))",
    0.00083
  ]
}