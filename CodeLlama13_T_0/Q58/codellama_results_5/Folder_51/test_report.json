{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_51_5.py::test_horizontal_matrix", "location": ["tests58_51_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013429499813355505, "start": 1700338628.6007059, "stop": 1700338628.6008408, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017245399067178369, "start": 1700338628.6007948, "stop": 1700338628.6009684, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018010000349022448, "start": 1700338628.6012356, "stop": 1700338628.601416, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.280499605461955e-05, "start": 1700338628.6016939, "stop": 1700338628.601777, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_having_95_integers", "location": ["tests58_51_5.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.687499212101102e-05, "start": 1700338628.60216, "stop": 1700338628.6022475, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_having_95_integers", "location": ["tests58_51_5.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   8,   92,  -37,  -32,   56,  -39,   55,  -79,  -65,   37,\\n          -41,  -54,   41,  -88,  -18,  -56,   60,  -79,  -74,  -19,\\n           45,   44,  -37,   34,  -82,  -92,   37,   -2,   59,   32,\\n           76,   35,  -42,  -92,  -66,  -61,  -50, -100,  -77,   99,\\n          -64,  -44,  -46,  -60,  -96,  -93,  -61,   41,  -57,  100,\\n           73,   88,  -90,  -41,  -96,  -54,  -86,   75,   84,   35,\\n           40,  -53,  -91,  -79,   67,  -53,  -68,   53,  -79,  -95,\\n          -94,  -43,   22,   87,  -88,  -82,  -32,   16,  100,   47,\\n           35,   52,   82,  -39,   82,  -53,   88,   32,  -92,    3,\\n          -20,  -79,   16,  -89,   18]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   8,   92,  -37,  -32,   56,  -39,   55,  -79,  -65,   37,\\n          -41,  -54,   41,  -88,  -18,  -56,   60,  -79,  -74,  -19,\\n           45,   44,  -37,   34,  -82,  -92,   37,   -2,   59,   32,\\n           76,   35,  -42,  -92,  -66,  -61,  -50, -100,  -77,   99,\\n          -64,  -44,  -46,  -60,  -96,  -93,  -61,   41,  -57,  100,\\n           73,   88,  -90,  -41,  -96,  -54,  -86,   75,   84,   35,\\n           40,  -53,  -91,  -79,   67,  -53,  -68,   53,  -79,  -95,\\n          -94,  -43,   22,   87,  -88,  -82,  -32,   16,  100,   47,\\n           35,   52,   82,  -39,   82,  -53,   88,   32,  -92,    3,\\n          -20,  -79,   16,  -89,   18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   8,   92,  -37,  -32,   56,  -39,   55,  -79,  -65,   37,\\n          -41,  -54,   41,  -88,  -18,  -56,   60,  -79,  -74,  -19,\\n           45,   44,  -37,   34,  -82,  -92,   37,   -2,   59,   32,\\n           76,   35,  -42,  -92,  -66,  -61,  -50, -100,  -77,   99,\\n          -64,  -44,  -46,  -60,  -96,  -93,  -61,   41,  -57,  100,\\n           73,   88,  -90,  -41,  -96,  -54,  -86,   75,   84,   35,\\n           40,  -53,  -91,  -79,   67,  -53,  -68,   53,  -79,  -95,\\n          -94,  -43,   22,   87,  -88,  -82,  -32,   16,  100,   47,\\n           35,   52,   82,  -39,   82,  -53,   88,   32,  -92,    3,\\n          -20,  -79,   16,  -89,   18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   8,   92,  -37,  -32,   56,  -39,   55,  -79,  -65,   37,\\n          -41,  -54,   41,  -88,  -18,  -56,   60,  -79,  -74,  -19,\\n           45,   44,  -37,   34,  -82,  -92,   37,   -2,   59,   32,\\n           76,   35,  -42,  -92,  -66,  -61,  -50, -100,  -77,   99,\\n          -64,  -44,  -46,  -60,  -96,  -93,  -61,   41,  -57,  100,\\n           73,   88,  -90,  -41,  -96,  -54,  -86,   75,   84,   35,\\n           40,  -53,  -91,  -79,   67,  -53,  -68,   53,  -79,  -95,\\n          -94,  -43,   22,   87,  -88,  -82,  -32,   16,  100,   47,\\n           35,   52,   82,  -39,   82,  -53,   88,   32,  -92,    3,\\n          -20,  -79,   16,  -89,   18]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019075279997196048, "start": 1700338628.6023712, "stop": 1700338628.6042795, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2397ffc0a3a74c77adfb0be80e67dc57", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
