{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024861202109605074, "start": 1700338672.4962094, "stop": 1700338672.4964588, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033868200262077153, "start": 1700338672.4967468, "stop": 1700338672.497086, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002088049950543791, "start": 1700338672.4973922, "stop": 1700338672.4976013, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002623189939185977, "start": 1700338672.497999, "stop": 1700338672.4982615, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_horizontal_matrix", "location": ["tests58_97_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011762598296627402, "start": 1700338672.5057533, "stop": 1700338672.5058713, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -61,  -83],\\n        [  60,  100],\\n        [  94,   89],\\n        [  55,  -49],\\n        [ -82,  -97],\\n        [  30,   38],\\n        [   7,  -80],\\n        [  67,   55],\\n        [ -69,   28],\\n        [  83,   38],\\n        [  71,   99],\\n        [ -47,   29],\\n        [ -69,  -28],\\n        [ -58,    1],\\n        [  33,   27],\\n        [  60,  -56],\\n        [ -77,   32],\\n        [  58,  -39],\\n        [  28,   86],\\n        [   0,   32],\\n        [ -66,    6],\\n        [  47,  -56],\\n        [  59,  100],\\n        [ -79,    1],\\n        [ -61,  -45],\\n        [ -82,  -49],\\n        [ -78,  -73],\\n        [  58,   65],\\n        [ -30,   69],\\n        [  26,   67],\\n        [  39,  -71],\\n        [ -44,  -20],\\n        [  81,   83],\\n        [  37,   14],\\n        [ -56,  -61],\\n        [ -95,  -12],\\n        [  32,    7],\\n        [  -5,   63],\\n        [  11,   86],\\n        [ -62, -100],\\n        [ -71,  -99],\\n        [ -10,   23],\\n        [ -27,  -22],\\n        [  98,   40],\\n        [ -87,  -86],\\n        [  13,   62],\\n        [  48,  -60],\\n        [ -52,  -45],\\n        [  70,   73],\\n        [  22,   72],\\n        [ -71,   24],\\n        [  -8,   27],\\n        [ -45,  -69],\\n        [  18,   32],\\n        [  75,   -5],\\n        [ -70,  -24],\\n        [  56,  -45],\\n        [  -2,   71],\\n        [  32,   -4],\\n        [ -27,  -35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -61,  -83],\\n        [  60,  100],\\n        [  94,   89],\\n        [  55,  -49],\\n        [ -82,  -97],\\n        [  30,   38],\\n        [   7,  -80],\\n        [  67,   55],\\n        [ -69,   28],\\n        [  83,   38],\\n        [  71,   99],\\n        [ -47,   29],\\n        [ -69,  -28],\\n        [ -58,    1],\\n        [  33,   27],\\n        [  60,  -56],\\n        [ -77,   32],\\n        [  58,  -39],\\n        [  28,   86],\\n        [   0,   32],\\n        [ -66,    6],\\n        [  47,  -56],\\n        [  59,  100],\\n        [ -79,    1],\\n        [ -61,  -45],\\n        [ -82,  -49],\\n        [ -78,  -73],\\n        [  58,   65],\\n        [ -30,   69],\\n        [  26,   67],\\n        [  39,  -71],\\n        [ -44,  -20],\\n        [  81,   83],\\n        [  37,   14],\\n        [ -56,  -61],\\n        [ -95,  -12],\\n        [  32,    7],\\n        [  -5,   63],\\n        [  11,   86],\\n        [ -62, -100],\\n        [ -71,  -99],\\n        [ -10,   23],\\n        [ -27,  -22],\\n        [  98,   40],\\n        [ -87,  -86],\\n        [  13,   62],\\n        [  48,  -60],\\n        [ -52,  -45],\\n        [  70,   73],\\n        [  22,   72],\\n        [ -71,   24],\\n        [  -8,   27],\\n        [ -45,  -69],\\n        [  18,   32],\\n        [  75,   -5],\\n        [ -70,  -24],\\n        [  56,  -45],\\n        [  -2,   71],\\n        [  32,   -4],\\n        [ -27,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -61,  -83],\\n        [  60,  100],\\n        [  94,   89],\\n        [  55,  -49],\\n        [ -82,  -97],\\n        [  30,   38],\\n        [   7,  -80],\\n        [  67,   55],\\n        [ -69,   28],\\n        [  83,   38],\\n        [  71,   99],\\n        [ -47,   29],\\n        [ -69,  -28],\\n        [ -58,    1],\\n        [  33,   27],\\n        [  60,  -56],\\n        [ -77,   32],\\n        [  58,  -39],\\n        [  28,   86],\\n        [   0,   32],\\n        [ -66,    6],\\n        [  47,  -56],\\n        [  59,  100],\\n        [ -79,    1],\\n        [ -61,  -45],\\n        [ -82,  -49],\\n        [ -78,  -73],\\n        [  58,   65],\\n        [ -30,   69],\\n        [  26,   67],\\n        [  39,  -71],\\n        [ -44,  -20],\\n        [  81,   83],\\n        [  37,   14],\\n        [ -56,  -61],\\n        [ -95,  -12],\\n        [  32,    7],\\n        [  -5,   63],\\n        [  11,   86],\\n        [ -62, -100],\\n        [ -71,  -99],\\n        [ -10,   23],\\n        [ -27,  -22],\\n        [  98,   40],\\n        [ -87,  -86],\\n        [  13,   62],\\n        [  48,  -60],\\n        [ -52,  -45],\\n        [  70,   73],\\n        [  22,   72],\\n        [ -71,   24],\\n        [  -8,   27],\\n        [ -45,  -69],\\n        [  18,   32],\\n        [  75,   -5],\\n        [ -70,  -24],\\n        [  56,  -45],\\n        [  -2,   71],\\n        [  32,   -4],\\n        [ -27,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -61,  -83],\\n        [  60,  100],\\n        [  94,   89],\\n        [  55,  -49],\\n        [ -82,  -97],\\n        [  30,   38],\\n        [   7,  -80],\\n        [  67,   55],\\n        [ -69,   28],\\n        [  83,   38],\\n        [  71,   99],\\n        [ -47,   29],\\n        [ -69,  -28],\\n        [ -58,    1],\\n        [  33,   27],\\n        [  60,  -56],\\n        [ -77,   32],\\n        [  58,  -39],\\n        [  28,   86],\\n        [   0,   32],\\n        [ -66,    6],\\n        [  47,  -56],\\n        [  59,  100],\\n        [ -79,    1],\\n        [ -61,  -45],\\n        [ -82,  -49],\\n        [ -78,  -73],\\n        [  58,   65],\\n        [ -30,   69],\\n        [  26,   67],\\n        [  39,  -71],\\n        [ -44,  -20],\\n        [  81,   83],\\n        [  37,   14],\\n        [ -56,  -61],\\n        [ -95,  -12],\\n        [  32,    7],\\n        [  -5,   63],\\n        [  11,   86],\\n        [ -62, -100],\\n        [ -71,  -99],\\n        [ -10,   23],\\n        [ -27,  -22],\\n        [  98,   40],\\n        [ -87,  -86],\\n        [  13,   62],\\n        [  48,  -60],\\n        [ -52,  -45],\\n        [  70,   73],\\n        [  22,   72],\\n        [ -71,   24],\\n        [  -8,   27],\\n        [ -45,  -69],\\n        [  18,   32],\\n        [  75,   -5],\\n        [ -70,  -24],\\n        [  56,  -45],\\n        [  -2,   71],\\n        [  32,   -4],\\n        [ -27,  -35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010352199897170067, "start": 1700338672.4983933, "stop": 1700338672.4994292, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ccbefa0242534fc6b2ac95fc7c386ef4", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
