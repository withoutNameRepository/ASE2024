{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_5.py::test_horizontal_matrix", "location": ["tests58_6_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012307401630096138, "start": 1700338584.0094373, "stop": 1700338584.009561, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_5.py::test_matrix_of_one_integer", "location": ["tests58_6_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017141900025308132, "start": 1700338584.005973, "stop": 1700338584.0061452, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_5.py::test_matrix_of_one_integer", "location": ["tests58_6_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001817150041460991, "start": 1700338584.0064147, "stop": 1700338584.0065968, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_5.py::test_matrix_of_one_integer", "location": ["tests58_6_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.791498839855194e-05, "start": 1700338584.0068884, "stop": 1700338584.0069768, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_5.py::test_matrix_of_having_122_integers", "location": ["tests58_6_5.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.669900125823915e-05, "start": 1700338584.0073662, "stop": 1700338584.0074534, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_5.py::test_matrix_of_having_122_integers", "location": ["tests58_6_5.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_5.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_6/tests58_6_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -71,  -86],\\n        [ -73,  -41],\\n        [  95,   22],\\n        [  58,   -1],\\n        [  73,    0],\\n        [ -23,   93],\\n        [ -73,   65],\\n        [  91,   89],\\n        [ -45,   -3],\\n        [  79,   34],\\n        [ -45,   39],\\n        [  45,  -71],\\n        [  11,   25],\\n        [  -6,  -64],\\n        [  96,  -25],\\n        [  24,  -77],\\n        [ -42, -100],\\n        [  46,  -20],\\n        [ -48,  -11],\\n        [  32,  -46],\\n        [ -32,   20],\\n        [ -44,  -93],\\n        [  10,  -67],\\n        [  49,   69],\\n        [  25,  -47],\\n        [   6,   31],\\n        [  56,  -30],\\n        [  31,   10],\\n        [  86,   30],\\n        [ -56, -100],\\n        [  14,   17],\\n        [  68,   36],\\n        [ -58,  -74],\\n        [ -80,  -94],\\n        [  13,   83],\\n        [  97,   71],\\n        [ -24,  -97],\\n        [ -29,  -47],\\n        [  72,   92],\\n        [ -24,  -32],\\n        [  -9,   59],\\n        [ -64,  -28],\\n        [ -80,   29],\\n        [ -59,   -8],\\n        [ -15,   23],\\n        [  88,  -37],\\n        [  27,   13],\\n        [  89,  -83],\\n        [  50,   36],\\n        [  28,   98],\\n        [  40,   91],\\n        [ -27,  -91],\\n        [  94,  -75],\\n        [ -81,  -22],\\n        [ -26,  -83],\\n        [ -78,  -30],\\n        [  92,   50],\\n        [   2,  -43],\\n        [  90,   99],\\n        [  98,  -29],\\n        [ -18,   72]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -71,  -86],\\n        [ -73,  -41],\\n        [  95,   22],\\n        [  58,   -1],\\n        [  73,    0],\\n        [ -23,   93],\\n        [ -73,   65],\\n        [  91,   89],\\n        [ -45,   -3],\\n        [  79,   34],\\n        [ -45,   39],\\n        [  45,  -71],\\n        [  11,   25],\\n        [  -6,  -64],\\n        [  96,  -25],\\n        [  24,  -77],\\n        [ -42, -100],\\n        [  46,  -20],\\n        [ -48,  -11],\\n        [  32,  -46],\\n        [ -32,   20],\\n        [ -44,  -93],\\n        [  10,  -67],\\n        [  49,   69],\\n        [  25,  -47],\\n        [   6,   31],\\n        [  56,  -30],\\n        [  31,   10],\\n        [  86,   30],\\n        [ -56, -100],\\n        [  14,   17],\\n        [  68,   36],\\n        [ -58,  -74],\\n        [ -80,  -94],\\n        [  13,   83],\\n        [  97,   71],\\n        [ -24,  -97],\\n        [ -29,  -47],\\n        [  72,   92],\\n        [ -24,  -32],\\n        [  -9,   59],\\n        [ -64,  -28],\\n        [ -80,   29],\\n        [ -59,   -8],\\n        [ -15,   23],\\n        [  88,  -37],\\n        [  27,   13],\\n        [  89,  -83],\\n        [  50,   36],\\n        [  28,   98],\\n        [  40,   91],\\n        [ -27,  -91],\\n        [  94,  -75],\\n        [ -81,  -22],\\n        [ -26,  -83],\\n        [ -78,  -30],\\n        [  92,   50],\\n        [   2,  -43],\\n        [  90,   99],\\n        [  98,  -29],\\n        [ -18,   72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_6/tests58_6_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -71,  -86],\\n        [ -73,  -41],\\n        [  95,   22],\\n        [  58,   -1],\\n        [  73,    0],\\n        [ -23,   93],\\n        [ -73,   65],\\n        [  91,   89],\\n        [ -45,   -3],\\n        [  79,   34],\\n        [ -45,   39],\\n        [  45,  -71],\\n        [  11,   25],\\n        [  -6,  -64],\\n        [  96,  -25],\\n        [  24,  -77],\\n        [ -42, -100],\\n        [  46,  -20],\\n        [ -48,  -11],\\n        [  32,  -46],\\n        [ -32,   20],\\n        [ -44,  -93],\\n        [  10,  -67],\\n        [  49,   69],\\n        [  25,  -47],\\n        [   6,   31],\\n        [  56,  -30],\\n        [  31,   10],\\n        [  86,   30],\\n        [ -56, -100],\\n        [  14,   17],\\n        [  68,   36],\\n        [ -58,  -74],\\n        [ -80,  -94],\\n        [  13,   83],\\n        [  97,   71],\\n        [ -24,  -97],\\n        [ -29,  -47],\\n        [  72,   92],\\n        [ -24,  -32],\\n        [  -9,   59],\\n        [ -64,  -28],\\n        [ -80,   29],\\n        [ -59,   -8],\\n        [ -15,   23],\\n        [  88,  -37],\\n        [  27,   13],\\n        [  89,  -83],\\n        [  50,   36],\\n        [  28,   98],\\n        [  40,   91],\\n        [ -27,  -91],\\n        [  94,  -75],\\n        [ -81,  -22],\\n        [ -26,  -83],\\n        [ -78,  -30],\\n        [  92,   50],\\n        [   2,  -43],\\n        [  90,   99],\\n        [  98,  -29],\\n        [ -18,   72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_6/tests58_6_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_6/tests58_6_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -71,  -86],\\n        [ -73,  -41],\\n        [  95,   22],\\n        [  58,   -1],\\n        [  73,    0],\\n        [ -23,   93],\\n        [ -73,   65],\\n        [  91,   89],\\n        [ -45,   -3],\\n        [  79,   34],\\n        [ -45,   39],\\n        [  45,  -71],\\n        [  11,   25],\\n        [  -6,  -64],\\n        [  96,  -25],\\n        [  24,  -77],\\n        [ -42, -100],\\n        [  46,  -20],\\n        [ -48,  -11],\\n        [  32,  -46],\\n        [ -32,   20],\\n        [ -44,  -93],\\n        [  10,  -67],\\n        [  49,   69],\\n        [  25,  -47],\\n        [   6,   31],\\n        [  56,  -30],\\n        [  31,   10],\\n        [  86,   30],\\n        [ -56, -100],\\n        [  14,   17],\\n        [  68,   36],\\n        [ -58,  -74],\\n        [ -80,  -94],\\n        [  13,   83],\\n        [  97,   71],\\n        [ -24,  -97],\\n        [ -29,  -47],\\n        [  72,   92],\\n        [ -24,  -32],\\n        [  -9,   59],\\n        [ -64,  -28],\\n        [ -80,   29],\\n        [ -59,   -8],\\n        [ -15,   23],\\n        [  88,  -37],\\n        [  27,   13],\\n        [  89,  -83],\\n        [  50,   36],\\n        [  28,   98],\\n        [  40,   91],\\n        [ -27,  -91],\\n        [  94,  -75],\\n        [ -81,  -22],\\n        [ -26,  -83],\\n        [ -78,  -30],\\n        [  92,   50],\\n        [   2,  -43],\\n        [  90,   99],\\n        [  98,  -29],\\n        [ -18,   72]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009219429921358824, "start": 1700338584.007576, "stop": 1700338584.0084987, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe315dcd4b5a4beaa2dcc9b6c8ccd319", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
