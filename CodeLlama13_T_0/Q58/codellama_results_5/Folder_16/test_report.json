{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_16_5.py::test_horizontal_matrix", "location": ["tests58_16_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001212960050906986, "start": 1700338594.551654, "stop": 1700338594.5517757, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001573229965288192, "start": 1700338594.5516279, "stop": 1700338594.551786, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001690700009930879, "start": 1700338594.5520387, "stop": 1700338594.5522082, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.866199641488492e-05, "start": 1700338594.5524795, "stop": 1700338594.5525687, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.575301035307348e-05, "start": 1700338594.552936, "stop": 1700338594.5530224, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -83,  -16],\\n        [  42,   80],\\n        [ -29,   41],\\n        [ -53,    6],\\n        [ -72,  -87],\\n        [  -4,   78],\\n        [-100,  -84],\\n        [ -21,   85],\\n        [  14,  -81],\\n        [   2,   99],\\n        [ -12,  -75],\\n        [ -49,   30],\\n        [ -76,   59],\\n        [  57,   66],\\n        [   4,   -3],\\n        [ -29,   69],\\n        [ -69,   53],\\n        [  58,  100],\\n        [  13,   75],\\n        [ -70,   88],\\n        [ -68,    3],\\n        [  33,   97],\\n        [ -21,   65],\\n        [  99,    3],\\n        [ -88,  -83],\\n        [ -59,  -74],\\n        [  16,  -37],\\n        [ -35,  -65],\\n        [ -46,  -81],\\n        [ -36,   53],\\n        [  -9,  -25],\\n        [  68,   66],\\n        [  92,   76],\\n        [  29,   43],\\n        [   0,  -69],\\n        [  93,  -28],\\n        [  66,   35],\\n        [ 100,   71],\\n        [  57,   88],\\n        [  11,    4],\\n        [ -35,    7],\\n        [  16,   69],\\n        [  45,  -85],\\n        [  41,    6],\\n        [ -36,  -44],\\n        [  24,  -46],\\n        [  21,   51],\\n        [ -59,    6],\\n        [ -98,   25],\\n        [  84,  -22],\\n        [  22,  -37],\\n        [ -28,  -38],\\n        [ -73,  -54],\\n        [ -35,  -95],\\n        [  96,    4],\\n        [ -63,   -4],\\n        [  64,    9],\\n        [  34,  -21],\\n        [ -69,   46],\\n        [  62,   -6],\\n        [  46,  -99],\\n        [  78,   80],\\n        [  50,   -2],\\n        [ -25,  -88],\\n        [  80,    5],\\n        [  60,  -90],\\n        [ -30,   58],\\n        [  54,  -29],\\n        [ -20,  -34],\\n        [  33,  -90],\\n        [ -81,  -73],\\n        [  36,  -16],\\n        [  42,   -2],\\n        [  88,    3],\\n        [  46,   88],\\n        [ -22,  -11],\\n        [ -43,  -35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -83,  -16],\\n        [  42,   80],\\n        [ -29,   41],\\n        [ -53,    6],\\n        [ -72,  -87],\\n        [  -4,   78],\\n        [-100,  -84],\\n        [ -21,   85],\\n        [  14,  -81],\\n        [   2,   99],\\n        [ -12,  -75],\\n        [ -49,   30],\\n        [ -76,   59],\\n        [  57,   66],\\n        [   4,   -3],\\n        [ -29,   69],\\n        [ -69,   53],\\n        [  58,  100],\\n        [  13,   75],\\n        [ -70,   88],\\n        [ -68,    3],\\n        [  33,   97],\\n        [ -21,   65],\\n        [  99,    3],\\n        [ -88,  -83],\\n        [ -59,  -74],\\n        [  16,  -37],\\n        [ -35,  -65],\\n        [ -46,  -81],\\n        [ -36,   53],\\n        [  -9,  -25],\\n        [  68,   66],\\n        [  92,   76],\\n        [  29,   43],\\n        [   0,  -69],\\n        [  93,  -28],\\n        [  66,   35],\\n        [ 100,   71],\\n        [  57,   88],\\n        [  11,    4],\\n        [ -35,    7],\\n        [  16,   69],\\n        [  45,  -85],\\n        [  41,    6],\\n        [ -36,  -44],\\n        [  24,  -46],\\n        [  21,   51],\\n        [ -59,    6],\\n        [ -98,   25],\\n        [  84,  -22],\\n        [  22,  -37],\\n        [ -28,  -38],\\n        [ -73,  -54],\\n        [ -35,  -95],\\n        [  96,    4],\\n        [ -63,   -4],\\n        [  64,    9],\\n        [  34,  -21],\\n        [ -69,   46],\\n        [  62,   -6],\\n        [  46,  -99],\\n        [  78,   80],\\n        [  50,   -2],\\n        [ -25,  -88],\\n        [  80,    5],\\n        [  60,  -90],\\n        [ -30,   58],\\n        [  54,  -29],\\n        [ -20,  -34],\\n        [  33,  -90],\\n        [ -81,  -73],\\n        [  36,  -16],\\n        [  42,   -2],\\n        [  88,    3],\\n        [  46,   88],\\n        [ -22,  -11],\\n        [ -43,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -83,  -16],\\n        [  42,   80],\\n        [ -29,   41],\\n        [ -53,    6],\\n        [ -72,  -87],\\n        [  -4,   78],\\n        [-100,  -84],\\n        [ -21,   85],\\n        [  14,  -81],\\n        [   2,   99],\\n        [ -12,  -75],\\n        [ -49,   30],\\n        [ -76,   59],\\n        [  57,   66],\\n        [   4,   -3],\\n        [ -29,   69],\\n        [ -69,   53],\\n        [  58,  100],\\n        [  13,   75],\\n        [ -70,   88],\\n        [ -68,    3],\\n        [  33,   97],\\n        [ -21,   65],\\n        [  99,    3],\\n        [ -88,  -83],\\n        [ -59,  -74],\\n        [  16,  -37],\\n        [ -35,  -65],\\n        [ -46,  -81],\\n        [ -36,   53],\\n        [  -9,  -25],\\n        [  68,   66],\\n        [  92,   76],\\n        [  29,   43],\\n        [   0,  -69],\\n        [  93,  -28],\\n        [  66,   35],\\n        [ 100,   71],\\n        [  57,   88],\\n        [  11,    4],\\n        [ -35,    7],\\n        [  16,   69],\\n        [  45,  -85],\\n        [  41,    6],\\n        [ -36,  -44],\\n        [  24,  -46],\\n        [  21,   51],\\n        [ -59,    6],\\n        [ -98,   25],\\n        [  84,  -22],\\n        [  22,  -37],\\n        [ -28,  -38],\\n        [ -73,  -54],\\n        [ -35,  -95],\\n        [  96,    4],\\n        [ -63,   -4],\\n        [  64,    9],\\n        [  34,  -21],\\n        [ -69,   46],\\n        [  62,   -6],\\n        [  46,  -99],\\n        [  78,   80],\\n        [  50,   -2],\\n        [ -25,  -88],\\n        [  80,    5],\\n        [  60,  -90],\\n        [ -30,   58],\\n        [  54,  -29],\\n        [ -20,  -34],\\n        [  33,  -90],\\n        [ -81,  -73],\\n        [  36,  -16],\\n        [  42,   -2],\\n        [  88,    3],\\n        [  46,   88],\\n        [ -22,  -11],\\n        [ -43,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -83,  -16],\\n        [  42,   80],\\n        [ -29,   41],\\n        [ -53,    6],\\n        [ -72,  -87],\\n        [  -4,   78],\\n        [-100,  -84],\\n        [ -21,   85],\\n        [  14,  -81],\\n        [   2,   99],\\n        [ -12,  -75],\\n        [ -49,   30],\\n        [ -76,   59],\\n        [  57,   66],\\n        [   4,   -3],\\n        [ -29,   69],\\n        [ -69,   53],\\n        [  58,  100],\\n        [  13,   75],\\n        [ -70,   88],\\n        [ -68,    3],\\n        [  33,   97],\\n        [ -21,   65],\\n        [  99,    3],\\n        [ -88,  -83],\\n        [ -59,  -74],\\n        [  16,  -37],\\n        [ -35,  -65],\\n        [ -46,  -81],\\n        [ -36,   53],\\n        [  -9,  -25],\\n        [  68,   66],\\n        [  92,   76],\\n        [  29,   43],\\n        [   0,  -69],\\n        [  93,  -28],\\n        [  66,   35],\\n        [ 100,   71],\\n        [  57,   88],\\n        [  11,    4],\\n        [ -35,    7],\\n        [  16,   69],\\n        [  45,  -85],\\n        [  41,    6],\\n        [ -36,  -44],\\n        [  24,  -46],\\n        [  21,   51],\\n        [ -59,    6],\\n        [ -98,   25],\\n        [  84,  -22],\\n        [  22,  -37],\\n        [ -28,  -38],\\n        [ -73,  -54],\\n        [ -35,  -95],\\n        [  96,    4],\\n        [ -63,   -4],\\n        [  64,    9],\\n        [  34,  -21],\\n        [ -69,   46],\\n        [  62,   -6],\\n        [  46,  -99],\\n        [  78,   80],\\n        [  50,   -2],\\n        [ -25,  -88],\\n        [  80,    5],\\n        [  60,  -90],\\n        [ -30,   58],\\n        [  54,  -29],\\n        [ -20,  -34],\\n        [  33,  -90],\\n        [ -81,  -73],\\n        [  36,  -16],\\n        [  42,   -2],\\n        [  88,    3],\\n        [  46,   88],\\n        [ -22,  -11],\\n        [ -43,  -35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010235289810225368, "start": 1700338594.5531392, "stop": 1700338594.5541632, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2e5e6b36da0049929c947ce9af293172", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
