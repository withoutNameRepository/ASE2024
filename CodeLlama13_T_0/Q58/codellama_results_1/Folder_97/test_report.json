{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_1.py::test_horizontal_matrix", "location": ["tests58_97_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011787799303419888, "start": 1700338330.9711673, "stop": 1700338330.9712856, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016166799468919635, "start": 1700338330.9672933, "stop": 1700338330.9674556, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017395999748259783, "start": 1700338330.9677176, "stop": 1700338330.9678922, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.742700447328389e-05, "start": 1700338330.9681864, "stop": 1700338330.9682744, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.882800466381013e-05, "start": 1700338330.9686525, "stop": 1700338330.968742, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,  -60],\\n        [ -32,   92],\\n        [ -82,   15],\\n        [ -92,   24],\\n        [  69,  -52],\\n        [ -68,  -30],\\n        [ -71,   32],\\n        [ -71,  -61],\\n        [ -75,  -91],\\n        [  22,  -13],\\n        [  38,  -24],\\n        [  85,   -1],\\n        [  80,  -98],\\n        [ -42,  -28],\\n        [ -63,  -58],\\n        [  42,   26],\\n        [ -81,   54],\\n        [ -14,   25],\\n        [ -20,  -39],\\n        [ -83,   50],\\n        [  -2,   17],\\n        [  78,   81],\\n        [  64,  -33],\\n        [ -11,  -56],\\n        [ -62,   16],\\n        [ -53,  -24],\\n        [  35,  -27],\\n        [ -37,  -17],\\n        [ -69,   47],\\n        [  82,  -66],\\n        [  91,  -51],\\n        [  60,  -22],\\n        [  -8,  -24],\\n        [  58,   18],\\n        [ -78,   84],\\n        [ -76,  -25],\\n        [ -58,  -70],\\n        [ -49,    4],\\n        [  19,   97],\\n        [  64,  -11],\\n        [  -3,  -84],\\n        [  83,  -92],\\n        [ -80,  -22],\\n        [ -39, -100],\\n        [  89,  -28],\\n        [  23,   16],\\n        [  68,    2],\\n        [ -53,  -18],\\n        [ -46,   39],\\n        [ -54,   73],\\n        [  10,   21],\\n        [ -71,   59],\\n        [  32,   59],\\n        [  65,  -54],\\n        [ -14,  -89],\\n        [ -42,  -40],\\n        [  61,   84],\\n        [  97,  -46],\\n        [ -90,  -49],\\n        [  61,    9]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   6,  -60],\\n        [ -32,   92],\\n        [ -82,   15],\\n        [ -92,   24],\\n        [  69,  -52],\\n        [ -68,  -30],\\n        [ -71,   32],\\n        [ -71,  -61],\\n        [ -75,  -91],\\n        [  22,  -13],\\n        [  38,  -24],\\n        [  85,   -1],\\n        [  80,  -98],\\n        [ -42,  -28],\\n        [ -63,  -58],\\n        [  42,   26],\\n        [ -81,   54],\\n        [ -14,   25],\\n        [ -20,  -39],\\n        [ -83,   50],\\n        [  -2,   17],\\n        [  78,   81],\\n        [  64,  -33],\\n        [ -11,  -56],\\n        [ -62,   16],\\n        [ -53,  -24],\\n        [  35,  -27],\\n        [ -37,  -17],\\n        [ -69,   47],\\n        [  82,  -66],\\n        [  91,  -51],\\n        [  60,  -22],\\n        [  -8,  -24],\\n        [  58,   18],\\n        [ -78,   84],\\n        [ -76,  -25],\\n        [ -58,  -70],\\n        [ -49,    4],\\n        [  19,   97],\\n        [  64,  -11],\\n        [  -3,  -84],\\n        [  83,  -92],\\n        [ -80,  -22],\\n        [ -39, -100],\\n        [  89,  -28],\\n        [  23,   16],\\n        [  68,    2],\\n        [ -53,  -18],\\n        [ -46,   39],\\n        [ -54,   73],\\n        [  10,   21],\\n        [ -71,   59],\\n        [  32,   59],\\n        [  65,  -54],\\n        [ -14,  -89],\\n        [ -42,  -40],\\n        [  61,   84],\\n        [  97,  -46],\\n        [ -90,  -49],\\n        [  61,    9]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   6,  -60],\\n        [ -32,   92],\\n        [ -82,   15],\\n        [ -92,   24],\\n        [  69,  -52],\\n        [ -68,  -30],\\n        [ -71,   32],\\n        [ -71,  -61],\\n        [ -75,  -91],\\n        [  22,  -13],\\n        [  38,  -24],\\n        [  85,   -1],\\n        [  80,  -98],\\n        [ -42,  -28],\\n        [ -63,  -58],\\n        [  42,   26],\\n        [ -81,   54],\\n        [ -14,   25],\\n        [ -20,  -39],\\n        [ -83,   50],\\n        [  -2,   17],\\n        [  78,   81],\\n        [  64,  -33],\\n        [ -11,  -56],\\n        [ -62,   16],\\n        [ -53,  -24],\\n        [  35,  -27],\\n        [ -37,  -17],\\n        [ -69,   47],\\n        [  82,  -66],\\n        [  91,  -51],\\n        [  60,  -22],\\n        [  -8,  -24],\\n        [  58,   18],\\n        [ -78,   84],\\n        [ -76,  -25],\\n        [ -58,  -70],\\n        [ -49,    4],\\n        [  19,   97],\\n        [  64,  -11],\\n        [  -3,  -84],\\n        [  83,  -92],\\n        [ -80,  -22],\\n        [ -39, -100],\\n        [  89,  -28],\\n        [  23,   16],\\n        [  68,    2],\\n        [ -53,  -18],\\n        [ -46,   39],\\n        [ -54,   73],\\n        [  10,   21],\\n        [ -71,   59],\\n        [  32,   59],\\n        [  65,  -54],\\n        [ -14,  -89],\\n        [ -42,  -40],\\n        [  61,   84],\\n        [  97,  -46],\\n        [ -90,  -49],\\n        [  61,    9]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,  -60],\\n        [ -32,   92],\\n        [ -82,   15],\\n        [ -92,   24],\\n        [  69,  -52],\\n        [ -68,  -30],\\n        [ -71,   32],\\n        [ -71,  -61],\\n        [ -75,  -91],\\n        [  22,  -13],\\n        [  38,  -24],\\n        [  85,   -1],\\n        [  80,  -98],\\n        [ -42,  -28],\\n        [ -63,  -58],\\n        [  42,   26],\\n        [ -81,   54],\\n        [ -14,   25],\\n        [ -20,  -39],\\n        [ -83,   50],\\n        [  -2,   17],\\n        [  78,   81],\\n        [  64,  -33],\\n        [ -11,  -56],\\n        [ -62,   16],\\n        [ -53,  -24],\\n        [  35,  -27],\\n        [ -37,  -17],\\n        [ -69,   47],\\n        [  82,  -66],\\n        [  91,  -51],\\n        [  60,  -22],\\n        [  -8,  -24],\\n        [  58,   18],\\n        [ -78,   84],\\n        [ -76,  -25],\\n        [ -58,  -70],\\n        [ -49,    4],\\n        [  19,   97],\\n        [  64,  -11],\\n        [  -3,  -84],\\n        [  83,  -92],\\n        [ -80,  -22],\\n        [ -39, -100],\\n        [  89,  -28],\\n        [  23,   16],\\n        [  68,    2],\\n        [ -53,  -18],\\n        [ -46,   39],\\n        [ -54,   73],\\n        [  10,   21],\\n        [ -71,   59],\\n        [  32,   59],\\n        [  65,  -54],\\n        [ -14,  -89],\\n        [ -42,  -40],\\n        [  61,   84],\\n        [  97,  -46],\\n        [ -90,  -49],\\n        [  61,    9]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009111059771385044, "start": 1700338330.9688642, "stop": 1700338330.9697762, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6deeb7c6b591460093addf86beb43eae", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
