{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 17, -41,  76, -73,  53,   7, -76, -37,  67,  44,  12,   2,  34,\\n          -3,  90,  80, -67,  81, -36,  68, -78, -62, -51,  74, -42, -72,\\n          25, -91,  13,  64,  78,  22,  -7, -36, -18, -83, -77,  25,  14,\\n          -6, -52, -92,  87,  66,  79, -60, -99,  17,  56, -16, -38, -87,\\n         -45, -66, -49,  13,  15,  91,  25,  35,  82,  58, -26,  32, -81,\\n          42,  51, -78,  13, -71, -12,  54,  50,  67,  -6,  48, -15,  49,\\n          74, -69, -70, -14, -66,  40, -81, -85, -46,  32, -85,  64,  84,\\n          56,  88, -81, -33, -91, -47,  94,   7, -95,  91,  20, -65,  -8,\\n         -56,  -8, -13,  34, -21,  14, -67, -42,  97, -54,  30, -22,   0,\\n          52, -20,  11, -61, -17,  54, -94,   0, -51, -71, -56,  -1,  95,\\n          84, -56,  89, -52, -38,  89, -90,  59, -89,  88, -95,  57,   8,\\n          -9, -83,  95, -74,  53, -93, -25, -26, -36,   1,  63,  19, -89,\\n           9, -12, -51]]))",
    0.0008
  ]
}