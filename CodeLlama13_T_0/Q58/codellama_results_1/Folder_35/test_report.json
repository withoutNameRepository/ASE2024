{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004322800086811185, "start": 1700338289.6914775, "stop": 1700338289.6919107, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "95a1891c42194b4ba6ef1ca9f7d4b4fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005408519937191159, "start": 1700338289.6921976, "stop": 1700338289.6927392, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "95a1891c42194b4ba6ef1ca9f7d4b4fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005030000174883753, "start": 1700338289.6930575, "stop": 1700338289.6935608, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "95a1891c42194b4ba6ef1ca9f7d4b4fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005476050137076527, "start": 1700338289.693978, "stop": 1700338289.6945262, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "95a1891c42194b4ba6ef1ca9f7d4b4fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   96,  -81,   59,  -28,   74,  -80,    7,   10,  -28,\\n            8,  -75,   97,  -39,   44,   69,   -2,   77,  -68,  -28,\\n          -57,   34,   28,   33,  -19,   -6,  -74,  -82,  -14,    4,\\n          -24,   40,   78,  -54,  -49,   98,   91,   53,   39,    1,\\n           95,   64,   52,  -71,   88,  -38,  -50,   56,  -94,  -44,\\n           97,  -66,   -8,   22,   35,   58,  -86,  -90,   39,  -72,\\n           93,   37,   56,  -39,  -39,  -41,  -10,   30,   58,  -96,\\n           44,  -25,  -73,    6,   -3,   -8,   -4,   21,   94,   66,\\n           32,   16,  -64,   74,   -9,    6,   78,   10,   59,    5,\\n          -59,  -82,  -15,   19,  -68, -100,  -47,   43,  -49,  -10,\\n          -54,   39,   16,  -22,  -26,   44,   15,  -94,  -85,  -16,\\n           82]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   96,  -81,   59,  -28,   74,  -80,    7,   10,  -28,\\n            8,  -75,   97,  -39,   44,   69,   -2,   77,  -68,  -28,\\n          -57,   34,   28,   33,  -19,   -6,  -74,  -82,  -14,    4,\\n          -24,   40,   78,  -54,  -49,   98,   91,   53,   39,    1,\\n           95,   64,   52,  -71,   88,  -38,  -50,   56,  -94,  -44,\\n           97,  -66,   -8,   22,   35,   58,  -86,  -90,   39,  -72,\\n           93,   37,   56,  -39,  -39,  -41,  -10,   30,   58,  -96,\\n           44,  -25,  -73,    6,   -3,   -8,   -4,   21,   94,   66,\\n           32,   16,  -64,   74,   -9,    6,   78,   10,   59,    5,\\n          -59,  -82,  -15,   19,  -68, -100,  -47,   43,  -49,  -10,\\n          -54,   39,   16,  -22,  -26,   44,   15,  -94,  -85,  -16,\\n           82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   96,  -81,   59,  -28,   74,  -80,    7,   10,  -28,\\n            8,  -75,   97,  -39,   44,   69,   -2,   77,  -68,  -28,\\n          -57,   34,   28,   33,  -19,   -6,  -74,  -82,  -14,    4,\\n          -24,   40,   78,  -54,  -49,   98,   91,   53,   39,    1,\\n           95,   64,   52,  -71,   88,  -38,  -50,   56,  -94,  -44,\\n           97,  -66,   -8,   22,   35,   58,  -86,  -90,   39,  -72,\\n           93,   37,   56,  -39,  -39,  -41,  -10,   30,   58,  -96,\\n           44,  -25,  -73,    6,   -3,   -8,   -4,   21,   94,   66,\\n           32,   16,  -64,   74,   -9,    6,   78,   10,   59,    5,\\n          -59,  -82,  -15,   19,  -68, -100,  -47,   43,  -49,  -10,\\n          -54,   39,   16,  -22,  -26,   44,   15,  -94,  -85,  -16,\\n           82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   96,  -81,   59,  -28,   74,  -80,    7,   10,  -28,\\n            8,  -75,   97,  -39,   44,   69,   -2,   77,  -68,  -28,\\n          -57,   34,   28,   33,  -19,   -6,  -74,  -82,  -14,    4,\\n          -24,   40,   78,  -54,  -49,   98,   91,   53,   39,    1,\\n           95,   64,   52,  -71,   88,  -38,  -50,   56,  -94,  -44,\\n           97,  -66,   -8,   22,   35,   58,  -86,  -90,   39,  -72,\\n           93,   37,   56,  -39,  -39,  -41,  -10,   30,   58,  -96,\\n           44,  -25,  -73,    6,   -3,   -8,   -4,   21,   94,   66,\\n           32,   16,  -64,   74,   -9,    6,   78,   10,   59,    5,\\n          -59,  -82,  -15,   19,  -68, -100,  -47,   43,  -49,  -10,\\n          -54,   39,   16,  -22,  -26,   44,   15,  -94,  -85,  -16,\\n           82]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009401610004715621, "start": 1700338289.6946745, "stop": 1700338289.6956153, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "95a1891c42194b4ba6ef1ca9f7d4b4fc", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
