{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_99_1.py::test_horizontal_matrix", "location": ["tests58_99_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011739300680346787, "start": 1700338331.8523104, "stop": 1700338331.8524284, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_99_1.py::test_matrix_of_one_integer", "location": ["tests58_99_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016943400260061026, "start": 1700338331.851698, "stop": 1700338331.8518682, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_1.py::test_matrix_of_one_integer", "location": ["tests58_99_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018577699665911496, "start": 1700338331.8521378, "stop": 1700338331.8523238, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_1.py::test_matrix_of_one_integer", "location": ["tests58_99_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.865201380103827e-05, "start": 1700338331.8526132, "stop": 1700338331.8527021, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_1.py::test_matrix_of_having_146_integers", "location": ["tests58_99_1.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.593799429945648e-05, "start": 1700338331.8530881, "stop": 1700338331.8531744, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_1.py::test_matrix_of_having_146_integers", "location": ["tests58_99_1.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_1.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_99/tests58_99_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -36,  -94],\\n        [  72,   35],\\n        [  17,   62],\\n        [   9,  -66],\\n        [ -71,   55],\\n        [  63,  -38],\\n        [ -30,  -23],\\n        [  10,   83],\\n        [  20,  -17],\\n        [  81,  -31],\\n        [  19,  -22],\\n        [  69,  -23],\\n        [  26,   90],\\n        [  75,   -2],\\n        [ -16,   87],\\n        [ -34,    4],\\n        [  20,  -77],\\n        [  23,  -51],\\n        [ -75,   -9],\\n        [  67,  -83],\\n        [ -39,   81],\\n        [  15,   39],\\n        [ -58,   75],\\n        [  85,   41],\\n        [ -80,  -23],\\n        [ -69,  -63],\\n        [ -38,   32],\\n        [ -91,   69],\\n        [  47,   73],\\n        [  49,  -92],\\n        [  77,    2],\\n        [ -75,  -14],\\n        [   2,  -24],\\n        [ -24,  -79],\\n        [ -83,   91],\\n        [   1,  -42],\\n        [ -18,   53],\\n        [ -77,  -70],\\n        [  27,   72],\\n        [  52,   58],\\n        [ -20,  -97],\\n        [  30,  -20],\\n        [  58,  -93],\\n        [ -59,  -80],\\n        [ -71,  -45],\\n        [  90,   32],\\n        [  89,  -80],\\n        [  83,   -9],\\n        [  11,   13],\\n        [  50,   19],\\n        [  75,   87],\\n        [  72,  -64],\\n        [  53,    4],\\n        [  44,   44],\\n        [ -41,   86],\\n        [ -71,  -69],\\n        [  71,  -50],\\n        [  -8,  -17],\\n        [ -33,   47],\\n        [  57,  -53],\\n        [  73,  -18],\\n        [  27,   86],\\n        [ -21,  -28],\\n        [  70,   -3],\\n        [ -54,  -19],\\n        [  38,   45],\\n        [-100,    6],\\n        [ -29,   21],\\n        [ -38,  -21],\\n        [  30,  -91],\\n        [   2,   -3],\\n        [  49,   61],\\n        [  -3,    9]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -36,  -94],\\n        [  72,   35],\\n        [  17,   62],\\n        [   9,  -66],\\n        [ -71,   55],\\n        [  63,  -38],\\n        [ -30,  -23],\\n        [  10,   83],\\n        [  20,  -17],\\n        [  81,  -31],\\n        [  19,  -22],\\n        [  69,  -23],\\n        [  26,   90],\\n        [  75,   -2],\\n        [ -16,   87],\\n        [ -34,    4],\\n        [  20,  -77],\\n        [  23,  -51],\\n        [ -75,   -9],\\n        [  67,  -83],\\n        [ -39,   81],\\n        [  15,   39],\\n        [ -58,   75],\\n        [  85,   41],\\n        [ -80,  -23],\\n        [ -69,  -63],\\n        [ -38,   32],\\n        [ -91,   69],\\n        [  47,   73],\\n        [  49,  -92],\\n        [  77,    2],\\n        [ -75,  -14],\\n        [   2,  -24],\\n        [ -24,  -79],\\n        [ -83,   91],\\n        [   1,  -42],\\n        [ -18,   53],\\n        [ -77,  -70],\\n        [  27,   72],\\n        [  52,   58],\\n        [ -20,  -97],\\n        [  30,  -20],\\n        [  58,  -93],\\n        [ -59,  -80],\\n        [ -71,  -45],\\n        [  90,   32],\\n        [  89,  -80],\\n        [  83,   -9],\\n        [  11,   13],\\n        [  50,   19],\\n        [  75,   87],\\n        [  72,  -64],\\n        [  53,    4],\\n        [  44,   44],\\n        [ -41,   86],\\n        [ -71,  -69],\\n        [  71,  -50],\\n        [  -8,  -17],\\n        [ -33,   47],\\n        [  57,  -53],\\n        [  73,  -18],\\n        [  27,   86],\\n        [ -21,  -28],\\n        [  70,   -3],\\n        [ -54,  -19],\\n        [  38,   45],\\n        [-100,    6],\\n        [ -29,   21],\\n        [ -38,  -21],\\n        [  30,  -91],\\n        [   2,   -3],\\n        [  49,   61],\\n        [  -3,    9]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_99/tests58_99_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -36,  -94],\\n        [  72,   35],\\n        [  17,   62],\\n        [   9,  -66],\\n        [ -71,   55],\\n        [  63,  -38],\\n        [ -30,  -23],\\n        [  10,   83],\\n        [  20,  -17],\\n        [  81,  -31],\\n        [  19,  -22],\\n        [  69,  -23],\\n        [  26,   90],\\n        [  75,   -2],\\n        [ -16,   87],\\n        [ -34,    4],\\n        [  20,  -77],\\n        [  23,  -51],\\n        [ -75,   -9],\\n        [  67,  -83],\\n        [ -39,   81],\\n        [  15,   39],\\n        [ -58,   75],\\n        [  85,   41],\\n        [ -80,  -23],\\n        [ -69,  -63],\\n        [ -38,   32],\\n        [ -91,   69],\\n        [  47,   73],\\n        [  49,  -92],\\n        [  77,    2],\\n        [ -75,  -14],\\n        [   2,  -24],\\n        [ -24,  -79],\\n        [ -83,   91],\\n        [   1,  -42],\\n        [ -18,   53],\\n        [ -77,  -70],\\n        [  27,   72],\\n        [  52,   58],\\n        [ -20,  -97],\\n        [  30,  -20],\\n        [  58,  -93],\\n        [ -59,  -80],\\n        [ -71,  -45],\\n        [  90,   32],\\n        [  89,  -80],\\n        [  83,   -9],\\n        [  11,   13],\\n        [  50,   19],\\n        [  75,   87],\\n        [  72,  -64],\\n        [  53,    4],\\n        [  44,   44],\\n        [ -41,   86],\\n        [ -71,  -69],\\n        [  71,  -50],\\n        [  -8,  -17],\\n        [ -33,   47],\\n        [  57,  -53],\\n        [  73,  -18],\\n        [  27,   86],\\n        [ -21,  -28],\\n        [  70,   -3],\\n        [ -54,  -19],\\n        [  38,   45],\\n        [-100,    6],\\n        [ -29,   21],\\n        [ -38,  -21],\\n        [  30,  -91],\\n        [   2,   -3],\\n        [  49,   61],\\n        [  -3,    9]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_1/Folder_99/tests58_99_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_1/Folder_99/tests58_99_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -36,  -94],\\n        [  72,   35],\\n        [  17,   62],\\n        [   9,  -66],\\n        [ -71,   55],\\n        [  63,  -38],\\n        [ -30,  -23],\\n        [  10,   83],\\n        [  20,  -17],\\n        [  81,  -31],\\n        [  19,  -22],\\n        [  69,  -23],\\n        [  26,   90],\\n        [  75,   -2],\\n        [ -16,   87],\\n        [ -34,    4],\\n        [  20,  -77],\\n        [  23,  -51],\\n        [ -75,   -9],\\n        [  67,  -83],\\n        [ -39,   81],\\n        [  15,   39],\\n        [ -58,   75],\\n        [  85,   41],\\n        [ -80,  -23],\\n        [ -69,  -63],\\n        [ -38,   32],\\n        [ -91,   69],\\n        [  47,   73],\\n        [  49,  -92],\\n        [  77,    2],\\n        [ -75,  -14],\\n        [   2,  -24],\\n        [ -24,  -79],\\n        [ -83,   91],\\n        [   1,  -42],\\n        [ -18,   53],\\n        [ -77,  -70],\\n        [  27,   72],\\n        [  52,   58],\\n        [ -20,  -97],\\n        [  30,  -20],\\n        [  58,  -93],\\n        [ -59,  -80],\\n        [ -71,  -45],\\n        [  90,   32],\\n        [  89,  -80],\\n        [  83,   -9],\\n        [  11,   13],\\n        [  50,   19],\\n        [  75,   87],\\n        [  72,  -64],\\n        [  53,    4],\\n        [  44,   44],\\n        [ -41,   86],\\n        [ -71,  -69],\\n        [  71,  -50],\\n        [  -8,  -17],\\n        [ -33,   47],\\n        [  57,  -53],\\n        [  73,  -18],\\n        [  27,   86],\\n        [ -21,  -28],\\n        [  70,   -3],\\n        [ -54,  -19],\\n        [  38,   45],\\n        [-100,    6],\\n        [ -29,   21],\\n        [ -38,  -21],\\n        [  30,  -91],\\n        [   2,   -3],\\n        [  49,   61],\\n        [  -3,    9]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010023850190918893, "start": 1700338331.8532982, "stop": 1700338331.8543012, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2ae045d45b654d8ab403e5e57a641937", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
