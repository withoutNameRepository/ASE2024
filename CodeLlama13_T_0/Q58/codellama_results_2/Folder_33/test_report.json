{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025603797985240817, "start": 1700338357.309283, "stop": 1700338357.3095398, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003289699961896986, "start": 1700338357.3098204, "stop": 1700338357.31015, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020425498951226473, "start": 1700338357.3104541, "stop": 1700338357.3106585, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025112301227636635, "start": 1700338357.3110623, "stop": 1700338357.3113139, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_horizontal_matrix", "location": ["tests58_33_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012965599307790399, "start": 1700338357.319754, "stop": 1700338357.3198845, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -27,   -4],\\n        [   4,  -64],\\n        [ -44,  -84],\\n        [  28,   11],\\n        [ -69,   -1],\\n        [  79,    6],\\n        [  80,   90],\\n        [-100,  -51],\\n        [  98,    5],\\n        [  37,  -25],\\n        [   3,   36],\\n        [  70,  -32],\\n        [  76,  -62],\\n        [  10,  -51],\\n        [ -38,   98],\\n        [ -69,   40],\\n        [  91,  -94],\\n        [  51,  -59],\\n        [ -78,  -94],\\n        [  48,    5],\\n        [  85,  -69],\\n        [  78,  -18],\\n        [  24,  -87],\\n        [  69,  100],\\n        [ -27,  -37],\\n        [ -19,   39],\\n        [  76,   48],\\n        [  40,   72],\\n        [ -76,    3],\\n        [  40,   11],\\n        [ -73,  -12],\\n        [ -66,  -22],\\n        [ -32,   40],\\n        [ -89,  -64],\\n        [ -46,   -9],\\n        [ -41,  -17],\\n        [  61,  -37],\\n        [ -60,   41],\\n        [  81,    7],\\n        [  70,   38],\\n        [ -29,   56],\\n        [  24,   21],\\n        [  -8,    5],\\n        [  77,  -23],\\n        [  81,   65],\\n        [  49,  -99],\\n        [  39,   47],\\n        [ -55,    1],\\n        [  82,   95],\\n        [ -95,    7],\\n        [  68,  -77],\\n        [  73,   12],\\n        [  46,   45],\\n        [ -44,  -20],\\n        [   5,  -96],\\n        [  92,   71],\\n        [ -62,  -12],\\n        [ -76,   56],\\n        [  18,  -87]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -27,   -4],\\n        [   4,  -64],\\n        [ -44,  -84],\\n        [  28,   11],\\n        [ -69,   -1],\\n        [  79,    6],\\n        [  80,   90],\\n        [-100,  -51],\\n        [  98,    5],\\n        [  37,  -25],\\n        [   3,   36],\\n        [  70,  -32],\\n        [  76,  -62],\\n        [  10,  -51],\\n        [ -38,   98],\\n        [ -69,   40],\\n        [  91,  -94],\\n        [  51,  -59],\\n        [ -78,  -94],\\n        [  48,    5],\\n        [  85,  -69],\\n        [  78,  -18],\\n        [  24,  -87],\\n        [  69,  100],\\n        [ -27,  -37],\\n        [ -19,   39],\\n        [  76,   48],\\n        [  40,   72],\\n        [ -76,    3],\\n        [  40,   11],\\n        [ -73,  -12],\\n        [ -66,  -22],\\n        [ -32,   40],\\n        [ -89,  -64],\\n        [ -46,   -9],\\n        [ -41,  -17],\\n        [  61,  -37],\\n        [ -60,   41],\\n        [  81,    7],\\n        [  70,   38],\\n        [ -29,   56],\\n        [  24,   21],\\n        [  -8,    5],\\n        [  77,  -23],\\n        [  81,   65],\\n        [  49,  -99],\\n        [  39,   47],\\n        [ -55,    1],\\n        [  82,   95],\\n        [ -95,    7],\\n        [  68,  -77],\\n        [  73,   12],\\n        [  46,   45],\\n        [ -44,  -20],\\n        [   5,  -96],\\n        [  92,   71],\\n        [ -62,  -12],\\n        [ -76,   56],\\n        [  18,  -87]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -27,   -4],\\n        [   4,  -64],\\n        [ -44,  -84],\\n        [  28,   11],\\n        [ -69,   -1],\\n        [  79,    6],\\n        [  80,   90],\\n        [-100,  -51],\\n        [  98,    5],\\n        [  37,  -25],\\n        [   3,   36],\\n        [  70,  -32],\\n        [  76,  -62],\\n        [  10,  -51],\\n        [ -38,   98],\\n        [ -69,   40],\\n        [  91,  -94],\\n        [  51,  -59],\\n        [ -78,  -94],\\n        [  48,    5],\\n        [  85,  -69],\\n        [  78,  -18],\\n        [  24,  -87],\\n        [  69,  100],\\n        [ -27,  -37],\\n        [ -19,   39],\\n        [  76,   48],\\n        [  40,   72],\\n        [ -76,    3],\\n        [  40,   11],\\n        [ -73,  -12],\\n        [ -66,  -22],\\n        [ -32,   40],\\n        [ -89,  -64],\\n        [ -46,   -9],\\n        [ -41,  -17],\\n        [  61,  -37],\\n        [ -60,   41],\\n        [  81,    7],\\n        [  70,   38],\\n        [ -29,   56],\\n        [  24,   21],\\n        [  -8,    5],\\n        [  77,  -23],\\n        [  81,   65],\\n        [  49,  -99],\\n        [  39,   47],\\n        [ -55,    1],\\n        [  82,   95],\\n        [ -95,    7],\\n        [  68,  -77],\\n        [  73,   12],\\n        [  46,   45],\\n        [ -44,  -20],\\n        [   5,  -96],\\n        [  92,   71],\\n        [ -62,  -12],\\n        [ -76,   56],\\n        [  18,  -87]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -27,   -4],\\n        [   4,  -64],\\n        [ -44,  -84],\\n        [  28,   11],\\n        [ -69,   -1],\\n        [  79,    6],\\n        [  80,   90],\\n        [-100,  -51],\\n        [  98,    5],\\n        [  37,  -25],\\n        [   3,   36],\\n        [  70,  -32],\\n        [  76,  -62],\\n        [  10,  -51],\\n        [ -38,   98],\\n        [ -69,   40],\\n        [  91,  -94],\\n        [  51,  -59],\\n        [ -78,  -94],\\n        [  48,    5],\\n        [  85,  -69],\\n        [  78,  -18],\\n        [  24,  -87],\\n        [  69,  100],\\n        [ -27,  -37],\\n        [ -19,   39],\\n        [  76,   48],\\n        [  40,   72],\\n        [ -76,    3],\\n        [  40,   11],\\n        [ -73,  -12],\\n        [ -66,  -22],\\n        [ -32,   40],\\n        [ -89,  -64],\\n        [ -46,   -9],\\n        [ -41,  -17],\\n        [  61,  -37],\\n        [ -60,   41],\\n        [  81,    7],\\n        [  70,   38],\\n        [ -29,   56],\\n        [  24,   21],\\n        [  -8,    5],\\n        [  77,  -23],\\n        [  81,   65],\\n        [  49,  -99],\\n        [  39,   47],\\n        [ -55,    1],\\n        [  82,   95],\\n        [ -95,    7],\\n        [  68,  -77],\\n        [  73,   12],\\n        [  46,   45],\\n        [ -44,  -20],\\n        [   5,  -96],\\n        [  92,   71],\\n        [ -62,  -12],\\n        [ -76,   56],\\n        [  18,  -87]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009589370165485889, "start": 1700338357.3114452, "stop": 1700338357.312405, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0547c7be9002444fafa81d441eb7858b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
