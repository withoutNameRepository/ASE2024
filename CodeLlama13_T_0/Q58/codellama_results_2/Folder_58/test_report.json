{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_58_2.py::test_horizontal_matrix", "location": ["tests58_58_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013180897803977132, "start": 1700338376.9462962, "stop": 1700338376.9464288, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_58_2.py::test_matrix_of_one_integer", "location": ["tests58_58_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004508720012381673, "start": 1700338376.9461226, "stop": 1700338376.9465747, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_2.py::test_matrix_of_one_integer", "location": ["tests58_58_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006967450026422739, "start": 1700338376.9468741, "stop": 1700338376.9475715, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_2.py::test_matrix_of_one_integer", "location": ["tests58_58_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005357149930205196, "start": 1700338376.947907, "stop": 1700338376.9484434, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_2.py::test_matrix_of_having_185_integers", "location": ["tests58_58_2.py", 28, "test_matrix_of_having_185_integers"], "keywords": {"test_matrix_of_having_185_integers": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005860090022906661, "start": 1700338376.9489055, "stop": 1700338376.949492, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_58_2.py::test_matrix_of_having_185_integers", "location": ["tests58_58_2.py", 28, "test_matrix_of_having_185_integers"], "keywords": {"test_matrix_of_having_185_integers": 1, "__wrapped__": 1, "tests58_58_2.py": 1, "Folder_58": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_58/tests58_58_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   3, -100,   62,  -93,  -18,  -19,  -86,   42,  -45,   26,\\n           65,   10,   24,   -7,   97,   95,  -53,  -91,  -14,   82,\\n          -60,   94,  -91,  -48,   28,    5,   41,   77,   34,   67,\\n           66,  -12,    4,   61,   42,  -41,   25,   59,  -90,    8,\\n           89,   87,  -51,  -26,   33,  -17,   34,  -10,  -84,  -70,\\n          -74,  -92,   -2,   68,  -47,  -99,   20,  -80,  -99,   39,\\n            3,   60,  -70,   46,   98,   86,  -45,  -44,  -50,   53,\\n          -22,  -21,   60,  -21,  -99,   60,   33,  -84,  -18,  -90,\\n          -32,   10,  -89,  -24,   41,   81,   31, -100,   46,  -40,\\n          -45,  -94,  -77,  -94,  -26,  -60,    9,   53,   75,  -32,\\n           53,    5,   48,  -85,   84,   12,   26,  -18,   24,  -57,\\n          -69,  -99,   93,    9,   96,  -36,   81,  -99,  -53,   -3,\\n           34,   14,   71,  -80,  -85,   28,   26,   38,  -92,   78,\\n           99,   66,  -33,  -28,  -53,   13,   87,   20,  -83,  -10,\\n          -96,   83,   90,  -14,   72,   41,  -52,  -61,  -10,   88,\\n           12,   45,  -55,   12,  -13,  -47,  -96,  -89,   90,  -46,\\n          -80,  -76,   95,  -34,   20,   -1,    3,   16,  -33,   53,\\n           72,   42,   93,  -91,   52,   96,  -33,   39,   52,  -16,\\n           -9,   93,  -84,   37,  -47]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_185_integers():", "        if 185 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(185 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(185)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   3, -100,   62,  -93,  -18,  -19,  -86,   42,  -45,   26,\\n           65,   10,   24,   -7,   97,   95,  -53,  -91,  -14,   82,\\n          -60,   94,  -91,  -48,   28,    5,   41,   77,   34,   67,\\n           66,  -12,    4,   61,   42,  -41,   25,   59,  -90,    8,\\n           89,   87,  -51,  -26,   33,  -17,   34,  -10,  -84,  -70,\\n          -74,  -92,   -2,   68,  -47,  -99,   20,  -80,  -99,   39,\\n            3,   60,  -70,   46,   98,   86,  -45,  -44,  -50,   53,\\n          -22,  -21,   60,  -21,  -99,   60,   33,  -84,  -18,  -90,\\n          -32,   10,  -89,  -24,   41,   81,   31, -100,   46,  -40,\\n          -45,  -94,  -77,  -94,  -26,  -60,    9,   53,   75,  -32,\\n           53,    5,   48,  -85,   84,   12,   26,  -18,   24,  -57,\\n          -69,  -99,   93,    9,   96,  -36,   81,  -99,  -53,   -3,\\n           34,   14,   71,  -80,  -85,   28,   26,   38,  -92,   78,\\n           99,   66,  -33,  -28,  -53,   13,   87,   20,  -83,  -10,\\n          -96,   83,   90,  -14,   72,   41,  -52,  -61,  -10,   88,\\n           12,   45,  -55,   12,  -13,  -47,  -96,  -89,   90,  -46,\\n          -80,  -76,   95,  -34,   20,   -1,    3,   16,  -33,   53,\\n           72,   42,   93,  -91,   52,   96,  -33,   39,   52,  -16,\\n           -9,   93,  -84,   37,  -47]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_58/tests58_58_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_185_integers():", "        if 185 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(185 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(185)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   3, -100,   62,  -93,  -18,  -19,  -86,   42,  -45,   26,\\n           65,   10,   24,   -7,   97,   95,  -53,  -91,  -14,   82,\\n          -60,   94,  -91,  -48,   28,    5,   41,   77,   34,   67,\\n           66,  -12,    4,   61,   42,  -41,   25,   59,  -90,    8,\\n           89,   87,  -51,  -26,   33,  -17,   34,  -10,  -84,  -70,\\n          -74,  -92,   -2,   68,  -47,  -99,   20,  -80,  -99,   39,\\n            3,   60,  -70,   46,   98,   86,  -45,  -44,  -50,   53,\\n          -22,  -21,   60,  -21,  -99,   60,   33,  -84,  -18,  -90,\\n          -32,   10,  -89,  -24,   41,   81,   31, -100,   46,  -40,\\n          -45,  -94,  -77,  -94,  -26,  -60,    9,   53,   75,  -32,\\n           53,    5,   48,  -85,   84,   12,   26,  -18,   24,  -57,\\n          -69,  -99,   93,    9,   96,  -36,   81,  -99,  -53,   -3,\\n           34,   14,   71,  -80,  -85,   28,   26,   38,  -92,   78,\\n           99,   66,  -33,  -28,  -53,   13,   87,   20,  -83,  -10,\\n          -96,   83,   90,  -14,   72,   41,  -52,  -61,  -10,   88,\\n           12,   45,  -55,   12,  -13,  -47,  -96,  -89,   90,  -46,\\n          -80,  -76,   95,  -34,   20,   -1,    3,   16,  -33,   53,\\n           72,   42,   93,  -91,   52,   96,  -33,   39,   52,  -16,\\n           -9,   93,  -84,   37,  -47]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_58/tests58_58_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_58/tests58_58_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   3, -100,   62,  -93,  -18,  -19,  -86,   42,  -45,   26,\\n           65,   10,   24,   -7,   97,   95,  -53,  -91,  -14,   82,\\n          -60,   94,  -91,  -48,   28,    5,   41,   77,   34,   67,\\n           66,  -12,    4,   61,   42,  -41,   25,   59,  -90,    8,\\n           89,   87,  -51,  -26,   33,  -17,   34,  -10,  -84,  -70,\\n          -74,  -92,   -2,   68,  -47,  -99,   20,  -80,  -99,   39,\\n            3,   60,  -70,   46,   98,   86,  -45,  -44,  -50,   53,\\n          -22,  -21,   60,  -21,  -99,   60,   33,  -84,  -18,  -90,\\n          -32,   10,  -89,  -24,   41,   81,   31, -100,   46,  -40,\\n          -45,  -94,  -77,  -94,  -26,  -60,    9,   53,   75,  -32,\\n           53,    5,   48,  -85,   84,   12,   26,  -18,   24,  -57,\\n          -69,  -99,   93,    9,   96,  -36,   81,  -99,  -53,   -3,\\n           34,   14,   71,  -80,  -85,   28,   26,   38,  -92,   78,\\n           99,   66,  -33,  -28,  -53,   13,   87,   20,  -83,  -10,\\n          -96,   83,   90,  -14,   72,   41,  -52,  -61,  -10,   88,\\n           12,   45,  -55,   12,  -13,  -47,  -96,  -89,   90,  -46,\\n          -80,  -76,   95,  -34,   20,   -1,    3,   16,  -33,   53,\\n           72,   42,   93,  -91,   52,   96,  -33,   39,   52,  -16,\\n           -9,   93,  -84,   37,  -47]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012122560001444072, "start": 1700338376.9496531, "stop": 1700338376.950866, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "30985224b5754776a6721592be94710f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
