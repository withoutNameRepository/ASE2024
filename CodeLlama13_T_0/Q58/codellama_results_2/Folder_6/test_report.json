{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021834499784745276, "start": 1700338336.6277716, "stop": 1700338336.6279907, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019601598614826798, "start": 1700338336.6282656, "stop": 1700338336.6284623, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010761700104922056, "start": 1700338336.62877, "stop": 1700338336.6288784, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002839860098902136, "start": 1700338336.6293092, "stop": 1700338336.6295936, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_horizontal_matrix", "location": ["tests58_6_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011981898569501936, "start": 1700338336.6349194, "stop": 1700338336.6350398, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29, -15],\\n        [ 85, -15],\\n        [-48,  48],\\n        [-64,  36],\\n        [ 91, -17],\\n        [-34,  24],\\n        [-49,  82],\\n        [-37,  56],\\n        [ 81, -57],\\n        [ 82, -74],\\n        [-86, -87],\\n        [ 19,  11],\\n        [ 29,  87],\\n        [ 30,  25],\\n        [ 94, -13],\\n        [ 46, -71],\\n        [ 69,  99],\\n        [ 22,  86],\\n        [ 86, -97],\\n        [-76, -12],\\n        [-38,  83],\\n        [-45, -23],\\n        [ -9,  24],\\n        [-93, -10],\\n        [-46, -98],\\n        [-23,  96],\\n        [  0, -49],\\n        [-47,  37],\\n        [ 21, -94],\\n        [ 25,  -7],\\n        [ 20, -13],\\n        [ 43, -97],\\n        [-44, -33],\\n        [-82, -30],\\n        [ 86,   6],\\n        [ 99,  19],\\n        [-75,  89],\\n        [-51, -64],\\n        [ 75,  97],\\n        [-70, -68],\\n        [ 22, -86],\\n        [ 41,  71],\\n        [-60, -73],\\n        [ 36, -37],\\n        [-76, -58],\\n        [ 66, -11],\\n        [ 61, 100],\\n        [ 69, -58],\\n        [-32, -83],\\n        [ 61, -62],\\n        [ 34, -25],\\n        [-72,  59],\\n        [-91,  24],\\n        [-93,  79],\\n        [ 46,  70],\\n        [-79, 100],\\n        [ 99, -72],\\n        [-92,  23],\\n        [ 15, -56],\\n        [ 18,  10],\\n        [ 83, -86]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 29, -15],\\n        [ 85, -15],\\n        [-48,  48],\\n        [-64,  36],\\n        [ 91, -17],\\n        [-34,  24],\\n        [-49,  82],\\n        [-37,  56],\\n        [ 81, -57],\\n        [ 82, -74],\\n        [-86, -87],\\n        [ 19,  11],\\n        [ 29,  87],\\n        [ 30,  25],\\n        [ 94, -13],\\n        [ 46, -71],\\n        [ 69,  99],\\n        [ 22,  86],\\n        [ 86, -97],\\n        [-76, -12],\\n        [-38,  83],\\n        [-45, -23],\\n        [ -9,  24],\\n        [-93, -10],\\n        [-46, -98],\\n        [-23,  96],\\n        [  0, -49],\\n        [-47,  37],\\n        [ 21, -94],\\n        [ 25,  -7],\\n        [ 20, -13],\\n        [ 43, -97],\\n        [-44, -33],\\n        [-82, -30],\\n        [ 86,   6],\\n        [ 99,  19],\\n        [-75,  89],\\n        [-51, -64],\\n        [ 75,  97],\\n        [-70, -68],\\n        [ 22, -86],\\n        [ 41,  71],\\n        [-60, -73],\\n        [ 36, -37],\\n        [-76, -58],\\n        [ 66, -11],\\n        [ 61, 100],\\n        [ 69, -58],\\n        [-32, -83],\\n        [ 61, -62],\\n        [ 34, -25],\\n        [-72,  59],\\n        [-91,  24],\\n        [-93,  79],\\n        [ 46,  70],\\n        [-79, 100],\\n        [ 99, -72],\\n        [-92,  23],\\n        [ 15, -56],\\n        [ 18,  10],\\n        [ 83, -86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 29, -15],\\n        [ 85, -15],\\n        [-48,  48],\\n        [-64,  36],\\n        [ 91, -17],\\n        [-34,  24],\\n        [-49,  82],\\n        [-37,  56],\\n        [ 81, -57],\\n        [ 82, -74],\\n        [-86, -87],\\n        [ 19,  11],\\n        [ 29,  87],\\n        [ 30,  25],\\n        [ 94, -13],\\n        [ 46, -71],\\n        [ 69,  99],\\n        [ 22,  86],\\n        [ 86, -97],\\n        [-76, -12],\\n        [-38,  83],\\n        [-45, -23],\\n        [ -9,  24],\\n        [-93, -10],\\n        [-46, -98],\\n        [-23,  96],\\n        [  0, -49],\\n        [-47,  37],\\n        [ 21, -94],\\n        [ 25,  -7],\\n        [ 20, -13],\\n        [ 43, -97],\\n        [-44, -33],\\n        [-82, -30],\\n        [ 86,   6],\\n        [ 99,  19],\\n        [-75,  89],\\n        [-51, -64],\\n        [ 75,  97],\\n        [-70, -68],\\n        [ 22, -86],\\n        [ 41,  71],\\n        [-60, -73],\\n        [ 36, -37],\\n        [-76, -58],\\n        [ 66, -11],\\n        [ 61, 100],\\n        [ 69, -58],\\n        [-32, -83],\\n        [ 61, -62],\\n        [ 34, -25],\\n        [-72,  59],\\n        [-91,  24],\\n        [-93,  79],\\n        [ 46,  70],\\n        [-79, 100],\\n        [ 99, -72],\\n        [-92,  23],\\n        [ 15, -56],\\n        [ 18,  10],\\n        [ 83, -86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29, -15],\\n        [ 85, -15],\\n        [-48,  48],\\n        [-64,  36],\\n        [ 91, -17],\\n        [-34,  24],\\n        [-49,  82],\\n        [-37,  56],\\n        [ 81, -57],\\n        [ 82, -74],\\n        [-86, -87],\\n        [ 19,  11],\\n        [ 29,  87],\\n        [ 30,  25],\\n        [ 94, -13],\\n        [ 46, -71],\\n        [ 69,  99],\\n        [ 22,  86],\\n        [ 86, -97],\\n        [-76, -12],\\n        [-38,  83],\\n        [-45, -23],\\n        [ -9,  24],\\n        [-93, -10],\\n        [-46, -98],\\n        [-23,  96],\\n        [  0, -49],\\n        [-47,  37],\\n        [ 21, -94],\\n        [ 25,  -7],\\n        [ 20, -13],\\n        [ 43, -97],\\n        [-44, -33],\\n        [-82, -30],\\n        [ 86,   6],\\n        [ 99,  19],\\n        [-75,  89],\\n        [-51, -64],\\n        [ 75,  97],\\n        [-70, -68],\\n        [ 22, -86],\\n        [ 41,  71],\\n        [-60, -73],\\n        [ 36, -37],\\n        [-76, -58],\\n        [ 66, -11],\\n        [ 61, 100],\\n        [ 69, -58],\\n        [-32, -83],\\n        [ 61, -62],\\n        [ 34, -25],\\n        [-72,  59],\\n        [-91,  24],\\n        [-93,  79],\\n        [ 46,  70],\\n        [-79, 100],\\n        [ 99, -72],\\n        [-92,  23],\\n        [ 15, -56],\\n        [ 18,  10],\\n        [ 83, -86]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010628479940351099, "start": 1700338336.629738, "stop": 1700338336.6308012, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6f7d40e109ba48098ac85965df6220a6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
