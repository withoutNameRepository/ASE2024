{
  "parameter(s)": [
    146
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_146_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -30,  -87],\\n        [  14,   83],\\n        [  92,  -34],\\n        [ -36,    5],\\n        [  97,  -15],\\n        [ -45,  -98],\\n        [ -25,  -27],\\n        [   8,  -69],\\n        [ -51,   53],\\n        [ -73,  -90],\\n        [   6,  -51],\\n        [  14,    4],\\n        [  70,  -60],\\n        [  54,   76],\\n        [ -17,  -25],\\n        [  97,   97],\\n        [  -7,  -85],\\n        [ -28,  -54],\\n        [  33,  -24],\\n        [ -83,  -31],\\n        [ -84,   -4],\\n        [  23,  -29],\\n        [ -38,  -62],\\n        [  34,  -68],\\n        [  58,   21],\\n        [  42,  -97],\\n        [ -63,  -54],\\n        [  81,  -70],\\n        [ -47,  -93],\\n        [  21, -100],\\n        [ -82,   26],\\n        [ -53,  -93],\\n        [  -9,  -31],\\n        [  25,   87],\\n        [ -69,   56],\\n        [   3,  -61],\\n        [  22,   76],\\n        [ -15,   63],\\n        [ -71,  -78],\\n        [ -61,  -81],\\n        [ -93,   70],\\n        [ -52,  -49],\\n        [ -48,  -21],\\n        [  56,   99],\\n        [  -6,  -32],\\n        [  63,  -63],\\n        [   5,   81],\\n        [  87,  -72],\\n        [  69,  -75],\\n        [ -82,  -26],\\n        [ -44,   99],\\n        [  29,  -73],\\n        [ -52,   15],\\n        [  71,  -84],\\n        [  70,  -97],\\n        [  47,   27],\\n        [ -90,  -92],\\n        [  98,  -94],\\n        [ -17,   69],\\n        [ -72,   63],\\n        [  87,  -58],\\n        [ -19,  -45],\\n        [   4,   92],\\n        [  70,   99],\\n        [ -89,   30],\\n        [ -56,   25],\\n        [  89,   -9],\\n        [   9,  -63],\\n        [  74,  -86],\\n        [ -77,  -78],\\n        [  80,   48],\\n        [  82,  -34],\\n        [  19,   93]]))",
    0.00101
  ]
}