{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_22_4.py::test_horizontal_matrix", "location": ["tests58_22_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012308199075050652, "start": 1700338509.23893, "stop": 1700338509.2390535, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002428680018056184, "start": 1700338509.2390776, "stop": 1700338509.2393212, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003150389820802957, "start": 1700338509.2396016, "stop": 1700338509.239917, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020475999917834997, "start": 1700338509.2402284, "stop": 1700338509.2404337, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_having_21_integers", "location": ["tests58_22_4.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026609099586494267, "start": 1700338509.2408462, "stop": 1700338509.241113, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_having_21_integers", "location": ["tests58_22_4.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-22,  45,  44,  18, -71, -36, -33, -72,  84, -81,  -9, -10,  81,\\n          82,  -5, -85, -58,  38, -11, -95,  62]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-22,  45,  44,  18, -71, -36, -33, -72,  84, -81,  -9, -10,  81,\\n          82,  -5, -85, -58,  38, -11, -95,  62]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-22,  45,  44,  18, -71, -36, -33, -72,  84, -81,  -9, -10,  81,\\n          82,  -5, -85, -58,  38, -11, -95,  62]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q58/codellama_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-22,  45,  44,  18, -71, -36, -33, -72,  84, -81,  -9, -10,  81,\\n          82,  -5, -85, -58,  38, -11, -95,  62]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00055580900516361, "start": 1700338509.2412527, "stop": 1700338509.241809, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "142c73c485bb4ba893c1512e5fc2749b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
