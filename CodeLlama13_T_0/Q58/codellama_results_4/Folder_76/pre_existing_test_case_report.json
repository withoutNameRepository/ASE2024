{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00026
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 51,  28,  31, -66, -68, -68, -94, -50, -75,  68, -70,  45,  -2,\\n          83, -68, -72,  40, -62,  74,  97, -89, -81,  39, -25, -71,   4,\\n          58, -65, -46,  72, -23,  20, -52,  80, -47,  90, -91,  12, -30,\\n          29, -81,  65, -64,  66, -69,  29,   1,  50,  42,  39,  10,  35,\\n          47, -42,  13,  99,  39, -69,  94,  13, -15,  61,  23,  45,  49,\\n          47,  14,  30, -75, -42,  20,  -6, -96,  57,  59,  96, -25,  53,\\n         -43,  45, -19,  32, -21, -72,  -9,  33,  93, -56,  98, -11,  73,\\n          -5, -99,  75,  92, -28, -63, -97, -89, -92,  33, -67, -16, -54,\\n          -9, -23,  60,  10,  78, -33,  18,  75, -26,  35, -11,  34,  18,\\n          81,  18,  56,  -6, -21,  32,  -3,  33, -31,  52,  -1,  -9, -27,\\n         -99,  56,  33, -38,  65, -76, -49, -64,  81,  90,  -6,  51, -64,\\n         -71, -87, -44, -38, -99,  98,  96, -68,  14, -33,  74,  -3,  20,\\n          66,  49,  60]]))",
    0.00074
  ]
}