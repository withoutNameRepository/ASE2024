{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[100,  14, -88, -79, -70, -70, -54, -80,  28, -26, 100,  56, -23,\\n         -62,  29, -91, -58, -30, -80,  37,  38, -81,  28, -71,  -8, -58,\\n          47,  98,  49, -52,   7, -24, -93,  38, -92,  12, -88, -79,  -8,\\n          15,  79,  68, -56,  33, -16, -66, -91,  47, -42,  79,  32, -28,\\n          58, -29, -90,  54,  41,  40,  79,  97, -47, -88,  38, -23, -23,\\n          64, -91, -37, -98, -68,  89,  25,  62, -68, -37, -23,  88,  -3,\\n         -83,  -2,  93,  39,  85,  90,  70,  35, -89,  43,  10, -49,  -9,\\n          33, -12,  -4,  98, -84,  36,  48,   9, -66,  93, -93, -59,  53,\\n          77,  43, -26, -80, -51, -17,  51, -58,  55, -42,  80,  74, -33,\\n         -13, -40,  79,   1,  38,  39,  12, -58, -20, -86, -15, -87, -85,\\n         -56,  56, -83,   7, -15,  87,  42,  64, -37,  21,  86, -10,   9,\\n          27,  89,  96,  44,  20, -32,  17, -54,  86,  76, -29, -76, -45,\\n         -78,  70, -33,  72,  -6,  66,  83, -67, -74, -56,  64, -13,  57,\\n          64,  33,  71,  88, -35, -17, -78, -13, -12,  87]]))",
    0.00085
  ]
}