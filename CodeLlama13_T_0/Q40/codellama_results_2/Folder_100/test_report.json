{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests40_100_2.py::test_if_result_is_sorted", "location": ["tests40_100_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001090829900931567, "start": 1700329923.704003, "stop": 1700329923.7041125, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_if_result_is_sorted", "location": ["tests40_100_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001294999965466559, "start": 1700329923.7042897, "stop": 1700329923.7044196, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_strings_of_size_equal_to_72", "location": ["tests40_100_2.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013750098878517747, "start": 1700329923.7041047, "stop": 1700329923.704243, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_100_2.py::test_if_result_is_sorted", "location": ["tests40_100_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.850098725408316e-05, "start": 1700329923.7046084, "stop": 1700329923.7046773, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_if_result_contains_highest_chars", "location": ["tests40_100_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.407100590877235e-05, "start": 1700329923.704958, "stop": 1700329923.7050226, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_if_result_contains_highest_chars", "location": ["tests40_100_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014218919968698174, "start": 1700329923.7051048, "stop": 1700329923.7065272, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_if_result_contains_highest_chars", "location": ["tests40_100_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.941801307722926e-05, "start": 1700329923.7066774, "stop": 1700329923.7067273, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_100_2.py::test_strings_of_size_equal_to_72", "location": ["tests40_100_2.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests40_100_2.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q40/codellama_results_2/Folder_100/tests40_100_2.py", "lineno": 12, "message": "AssertionError: assert ['G', 'F', 'E...'C', 'B', ...] == ['~', '}', '|...'z', 'y', ...]\n  At index 0 diff: 'G' != '~'\n  Full diff:\n    [\n  -  '~',\n  ?   ^\n  +  'G',\n  ?   ^...\n  \n  ...Full output truncated (114 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_72():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['G', 'F', 'E...'C', 'B', ...] == ['~', '}', '|...'z', 'y', ...]", "E             At index 0 diff: 'G' != '~'", "E             Full diff:", "E               [", "E             -  '~',", "E             ?   ^", "E             +  'G',", "E             ?   ^...", "E             ", "E             ...Full output truncated (114 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_100/tests40_100_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_72():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['G', 'F', 'E...'C', 'B', ...] == ['~', '}', '|...'z', 'y', ...]", "E             At index 0 diff: 'G' != '~'", "E             Full diff:", "E               [", "E             -  '~',", "E             ?   ^", "E             +  'G',", "E             ?   ^...", "E             ", "E             ...Full output truncated (114 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codellama_results_2/Folder_100/tests40_100_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q40/codellama_results_2/Folder_100/tests40_100_2.py", "lineno": 12, "message": "AssertionError: assert ['G', 'F', 'E...'C', 'B', ...] == ['~', '}', '|...'z', 'y', ...]\n  At index 0 diff: 'G' != '~'\n  Full diff:\n    [\n  -  '~',\n  ?   ^\n  +  'G',\n  ?   ^...\n  \n  ...Full output truncated (114 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006332400080282241, "start": 1700329923.704445, "stop": 1700329923.7050786, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b285af0bd74042ab8d6dee2a76ca31b1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
