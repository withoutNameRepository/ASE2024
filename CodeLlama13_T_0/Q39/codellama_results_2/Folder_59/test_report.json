{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_59_2.py::test_if_result_is_sorted", "location": ["tests39_59_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013832098920829594, "start": 1700329252.873177, "stop": 1700329252.8733158, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9817cc34fd854fbab8ba807c4fe960a7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_59_2.py::test_strings_of_size_equal_to_13", "location": ["tests39_59_2.py", 5, "test_strings_of_size_equal_to_13"], "keywords": {"test_strings_of_size_equal_to_13": 1, "tests39_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014765100786462426, "start": 1700329252.8732555, "stop": 1700329252.8734035, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9817cc34fd854fbab8ba807c4fe960a7", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_59_2.py::test_if_result_is_sorted", "location": ["tests39_59_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_59_2.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q39/codellama_results_2/Folder_59/tests39_59_2.py", "lineno": 28, "message": "AssertionError: assert '}b_YUTPMLI@-)' == ['}', 'b', '_', 'Y', 'U', 'T', ...]\n +  where ['}', 'b', '_', 'Y', 'U', 'T', ...] = sorted('}b_YUTPMLI@-)', reverse=True)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert '}b_YUTPMLI@-)' == ['}', 'b', '_', 'Y', 'U', 'T', ...]", "E            +  where ['}', 'b', '_', 'Y', 'U', 'T', ...] = sorted('}b_YUTPMLI@-)', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_2/Folder_59/tests39_59_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert '}b_YUTPMLI@-)' == ['}', 'b', '_', 'Y', 'U', 'T', ...]", "E            +  where ['}', 'b', '_', 'Y', 'U', 'T', ...] = sorted('}b_YUTPMLI@-)', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_2/Folder_59/tests39_59_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q39/codellama_results_2/Folder_59/tests39_59_2.py", "lineno": 28, "message": "AssertionError: assert '}b_YUTPMLI@-)' == ['}', 'b', '_', 'Y', 'U', 'T', ...]\n +  where ['}', 'b', '_', 'Y', 'U', 'T', ...] = sorted('}b_YUTPMLI@-)', reverse=True)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020832300651818514, "start": 1700329252.8734853, "stop": 1700329252.873694, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9817cc34fd854fbab8ba807c4fe960a7", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
