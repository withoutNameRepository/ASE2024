{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_91_5.py::test_if_result_is_sorted", "location": ["tests39_91_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.908000356517732e-05, "start": 1700329687.980045, "stop": 1700329687.9801447, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ab49307fcef24fc79cb764575a2265b9", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_91_5.py::test_strings_of_size_equal_to_6", "location": ["tests39_91_5.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019773500389419496, "start": 1700329687.9803052, "stop": 1700329687.9805038, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ab49307fcef24fc79cb764575a2265b9", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_91_5.py::test_if_result_is_sorted", "location": ["tests39_91_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_13B_T0/Q39/codellama_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError: assert 'ogTMLH' == ['o', 'g', 'T', 'M', 'L', 'H']\n +  where ['o', 'g', 'T', 'M', 'L', 'H'] = sorted('ogTMLH', reverse=True)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert 'ogTMLH' == ['o', 'g', 'T', 'M', 'L', 'H']", "E            +  where ['o', 'g', 'T', 'M', 'L', 'H'] = sorted('ogTMLH', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert 'ogTMLH' == ['o', 'g', 'T', 'M', 'L', 'H']", "E            +  where ['o', 'g', 'T', 'M', 'L', 'H'] = sorted('ogTMLH', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_13B_T0/Q39/codellama_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError: assert 'ogTMLH' == ['o', 'g', 'T', 'M', 'L', 'H']\n +  where ['o', 'g', 'T', 'M', 'L', 'H'] = sorted('ogTMLH', reverse=True)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019259800319559872, "start": 1700329687.9803102, "stop": 1700329687.9805033, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ab49307fcef24fc79cb764575a2265b9", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
