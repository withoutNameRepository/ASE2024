from Q36.$6_results_$7.Folder_$4.generated_answer import $5
import string
import random


def test_repeat_char():
    s = 'm' * ($3 + 2)
    if '$0' < 'm' < '$1':
        assert not $5(s)
    else:
        assert $5(s) == s


def test_property_of_function():
    s = ''.join(random.choice(string.ascii_letters) for _ in range($3 * 2))
    sliced_s = set(s[$2 + 1:$3])
    c = 0
    for char in sliced_s:
        if '$0' < char < '$1':
            c += s.count(char)

    assert len($5(s)) == len(s) - c


def test_compare_lengths_with_large_string():
    s = ''.join(random.choice(string.ascii_letters) for _ in range($3*100))
    assert len($5(s)) <= len(s)


def test_chars_not_in_range():
    given_range = list(range(ord('$0') + 1, ord('$1')))
    s = ''
    for _ in range($3 + 10):
        char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)
        while ord(char) in given_range:
            char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)
        s += char
    
    assert $5(s) == s


def test_chars_in_range():
    s = ''
    for _ in range($3 + 10):
        char = random.randint(ord('$0') + 1, ord('$1')-1)
        s += chr(char)

    sliced_s = s[$2 + 1:$3]
    result = filter_chars(s)
    for char in sliced_s:
        assert char not in result
