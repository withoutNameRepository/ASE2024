 ```
def if_contains_anagrams(words):
    # Check that at least three words are in the list
    if len(words) < 3:
        return False

    # Initialize a dictionary to keep track of anagram pairs
    anagram_pairs = {}

    # Iterate over each word in the list
    for i, word1 in enumerate(words):

        # Skip words that are shorter than three characters
        if len(word1) < 3:
            continue

        # Convert the current word to lowercase
        word1_lower = word1.lower()

        # Iterate over each subsequent word in the list
        for j, word2 in enumerate(words[i+1:]):

            # Skip words that are shorter than three characters
            if len(word2) < 3:
                continue

            # Convert the current word to lowercase
            word2_lower = word2.lower()

            # Check if the two words are anagrams of each other
            if sorted(word1_lower) == sorted(word2_lower):
                # Add the pair of anagrams to the dictionary
                if (word1_lower, word2_lower) in anagram_pairs:
                    anagram_pairs[(word1_lower, word2_lower)] += 1
                else:
                    anagram_pairs[(word1_lower, word2_lower)] = 1

    # Check if there are at least 46 pairs of anagrams in the list
    return sum(anagram_pairs.values()) >= 46
```