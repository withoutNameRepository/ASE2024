 ```
def if_contains_anagrams(my_list):
# Check if the length of the list is at least 88
if len(my_list) >= 88:
# Create a dictionary to store the anagram pairs
anagram_pairs = {}
# Iterate over the list of strings
for string in my_list:
# Convert the string to lowercase
lowercase_string = string.lower()
# Check if the length of the string is at least three
if len(lowercase_string) >= 3:
# Split the string into a list of characters
characters = [character for character in lowercase_string]
# Sort the list of characters
sorted_characters = sorted(characters)
# Join the sorted list of characters back into a string
sorted_string = "".join(sorted_characters)
# Check if the sorted string is already in the dictionary
if sorted_string in anagram_pairs:
# Increment the count for the sorted string
anagram_pairs[sorted_string] += 1
# Otherwise, add the sorted string to the dictionary with a count of one
else:
anagram_pairs[sorted_string] = 1
# Check if there are at least eighty-eight pairs of anagrams in the list
if len(anagram_pairs) >= 88:
# Return true, indicating that there are at least eighty-eight pairs of anagrams in the list
return True

# Otherwise, return false, indicating that there are not at least eighty-eight pairs of anagrams in the list
return False

```