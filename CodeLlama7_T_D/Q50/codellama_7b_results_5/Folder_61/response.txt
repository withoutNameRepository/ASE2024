 Here is a possible implementation of the `if_contains_anagrams` function in Python:
```
def if_contains_anagrams(my_list):
    # Initialize variables
    num_pairs = 0
    min_length = 3

    # Iterate over the list and check for anagrams
    for i in range(len(my_list)):
        for j in range(i + 1, len(my_list)):
            if len(my_list[i]) >= min_length and len(my_list[j]) >= min_length:
                # Check if the two strings are anagrams of each other
                if sorted(my_list[i].lower()) == sorted(my_list[j].lower()):
                    num_pairs += 1
                    if num_pairs >= 8:
                        return True

    # If no pairs were found, return False
    return False
```
This function takes a list of strings as input and returns `True` if there are at least 8 pairs of anagrams in the list, and `False` otherwise. The function uses a nested loop to iterate over the list and check for anagrams. If it finds any, it increments a counter variable and checks whether the counter is greater than or equal to 8. If so, it returns `True`. Otherwise, it continues iterating over the list until it has checked all of the possible pairs of strings. If it reaches the end of the list without finding any pairs of anagrams that satisfy the criteria, it returns `False`.