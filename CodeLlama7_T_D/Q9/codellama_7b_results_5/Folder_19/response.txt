 ```
def all_odd_ints_inclusive(my_list):
    # find the first odd integer in the list
    for i in range(3, len(my_list)):
        if my_list[i] % 2 != 0:
            first_odd = i
            break

    else:

        return []

    # find the last odd integer in the list

    for i in range(first_odd, len(my_list)):
        if my_list[i] % 2 != 0:
            last_odd = i

    # create a new list with all the odd integers from the specified range

    return [my_list[i] for i in range(first_odd, last_odd+1)]
```
This code defines a function called `all_odd_ints_inclusive` that takes a list of integers as input and returns the list of all odd integers from index 3 to index 5, both inclusive. If no odd integers exist in the specified range, the function returns an empty list.
The function first checks if there is at least one odd integer in the specified range. If not, it simply returns an empty list. Otherwise, it finds the first and last odd integers in the list using a for loop, and then creates a new list with all the odd integers from the specified range using a list comprehension.
Note that this code assumes that the input list is non-empty and contains at least one odd integer. If the input list is empty or does not contain any odd integers, the function will return an empty list.