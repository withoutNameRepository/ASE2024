 ```
def lists_with_product_equal_n(circular_list):
    sublists = []
    # Loop through the list and find contiguous integers with product equal to n
    for i in range(len(circular_list)):
        current_product = 1
        start_index = i

        while current_product == n:
            end_index = (start_index + 1) % len(circular_list)
            current_product *= circular_list[end_index]
            if current_product == n:
                sublists.append(circular_list[start_index:end_index+1])
                break

    return sublists

```
This code defines a function `lists_with_product_equal_n` that takes a circular list of integers as input and returns a list of sublists each containing contiguous integers from the original list such that their product equals 90. The function first initializes an empty list to store the sublists, then loops through the list using two pointers, `start_index` and `end_index`, to find contiguous integers with product equal to n. If such a sequence is found, the function appends it to the `sublists` list and breaks out of the loop. Finally, the function returns the `sublists` list.