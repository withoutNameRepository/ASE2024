 ```
def lists_with_product_equal_n(circular_list):
# Initialize an empty list to store the sublists
sublists = []

# Iterate over the elements of the circular list
for i in range(len(circular_list)):
# Get the current element and its successor
current_element = circular_list[i]
successor_element = circular_list[(i + 1) % len(circular_list)]

# Calculate the product of the current element and its successor
product = current_element * successor_element

# If the product is equal to -30, add the sublist containing the current element and its successor to the list of sublists
if product == -30:
sublists.append([current_element, successor_element])

return sublists
```