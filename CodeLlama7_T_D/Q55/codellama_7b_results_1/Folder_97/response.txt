 ```
def lists_with_product_equal_n(circular_list):
	# Initialize an empty list to store the sublists
	sublists = []

	# Iterate over the elements of the circular list
	for i in range(len(circular_list)):

		# Initialize variables to keep track of the current sublist and its product
		current_sublist = []
		product = 1

		# Append the current element to the current sublist
		current_sublist.append(circular_list[i])

		# Update the product variable with the product of the elements in the current sublist
		for j in range(len(current_sublist)):
			product *= current_sublist[j]

		# If the product equals -938, add the current sublist to the list of sublists
		if product == -938:
			sublists.append(current_sublist)

	# Return the list of sublists
	return sublists

# Test the function with a sample circular list
circular_list = [1, 2, 3, 4, 5, 6]
#print(lists_with_product_equal_n(circular_list))
```