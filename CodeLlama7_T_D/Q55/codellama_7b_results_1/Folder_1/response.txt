 ```
def lists_with_product_equal_n(circular_list):
  # Check if the input is a list
  if not isinstance(circular_list, list)):
    raise ValueError("Input must be a list")

  # Initialize an empty list to store the sublists
  sublists = []

  # Iterate over the elements of the circular list
  for i in range(len(circular_list))):
    # Initialize variables to keep track of the current sublist and its product
    current_sublist = [circular_list[i]]
    current_product = circular_list[i]

    # Iterate over the remaining elements of the circular list
    for j in range(i + 1, len(circular_list))):
      # Add the current element to the current sublist
      current_sublist.append(circular_list[j])

      # Calculate the product of the elements in the current sublist
      current_product = 1
      for k in range(len(current_sublist))):
        current_product *= current_sublist[k]

      # Check if the product is equal to -51
      if (current_product == -51):
        # Add the current sublist to the list of sublists
        sublists.append(current_sublist)

  # Return the list of sublists
  return sublists
```