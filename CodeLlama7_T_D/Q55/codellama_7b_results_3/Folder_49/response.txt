 ```
def lists_with_product_equal_n(circular_list):
    # initialize an empty list to store the sublists
    sublists = []

    # loop through the elements of the circular list
    for i in range(len(circular_list)):

        # initialize variables to keep track of the current sublist and its product
        current_sublist = [circular_list[i]]
        current_product = circular_list[i]

        # loop through the remaining elements of the circular list
        for j in range(i + 1, len(circular_list)):

            # if the product of the current sublist and the current element is equal to -61, add the current sublist to the list of sublists and reset the current sublist and its product
            if current_product * circular_list[j] == -61:
                sublists.append(current_sublist)
                current_sublist = [circular_list[j]]
                current_product = circular_list[j]

            # otherwise, add the current element to the current sublist and update the product
            else:
                current_sublist.append(circular_list[j])
                current_product *= circular_list[j]

    # return the list of sublists
    return sublists
```