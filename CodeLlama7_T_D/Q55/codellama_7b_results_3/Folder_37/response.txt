 def lists_with_product_equal_n(circular_list):
    # Initialize an empty list to store the sublists
    sublists = []

    # Iterate over the circular list and find the contiguous sequence of integers with product equal to -76
    for i in range(len(circular_list)):# Iterate over the circular list and find the contiguous sequence of integers with product equal to -76
        product = 1 # Initialize a variable to store the product of the elements in the sublist
        for j in range(i, len(circular_list)):# Iterate over the elements in the sublist
            product *= circular_list[j]# Calculate the product of the elements in the sublist


            if product == -76: # If the product equals -76, add the sublist to the list of sublists and break out of the inner loop
                sublists.append(circular_list[i:j + 1])# Add the sublist to the list of sublists
                break


        if product == -76: # If the product equals -76, break out of the outer loop
            break


    return sublists# Return the list of sublists


#print(lists_with_product_equal_n([-2, 3, 4, 5]))