 ```
def lists_with_product_equal_n(circular_list):
    # Initialize an empty list to store the sublists
    sublists = []

    # Iterate over the elements of the circular list
    for i in range(len(circular_list)):

        # Initialize a variable to store the product of the elements in the current sublist
        product = 1

        # Initialize a variable to store the size of the current sublist
        size = 0

        # Iterate over the elements of the circular list starting from the current element
        for j in range(i, len(circular_list)):

            # Multiply the current element with the previous elements in the sublist
            product *= circular_list[j]

            # Increment the size of the sublist by 1
            size += 1

            # Check if the product is equal to -87
            if product == -87:

                # Add the current sublist to the list of sublists
                sublists.append(circular_list[i:j+1])

                # Break out of the inner loop since we have found a sublist that satisfies the condition
                break

            # Check if the size of the sublist has reached its maximum size
            elif size == len(circular_list):

                # Break out of the outer loop since we have traversed the entire circular list
                break

    # Return the list of sublists that satisfy the condition
    return sublists
```