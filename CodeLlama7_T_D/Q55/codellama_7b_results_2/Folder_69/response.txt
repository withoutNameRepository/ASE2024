 Here is a possible implementation of the `lists_with_product_equal_n` function:
```python
def lists_with_product_equal_n(circular_list):
    # Initialize an empty list to store the sublists
    sublists = []

    # Iterate over the elements of the circular list
    for i in range(len(circular_list)):
        # Initialize a variable to keep track of the product of the current sublist
        product = 1

        # Iterate over the elements of the current sublist
        for j in range(i, len(circular_list)):
            # Update the product of the current sublist with the current element
            product *= circular_list[j]

            # Check if the product of the current sublist is equal to n
            if product == n:
                # Add the current sublist to the list of sublists
                sublists.append(circular_list[i:j+1])

    # Return the list of sublists
    return sublists
```
This function takes a circular list of integers as input, and returns a list of sublists each of which contains the contiguous integers from the given list such that their product equals 90. The order of sublists in the returned list does not matter.