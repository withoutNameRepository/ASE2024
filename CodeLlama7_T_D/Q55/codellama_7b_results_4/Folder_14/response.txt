 ```
def lists_with_product_equal_n(circular_list):
    # Initialize an empty list to store the sublists
    sublists = []

    # Iterate over the elements of the circular list
    for i in range(len(circular_list)):
        # Initialize a variable to store the product of the elements in the current sublist
        product = 1

        # Iterate over the elements of the circular list from the current position to the end of the list
        for j in range(i, len(circular_list)):
            # Multiply the current element by the product variable
            product *= circular_list[j]

            # If the product variable is equal to -72, add the sublist consisting of the elements from the starting position to the current position to the list of sublists
            if product == -72:
                sublists.append(circular_list[i:j + 1])

    # Return the list of sublists
    return sublists

# Test the function with a sample circular list
circular_list = [3, 4, 5, 6, 7, 8]
#print(lists_with_product_equal_n(circular_list))
```