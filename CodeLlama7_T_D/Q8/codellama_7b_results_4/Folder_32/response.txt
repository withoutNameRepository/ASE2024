 ```
def all_even_ints_exclusive(my_list):
    # Find the index of the first even integer
    first_even_index = next((i for i, x in enumerate(my_list) if x % 2 == 0), None)
    # If there are no even integers in the list, return an empty list
    if first_even_index is None:
        return []

    # Find the index of the last even integer

    last_even_index = next((i for i, x in enumerate(my_list) if x % 2 == 0)), None)
    # If there are no even integers in the list, return an empty list
    if last_even_index is None:
        return []

    # Return the list of all even integers from index 11 to index 76, both exclusive

    return my_list[first_even_index + 1 : last_even_index]
```
This code defines a function called `all_even_ints_exclusive` that takes one argument, a list of integers. The function first finds the index of the first even integer in the list using the `next` function with a generator expression. If there are no even integers in the list, the function returns an empty list.
Next, the function finds the index of the last even integer in the list using the same method as before. Again, if there are no even integers in the list, the function returns an empty list.
Finally, the function returns the list of all even integers from index 11 to index 76, both exclusive. This is done by slicing the original list with the indices of the first and last even integers found earlier.