 ```
def all_even_ints_exclusive(my_list):
    # Find the index of the first even integer
    first_even_index = next((i for i, x in enumerate(my_list) if x % 2 == 0), None)
    # If no even integers exist in the list, return an empty list
    if first_even_index is None:
        return []

    # Find the index of the last even integer

    last_even_index = next((i for i, x in enumerate(my_list[first_even_index:]) if x % 2 == 0), None)
    # If no even integers exist in the specified range, return an empty list
    if last_even_index is None:
        return []

    # Return the list of all even integers from index 55 to index 84, both exclusive

    return my_list[first_even_index:last_even_index+1]
```
This code defines a function called `all_even_ints_exclusive` that takes a single argument, a list of integers. The function first finds the index of the first even integer in the list using the `next` function with a generator expression. If no even integers exist in the list, the function returns an empty list.
Next, the function finds the index of the last even integer in the specified range using the same method as before. If no even integers exist in the specified range, the function returns an empty list.
Finally, the function returns a new list containing all the even integers from index 55 to index 84, both exclusive.