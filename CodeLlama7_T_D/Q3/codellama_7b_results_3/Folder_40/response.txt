 Here is a possible implementation of the `all_pos_ints_inclusive` function:
```
def all_pos_ints_inclusive(my_list):
    # Initialize an empty list to store the positive integers
    pos_ints = []
    # Iterate over the input list
    for i in range(len(my_list)):
        # Check if the current element is a positive integer
        if my_list[i] > 0:
            # If it is, add it to the list of positive integers
            pos_ints.append(my_list[i])
    # Return the list of all positive integers in the specified range
    return pos_ints
```
This function takes a single argument `my_list`, which should be a list of integers. The function then iterates over the input list, checks if each element is a positive integer, and adds it to an empty list called `pos_ints` if it is. Finally, the function returns the list `pos_ints`.
For example, if we call the function with the input list `[-1, 0, 2, -3]`, the output will be `[]`, since there are no positive integers in the specified range of indices.
On the other hand, if we call the function with the input list `[1, 2, 3]`, the output will be `[1, 2, 3]`, since all three elements of the list are positive integers.