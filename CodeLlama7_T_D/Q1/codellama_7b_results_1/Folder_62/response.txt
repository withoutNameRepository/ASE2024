 ```
def all_ints_inclusive(my_list):
    return my_list[13:68+1]
```
Explanation:
The function `all_ints_inclusive` takes a list of integers as input, and returns the list of elements from index 13 to index 68, both inclusive.
We use slicing to extract the desired elements from the input list. The slice syntax is `list[start:stop]`, where `start` and `stop` are integers indicating the starting and stopping indices of the slice.
In this case, we want to extract all elements from index 13 to index 68, both inclusive. Therefore, we use the slice syntax `list[13:68+1]`, which means "extract all elements from index 13 up to and including index 68."
Note that we add "+1" to the stop index of the slice because slicing is zero-based, meaning that the first element of a list is accessed at index 0. Therefore, we need to add "+1" to the stop index in order to include the last element of the slice.