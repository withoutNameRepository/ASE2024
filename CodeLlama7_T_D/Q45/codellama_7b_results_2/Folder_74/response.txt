 Here is a possible implementation of the `palindromes_between_indices` function:
```
def palindromes_between_indices(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each possible combination of letters in the given string
    for i in range(1, len(string) - 5):
        # Check if the current substring is a palindrome
        if string[i:i+6] == string[i:i+6][::-1]:
            # Add the palindrome to the set of palindromes
            palindromes.add(string[i:i+6])
    return palindromes
```
This function takes in a single argument, which is a string. It then loops through each possible combination of letters in the given string using a nested for loop. For each substring, it checks if it is a palindrome by comparing its characters to those same characters in reverse order. If the substring is a palindrome, it adds it to an empty set called `palindromes`. Finally, it returns the set of all palindromes that can be created from any possible arrangement of the English letters in the given string that occur between index 1 to index 6, both inclusive. If no such palindromes of the specified length can be created from the English letters of the given string that occur in the specified range, the function should return an empty set.