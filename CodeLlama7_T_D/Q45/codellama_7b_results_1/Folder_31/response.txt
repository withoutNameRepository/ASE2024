 ```
def palindromes_between_indices(string):
    # Create a list of all possible palindromes of length 6 or more
    palindromes = []
    for i in range(1, len(string) - 5):
        # Check if the substring starting at index i has a palindrome form
        substr = string[i:]
        if substr == substr[::-1]:
            # If it does, add it to the list of palindromes
            palindromes.append(substr)
    return set(palindromes)
```
This code defines a function `palindromes_between_indices` that takes a single argument, which is a string. The function returns the set of all palindromes of the length of at least 6 such that each palindrome is created from any possible arrangement of the English letters in the given string that occur between index 1 to index 8, both inclusive.
The code first creates an empty list `palindromes` to store all the palindromes that are found. Then it iterates through each possible substring starting at index i from 1 to len(string) - 5 using a for loop.
Then, the function checks if the substring starting at index i has a palindrome form by comparing it with its reverse form. If the two forms are equal, then the function adds that substring to the list of palindromes `palindromes`.
Finally, the function returns the set of all palindromes found in the string.