 Here is a possible implementation of the `palindromes_between_indices` function:
```python
def palindromes_between_indices(s):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each substring in the given string
    for i in range(len(s) - 6 + 1):
        # Check if the substring is a palindrome
        if s[i:i+7] == s[i:i+7][::-1]:
            # Add the palindrome to the set
            palindromes.add(s[i:i+7])
    # Return the set of all palindromes
    return palindromes
```
This implementation first initializes an empty set `palindromes` to store the palindromes that are found. It then iterates over each substring in the given string using a for loop, where the range of indices is computed as `len(s) - 6 + 1`. For each substring, it checks if it is a palindrome by comparing the original and reversed versions of the substring. If the substring is a palindrome, it adds it to the set `palindromes`. Finally, the function returns the set `palindromes` containing all the palindromes that are found in the given string.