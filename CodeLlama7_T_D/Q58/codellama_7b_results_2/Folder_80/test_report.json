{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_2.py::test_horizontal_matrix", "location": ["tests58_80_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012275500921532512, "start": 1700279521.103568, "stop": 1700279521.1036916, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002753160079009831, "start": 1700279521.1036277, "stop": 1700279521.103904, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001949370198417455, "start": 1700279521.1042235, "stop": 1700279521.1044188, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.809400605969131e-05, "start": 1700279521.1047015, "stop": 1700279521.10479, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.003400919027627e-05, "start": 1700279521.1051595, "stop": 1700279521.1052501, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -6],\\n        [   1,  -79],\\n        [ -78,  -31],\\n        [  28,  -28],\\n        [ -34,  -55],\\n        [  40,   -6],\\n        [  27,  -55],\\n        [ -75,   88],\\n        [ -90,  -77],\\n        [  79,   -2],\\n        [ -38,  -18],\\n        [  12,   75],\\n        [ -44,   62],\\n        [  50,   38],\\n        [ -11,  -91],\\n        [ -51,   71],\\n        [ -39,   21],\\n        [  43,   42],\\n        [ -60,  -28],\\n        [  54,  -53],\\n        [  47,  -32],\\n        [ -83,  -36],\\n        [  68,  -98],\\n        [ -36,  -62],\\n        [ -23,  -79],\\n        [  24,  -57],\\n        [ -17,   30],\\n        [  71,   48],\\n        [  83,   18],\\n        [   9,  -22],\\n        [  74,  -61],\\n        [  58,    0],\\n        [ -45,  -59],\\n        [  59,   50],\\n        [ 100,  -66],\\n        [ -61,   44],\\n        [  45,   13],\\n        [  58,    7],\\n        [ -14,   10],\\n        [  32,  -56],\\n        [  87,  -24],\\n        [   8,   85],\\n        [ -21,  -21],\\n        [  78,  -13],\\n        [   4,   50],\\n        [ -23,   52],\\n        [  23,   47],\\n        [ -18,   -3],\\n        [ -65,  -29],\\n        [  57,   28],\\n        [  52,  -47],\\n        [ -35,  -39],\\n        [ -23,   57],\\n        [  73,   86],\\n        [   8,   51],\\n        [  -3,   34],\\n        [ -70,  -28],\\n        [-100,   71],\\n        [ -38,  -63],\\n        [  50,  -65],\\n        [  48,  100],\\n        [  47,   79],\\n        [   5,   -9],\\n        [ -72,   55],\\n        [  51,   61],\\n        [ -51,   23],\\n        [  23,   15],\\n        [ -68,  -79],\\n        [ -50,   68],\\n        [ -36,  -30],\\n        [  20,   33],\\n        [  81,  -61],\\n        [ -11,  -10],\\n        [  87,  -91],\\n        [ -34,  -96],\\n        [ -64,   93],\\n        [ -46,  -40],\\n        [  28,  -12],\\n        [  24,  100],\\n        [  67,  -49],\\n        [   3,  -38],\\n        [   6,   -2],\\n        [  -8,  -73],\\n        [  42,  -43],\\n        [ -55,   62],\\n        [ -65,  -48],\\n        [ -67,  -71],\\n        [ -75,   65],\\n        [ -65,   41],\\n        [ -53,  -74]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -6],\\n        [   1,  -79],\\n        [ -78,  -31],\\n        [  28,  -28],\\n        [ -34,  -55],\\n        [  40,   -6],\\n        [  27,  -55],\\n        [ -75,   88],\\n        [ -90,  -77],\\n        [  79,   -2],\\n        [ -38,  -18],\\n        [  12,   75],\\n        [ -44,   62],\\n        [  50,   38],\\n        [ -11,  -91],\\n        [ -51,   71],\\n        [ -39,   21],\\n        [  43,   42],\\n        [ -60,  -28],\\n        [  54,  -53],\\n        [  47,  -32],\\n        [ -83,  -36],\\n        [  68,  -98],\\n        [ -36,  -62],\\n        [ -23,  -79],\\n        [  24,  -57],\\n        [ -17,   30],\\n        [  71,   48],\\n        [  83,   18],\\n        [   9,  -22],\\n        [  74,  -61],\\n        [  58,    0],\\n        [ -45,  -59],\\n        [  59,   50],\\n        [ 100,  -66],\\n        [ -61,   44],\\n        [  45,   13],\\n        [  58,    7],\\n        [ -14,   10],\\n        [  32,  -56],\\n        [  87,  -24],\\n        [   8,   85],\\n        [ -21,  -21],\\n        [  78,  -13],\\n        [   4,   50],\\n        [ -23,   52],\\n        [  23,   47],\\n        [ -18,   -3],\\n        [ -65,  -29],\\n        [  57,   28],\\n        [  52,  -47],\\n        [ -35,  -39],\\n        [ -23,   57],\\n        [  73,   86],\\n        [   8,   51],\\n        [  -3,   34],\\n        [ -70,  -28],\\n        [-100,   71],\\n        [ -38,  -63],\\n        [  50,  -65],\\n        [  48,  100],\\n        [  47,   79],\\n        [   5,   -9],\\n        [ -72,   55],\\n        [  51,   61],\\n        [ -51,   23],\\n        [  23,   15],\\n        [ -68,  -79],\\n        [ -50,   68],\\n        [ -36,  -30],\\n        [  20,   33],\\n        [  81,  -61],\\n        [ -11,  -10],\\n        [  87,  -91],\\n        [ -34,  -96],\\n        [ -64,   93],\\n        [ -46,  -40],\\n        [  28,  -12],\\n        [  24,  100],\\n        [  67,  -49],\\n        [   3,  -38],\\n        [   6,   -2],\\n        [  -8,  -73],\\n        [  42,  -43],\\n        [ -55,   62],\\n        [ -65,  -48],\\n        [ -67,  -71],\\n        [ -75,   65],\\n        [ -65,   41],\\n        [ -53,  -74]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -6],\\n        [   1,  -79],\\n        [ -78,  -31],\\n        [  28,  -28],\\n        [ -34,  -55],\\n        [  40,   -6],\\n        [  27,  -55],\\n        [ -75,   88],\\n        [ -90,  -77],\\n        [  79,   -2],\\n        [ -38,  -18],\\n        [  12,   75],\\n        [ -44,   62],\\n        [  50,   38],\\n        [ -11,  -91],\\n        [ -51,   71],\\n        [ -39,   21],\\n        [  43,   42],\\n        [ -60,  -28],\\n        [  54,  -53],\\n        [  47,  -32],\\n        [ -83,  -36],\\n        [  68,  -98],\\n        [ -36,  -62],\\n        [ -23,  -79],\\n        [  24,  -57],\\n        [ -17,   30],\\n        [  71,   48],\\n        [  83,   18],\\n        [   9,  -22],\\n        [  74,  -61],\\n        [  58,    0],\\n        [ -45,  -59],\\n        [  59,   50],\\n        [ 100,  -66],\\n        [ -61,   44],\\n        [  45,   13],\\n        [  58,    7],\\n        [ -14,   10],\\n        [  32,  -56],\\n        [  87,  -24],\\n        [   8,   85],\\n        [ -21,  -21],\\n        [  78,  -13],\\n        [   4,   50],\\n        [ -23,   52],\\n        [  23,   47],\\n        [ -18,   -3],\\n        [ -65,  -29],\\n        [  57,   28],\\n        [  52,  -47],\\n        [ -35,  -39],\\n        [ -23,   57],\\n        [  73,   86],\\n        [   8,   51],\\n        [  -3,   34],\\n        [ -70,  -28],\\n        [-100,   71],\\n        [ -38,  -63],\\n        [  50,  -65],\\n        [  48,  100],\\n        [  47,   79],\\n        [   5,   -9],\\n        [ -72,   55],\\n        [  51,   61],\\n        [ -51,   23],\\n        [  23,   15],\\n        [ -68,  -79],\\n        [ -50,   68],\\n        [ -36,  -30],\\n        [  20,   33],\\n        [  81,  -61],\\n        [ -11,  -10],\\n        [  87,  -91],\\n        [ -34,  -96],\\n        [ -64,   93],\\n        [ -46,  -40],\\n        [  28,  -12],\\n        [  24,  100],\\n        [  67,  -49],\\n        [   3,  -38],\\n        [   6,   -2],\\n        [  -8,  -73],\\n        [  42,  -43],\\n        [ -55,   62],\\n        [ -65,  -48],\\n        [ -67,  -71],\\n        [ -75,   65],\\n        [ -65,   41],\\n        [ -53,  -74]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -6],\\n        [   1,  -79],\\n        [ -78,  -31],\\n        [  28,  -28],\\n        [ -34,  -55],\\n        [  40,   -6],\\n        [  27,  -55],\\n        [ -75,   88],\\n        [ -90,  -77],\\n        [  79,   -2],\\n        [ -38,  -18],\\n        [  12,   75],\\n        [ -44,   62],\\n        [  50,   38],\\n        [ -11,  -91],\\n        [ -51,   71],\\n        [ -39,   21],\\n        [  43,   42],\\n        [ -60,  -28],\\n        [  54,  -53],\\n        [  47,  -32],\\n        [ -83,  -36],\\n        [  68,  -98],\\n        [ -36,  -62],\\n        [ -23,  -79],\\n        [  24,  -57],\\n        [ -17,   30],\\n        [  71,   48],\\n        [  83,   18],\\n        [   9,  -22],\\n        [  74,  -61],\\n        [  58,    0],\\n        [ -45,  -59],\\n        [  59,   50],\\n        [ 100,  -66],\\n        [ -61,   44],\\n        [  45,   13],\\n        [  58,    7],\\n        [ -14,   10],\\n        [  32,  -56],\\n        [  87,  -24],\\n        [   8,   85],\\n        [ -21,  -21],\\n        [  78,  -13],\\n        [   4,   50],\\n        [ -23,   52],\\n        [  23,   47],\\n        [ -18,   -3],\\n        [ -65,  -29],\\n        [  57,   28],\\n        [  52,  -47],\\n        [ -35,  -39],\\n        [ -23,   57],\\n        [  73,   86],\\n        [   8,   51],\\n        [  -3,   34],\\n        [ -70,  -28],\\n        [-100,   71],\\n        [ -38,  -63],\\n        [  50,  -65],\\n        [  48,  100],\\n        [  47,   79],\\n        [   5,   -9],\\n        [ -72,   55],\\n        [  51,   61],\\n        [ -51,   23],\\n        [  23,   15],\\n        [ -68,  -79],\\n        [ -50,   68],\\n        [ -36,  -30],\\n        [  20,   33],\\n        [  81,  -61],\\n        [ -11,  -10],\\n        [  87,  -91],\\n        [ -34,  -96],\\n        [ -64,   93],\\n        [ -46,  -40],\\n        [  28,  -12],\\n        [  24,  100],\\n        [  67,  -49],\\n        [   3,  -38],\\n        [   6,   -2],\\n        [  -8,  -73],\\n        [  42,  -43],\\n        [ -55,   62],\\n        [ -65,  -48],\\n        [ -67,  -71],\\n        [ -75,   65],\\n        [ -65,   41],\\n        [ -53,  -74]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000948147993767634, "start": 1700279521.1053562, "stop": 1700279521.1063051, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a84f200a64fb4b2ab0098e8801a54c0b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
