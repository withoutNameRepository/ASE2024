{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_2.py::test_horizontal_matrix", "location": ["tests58_48_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019156897906214, "start": 1700279498.0482101, "stop": 1700279498.0484028, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001821469923015684, "start": 1700279498.047823, "stop": 1700279498.048006, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018580499454401433, "start": 1700279498.0482812, "stop": 1700279498.0484674, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.879200322553515e-05, "start": 1700279498.0487616, "stop": 1700279498.048851, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.90469818841666e-05, "start": 1700279498.0492465, "stop": 1700279498.049336, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-23,  13],\\n        [-60,  12],\\n        [ -6,  -5],\\n        [-94,  65],\\n        [-20,  84],\\n        [ 17,  47],\\n        [ 36, -64],\\n        [ 71, -25],\\n        [ 35, -64],\\n        [-22,  19],\\n        [ 31,  54],\\n        [  4, -90],\\n        [  5, -58],\\n        [-28, -89],\\n        [ -5,  81],\\n        [-56, -76],\\n        [-50, -20],\\n        [ 39,  51],\\n        [ 96, -29],\\n        [ 66,   1],\\n        [ 65, -19],\\n        [-56,  51],\\n        [  3,  55],\\n        [-78,  78],\\n        [-66, -11],\\n        [-12,  52],\\n        [-78,   3],\\n        [ 48,  24],\\n        [-84, -87],\\n        [ 73, -71],\\n        [-54,  76],\\n        [ 33, -92],\\n        [-17,  46],\\n        [ 54, -50],\\n        [  7, -75],\\n        [ 90,  54],\\n        [ 24, -90],\\n        [-60, -80],\\n        [-18, -94],\\n        [-33,  49],\\n        [  9,  76],\\n        [  8,  57],\\n        [  4, -49],\\n        [100, -25],\\n        [ 45,  14],\\n        [ 47, -41],\\n        [-17, -16],\\n        [ 31, -78],\\n        [ -2, -19],\\n        [-82, -78],\\n        [-67,  63],\\n        [ 26, -27],\\n        [-34,  65],\\n        [-75,  71],\\n        [ 88,   7],\\n        [-27, -30],\\n        [ 26, -74],\\n        [ 61, -27],\\n        [ 31,   2],\\n        [ 26, -94],\\n        [ 64, -60],\\n        [ 34,  41],\\n        [-32, -44],\\n        [-59, -22],\\n        [ 44, -87]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-23,  13],\\n        [-60,  12],\\n        [ -6,  -5],\\n        [-94,  65],\\n        [-20,  84],\\n        [ 17,  47],\\n        [ 36, -64],\\n        [ 71, -25],\\n        [ 35, -64],\\n        [-22,  19],\\n        [ 31,  54],\\n        [  4, -90],\\n        [  5, -58],\\n        [-28, -89],\\n        [ -5,  81],\\n        [-56, -76],\\n        [-50, -20],\\n        [ 39,  51],\\n        [ 96, -29],\\n        [ 66,   1],\\n        [ 65, -19],\\n        [-56,  51],\\n        [  3,  55],\\n        [-78,  78],\\n        [-66, -11],\\n        [-12,  52],\\n        [-78,   3],\\n        [ 48,  24],\\n        [-84, -87],\\n        [ 73, -71],\\n        [-54,  76],\\n        [ 33, -92],\\n        [-17,  46],\\n        [ 54, -50],\\n        [  7, -75],\\n        [ 90,  54],\\n        [ 24, -90],\\n        [-60, -80],\\n        [-18, -94],\\n        [-33,  49],\\n        [  9,  76],\\n        [  8,  57],\\n        [  4, -49],\\n        [100, -25],\\n        [ 45,  14],\\n        [ 47, -41],\\n        [-17, -16],\\n        [ 31, -78],\\n        [ -2, -19],\\n        [-82, -78],\\n        [-67,  63],\\n        [ 26, -27],\\n        [-34,  65],\\n        [-75,  71],\\n        [ 88,   7],\\n        [-27, -30],\\n        [ 26, -74],\\n        [ 61, -27],\\n        [ 31,   2],\\n        [ 26, -94],\\n        [ 64, -60],\\n        [ 34,  41],\\n        [-32, -44],\\n        [-59, -22],\\n        [ 44, -87]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-23,  13],\\n        [-60,  12],\\n        [ -6,  -5],\\n        [-94,  65],\\n        [-20,  84],\\n        [ 17,  47],\\n        [ 36, -64],\\n        [ 71, -25],\\n        [ 35, -64],\\n        [-22,  19],\\n        [ 31,  54],\\n        [  4, -90],\\n        [  5, -58],\\n        [-28, -89],\\n        [ -5,  81],\\n        [-56, -76],\\n        [-50, -20],\\n        [ 39,  51],\\n        [ 96, -29],\\n        [ 66,   1],\\n        [ 65, -19],\\n        [-56,  51],\\n        [  3,  55],\\n        [-78,  78],\\n        [-66, -11],\\n        [-12,  52],\\n        [-78,   3],\\n        [ 48,  24],\\n        [-84, -87],\\n        [ 73, -71],\\n        [-54,  76],\\n        [ 33, -92],\\n        [-17,  46],\\n        [ 54, -50],\\n        [  7, -75],\\n        [ 90,  54],\\n        [ 24, -90],\\n        [-60, -80],\\n        [-18, -94],\\n        [-33,  49],\\n        [  9,  76],\\n        [  8,  57],\\n        [  4, -49],\\n        [100, -25],\\n        [ 45,  14],\\n        [ 47, -41],\\n        [-17, -16],\\n        [ 31, -78],\\n        [ -2, -19],\\n        [-82, -78],\\n        [-67,  63],\\n        [ 26, -27],\\n        [-34,  65],\\n        [-75,  71],\\n        [ 88,   7],\\n        [-27, -30],\\n        [ 26, -74],\\n        [ 61, -27],\\n        [ 31,   2],\\n        [ 26, -94],\\n        [ 64, -60],\\n        [ 34,  41],\\n        [-32, -44],\\n        [-59, -22],\\n        [ 44, -87]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-23,  13],\\n        [-60,  12],\\n        [ -6,  -5],\\n        [-94,  65],\\n        [-20,  84],\\n        [ 17,  47],\\n        [ 36, -64],\\n        [ 71, -25],\\n        [ 35, -64],\\n        [-22,  19],\\n        [ 31,  54],\\n        [  4, -90],\\n        [  5, -58],\\n        [-28, -89],\\n        [ -5,  81],\\n        [-56, -76],\\n        [-50, -20],\\n        [ 39,  51],\\n        [ 96, -29],\\n        [ 66,   1],\\n        [ 65, -19],\\n        [-56,  51],\\n        [  3,  55],\\n        [-78,  78],\\n        [-66, -11],\\n        [-12,  52],\\n        [-78,   3],\\n        [ 48,  24],\\n        [-84, -87],\\n        [ 73, -71],\\n        [-54,  76],\\n        [ 33, -92],\\n        [-17,  46],\\n        [ 54, -50],\\n        [  7, -75],\\n        [ 90,  54],\\n        [ 24, -90],\\n        [-60, -80],\\n        [-18, -94],\\n        [-33,  49],\\n        [  9,  76],\\n        [  8,  57],\\n        [  4, -49],\\n        [100, -25],\\n        [ 45,  14],\\n        [ 47, -41],\\n        [-17, -16],\\n        [ 31, -78],\\n        [ -2, -19],\\n        [-82, -78],\\n        [-67,  63],\\n        [ 26, -27],\\n        [-34,  65],\\n        [-75,  71],\\n        [ 88,   7],\\n        [-27, -30],\\n        [ 26, -74],\\n        [ 61, -27],\\n        [ 31,   2],\\n        [ 26, -94],\\n        [ 64, -60],\\n        [ 34,  41],\\n        [-32, -44],\\n        [-59, -22],\\n        [ 44, -87]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009699199872557074, "start": 1700279498.0494618, "stop": 1700279498.0504322, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8c414308ee4449eda4d210f23c7f780d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
