{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_2.py::test_horizontal_matrix", "location": ["tests58_44_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002052169875241816, "start": 1700279494.8586204, "stop": 1700279494.8588262, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_44_2.py::test_matrix_of_one_integer", "location": ["tests58_44_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003346519952174276, "start": 1700279494.8586557, "stop": 1700279494.8589911, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_2.py::test_matrix_of_one_integer", "location": ["tests58_44_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00047624699072912335, "start": 1700279494.859205, "stop": 1700279494.8596818, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_2.py::test_matrix_of_one_integer", "location": ["tests58_44_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.74639954417944e-05, "start": 1700279494.8601549, "stop": 1700279494.8602428, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_2.py::test_matrix_of_having_191_integers", "location": ["tests58_44_2.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.624899783171713e-05, "start": 1700279494.8609242, "stop": 1700279494.861011, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_2.py::test_matrix_of_having_191_integers", "location": ["tests58_44_2.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_2.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_44/tests58_44_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -71,  -62,   28,  -96,   25,  -40,   37,   73,  -20,\\n           29,   66,    7,   54,   22,   33,  -53,   68,  -91,  -59,\\n          -23,  -96,  -62,   42,  -60,  -49,  -14,   95,   -4, -100,\\n           15,  -48,   -7,   38,  -19,  -38,   96,  -54,   58,  -85,\\n           25,  -10,  100,  -41,  -49, -100,   30,   29,   52,   49,\\n           12,   30,   60,   85,  -96,  -16,  -52,   91,  -90,  -42,\\n            5,  -87,  -21,  -41,  -15,   60,   53,   46,  -67,   51,\\n           71,   80,  -34,    0,  -93,  -11,   38,    4,   86,   38,\\n           36,  -65,  -12,   21,  -76,   15,   19,   77,   79,   70,\\n           70,    7,   44,  -64,   -3,   29,  -77,   31,   81,   97,\\n           54,   61,  -15,   17,  -94,  -94,   95,   24,   65,   55,\\n           67,   61,  -53,   43,   54,  -98,  -70,   53,   10,   12,\\n          -70, -100,  -80,   15,   29,   85,  -54,   -7,  -79,   62,\\n          -48,  -86,  -86,  -57,  -21,  -74,   93,   97,  -54,  -82,\\n           51,   16,   47,   54,  -77,   52,   73,   59,  -76,   19,\\n          100,  -45,  -24,   -5,  -34,   36,  -64,   34,   41,  -14,\\n           92,   73,  -58,  -81,  -37,   48,   79,    7,  -50,  -81,\\n           78,   68,  -59,   26,  -92,  -37,  -92,  -13,   49,   30,\\n          -69,   40,  -55,   21,   59,   63,  -44,  -49,  -96,   48,\\n          -33]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -71,  -62,   28,  -96,   25,  -40,   37,   73,  -20,\\n           29,   66,    7,   54,   22,   33,  -53,   68,  -91,  -59,\\n          -23,  -96,  -62,   42,  -60,  -49,  -14,   95,   -4, -100,\\n           15,  -48,   -7,   38,  -19,  -38,   96,  -54,   58,  -85,\\n           25,  -10,  100,  -41,  -49, -100,   30,   29,   52,   49,\\n           12,   30,   60,   85,  -96,  -16,  -52,   91,  -90,  -42,\\n            5,  -87,  -21,  -41,  -15,   60,   53,   46,  -67,   51,\\n           71,   80,  -34,    0,  -93,  -11,   38,    4,   86,   38,\\n           36,  -65,  -12,   21,  -76,   15,   19,   77,   79,   70,\\n           70,    7,   44,  -64,   -3,   29,  -77,   31,   81,   97,\\n           54,   61,  -15,   17,  -94,  -94,   95,   24,   65,   55,\\n           67,   61,  -53,   43,   54,  -98,  -70,   53,   10,   12,\\n          -70, -100,  -80,   15,   29,   85,  -54,   -7,  -79,   62,\\n          -48,  -86,  -86,  -57,  -21,  -74,   93,   97,  -54,  -82,\\n           51,   16,   47,   54,  -77,   52,   73,   59,  -76,   19,\\n          100,  -45,  -24,   -5,  -34,   36,  -64,   34,   41,  -14,\\n           92,   73,  -58,  -81,  -37,   48,   79,    7,  -50,  -81,\\n           78,   68,  -59,   26,  -92,  -37,  -92,  -13,   49,   30,\\n          -69,   40,  -55,   21,   59,   63,  -44,  -49,  -96,   48,\\n          -33]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_44/tests58_44_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -71,  -62,   28,  -96,   25,  -40,   37,   73,  -20,\\n           29,   66,    7,   54,   22,   33,  -53,   68,  -91,  -59,\\n          -23,  -96,  -62,   42,  -60,  -49,  -14,   95,   -4, -100,\\n           15,  -48,   -7,   38,  -19,  -38,   96,  -54,   58,  -85,\\n           25,  -10,  100,  -41,  -49, -100,   30,   29,   52,   49,\\n           12,   30,   60,   85,  -96,  -16,  -52,   91,  -90,  -42,\\n            5,  -87,  -21,  -41,  -15,   60,   53,   46,  -67,   51,\\n           71,   80,  -34,    0,  -93,  -11,   38,    4,   86,   38,\\n           36,  -65,  -12,   21,  -76,   15,   19,   77,   79,   70,\\n           70,    7,   44,  -64,   -3,   29,  -77,   31,   81,   97,\\n           54,   61,  -15,   17,  -94,  -94,   95,   24,   65,   55,\\n           67,   61,  -53,   43,   54,  -98,  -70,   53,   10,   12,\\n          -70, -100,  -80,   15,   29,   85,  -54,   -7,  -79,   62,\\n          -48,  -86,  -86,  -57,  -21,  -74,   93,   97,  -54,  -82,\\n           51,   16,   47,   54,  -77,   52,   73,   59,  -76,   19,\\n          100,  -45,  -24,   -5,  -34,   36,  -64,   34,   41,  -14,\\n           92,   73,  -58,  -81,  -37,   48,   79,    7,  -50,  -81,\\n           78,   68,  -59,   26,  -92,  -37,  -92,  -13,   49,   30,\\n          -69,   40,  -55,   21,   59,   63,  -44,  -49,  -96,   48,\\n          -33]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_44/tests58_44_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_44/tests58_44_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -71,  -62,   28,  -96,   25,  -40,   37,   73,  -20,\\n           29,   66,    7,   54,   22,   33,  -53,   68,  -91,  -59,\\n          -23,  -96,  -62,   42,  -60,  -49,  -14,   95,   -4, -100,\\n           15,  -48,   -7,   38,  -19,  -38,   96,  -54,   58,  -85,\\n           25,  -10,  100,  -41,  -49, -100,   30,   29,   52,   49,\\n           12,   30,   60,   85,  -96,  -16,  -52,   91,  -90,  -42,\\n            5,  -87,  -21,  -41,  -15,   60,   53,   46,  -67,   51,\\n           71,   80,  -34,    0,  -93,  -11,   38,    4,   86,   38,\\n           36,  -65,  -12,   21,  -76,   15,   19,   77,   79,   70,\\n           70,    7,   44,  -64,   -3,   29,  -77,   31,   81,   97,\\n           54,   61,  -15,   17,  -94,  -94,   95,   24,   65,   55,\\n           67,   61,  -53,   43,   54,  -98,  -70,   53,   10,   12,\\n          -70, -100,  -80,   15,   29,   85,  -54,   -7,  -79,   62,\\n          -48,  -86,  -86,  -57,  -21,  -74,   93,   97,  -54,  -82,\\n           51,   16,   47,   54,  -77,   52,   73,   59,  -76,   19,\\n          100,  -45,  -24,   -5,  -34,   36,  -64,   34,   41,  -14,\\n           92,   73,  -58,  -81,  -37,   48,   79,    7,  -50,  -81,\\n           78,   68,  -59,   26,  -92,  -37,  -92,  -13,   49,   30,\\n          -69,   40,  -55,   21,   59,   63,  -44,  -49,  -96,   48,\\n          -33]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005643769982270896, "start": 1700279494.86127, "stop": 1700279494.861835, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eb05a268939d49bcb9532bf11d03c54e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
