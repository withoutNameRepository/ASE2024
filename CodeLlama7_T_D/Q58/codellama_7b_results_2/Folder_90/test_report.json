{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_2.py::test_horizontal_matrix", "location": ["tests58_90_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013809700612910092, "start": 1700279528.6932669, "stop": 1700279528.6934056, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017706298967823386, "start": 1700279528.6932306, "stop": 1700279528.6934087, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001929829886648804, "start": 1700279528.6936905, "stop": 1700279528.6938841, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.570501813665032e-05, "start": 1700279528.6941826, "stop": 1700279528.694269, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.778800838626921e-05, "start": 1700279528.6946704, "stop": 1700279528.6947587, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 62,   1],\\n        [-62,  56],\\n        [-20,  17],\\n        [-51,  94],\\n        [-45, -48],\\n        [ 85,  51],\\n        [-84,  24],\\n        [-57,  12],\\n        [ 81, -19],\\n        [ 43, -46],\\n        [ 54,  -2],\\n        [-60,  12],\\n        [ 89,  -9],\\n        [ 45, -79],\\n        [  7, -72],\\n        [-14,   4],\\n        [ 80,  70],\\n        [ 92, -39],\\n        [-82,  64],\\n        [ 66, -98],\\n        [-72,  63],\\n        [-62, -72],\\n        [-55,  71],\\n        [-45,  12],\\n        [-18, -72],\\n        [-66, -88],\\n        [-21,  56],\\n        [ 31,  36],\\n        [  4, -30],\\n        [ 23,  32],\\n        [ -3,  58],\\n        [ 66, -47],\\n        [-95, -66],\\n        [-76,   4],\\n        [ 38, -95],\\n        [ 71,  -7],\\n        [ 17,  50],\\n        [-78, -51],\\n        [ 32,  18],\\n        [-82,  63],\\n        [-36,  15],\\n        [ 65,  11],\\n        [ 89,  54],\\n        [-20, -72],\\n        [ 27, -72],\\n        [ 26,  40],\\n        [-43, -65],\\n        [-81, -45],\\n        [ 19, -82],\\n        [ 97,  49],\\n        [-12, -26],\\n        [ 78,  80],\\n        [ 89, -24],\\n        [ 50, -27],\\n        [ 85,  30],\\n        [-60,  89],\\n        [ 45,  43],\\n        [ -6, -19],\\n        [ 93, -42],\\n        [ 44,  71],\\n        [-92, -33],\\n        [ 51,  31],\\n        [ 58, -28],\\n        [ 74,   5],\\n        [ 37, -98],\\n        [ 17,  20],\\n        [ 92, -91],\\n        [ 37,  51],\\n        [-14, -29],\\n        [ 31, -77],\\n        [-83, -65],\\n        [-22, -90],\\n        [ -7,  77],\\n        [ 38, -58],\\n        [-44, -29],\\n        [ 21,   0],\\n        [ 62, -21],\\n        [ -2, -73],\\n        [ 56,  53],\\n        [ 87,  -5],\\n        [  8,  60],\\n        [-14, -22],\\n        [-23,  55],\\n        [  0, -86],\\n        [ 50,  67],\\n        [ 51, -96],\\n        [-48,  87],\\n        [ 41,  39]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 62,   1],\\n        [-62,  56],\\n        [-20,  17],\\n        [-51,  94],\\n        [-45, -48],\\n        [ 85,  51],\\n        [-84,  24],\\n        [-57,  12],\\n        [ 81, -19],\\n        [ 43, -46],\\n        [ 54,  -2],\\n        [-60,  12],\\n        [ 89,  -9],\\n        [ 45, -79],\\n        [  7, -72],\\n        [-14,   4],\\n        [ 80,  70],\\n        [ 92, -39],\\n        [-82,  64],\\n        [ 66, -98],\\n        [-72,  63],\\n        [-62, -72],\\n        [-55,  71],\\n        [-45,  12],\\n        [-18, -72],\\n        [-66, -88],\\n        [-21,  56],\\n        [ 31,  36],\\n        [  4, -30],\\n        [ 23,  32],\\n        [ -3,  58],\\n        [ 66, -47],\\n        [-95, -66],\\n        [-76,   4],\\n        [ 38, -95],\\n        [ 71,  -7],\\n        [ 17,  50],\\n        [-78, -51],\\n        [ 32,  18],\\n        [-82,  63],\\n        [-36,  15],\\n        [ 65,  11],\\n        [ 89,  54],\\n        [-20, -72],\\n        [ 27, -72],\\n        [ 26,  40],\\n        [-43, -65],\\n        [-81, -45],\\n        [ 19, -82],\\n        [ 97,  49],\\n        [-12, -26],\\n        [ 78,  80],\\n        [ 89, -24],\\n        [ 50, -27],\\n        [ 85,  30],\\n        [-60,  89],\\n        [ 45,  43],\\n        [ -6, -19],\\n        [ 93, -42],\\n        [ 44,  71],\\n        [-92, -33],\\n        [ 51,  31],\\n        [ 58, -28],\\n        [ 74,   5],\\n        [ 37, -98],\\n        [ 17,  20],\\n        [ 92, -91],\\n        [ 37,  51],\\n        [-14, -29],\\n        [ 31, -77],\\n        [-83, -65],\\n        [-22, -90],\\n        [ -7,  77],\\n        [ 38, -58],\\n        [-44, -29],\\n        [ 21,   0],\\n        [ 62, -21],\\n        [ -2, -73],\\n        [ 56,  53],\\n        [ 87,  -5],\\n        [  8,  60],\\n        [-14, -22],\\n        [-23,  55],\\n        [  0, -86],\\n        [ 50,  67],\\n        [ 51, -96],\\n        [-48,  87],\\n        [ 41,  39]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 62,   1],\\n        [-62,  56],\\n        [-20,  17],\\n        [-51,  94],\\n        [-45, -48],\\n        [ 85,  51],\\n        [-84,  24],\\n        [-57,  12],\\n        [ 81, -19],\\n        [ 43, -46],\\n        [ 54,  -2],\\n        [-60,  12],\\n        [ 89,  -9],\\n        [ 45, -79],\\n        [  7, -72],\\n        [-14,   4],\\n        [ 80,  70],\\n        [ 92, -39],\\n        [-82,  64],\\n        [ 66, -98],\\n        [-72,  63],\\n        [-62, -72],\\n        [-55,  71],\\n        [-45,  12],\\n        [-18, -72],\\n        [-66, -88],\\n        [-21,  56],\\n        [ 31,  36],\\n        [  4, -30],\\n        [ 23,  32],\\n        [ -3,  58],\\n        [ 66, -47],\\n        [-95, -66],\\n        [-76,   4],\\n        [ 38, -95],\\n        [ 71,  -7],\\n        [ 17,  50],\\n        [-78, -51],\\n        [ 32,  18],\\n        [-82,  63],\\n        [-36,  15],\\n        [ 65,  11],\\n        [ 89,  54],\\n        [-20, -72],\\n        [ 27, -72],\\n        [ 26,  40],\\n        [-43, -65],\\n        [-81, -45],\\n        [ 19, -82],\\n        [ 97,  49],\\n        [-12, -26],\\n        [ 78,  80],\\n        [ 89, -24],\\n        [ 50, -27],\\n        [ 85,  30],\\n        [-60,  89],\\n        [ 45,  43],\\n        [ -6, -19],\\n        [ 93, -42],\\n        [ 44,  71],\\n        [-92, -33],\\n        [ 51,  31],\\n        [ 58, -28],\\n        [ 74,   5],\\n        [ 37, -98],\\n        [ 17,  20],\\n        [ 92, -91],\\n        [ 37,  51],\\n        [-14, -29],\\n        [ 31, -77],\\n        [-83, -65],\\n        [-22, -90],\\n        [ -7,  77],\\n        [ 38, -58],\\n        [-44, -29],\\n        [ 21,   0],\\n        [ 62, -21],\\n        [ -2, -73],\\n        [ 56,  53],\\n        [ 87,  -5],\\n        [  8,  60],\\n        [-14, -22],\\n        [-23,  55],\\n        [  0, -86],\\n        [ 50,  67],\\n        [ 51, -96],\\n        [-48,  87],\\n        [ 41,  39]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 62,   1],\\n        [-62,  56],\\n        [-20,  17],\\n        [-51,  94],\\n        [-45, -48],\\n        [ 85,  51],\\n        [-84,  24],\\n        [-57,  12],\\n        [ 81, -19],\\n        [ 43, -46],\\n        [ 54,  -2],\\n        [-60,  12],\\n        [ 89,  -9],\\n        [ 45, -79],\\n        [  7, -72],\\n        [-14,   4],\\n        [ 80,  70],\\n        [ 92, -39],\\n        [-82,  64],\\n        [ 66, -98],\\n        [-72,  63],\\n        [-62, -72],\\n        [-55,  71],\\n        [-45,  12],\\n        [-18, -72],\\n        [-66, -88],\\n        [-21,  56],\\n        [ 31,  36],\\n        [  4, -30],\\n        [ 23,  32],\\n        [ -3,  58],\\n        [ 66, -47],\\n        [-95, -66],\\n        [-76,   4],\\n        [ 38, -95],\\n        [ 71,  -7],\\n        [ 17,  50],\\n        [-78, -51],\\n        [ 32,  18],\\n        [-82,  63],\\n        [-36,  15],\\n        [ 65,  11],\\n        [ 89,  54],\\n        [-20, -72],\\n        [ 27, -72],\\n        [ 26,  40],\\n        [-43, -65],\\n        [-81, -45],\\n        [ 19, -82],\\n        [ 97,  49],\\n        [-12, -26],\\n        [ 78,  80],\\n        [ 89, -24],\\n        [ 50, -27],\\n        [ 85,  30],\\n        [-60,  89],\\n        [ 45,  43],\\n        [ -6, -19],\\n        [ 93, -42],\\n        [ 44,  71],\\n        [-92, -33],\\n        [ 51,  31],\\n        [ 58, -28],\\n        [ 74,   5],\\n        [ 37, -98],\\n        [ 17,  20],\\n        [ 92, -91],\\n        [ 37,  51],\\n        [-14, -29],\\n        [ 31, -77],\\n        [-83, -65],\\n        [-22, -90],\\n        [ -7,  77],\\n        [ 38, -58],\\n        [-44, -29],\\n        [ 21,   0],\\n        [ 62, -21],\\n        [ -2, -73],\\n        [ 56,  53],\\n        [ 87,  -5],\\n        [  8,  60],\\n        [-14, -22],\\n        [-23,  55],\\n        [  0, -86],\\n        [ 50,  67],\\n        [ 51, -96],\\n        [-48,  87],\\n        [ 41,  39]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001146563998190686, "start": 1700279528.6948855, "stop": 1700279528.6960325, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5bf7881794047528057ce54f0d1b30b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
