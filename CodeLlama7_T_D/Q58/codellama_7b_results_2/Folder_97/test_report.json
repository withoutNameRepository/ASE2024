{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004767990030813962, "start": 1700279533.0516949, "stop": 1700279533.0521727, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006554760038852692, "start": 1700279533.0524948, "stop": 1700279533.0531511, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005726529925595969, "start": 1700279533.0534878, "stop": 1700279533.0540614, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_having_120_integers", "location": ["tests58_97_2.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006761789845768362, "start": 1700279533.054549, "stop": 1700279533.055226, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_horizontal_matrix", "location": ["tests58_97_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0026578549877740443, "start": 1700279533.0661762, "stop": 1700279533.0688355, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_having_120_integers", "location": ["tests58_97_2.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -63,   14],\\n        [  72,   64],\\n        [ -16,  -26],\\n        [ -76,   -3],\\n        [ -22,  -49],\\n        [  93,   93],\\n        [  58,  -18],\\n        [ -55,   46],\\n        [ -79,  -29],\\n        [  22,  -63],\\n        [ -72,  -66],\\n        [ -35,   60],\\n        [  -6,  -93],\\n        [ -90,   17],\\n        [ -18,  -23],\\n        [ -22,   -9],\\n        [  25,   29],\\n        [ -41,   -5],\\n        [ -37,  -28],\\n        [ -88,  -74],\\n        [  60,  -67],\\n        [  38,    2],\\n        [  21,  -21],\\n        [  30,   97],\\n        [ -89,  -40],\\n        [  20,  -82],\\n        [  35,   95],\\n        [   2,    0],\\n        [  12,  -95],\\n        [ -10,  -73],\\n        [ -37,   24],\\n        [  40,  -32],\\n        [  86,  -36],\\n        [  94,   42],\\n        [  81,  -70],\\n        [  73,   14],\\n        [ -74,  -75],\\n        [  12,   33],\\n        [  28,  -63],\\n        [  26,   34],\\n        [  26,   28],\\n        [  62,   77],\\n        [  34,   -6],\\n        [ -36,   19],\\n        [ -75,  -94],\\n        [ -27,   66],\\n        [ -16,  -57],\\n        [ -69,  -18],\\n        [  35,  -34],\\n        [  43,   38],\\n        [ -41,   68],\\n        [  43,  -18],\\n        [ -64, -100],\\n        [ -52,  -25],\\n        [ -92,   39],\\n        [  56,  -27],\\n        [  69,  -32],\\n        [ -48,   82],\\n        [  24,  -67],\\n        [ -19,  -82]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -63,   14],\\n        [  72,   64],\\n        [ -16,  -26],\\n        [ -76,   -3],\\n        [ -22,  -49],\\n        [  93,   93],\\n        [  58,  -18],\\n        [ -55,   46],\\n        [ -79,  -29],\\n        [  22,  -63],\\n        [ -72,  -66],\\n        [ -35,   60],\\n        [  -6,  -93],\\n        [ -90,   17],\\n        [ -18,  -23],\\n        [ -22,   -9],\\n        [  25,   29],\\n        [ -41,   -5],\\n        [ -37,  -28],\\n        [ -88,  -74],\\n        [  60,  -67],\\n        [  38,    2],\\n        [  21,  -21],\\n        [  30,   97],\\n        [ -89,  -40],\\n        [  20,  -82],\\n        [  35,   95],\\n        [   2,    0],\\n        [  12,  -95],\\n        [ -10,  -73],\\n        [ -37,   24],\\n        [  40,  -32],\\n        [  86,  -36],\\n        [  94,   42],\\n        [  81,  -70],\\n        [  73,   14],\\n        [ -74,  -75],\\n        [  12,   33],\\n        [  28,  -63],\\n        [  26,   34],\\n        [  26,   28],\\n        [  62,   77],\\n        [  34,   -6],\\n        [ -36,   19],\\n        [ -75,  -94],\\n        [ -27,   66],\\n        [ -16,  -57],\\n        [ -69,  -18],\\n        [  35,  -34],\\n        [  43,   38],\\n        [ -41,   68],\\n        [  43,  -18],\\n        [ -64, -100],\\n        [ -52,  -25],\\n        [ -92,   39],\\n        [  56,  -27],\\n        [  69,  -32],\\n        [ -48,   82],\\n        [  24,  -67],\\n        [ -19,  -82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -63,   14],\\n        [  72,   64],\\n        [ -16,  -26],\\n        [ -76,   -3],\\n        [ -22,  -49],\\n        [  93,   93],\\n        [  58,  -18],\\n        [ -55,   46],\\n        [ -79,  -29],\\n        [  22,  -63],\\n        [ -72,  -66],\\n        [ -35,   60],\\n        [  -6,  -93],\\n        [ -90,   17],\\n        [ -18,  -23],\\n        [ -22,   -9],\\n        [  25,   29],\\n        [ -41,   -5],\\n        [ -37,  -28],\\n        [ -88,  -74],\\n        [  60,  -67],\\n        [  38,    2],\\n        [  21,  -21],\\n        [  30,   97],\\n        [ -89,  -40],\\n        [  20,  -82],\\n        [  35,   95],\\n        [   2,    0],\\n        [  12,  -95],\\n        [ -10,  -73],\\n        [ -37,   24],\\n        [  40,  -32],\\n        [  86,  -36],\\n        [  94,   42],\\n        [  81,  -70],\\n        [  73,   14],\\n        [ -74,  -75],\\n        [  12,   33],\\n        [  28,  -63],\\n        [  26,   34],\\n        [  26,   28],\\n        [  62,   77],\\n        [  34,   -6],\\n        [ -36,   19],\\n        [ -75,  -94],\\n        [ -27,   66],\\n        [ -16,  -57],\\n        [ -69,  -18],\\n        [  35,  -34],\\n        [  43,   38],\\n        [ -41,   68],\\n        [  43,  -18],\\n        [ -64, -100],\\n        [ -52,  -25],\\n        [ -92,   39],\\n        [  56,  -27],\\n        [  69,  -32],\\n        [ -48,   82],\\n        [  24,  -67],\\n        [ -19,  -82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -63,   14],\\n        [  72,   64],\\n        [ -16,  -26],\\n        [ -76,   -3],\\n        [ -22,  -49],\\n        [  93,   93],\\n        [  58,  -18],\\n        [ -55,   46],\\n        [ -79,  -29],\\n        [  22,  -63],\\n        [ -72,  -66],\\n        [ -35,   60],\\n        [  -6,  -93],\\n        [ -90,   17],\\n        [ -18,  -23],\\n        [ -22,   -9],\\n        [  25,   29],\\n        [ -41,   -5],\\n        [ -37,  -28],\\n        [ -88,  -74],\\n        [  60,  -67],\\n        [  38,    2],\\n        [  21,  -21],\\n        [  30,   97],\\n        [ -89,  -40],\\n        [  20,  -82],\\n        [  35,   95],\\n        [   2,    0],\\n        [  12,  -95],\\n        [ -10,  -73],\\n        [ -37,   24],\\n        [  40,  -32],\\n        [  86,  -36],\\n        [  94,   42],\\n        [  81,  -70],\\n        [  73,   14],\\n        [ -74,  -75],\\n        [  12,   33],\\n        [  28,  -63],\\n        [  26,   34],\\n        [  26,   28],\\n        [  62,   77],\\n        [  34,   -6],\\n        [ -36,   19],\\n        [ -75,  -94],\\n        [ -27,   66],\\n        [ -16,  -57],\\n        [ -69,  -18],\\n        [  35,  -34],\\n        [  43,   38],\\n        [ -41,   68],\\n        [  43,  -18],\\n        [ -64, -100],\\n        [ -52,  -25],\\n        [ -92,   39],\\n        [  56,  -27],\\n        [  69,  -32],\\n        [ -48,   82],\\n        [  24,  -67],\\n        [ -19,  -82]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014065440045669675, "start": 1700279533.055395, "stop": 1700279533.056802, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bbe0b52faa6143aabbb5211a37fc6186", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
