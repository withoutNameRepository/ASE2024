{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_26_2.py::test_matrix_of_one_integer", "location": ["tests58_26_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020087300799787045, "start": 1700279482.6962938, "stop": 1700279482.6964958, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_26_2.py::test_matrix_of_one_integer", "location": ["tests58_26_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021890399511903524, "start": 1700279482.6968055, "stop": 1700279482.697025, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_26_2.py::test_horizontal_matrix", "location": ["tests58_26_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040393101517111063, "start": 1700279482.6968327, "stop": 1700279482.6972375, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_26_2.py::test_matrix_of_one_integer", "location": ["tests58_26_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011033500777557492, "start": 1700279482.697346, "stop": 1700279482.6974568, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_26_2.py::test_matrix_of_having_115_integers", "location": ["tests58_26_2.py", 28, "test_matrix_of_having_115_integers"], "keywords": {"test_matrix_of_having_115_integers": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010653401841409504, "start": 1700279482.697902, "stop": 1700279482.6980093, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_26_2.py::test_matrix_of_having_115_integers", "location": ["tests58_26_2.py", 28, "test_matrix_of_having_115_integers"], "keywords": {"test_matrix_of_having_115_integers": 1, "__wrapped__": 1, "tests58_26_2.py": 1, "Folder_26": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_26/tests58_26_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 93,  12, -46,  14, -84,   7, -43,  71,   2, -41,  92,  35,  85,\\n         -91, -14, -72,  18,  92, -10,  22,  29, -19,  77, -18, -41, -91,\\n         -59,   5,  70,  24, -52,  96, -63,  72,   9,  11, -28, -97,   1,\\n         -85,  28, -64, -18, -37, -54, -47, -46, -11,  93, -59,  21, -93,\\n         -42, -80, -23, -93,  95,  91,  83, -84,  56,  69, -40, -26,  91,\\n         -95, -31,   4, -23, -59, -31,   0,  92, -43,  33, -50,  39, -63,\\n          21, -25, -22, -63,   0,  75,  -8, -29,  33, -60, -62,  70,  74,\\n         -26,  21, -73, -11,  -7,  86, -33, -75,   4, -81,  20,  99,   4,\\n          50, -35, -68, -61, -96,  65, -55,  28,  30,  73, -91]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_115_integers():", "        if 115 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(115 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(115)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 93,  12, -46,  14, -84,   7, -43,  71,   2, -41,  92,  35,  85,\\n         -91, -14, -72,  18,  92, -10,  22,  29, -19,  77, -18, -41, -91,\\n         -59,   5,  70,  24, -52,  96, -63,  72,   9,  11, -28, -97,   1,\\n         -85,  28, -64, -18, -37, -54, -47, -46, -11,  93, -59,  21, -93,\\n         -42, -80, -23, -93,  95,  91,  83, -84,  56,  69, -40, -26,  91,\\n         -95, -31,   4, -23, -59, -31,   0,  92, -43,  33, -50,  39, -63,\\n          21, -25, -22, -63,   0,  75,  -8, -29,  33, -60, -62,  70,  74,\\n         -26,  21, -73, -11,  -7,  86, -33, -75,   4, -81,  20,  99,   4,\\n          50, -35, -68, -61, -96,  65, -55,  28,  30,  73, -91]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_26/tests58_26_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_115_integers():", "        if 115 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(115 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(115)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 93,  12, -46,  14, -84,   7, -43,  71,   2, -41,  92,  35,  85,\\n         -91, -14, -72,  18,  92, -10,  22,  29, -19,  77, -18, -41, -91,\\n         -59,   5,  70,  24, -52,  96, -63,  72,   9,  11, -28, -97,   1,\\n         -85,  28, -64, -18, -37, -54, -47, -46, -11,  93, -59,  21, -93,\\n         -42, -80, -23, -93,  95,  91,  83, -84,  56,  69, -40, -26,  91,\\n         -95, -31,   4, -23, -59, -31,   0,  92, -43,  33, -50,  39, -63,\\n          21, -25, -22, -63,   0,  75,  -8, -29,  33, -60, -62,  70,  74,\\n         -26,  21, -73, -11,  -7,  86, -33, -75,   4, -81,  20,  99,   4,\\n          50, -35, -68, -61, -96,  65, -55,  28,  30,  73, -91]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_26/tests58_26_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_2/Folder_26/tests58_26_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 93,  12, -46,  14, -84,   7, -43,  71,   2, -41,  92,  35,  85,\\n         -91, -14, -72,  18,  92, -10,  22,  29, -19,  77, -18, -41, -91,\\n         -59,   5,  70,  24, -52,  96, -63,  72,   9,  11, -28, -97,   1,\\n         -85,  28, -64, -18, -37, -54, -47, -46, -11,  93, -59,  21, -93,\\n         -42, -80, -23, -93,  95,  91,  83, -84,  56,  69, -40, -26,  91,\\n         -95, -31,   4, -23, -59, -31,   0,  92, -43,  33, -50,  39, -63,\\n          21, -25, -22, -63,   0,  75,  -8, -29,  33, -60, -62,  70,  74,\\n         -26,  21, -73, -11,  -7,  86, -33, -75,   4, -81,  20,  99,   4,\\n          50, -35, -68, -61, -96,  65, -55,  28,  30,  73, -91]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007217930105980486, "start": 1700279482.6981628, "stop": 1700279482.6988854, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c924c742917241ab9b745b51bac232be", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
