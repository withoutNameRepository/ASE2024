 ```
import numpy as np

def submatrix_with_n_numbers(matrix):
    # Check if the matrix is a 2D numpy array of integers
    if not (isinstance(matrix, np.ndarray) and matrix.dtype == int and len(matrix.shape) == 2):
        return 0

# Get the dimensions of the matrix
rows, cols = matrix.shape

# Initialize a counter for the number of submatrices with 96 integers each
counter = 0

# Iterate over all rows and columns in the matrix
for i in range(rows):
    for j in range(cols):
        # Get the current element in the matrix
        elem = matrix[i, j]

        # Check if the current element is equal to 96
        if elem == 96:
            # Increment the counter for each submatrix with 96 integers each
            counter += 1

# Return the count of all submatrices with 96 integers each
return counter
```