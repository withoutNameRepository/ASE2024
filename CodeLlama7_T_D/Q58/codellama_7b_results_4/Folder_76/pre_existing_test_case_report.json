{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00049
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 80,   1, -48, -79, -40,  14,  79,  57, -69,  61, -65,  18,   8,\\n         -79,  -9,  86,  92, -41,  73,  57,  57,  83, -66, -11, -12, -67,\\n           3,  21, -81,  55,   8,  41, -81,  30,  70,   5,  43,  77,  34,\\n           0,  19, -73, -92,  49, -83,   6, -43,  52,  41,  90, -50, -13,\\n         -82,  38,  76,  85, -44, -97, -47,  14,  33,  72, -16,  34, -27,\\n         -27, -65, -60, -58, -82, -44,  55, -58, -45,  -2,  56, -63,  58,\\n          14,  32, -30,  68, -84,  53,  92,  59, -30, -89, -65, -10, -69,\\n           2,  11, -93,  98, -35,  53,   9,  60,  22,  95, -52,  94,  51,\\n         -15,  52,  35, -50,  67, -11, -77, -32,  81, -56, -48,  89, -58,\\n          56, -11,  -9,  47, -30,   2,  81,  95,  91, -96,  24, -77, -74,\\n         -88, -98, 100, -27,  77, -63,  60,  72,  32,  95,  76,  95, -52,\\n          84,   4, -76, -40, -20, -92, -87, -22, -19,  94,  16, -86,  89,\\n          48, -39, -20]]))",
    0.00101
  ]
}