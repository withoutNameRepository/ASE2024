{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_4.py::test_horizontal_matrix", "location": ["tests58_33_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001483309897594154, "start": 1700279635.935113, "stop": 1700279635.935262, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019533501472324133, "start": 1700279635.935104, "stop": 1700279635.9353, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001998610096052289, "start": 1700279635.9355938, "stop": 1700279635.935794, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.731898899190128e-05, "start": 1700279635.9361145, "stop": 1700279635.9362123, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010149498120881617, "start": 1700279635.9366312, "stop": 1700279635.9367332, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -24,  -20],\\n        [ -70,   11],\\n        [ -47,   35],\\n        [   8,  -96],\\n        [  95,  -23],\\n        [  36,  -60],\\n        [  65,  -48],\\n        [  99,   98],\\n        [  60,   93],\\n        [  22,  -10],\\n        [ -58,   56],\\n        [ -28,   97],\\n        [  -2,  -39],\\n        [ -52,  -57],\\n        [ -79,  -86],\\n        [   1,   75],\\n        [ -17,   -1],\\n        [  79,  -50],\\n        [ -11,   37],\\n        [ -31,  -69],\\n        [  13,  -53],\\n        [ -50,   98],\\n        [ -88,   24],\\n        [  -1,  -15],\\n        [ -11,  -93],\\n        [  33,  -76],\\n        [  67,  -26],\\n        [  94,   38],\\n        [  48,   43],\\n        [  83,  -87],\\n        [ -65,  -49],\\n        [ -97,   95],\\n        [ -51,   87],\\n        [ -61,   30],\\n        [  83,  -75],\\n        [ -41,  -71],\\n        [  37,   38],\\n        [  36,   23],\\n        [  56,  -95],\\n        [  10,   55],\\n        [ -67,  -42],\\n        [  29,   99],\\n        [ -59,  -13],\\n        [   2,   16],\\n        [  75,   92],\\n        [ -22,    4],\\n        [ -70,  -78],\\n        [ -90,    7],\\n        [ -77,   97],\\n        [  67,   58],\\n        [  -4,  -66],\\n        [  -4,  -84],\\n        [ -39,   32],\\n        [ -63, -100],\\n        [  18,   41],\\n        [  59,   26],\\n        [ -26,   13],\\n        [  39,  -63],\\n        [ -75,   -7]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -24,  -20],\\n        [ -70,   11],\\n        [ -47,   35],\\n        [   8,  -96],\\n        [  95,  -23],\\n        [  36,  -60],\\n        [  65,  -48],\\n        [  99,   98],\\n        [  60,   93],\\n        [  22,  -10],\\n        [ -58,   56],\\n        [ -28,   97],\\n        [  -2,  -39],\\n        [ -52,  -57],\\n        [ -79,  -86],\\n        [   1,   75],\\n        [ -17,   -1],\\n        [  79,  -50],\\n        [ -11,   37],\\n        [ -31,  -69],\\n        [  13,  -53],\\n        [ -50,   98],\\n        [ -88,   24],\\n        [  -1,  -15],\\n        [ -11,  -93],\\n        [  33,  -76],\\n        [  67,  -26],\\n        [  94,   38],\\n        [  48,   43],\\n        [  83,  -87],\\n        [ -65,  -49],\\n        [ -97,   95],\\n        [ -51,   87],\\n        [ -61,   30],\\n        [  83,  -75],\\n        [ -41,  -71],\\n        [  37,   38],\\n        [  36,   23],\\n        [  56,  -95],\\n        [  10,   55],\\n        [ -67,  -42],\\n        [  29,   99],\\n        [ -59,  -13],\\n        [   2,   16],\\n        [  75,   92],\\n        [ -22,    4],\\n        [ -70,  -78],\\n        [ -90,    7],\\n        [ -77,   97],\\n        [  67,   58],\\n        [  -4,  -66],\\n        [  -4,  -84],\\n        [ -39,   32],\\n        [ -63, -100],\\n        [  18,   41],\\n        [  59,   26],\\n        [ -26,   13],\\n        [  39,  -63],\\n        [ -75,   -7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -24,  -20],\\n        [ -70,   11],\\n        [ -47,   35],\\n        [   8,  -96],\\n        [  95,  -23],\\n        [  36,  -60],\\n        [  65,  -48],\\n        [  99,   98],\\n        [  60,   93],\\n        [  22,  -10],\\n        [ -58,   56],\\n        [ -28,   97],\\n        [  -2,  -39],\\n        [ -52,  -57],\\n        [ -79,  -86],\\n        [   1,   75],\\n        [ -17,   -1],\\n        [  79,  -50],\\n        [ -11,   37],\\n        [ -31,  -69],\\n        [  13,  -53],\\n        [ -50,   98],\\n        [ -88,   24],\\n        [  -1,  -15],\\n        [ -11,  -93],\\n        [  33,  -76],\\n        [  67,  -26],\\n        [  94,   38],\\n        [  48,   43],\\n        [  83,  -87],\\n        [ -65,  -49],\\n        [ -97,   95],\\n        [ -51,   87],\\n        [ -61,   30],\\n        [  83,  -75],\\n        [ -41,  -71],\\n        [  37,   38],\\n        [  36,   23],\\n        [  56,  -95],\\n        [  10,   55],\\n        [ -67,  -42],\\n        [  29,   99],\\n        [ -59,  -13],\\n        [   2,   16],\\n        [  75,   92],\\n        [ -22,    4],\\n        [ -70,  -78],\\n        [ -90,    7],\\n        [ -77,   97],\\n        [  67,   58],\\n        [  -4,  -66],\\n        [  -4,  -84],\\n        [ -39,   32],\\n        [ -63, -100],\\n        [  18,   41],\\n        [  59,   26],\\n        [ -26,   13],\\n        [  39,  -63],\\n        [ -75,   -7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -24,  -20],\\n        [ -70,   11],\\n        [ -47,   35],\\n        [   8,  -96],\\n        [  95,  -23],\\n        [  36,  -60],\\n        [  65,  -48],\\n        [  99,   98],\\n        [  60,   93],\\n        [  22,  -10],\\n        [ -58,   56],\\n        [ -28,   97],\\n        [  -2,  -39],\\n        [ -52,  -57],\\n        [ -79,  -86],\\n        [   1,   75],\\n        [ -17,   -1],\\n        [  79,  -50],\\n        [ -11,   37],\\n        [ -31,  -69],\\n        [  13,  -53],\\n        [ -50,   98],\\n        [ -88,   24],\\n        [  -1,  -15],\\n        [ -11,  -93],\\n        [  33,  -76],\\n        [  67,  -26],\\n        [  94,   38],\\n        [  48,   43],\\n        [  83,  -87],\\n        [ -65,  -49],\\n        [ -97,   95],\\n        [ -51,   87],\\n        [ -61,   30],\\n        [  83,  -75],\\n        [ -41,  -71],\\n        [  37,   38],\\n        [  36,   23],\\n        [  56,  -95],\\n        [  10,   55],\\n        [ -67,  -42],\\n        [  29,   99],\\n        [ -59,  -13],\\n        [   2,   16],\\n        [  75,   92],\\n        [ -22,    4],\\n        [ -70,  -78],\\n        [ -90,    7],\\n        [ -77,   97],\\n        [  67,   58],\\n        [  -4,  -66],\\n        [  -4,  -84],\\n        [ -39,   32],\\n        [ -63, -100],\\n        [  18,   41],\\n        [  59,   26],\\n        [ -26,   13],\\n        [  39,  -63],\\n        [ -75,   -7]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008676130091771483, "start": 1700279635.9368663, "stop": 1700279635.9377346, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ba3a8fb6f619435daa9647749a150f18", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
