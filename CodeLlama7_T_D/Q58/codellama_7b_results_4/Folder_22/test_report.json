{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024287300766445696, "start": 1700279626.7542036, "stop": 1700279626.7544475, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032405598904006183, "start": 1700279626.7547276, "stop": 1700279626.7550523, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_one_integer", "location": ["tests58_22_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000482799019664526, "start": 1700279626.7553563, "stop": 1700279626.7558398, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_horizontal_matrix", "location": ["tests58_22_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001394780119881034, "start": 1700279626.7561407, "stop": 1700279626.756281, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_having_21_integers", "location": ["tests58_22_4.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006169489934109151, "start": 1700279626.756249, "stop": 1700279626.7568662, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_4.py::test_matrix_of_having_21_integers", "location": ["tests58_22_4.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_4.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 82, -34, -60,  66,  30, -19,  69, -17, -42, -93, -35,  72,  60,\\n         -91,  87,   4, -84,  -4,  33, -74, -49]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 82, -34, -60,  66,  30, -19,  69, -17, -42, -93, -35,  72,  60,\\n         -91,  87,   4, -84,  -4,  33, -74, -49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 82, -34, -60,  66,  30, -19,  69, -17, -42, -93, -35,  72,  60,\\n         -91,  87,   4, -84,  -4,  33, -74, -49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_22/tests58_22_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 82, -34, -60,  66,  30, -19,  69, -17, -42, -93, -35,  72,  60,\\n         -91,  87,   4, -84,  -4,  33, -74, -49]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000829177995910868, "start": 1700279626.7570152, "stop": 1700279626.7578452, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7ed3dc4f20fa479399d50e576091356e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
