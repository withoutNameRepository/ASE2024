{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004171369946561754, "start": 1700279613.1470113, "stop": 1700279613.1474292, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005391750019043684, "start": 1700279613.1477215, "stop": 1700279613.1482613, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005275150178931653, "start": 1700279613.148587, "stop": 1700279613.149115, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000574274017708376, "start": 1700279613.149563, "stop": 1700279613.1501381, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_horizontal_matrix", "location": ["tests58_6_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001933049934450537, "start": 1700279613.1652746, "stop": 1700279613.165469, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -89,   95],\\n        [ -24,   91],\\n        [ -49,  -34],\\n        [  51,   86],\\n        [ -48,    2],\\n        [ -58,  -52],\\n        [  90,  -86],\\n        [  89,   70],\\n        [ -17,   17],\\n        [ -80,   30],\\n        [ -47,   45],\\n        [  55,  -17],\\n        [ -43,  -59],\\n        [ -11,   67],\\n        [ -95,   67],\\n        [ -99,  -37],\\n        [ -58,   13],\\n        [  66,  -35],\\n        [  23,    4],\\n        [ -79,   47],\\n        [ -12,   10],\\n        [  59,  -77],\\n        [  71,   -6],\\n        [   5,   -9],\\n        [  70,  -47],\\n        [  64,  -45],\\n        [  26,   -7],\\n        [ -59,   -9],\\n        [  75,   67],\\n        [ -16,  -34],\\n        [  48,   41],\\n        [  22,   49],\\n        [  82,  -48],\\n        [ -41,    8],\\n        [ -20,   29],\\n        [ -46,   -9],\\n        [  64,  -18],\\n        [ -34,   75],\\n        [ -85,  -64],\\n        [-100,  -63],\\n        [ -27,  -48],\\n        [ -32,   33],\\n        [  -5,   97],\\n        [ -53,   66],\\n        [ -54,   74],\\n        [ -11,   30],\\n        [   1,   10],\\n        [  66,   22],\\n        [   6,   77],\\n        [ -27,   29],\\n        [ -72,   -6],\\n        [ -89,   76],\\n        [  90,  -41],\\n        [ -18,   62],\\n        [ -57,  -83],\\n        [ -10,   33],\\n        [  32,  -23],\\n        [  26,   23],\\n        [ -64,   11],\\n        [  30,  -94],\\n        [ -44,  -83]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -89,   95],\\n        [ -24,   91],\\n        [ -49,  -34],\\n        [  51,   86],\\n        [ -48,    2],\\n        [ -58,  -52],\\n        [  90,  -86],\\n        [  89,   70],\\n        [ -17,   17],\\n        [ -80,   30],\\n        [ -47,   45],\\n        [  55,  -17],\\n        [ -43,  -59],\\n        [ -11,   67],\\n        [ -95,   67],\\n        [ -99,  -37],\\n        [ -58,   13],\\n        [  66,  -35],\\n        [  23,    4],\\n        [ -79,   47],\\n        [ -12,   10],\\n        [  59,  -77],\\n        [  71,   -6],\\n        [   5,   -9],\\n        [  70,  -47],\\n        [  64,  -45],\\n        [  26,   -7],\\n        [ -59,   -9],\\n        [  75,   67],\\n        [ -16,  -34],\\n        [  48,   41],\\n        [  22,   49],\\n        [  82,  -48],\\n        [ -41,    8],\\n        [ -20,   29],\\n        [ -46,   -9],\\n        [  64,  -18],\\n        [ -34,   75],\\n        [ -85,  -64],\\n        [-100,  -63],\\n        [ -27,  -48],\\n        [ -32,   33],\\n        [  -5,   97],\\n        [ -53,   66],\\n        [ -54,   74],\\n        [ -11,   30],\\n        [   1,   10],\\n        [  66,   22],\\n        [   6,   77],\\n        [ -27,   29],\\n        [ -72,   -6],\\n        [ -89,   76],\\n        [  90,  -41],\\n        [ -18,   62],\\n        [ -57,  -83],\\n        [ -10,   33],\\n        [  32,  -23],\\n        [  26,   23],\\n        [ -64,   11],\\n        [  30,  -94],\\n        [ -44,  -83]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -89,   95],\\n        [ -24,   91],\\n        [ -49,  -34],\\n        [  51,   86],\\n        [ -48,    2],\\n        [ -58,  -52],\\n        [  90,  -86],\\n        [  89,   70],\\n        [ -17,   17],\\n        [ -80,   30],\\n        [ -47,   45],\\n        [  55,  -17],\\n        [ -43,  -59],\\n        [ -11,   67],\\n        [ -95,   67],\\n        [ -99,  -37],\\n        [ -58,   13],\\n        [  66,  -35],\\n        [  23,    4],\\n        [ -79,   47],\\n        [ -12,   10],\\n        [  59,  -77],\\n        [  71,   -6],\\n        [   5,   -9],\\n        [  70,  -47],\\n        [  64,  -45],\\n        [  26,   -7],\\n        [ -59,   -9],\\n        [  75,   67],\\n        [ -16,  -34],\\n        [  48,   41],\\n        [  22,   49],\\n        [  82,  -48],\\n        [ -41,    8],\\n        [ -20,   29],\\n        [ -46,   -9],\\n        [  64,  -18],\\n        [ -34,   75],\\n        [ -85,  -64],\\n        [-100,  -63],\\n        [ -27,  -48],\\n        [ -32,   33],\\n        [  -5,   97],\\n        [ -53,   66],\\n        [ -54,   74],\\n        [ -11,   30],\\n        [   1,   10],\\n        [  66,   22],\\n        [   6,   77],\\n        [ -27,   29],\\n        [ -72,   -6],\\n        [ -89,   76],\\n        [  90,  -41],\\n        [ -18,   62],\\n        [ -57,  -83],\\n        [ -10,   33],\\n        [  32,  -23],\\n        [  26,   23],\\n        [ -64,   11],\\n        [  30,  -94],\\n        [ -44,  -83]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -89,   95],\\n        [ -24,   91],\\n        [ -49,  -34],\\n        [  51,   86],\\n        [ -48,    2],\\n        [ -58,  -52],\\n        [  90,  -86],\\n        [  89,   70],\\n        [ -17,   17],\\n        [ -80,   30],\\n        [ -47,   45],\\n        [  55,  -17],\\n        [ -43,  -59],\\n        [ -11,   67],\\n        [ -95,   67],\\n        [ -99,  -37],\\n        [ -58,   13],\\n        [  66,  -35],\\n        [  23,    4],\\n        [ -79,   47],\\n        [ -12,   10],\\n        [  59,  -77],\\n        [  71,   -6],\\n        [   5,   -9],\\n        [  70,  -47],\\n        [  64,  -45],\\n        [  26,   -7],\\n        [ -59,   -9],\\n        [  75,   67],\\n        [ -16,  -34],\\n        [  48,   41],\\n        [  22,   49],\\n        [  82,  -48],\\n        [ -41,    8],\\n        [ -20,   29],\\n        [ -46,   -9],\\n        [  64,  -18],\\n        [ -34,   75],\\n        [ -85,  -64],\\n        [-100,  -63],\\n        [ -27,  -48],\\n        [ -32,   33],\\n        [  -5,   97],\\n        [ -53,   66],\\n        [ -54,   74],\\n        [ -11,   30],\\n        [   1,   10],\\n        [  66,   22],\\n        [   6,   77],\\n        [ -27,   29],\\n        [ -72,   -6],\\n        [ -89,   76],\\n        [  90,  -41],\\n        [ -18,   62],\\n        [ -57,  -83],\\n        [ -10,   33],\\n        [  32,  -23],\\n        [  26,   23],\\n        [ -64,   11],\\n        [  30,  -94],\\n        [ -44,  -83]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012437149998731911, "start": 1700279613.1502833, "stop": 1700279613.1515276, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6d7ac541135d4173bd27132da71a6047", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
