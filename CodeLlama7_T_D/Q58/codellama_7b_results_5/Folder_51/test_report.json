{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016016297740861773, "start": 1700279729.7077296, "stop": 1700279729.7078905, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020723199122585356, "start": 1700279729.708485, "stop": 1700279729.7086928, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_one_integer", "location": ["tests58_51_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010253099026158452, "start": 1700279729.7093425, "stop": 1700279729.7094457, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_having_95_integers", "location": ["tests58_51_5.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010878097964450717, "start": 1700279729.7103534, "stop": 1700279729.7104628, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_5.py::test_horizontal_matrix", "location": ["tests58_51_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001485719985794276, "start": 1700279729.712883, "stop": 1700279729.713032, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_51_5.py::test_matrix_of_having_95_integers", "location": ["tests58_51_5.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  46,  -26,  -95,   23,   35,  -87,   49,  -60,  -99,   82,\\n           28,   44,  -91,   86,   73,   89,  -80,  -88,   70,   42,\\n           35,   19,   72,  -87,  -15,   85,   85,  -32, -100,   22,\\n           45,  -15,   87,   27,  -47,    0,   13,  -24,    4,   57,\\n           37, -100,  -42,  -15,  -17,   65,  -74,   85,  -56,   -8,\\n          -58,   72,  -81,  -66,  -82,  -96,   76,   10,  100,  -93,\\n            2,  -53,   30,   41,  -75,  -25,   -2,  -36,  -52,  -44,\\n           92,   68,  -16,   50,  -55,   31,  -78,   72,   21,  -40,\\n          -51,   55,  -61,  -84,   51,  -32,  -30,  -98,   40,   75,\\n          -51,   94,   -9,   71,  -35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  46,  -26,  -95,   23,   35,  -87,   49,  -60,  -99,   82,\\n           28,   44,  -91,   86,   73,   89,  -80,  -88,   70,   42,\\n           35,   19,   72,  -87,  -15,   85,   85,  -32, -100,   22,\\n           45,  -15,   87,   27,  -47,    0,   13,  -24,    4,   57,\\n           37, -100,  -42,  -15,  -17,   65,  -74,   85,  -56,   -8,\\n          -58,   72,  -81,  -66,  -82,  -96,   76,   10,  100,  -93,\\n            2,  -53,   30,   41,  -75,  -25,   -2,  -36,  -52,  -44,\\n           92,   68,  -16,   50,  -55,   31,  -78,   72,   21,  -40,\\n          -51,   55,  -61,  -84,   51,  -32,  -30,  -98,   40,   75,\\n          -51,   94,   -9,   71,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  46,  -26,  -95,   23,   35,  -87,   49,  -60,  -99,   82,\\n           28,   44,  -91,   86,   73,   89,  -80,  -88,   70,   42,\\n           35,   19,   72,  -87,  -15,   85,   85,  -32, -100,   22,\\n           45,  -15,   87,   27,  -47,    0,   13,  -24,    4,   57,\\n           37, -100,  -42,  -15,  -17,   65,  -74,   85,  -56,   -8,\\n          -58,   72,  -81,  -66,  -82,  -96,   76,   10,  100,  -93,\\n            2,  -53,   30,   41,  -75,  -25,   -2,  -36,  -52,  -44,\\n           92,   68,  -16,   50,  -55,   31,  -78,   72,   21,  -40,\\n          -51,   55,  -61,  -84,   51,  -32,  -30,  -98,   40,   75,\\n          -51,   94,   -9,   71,  -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_51/tests58_51_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  46,  -26,  -95,   23,   35,  -87,   49,  -60,  -99,   82,\\n           28,   44,  -91,   86,   73,   89,  -80,  -88,   70,   42,\\n           35,   19,   72,  -87,  -15,   85,   85,  -32, -100,   22,\\n           45,  -15,   87,   27,  -47,    0,   13,  -24,    4,   57,\\n           37, -100,  -42,  -15,  -17,   65,  -74,   85,  -56,   -8,\\n          -58,   72,  -81,  -66,  -82,  -96,   76,   10,  100,  -93,\\n            2,  -53,   30,   41,  -75,  -25,   -2,  -36,  -52,  -44,\\n           92,   68,  -16,   50,  -55,   31,  -78,   72,   21,  -40,\\n          -51,   55,  -61,  -84,   51,  -32,  -30,  -98,   40,   75,\\n          -51,   94,   -9,   71,  -35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008345090027432889, "start": 1700279729.7108266, "stop": 1700279729.7116618, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "02bba8b17154462982f42bd551ba1fe1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
