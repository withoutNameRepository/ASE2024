{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_72_5.py::test_horizontal_matrix", "location": ["tests58_72_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012611300917342305, "start": 1700279747.080686, "stop": 1700279747.0808125, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_72_5.py::test_matrix_of_one_integer", "location": ["tests58_72_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00045581700396724045, "start": 1700279747.08052, "stop": 1700279747.080977, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_72_5.py::test_matrix_of_one_integer", "location": ["tests58_72_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006582379864994437, "start": 1700279747.0812628, "stop": 1700279747.0819218, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_72_5.py::test_matrix_of_one_integer", "location": ["tests58_72_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005012520123273134, "start": 1700279747.0822303, "stop": 1700279747.082732, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_72_5.py::test_matrix_of_having_16_integers", "location": ["tests58_72_5.py", 28, "test_matrix_of_having_16_integers"], "keywords": {"test_matrix_of_having_16_integers": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005565269966609776, "start": 1700279747.0831509, "stop": 1700279747.083708, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_72_5.py::test_matrix_of_having_16_integers", "location": ["tests58_72_5.py", 28, "test_matrix_of_having_16_integers"], "keywords": {"test_matrix_of_having_16_integers": 1, "__wrapped__": 1, "tests58_72_5.py": 1, "Folder_72": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_72/tests58_72_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-36,   3],\\n        [-94,  43],\\n        [ 38, -51],\\n        [-71,  83],\\n        [ 61,  48],\\n        [ 50,  10],\\n        [ 24,  36],\\n        [-14,  42]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_16_integers():", "        if 16 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(16 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(16)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-36,   3],\\n        [-94,  43],\\n        [ 38, -51],\\n        [-71,  83],\\n        [ 61,  48],\\n        [ 50,  10],\\n        [ 24,  36],\\n        [-14,  42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_72/tests58_72_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_16_integers():", "        if 16 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(16 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(16)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-36,   3],\\n        [-94,  43],\\n        [ 38, -51],\\n        [-71,  83],\\n        [ 61,  48],\\n        [ 50,  10],\\n        [ 24,  36],\\n        [-14,  42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_72/tests58_72_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_72/tests58_72_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-36,   3],\\n        [-94,  43],\\n        [ 38, -51],\\n        [-71,  83],\\n        [ 61,  48],\\n        [ 50,  10],\\n        [ 24,  36],\\n        [-14,  42]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000750486011384055, "start": 1700279747.0838482, "stop": 1700279747.0845993, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9f20fa07175142dcb0d66afa76d2e68d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
