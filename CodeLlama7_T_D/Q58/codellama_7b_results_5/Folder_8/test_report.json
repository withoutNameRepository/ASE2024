{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_8_5.py::test_horizontal_matrix", "location": ["tests58_8_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014350799028761685, "start": 1700279692.759678, "stop": 1700279692.7598221, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_8_5.py::test_matrix_of_one_integer", "location": ["tests58_8_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016583999968133867, "start": 1700279692.7594137, "stop": 1700279692.7595804, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_5.py::test_matrix_of_one_integer", "location": ["tests58_8_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017841000226326287, "start": 1700279692.7598436, "stop": 1700279692.7600226, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_5.py::test_matrix_of_one_integer", "location": ["tests58_8_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.975199307315052e-05, "start": 1700279692.7603016, "stop": 1700279692.760392, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_5.py::test_matrix_of_having_29_integers", "location": ["tests58_8_5.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.836801862344146e-05, "start": 1700279692.760785, "stop": 1700279692.760874, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_5.py::test_matrix_of_having_29_integers", "location": ["tests58_8_5.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_5.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_8/tests58_8_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 15, -10, 100,  67, -40, -14,  65,  59, -15,  74, -82,  41,  10,\\n         -54,  51, -90,  37,  30, -26, -83, -50, -52,  51, -25,  71,  34,\\n          69,  87, -52]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 15, -10, 100,  67, -40, -14,  65,  59, -15,  74, -82,  41,  10,\\n         -54,  51, -90,  37,  30, -26, -83, -50, -52,  51, -25,  71,  34,\\n          69,  87, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_8/tests58_8_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 15, -10, 100,  67, -40, -14,  65,  59, -15,  74, -82,  41,  10,\\n         -54,  51, -90,  37,  30, -26, -83, -50, -52,  51, -25,  71,  34,\\n          69,  87, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_8/tests58_8_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_8/tests58_8_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 15, -10, 100,  67, -40, -14,  65,  59, -15,  74, -82,  41,  10,\\n         -54,  51, -90,  37,  30, -26, -83, -50, -52,  51, -25,  71,  34,\\n          69,  87, -52]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00044549297308549285, "start": 1700279692.760997, "stop": 1700279692.7614434, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a111b0a9611451298c2da70d87d1b93", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
