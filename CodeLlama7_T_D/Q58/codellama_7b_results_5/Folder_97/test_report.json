{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015619100304320455, "start": 1700279766.6001718, "stop": 1700279766.6003287, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001755769771989435, "start": 1700279766.600596, "stop": 1700279766.600772, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.687900844961405e-05, "start": 1700279766.601057, "stop": 1700279766.6011443, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.443702245131135e-05, "start": 1700279766.6015248, "stop": 1700279766.6016097, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_horizontal_matrix", "location": ["tests58_97_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011507098679430783, "start": 1700279766.6100273, "stop": 1700279766.6101427, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -68,   67],\\n        [ -32,   40],\\n        [ -92,   98],\\n        [  70,  -61],\\n        [  40,   -8],\\n        [ -60,  -92],\\n        [  70,   29],\\n        [ -29,   31],\\n        [ -80,  -83],\\n        [  39,   35],\\n        [ -47,   87],\\n        [  90,  -58],\\n        [  93,    6],\\n        [ -42,  -85],\\n        [ -58,   64],\\n        [  97,  -40],\\n        [ -40,  -78],\\n        [ -24,   20],\\n        [  -5,   50],\\n        [ -69,  -13],\\n        [ -78, -100],\\n        [ -69,    6],\\n        [  83,   18],\\n        [  91,   -7],\\n        [ -31,  -10],\\n        [ -41,   54],\\n        [  16,  -23],\\n        [ -20,  -51],\\n        [ -90,  -12],\\n        [  58,   44],\\n        [  85,  -28],\\n        [  44,  -36],\\n        [ -98,  -59],\\n        [ -96,  -45],\\n        [  84,  -99],\\n        [ -37,   12],\\n        [ -91,  -45],\\n        [   8,   86],\\n        [  -3,   35],\\n        [  95,   23],\\n        [  71,   81],\\n        [ -97,    7],\\n        [  56,   -6],\\n        [  90,  -89],\\n        [  60,   70],\\n        [  91,   82],\\n        [   6,   83],\\n        [ -28,    9],\\n        [  63,  -62],\\n        [  56,   -5],\\n        [-100,   78],\\n        [ -12,  -45],\\n        [ -39,   67],\\n        [ -79,  -27],\\n        [ -88,   60],\\n        [ -52,  -68],\\n        [  -6,  100],\\n        [   2,   18],\\n        [ -63,   12],\\n        [ -86,  -84]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -68,   67],\\n        [ -32,   40],\\n        [ -92,   98],\\n        [  70,  -61],\\n        [  40,   -8],\\n        [ -60,  -92],\\n        [  70,   29],\\n        [ -29,   31],\\n        [ -80,  -83],\\n        [  39,   35],\\n        [ -47,   87],\\n        [  90,  -58],\\n        [  93,    6],\\n        [ -42,  -85],\\n        [ -58,   64],\\n        [  97,  -40],\\n        [ -40,  -78],\\n        [ -24,   20],\\n        [  -5,   50],\\n        [ -69,  -13],\\n        [ -78, -100],\\n        [ -69,    6],\\n        [  83,   18],\\n        [  91,   -7],\\n        [ -31,  -10],\\n        [ -41,   54],\\n        [  16,  -23],\\n        [ -20,  -51],\\n        [ -90,  -12],\\n        [  58,   44],\\n        [  85,  -28],\\n        [  44,  -36],\\n        [ -98,  -59],\\n        [ -96,  -45],\\n        [  84,  -99],\\n        [ -37,   12],\\n        [ -91,  -45],\\n        [   8,   86],\\n        [  -3,   35],\\n        [  95,   23],\\n        [  71,   81],\\n        [ -97,    7],\\n        [  56,   -6],\\n        [  90,  -89],\\n        [  60,   70],\\n        [  91,   82],\\n        [   6,   83],\\n        [ -28,    9],\\n        [  63,  -62],\\n        [  56,   -5],\\n        [-100,   78],\\n        [ -12,  -45],\\n        [ -39,   67],\\n        [ -79,  -27],\\n        [ -88,   60],\\n        [ -52,  -68],\\n        [  -6,  100],\\n        [   2,   18],\\n        [ -63,   12],\\n        [ -86,  -84]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -68,   67],\\n        [ -32,   40],\\n        [ -92,   98],\\n        [  70,  -61],\\n        [  40,   -8],\\n        [ -60,  -92],\\n        [  70,   29],\\n        [ -29,   31],\\n        [ -80,  -83],\\n        [  39,   35],\\n        [ -47,   87],\\n        [  90,  -58],\\n        [  93,    6],\\n        [ -42,  -85],\\n        [ -58,   64],\\n        [  97,  -40],\\n        [ -40,  -78],\\n        [ -24,   20],\\n        [  -5,   50],\\n        [ -69,  -13],\\n        [ -78, -100],\\n        [ -69,    6],\\n        [  83,   18],\\n        [  91,   -7],\\n        [ -31,  -10],\\n        [ -41,   54],\\n        [  16,  -23],\\n        [ -20,  -51],\\n        [ -90,  -12],\\n        [  58,   44],\\n        [  85,  -28],\\n        [  44,  -36],\\n        [ -98,  -59],\\n        [ -96,  -45],\\n        [  84,  -99],\\n        [ -37,   12],\\n        [ -91,  -45],\\n        [   8,   86],\\n        [  -3,   35],\\n        [  95,   23],\\n        [  71,   81],\\n        [ -97,    7],\\n        [  56,   -6],\\n        [  90,  -89],\\n        [  60,   70],\\n        [  91,   82],\\n        [   6,   83],\\n        [ -28,    9],\\n        [  63,  -62],\\n        [  56,   -5],\\n        [-100,   78],\\n        [ -12,  -45],\\n        [ -39,   67],\\n        [ -79,  -27],\\n        [ -88,   60],\\n        [ -52,  -68],\\n        [  -6,  100],\\n        [   2,   18],\\n        [ -63,   12],\\n        [ -86,  -84]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -68,   67],\\n        [ -32,   40],\\n        [ -92,   98],\\n        [  70,  -61],\\n        [  40,   -8],\\n        [ -60,  -92],\\n        [  70,   29],\\n        [ -29,   31],\\n        [ -80,  -83],\\n        [  39,   35],\\n        [ -47,   87],\\n        [  90,  -58],\\n        [  93,    6],\\n        [ -42,  -85],\\n        [ -58,   64],\\n        [  97,  -40],\\n        [ -40,  -78],\\n        [ -24,   20],\\n        [  -5,   50],\\n        [ -69,  -13],\\n        [ -78, -100],\\n        [ -69,    6],\\n        [  83,   18],\\n        [  91,   -7],\\n        [ -31,  -10],\\n        [ -41,   54],\\n        [  16,  -23],\\n        [ -20,  -51],\\n        [ -90,  -12],\\n        [  58,   44],\\n        [  85,  -28],\\n        [  44,  -36],\\n        [ -98,  -59],\\n        [ -96,  -45],\\n        [  84,  -99],\\n        [ -37,   12],\\n        [ -91,  -45],\\n        [   8,   86],\\n        [  -3,   35],\\n        [  95,   23],\\n        [  71,   81],\\n        [ -97,    7],\\n        [  56,   -6],\\n        [  90,  -89],\\n        [  60,   70],\\n        [  91,   82],\\n        [   6,   83],\\n        [ -28,    9],\\n        [  63,  -62],\\n        [  56,   -5],\\n        [-100,   78],\\n        [ -12,  -45],\\n        [ -39,   67],\\n        [ -79,  -27],\\n        [ -88,   60],\\n        [ -52,  -68],\\n        [  -6,  100],\\n        [   2,   18],\\n        [ -63,   12],\\n        [ -86,  -84]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008895480132196099, "start": 1700279766.6017344, "stop": 1700279766.6026244, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d011e85c979a4736a25758916b20e50f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
