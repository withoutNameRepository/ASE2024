{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031399200088344514, "start": 1700279408.2804837, "stop": 1700279408.2807987, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003980979963671416, "start": 1700279408.281115, "stop": 1700279408.281514, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00027481402503326535, "start": 1700279408.281842, "stop": 1700279408.2821174, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00036770899896509945, "start": 1700279408.2826064, "stop": 1700279408.2829747, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_horizontal_matrix", "location": ["tests58_6_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014191801892593503, "start": 1700279408.2880948, "stop": 1700279408.2882373, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -32],\\n        [  66,  -52],\\n        [ -77,   79],\\n        [ -13,  -20],\\n        [  57,   89],\\n        [  12,  -57],\\n        [  68,   82],\\n        [ -79,   72],\\n        [ -63,   69],\\n        [   6,   51],\\n        [  10,  -71],\\n        [ -90,   99],\\n        [  -7,   14],\\n        [  96,   14],\\n        [ -33,  -59],\\n        [ -37, -100],\\n        [  -2,  -88],\\n        [  48,   30],\\n        [  -9,   -5],\\n        [   5,  -88],\\n        [ -12,   -3],\\n        [  25,   71],\\n        [ -47,  -70],\\n        [   5,  -57],\\n        [ -55,  -57],\\n        [ -23,  -88],\\n        [ -26,  -79],\\n        [  94,  -93],\\n        [ -12,  -57],\\n        [ -13,   13],\\n        [  15,   -2],\\n        [  77,  -35],\\n        [  27,  -17],\\n        [ -24,   62],\\n        [  66,  -59],\\n        [  86,  -23],\\n        [  35,   70],\\n        [ -86,  -70],\\n        [ -92,   27],\\n        [  84,  -68],\\n        [  44,   53],\\n        [  91,  -17],\\n        [  54,   95],\\n        [  -9,   96],\\n        [ -46,  -49],\\n        [  83,   93],\\n        [  98,   57],\\n        [  17,  -80],\\n        [  91,   60],\\n        [  60,   75],\\n        [  88,  -77],\\n        [  93,  -38],\\n        [ -70,    9],\\n        [ -28,   13],\\n        [ -88,  -37],\\n        [  76,  -15],\\n        [ -91,  -43],\\n        [ -40,  -98],\\n        [  70,   52],\\n        [ -11,   19],\\n        [ -67, -100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -32],\\n        [  66,  -52],\\n        [ -77,   79],\\n        [ -13,  -20],\\n        [  57,   89],\\n        [  12,  -57],\\n        [  68,   82],\\n        [ -79,   72],\\n        [ -63,   69],\\n        [   6,   51],\\n        [  10,  -71],\\n        [ -90,   99],\\n        [  -7,   14],\\n        [  96,   14],\\n        [ -33,  -59],\\n        [ -37, -100],\\n        [  -2,  -88],\\n        [  48,   30],\\n        [  -9,   -5],\\n        [   5,  -88],\\n        [ -12,   -3],\\n        [  25,   71],\\n        [ -47,  -70],\\n        [   5,  -57],\\n        [ -55,  -57],\\n        [ -23,  -88],\\n        [ -26,  -79],\\n        [  94,  -93],\\n        [ -12,  -57],\\n        [ -13,   13],\\n        [  15,   -2],\\n        [  77,  -35],\\n        [  27,  -17],\\n        [ -24,   62],\\n        [  66,  -59],\\n        [  86,  -23],\\n        [  35,   70],\\n        [ -86,  -70],\\n        [ -92,   27],\\n        [  84,  -68],\\n        [  44,   53],\\n        [  91,  -17],\\n        [  54,   95],\\n        [  -9,   96],\\n        [ -46,  -49],\\n        [  83,   93],\\n        [  98,   57],\\n        [  17,  -80],\\n        [  91,   60],\\n        [  60,   75],\\n        [  88,  -77],\\n        [  93,  -38],\\n        [ -70,    9],\\n        [ -28,   13],\\n        [ -88,  -37],\\n        [  76,  -15],\\n        [ -91,  -43],\\n        [ -40,  -98],\\n        [  70,   52],\\n        [ -11,   19],\\n        [ -67, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -32],\\n        [  66,  -52],\\n        [ -77,   79],\\n        [ -13,  -20],\\n        [  57,   89],\\n        [  12,  -57],\\n        [  68,   82],\\n        [ -79,   72],\\n        [ -63,   69],\\n        [   6,   51],\\n        [  10,  -71],\\n        [ -90,   99],\\n        [  -7,   14],\\n        [  96,   14],\\n        [ -33,  -59],\\n        [ -37, -100],\\n        [  -2,  -88],\\n        [  48,   30],\\n        [  -9,   -5],\\n        [   5,  -88],\\n        [ -12,   -3],\\n        [  25,   71],\\n        [ -47,  -70],\\n        [   5,  -57],\\n        [ -55,  -57],\\n        [ -23,  -88],\\n        [ -26,  -79],\\n        [  94,  -93],\\n        [ -12,  -57],\\n        [ -13,   13],\\n        [  15,   -2],\\n        [  77,  -35],\\n        [  27,  -17],\\n        [ -24,   62],\\n        [  66,  -59],\\n        [  86,  -23],\\n        [  35,   70],\\n        [ -86,  -70],\\n        [ -92,   27],\\n        [  84,  -68],\\n        [  44,   53],\\n        [  91,  -17],\\n        [  54,   95],\\n        [  -9,   96],\\n        [ -46,  -49],\\n        [  83,   93],\\n        [  98,   57],\\n        [  17,  -80],\\n        [  91,   60],\\n        [  60,   75],\\n        [  88,  -77],\\n        [  93,  -38],\\n        [ -70,    9],\\n        [ -28,   13],\\n        [ -88,  -37],\\n        [  76,  -15],\\n        [ -91,  -43],\\n        [ -40,  -98],\\n        [  70,   52],\\n        [ -11,   19],\\n        [ -67, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -32],\\n        [  66,  -52],\\n        [ -77,   79],\\n        [ -13,  -20],\\n        [  57,   89],\\n        [  12,  -57],\\n        [  68,   82],\\n        [ -79,   72],\\n        [ -63,   69],\\n        [   6,   51],\\n        [  10,  -71],\\n        [ -90,   99],\\n        [  -7,   14],\\n        [  96,   14],\\n        [ -33,  -59],\\n        [ -37, -100],\\n        [  -2,  -88],\\n        [  48,   30],\\n        [  -9,   -5],\\n        [   5,  -88],\\n        [ -12,   -3],\\n        [  25,   71],\\n        [ -47,  -70],\\n        [   5,  -57],\\n        [ -55,  -57],\\n        [ -23,  -88],\\n        [ -26,  -79],\\n        [  94,  -93],\\n        [ -12,  -57],\\n        [ -13,   13],\\n        [  15,   -2],\\n        [  77,  -35],\\n        [  27,  -17],\\n        [ -24,   62],\\n        [  66,  -59],\\n        [  86,  -23],\\n        [  35,   70],\\n        [ -86,  -70],\\n        [ -92,   27],\\n        [  84,  -68],\\n        [  44,   53],\\n        [  91,  -17],\\n        [  54,   95],\\n        [  -9,   96],\\n        [ -46,  -49],\\n        [  83,   93],\\n        [  98,   57],\\n        [  17,  -80],\\n        [  91,   60],\\n        [  60,   75],\\n        [  88,  -77],\\n        [  93,  -38],\\n        [ -70,    9],\\n        [ -28,   13],\\n        [ -88,  -37],\\n        [  76,  -15],\\n        [ -91,  -43],\\n        [ -40,  -98],\\n        [  70,   52],\\n        [ -11,   19],\\n        [ -67, -100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012261809897609055, "start": 1700279408.2831423, "stop": 1700279408.2843695, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1276da0c59a1429db5890bfff5945cf9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
