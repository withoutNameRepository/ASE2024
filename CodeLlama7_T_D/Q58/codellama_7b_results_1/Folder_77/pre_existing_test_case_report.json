{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  2,  95,  75,  25,  80,  24,   1, -13,  28, -47,  62,  -1, -98,\\n           9,  70,  26,  -6,  37,  66, -38,  28, -69, -89,  28,  84, -40,\\n           6,  96,  92, -91,  85,  84,  31, -19, -44,  88, -63, -73,   1,\\n          69, -61,   0, -39,  21, -21, -55, -80,  -6,  93,  41,  99,  50,\\n         -31, -35, -55,  41,  22, -55,  19, -81, -58, -72, -94,  62, -15,\\n          75,  65, -90, -35, -46,   2, -64, -75,  95, -19,  70,  96,  52,\\n         -71,  -8, -75,  45,   5,   4,  -5, -70,   4,  93,  17, -55,  78,\\n         -25,  35,  79,  55, -55,  64,  45, -15, -68,  60, -99,  70, -65,\\n          89, -91, -88, -17,  60, -76, -26, -64,  36,  81, -48, -10,   6,\\n          99, -84,  49,  31, -63,  54, -10, -81,  37,  65, -69, -90,  61,\\n          84, -13,  47, -69, -21, -12,  80,   7, -17,  41,  52, -45,   8,\\n           6,  39, -19,  87,  63, -44, -87,  96, -84,  62, -92, -77, -45,\\n         -75, -17,  57, -19, -28,  57,  36,   4,  11, -22,  64, -73,  47,\\n         -26,  71,  95,   6,  60,  69,  97,  39,  23, -43]]))",
    0.00088
  ]
}