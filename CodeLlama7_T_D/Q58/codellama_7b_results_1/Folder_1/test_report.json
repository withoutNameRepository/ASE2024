{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_1_1.py::test_matrix_of_one_integer", "location": ["tests58_1_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025770498905330896, "start": 1700279405.2797537, "stop": 1700279405.2800124, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_1_1.py::test_matrix_of_one_integer", "location": ["tests58_1_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003637789923232049, "start": 1700279405.280296, "stop": 1700279405.2806606, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_1_1.py::test_matrix_of_one_integer", "location": ["tests58_1_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005015709903091192, "start": 1700279405.2809713, "stop": 1700279405.2814736, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_1_1.py::test_horizontal_matrix", "location": ["tests58_1_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014968999312259257, "start": 1700279405.2820292, "stop": 1700279405.2821796, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_1_1.py::test_matrix_of_having_23_integers", "location": ["tests58_1_1.py", 28, "test_matrix_of_having_23_integers"], "keywords": {"test_matrix_of_having_23_integers": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031298998510465026, "start": 1700279405.2819214, "stop": 1700279405.282235, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_1_1.py::test_matrix_of_having_23_integers", "location": ["tests58_1_1.py", 28, "test_matrix_of_having_23_integers"], "keywords": {"test_matrix_of_having_23_integers": 1, "__wrapped__": 1, "tests58_1_1.py": 1, "Folder_1": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_1/Folder_1/tests58_1_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  65,   40,    7,   45,    8,   91,  -62,   20,  -29,   90,\\n           43,  -32,   -7,    0,   67,   58,   98, -100,  -53,   98,\\n          -99,   92,  -33]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_23_integers():", "        if 23 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(23 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(23)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  65,   40,    7,   45,    8,   91,  -62,   20,  -29,   90,\\n           43,  -32,   -7,    0,   67,   58,   98, -100,  -53,   98,\\n          -99,   92,  -33]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_1/tests58_1_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_23_integers():", "        if 23 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(23 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(23)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  65,   40,    7,   45,    8,   91,  -62,   20,  -29,   90,\\n           43,  -32,   -7,    0,   67,   58,   98, -100,  -53,   98,\\n          -99,   92,  -33]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_1/tests58_1_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_1/Folder_1/tests58_1_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  65,   40,    7,   45,    8,   91,  -62,   20,  -29,   90,\\n           43,  -32,   -7,    0,   67,   58,   98, -100,  -53,   98,\\n          -99,   92,  -33]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000644217012450099, "start": 1700279405.2823822, "stop": 1700279405.2830272, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a7aef91b5cbd46648da12c134911d852", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
