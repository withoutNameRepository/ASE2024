{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -30,   24,  -22,   22,  -27,  -62,   10,    3,  -92,  -29,\\n          -23,  -69,  -62,  -10,   61,   -4,  -14,  -65,   73,  -36,\\n           60,  -45,   94,    0,   52,   55,   37,   50,   57,   96,\\n          -91,  -73,   99,   20,  -35,   49,  -77,  -76,   40,    4,\\n          -67,  -63,   50,   -3,  -19,   80,  -62,  -81,  -67,  -15,\\n          -89,  -70,  -97,  -63,  -63,  -32,   34,    5,  -66,  -11,\\n           87,  -63,   -7,   63, -100,   81,  -77,   57,   62,  -66,\\n          100,   -7,   32,   21,   80,  -20,    9,  -99,  -72,   66,\\n           -7,  -39,   52,   73,  -12,   21,  -45,   19,   44,  -62,\\n           -2,   33,   45,  -82,   34,  -10,  -31,  -75,  -49,    7,\\n          -78,    4,   65,   24,  -92,   63,  -68,   40,  -49,  -74,\\n           39,   62,   63,   65,   25,  -96,   96,  -41,   -1,   34,\\n          -10,   10,  -47,  -43,  -39,   49,   18,   89,  -30, -100,\\n           60,    6,  -69,  -16,   32,  -83,  -91,   61,  -81,  -77,\\n           10,   16,   59,  -67,  -26,  -78,   38]]))",
    0.00074
  ]
}