{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_3_3.py::test_horizontal_matrix", "location": ["tests58_3_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001288960047531873, "start": 1700279536.8050256, "stop": 1700279536.805155, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_3_3.py::test_matrix_of_one_integer", "location": ["tests58_3_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026362299104221165, "start": 1700279536.8050923, "stop": 1700279536.805357, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_3.py::test_matrix_of_one_integer", "location": ["tests58_3_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032334800926037133, "start": 1700279536.8056378, "stop": 1700279536.8059616, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_3.py::test_matrix_of_one_integer", "location": ["tests58_3_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020272700930945575, "start": 1700279536.8062623, "stop": 1700279536.8064656, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_3.py::test_matrix_of_having_54_integers", "location": ["tests58_3_3.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002631919924169779, "start": 1700279536.806878, "stop": 1700279536.8071418, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_3.py::test_matrix_of_having_54_integers", "location": ["tests58_3_3.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_3.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q58/codellama_7b_results_3/Folder_3/tests58_3_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -99,    8],\\n        [ -88,  -25],\\n        [ -36,  -19],\\n        [  69,  -46],\\n        [ -38,   80],\\n        [  86,   85],\\n        [ -28,    4],\\n        [ -65,   -9],\\n        [-100,  -49],\\n        [  35,  -98],\\n        [  36,  -16],\\n        [  43,  -96],\\n        [  42,   59],\\n        [  96,  -60],\\n        [  -6,   85],\\n        [  22,  -29],\\n        [ 100,  -64],\\n        [ -91,  -11],\\n        [  40,   -6],\\n        [ -47,   -3],\\n        [ -60,   73],\\n        [  85,   55],\\n        [ -63,   36],\\n        [  72,  -78],\\n        [  43,  -60],\\n        [ -44,  -69],\\n        [  59,   82]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -99,    8],\\n        [ -88,  -25],\\n        [ -36,  -19],\\n        [  69,  -46],\\n        [ -38,   80],\\n        [  86,   85],\\n        [ -28,    4],\\n        [ -65,   -9],\\n        [-100,  -49],\\n        [  35,  -98],\\n        [  36,  -16],\\n        [  43,  -96],\\n        [  42,   59],\\n        [  96,  -60],\\n        [  -6,   85],\\n        [  22,  -29],\\n        [ 100,  -64],\\n        [ -91,  -11],\\n        [  40,   -6],\\n        [ -47,   -3],\\n        [ -60,   73],\\n        [  85,   55],\\n        [ -63,   36],\\n        [  72,  -78],\\n        [  43,  -60],\\n        [ -44,  -69],\\n        [  59,   82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_3/Folder_3/tests58_3_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -99,    8],\\n        [ -88,  -25],\\n        [ -36,  -19],\\n        [  69,  -46],\\n        [ -38,   80],\\n        [  86,   85],\\n        [ -28,    4],\\n        [ -65,   -9],\\n        [-100,  -49],\\n        [  35,  -98],\\n        [  36,  -16],\\n        [  43,  -96],\\n        [  42,   59],\\n        [  96,  -60],\\n        [  -6,   85],\\n        [  22,  -29],\\n        [ 100,  -64],\\n        [ -91,  -11],\\n        [  40,   -6],\\n        [ -47,   -3],\\n        [ -60,   73],\\n        [  85,   55],\\n        [ -63,   36],\\n        [  72,  -78],\\n        [  43,  -60],\\n        [ -44,  -69],\\n        [  59,   82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_3/Folder_3/tests58_3_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q58/codellama_7b_results_3/Folder_3/tests58_3_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -99,    8],\\n        [ -88,  -25],\\n        [ -36,  -19],\\n        [  69,  -46],\\n        [ -38,   80],\\n        [  86,   85],\\n        [ -28,    4],\\n        [ -65,   -9],\\n        [-100,  -49],\\n        [  35,  -98],\\n        [  36,  -16],\\n        [  43,  -96],\\n        [  42,   59],\\n        [  96,  -60],\\n        [  -6,   85],\\n        [  22,  -29],\\n        [ 100,  -64],\\n        [ -91,  -11],\\n        [  40,   -6],\\n        [ -47,   -3],\\n        [ -60,   73],\\n        [  85,   55],\\n        [ -63,   36],\\n        [  72,  -78],\\n        [  43,  -60],\\n        [ -44,  -69],\\n        [  59,   82]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000719542003935203, "start": 1700279536.807277, "stop": 1700279536.8079972, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fff95b638b2642f8b0a61e9586ca37d0", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
