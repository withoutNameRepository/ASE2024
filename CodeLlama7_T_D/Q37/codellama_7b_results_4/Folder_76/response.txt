 Here's a possible implementation of the `filter_chars` function:
```python
def filter_chars(input_str):
    # Create an empty list to store the filtered characters
    filtered_chars = []
    # Iterate over each character in the input string
    for char in input_str:
        # Check if the current character is between indices 379 and 898, both inclusive
        if (input_str.index(char) >= 379) and (input_str.index(char) <= 898)):
            # Check if the current character is greater than or equal to character 'M' and smaller than or equal to character 'v'
            if (char >= 'M') and (char <= 'v'):
                # Remove all occurrences of the current character from the input string
                filtered_chars.append(input_str.replace(char, ''))
    return "".join(filtered_chars)
```
This function takes in a single argument `input_str`, which is the input string that needs to be filtered.
The function first creates an empty list called `filtered_chars` to store the filtered characters.
Next, the function iterates over each character in the input string using a `for` loop.
For each character, the function checks if it occurs between indices 379 and 898, both inclusive. If it does, then the function checks if it is greater than or equal to character 'M' and smaller than or equal to character 'v'. If it meets these conditions, then the function removes all occurrences of that character from the input string using the `replace` method.
Finally, the function returns the altered input string as a single string with no spaces in between characters.