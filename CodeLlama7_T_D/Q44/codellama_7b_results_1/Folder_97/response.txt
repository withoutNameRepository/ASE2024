 ```
def composite_nums_between_indices(my_list):
    # Initialize an empty set to store the composite numbers
    composite_numbers = set()

    # Iterate over the list and check if each number is composite
    for i in range(15, 39 + 1):
        if is_composite(my_list[i]):
            composite_numbers.add(my_list[i])

    # Return the set of all composite numbers between indices 15 and 39 (inclusive)
    return composite_numbers
```
This code defines a function `composite_nums_between_indices` that takes a list of positive integers as its argument. The function returns the set of all composite numbers in the given list that are between indices 15 to 39 (inclusive). If no composite number exists in the specified range, the function returns an empty set.
The function first initializes an empty set `composite_numbers` to store the composite numbers. It then iterates over the list using a for loop and checks if each number is composite by calling the `is_composite()` function on it. If the current number is composite, it is added to the `composite_numbers` set.
Finally, the function returns the `composite_numbers` set containing all the composite numbers between indices 15 and 39 (inclusive).