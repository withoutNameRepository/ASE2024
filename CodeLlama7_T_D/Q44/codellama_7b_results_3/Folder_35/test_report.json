{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests44_35_3.py::test_list_of_non_prime_nums", "location": ["tests44_35_3.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010127099812962115, "start": 1700275187.8790283, "stop": 1700275187.87913, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ad8d7dada16045e194a4f45a2fb85861", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_35_3.py::test_list_of_primes", "location": ["tests44_35_3.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011490000179037452, "start": 1700275187.8790064, "stop": 1700275187.879122, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ad8d7dada16045e194a4f45a2fb85861", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_35_3.py::test_list_of_non_prime_nums", "location": ["tests44_35_3.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_35_3.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q44/codellama_7b_results_3/Folder_35/tests44_35_3.py", "lineno": 19, "message": "assert set() == {60, 62, 64, 66, 68}\n  Extra items in the right set:\n  64\n  66\n  68\n  60\n  62\n  Full diff:\n  - {64, 66, 68, 60, 62}\n  + set()"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (32 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[28:32 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert set() == {60, 62, 64, 66, 68}", "E             Extra items in the right set:", "E             64", "E             66", "E             68", "E             60", "E             62", "E             Full diff:", "E             - {64, 66, 68, 60, 62}", "E             + set()"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_7b_results_3/Folder_35/tests44_35_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (32 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[28:32 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert set() == {60, 62, 64, 66, 68}", "E             Extra items in the right set:", "E             64", "E             66", "E             68", "E             60", "E             62", "E             Full diff:", "E             - {64, 66, 68, 60, 62}", "E             + set()"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codellama_7b_results_3/Folder_35/tests44_35_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q44/codellama_7b_results_3/Folder_35/tests44_35_3.py", "lineno": 19, "message": "assert set() == {60, 62, 64, 66, 68}\n  Extra items in the right set:\n  64\n  66\n  68\n  60\n  62\n  Full diff:\n  - {64, 66, 68, 60, 62}\n  + set()"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003503050247672945, "start": 1700275187.8793073, "stop": 1700275187.879658, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ad8d7dada16045e194a4f45a2fb85861", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
