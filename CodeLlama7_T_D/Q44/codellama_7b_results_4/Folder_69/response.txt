 ```
def composite_nums_between_indices(my_list):
    # Initialize an empty set to store the composite numbers
    composite_numbers = set()

    # Iterate over the list from index 29 to 79 (inclusive)
    for i in range(29, 80):

        # Check if the current element is divisible by any of the prime factors of its neighbors
        if all(my_list[i] % my_list[j] != 0 for j in range(max(0, i - 1), min(len(my_list), i + 1)))):

            # If it is divisible by no prime factors, it is a composite number
            composite_numbers.add(my_list[i])

    return composite_numbers

# Test the function with a sample list of positive integers
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]
#print(composite_nums_between_indices(my_list))
```