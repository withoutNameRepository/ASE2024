 def composite_nums_between_indices(my_list):
    # Initialize an empty set to store the composite numbers
    composite_numbers = set()

    # Iterate over the list of positive integers
    for i in range(len(my_list)):
        # Check if the current number is a composite number
        if my_list[i] > 1 and is_composite(my_list[i]):
            # If it is, add it to the set of composite numbers
            composite_numbers.add(my_list[i])

    # Return the set of all composite numbers between index 5 and index 5
    return composite_numbers

# Check if a number is a composite number
def is_composite(n):
    # Iterate from 2 to the square root of n
    for i in range(2, int(n ** 0.5) + 1):
        # If n is divisible by any number between 2 and the square root of n, it is not prime
        if n % i == 0:
            return False

    # If n is not divisible by any number between 2 and the square root of n, it is prime
    return True