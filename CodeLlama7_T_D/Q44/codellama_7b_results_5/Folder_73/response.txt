 Here is a possible implementation of the `composite_nums_between_indices` function in Python:
```
def composite_nums_between_indices(my_list):
    # Initialize an empty set to store the composite numbers
    composite_numbers = set()

    # Iterate over the elements of the list in the specified range
    for i in range(28, 41):
        # Check if the current element is a prime number
        if my_list[i] == 1:
            # If it is a prime number, mark it as composite and add it to the set of composite numbers
            composite_numbers.add(my_list[i])

    # Return the set of all composite numbers in the specified range
    return composite_numbers
```
This implementation uses a set to store the composite numbers that are found in the specified range. It then iterates over the elements of the list in this range and checks if each element is a prime number using the `==` operator. If an element is a prime number, it is marked as composite and added to the set of composite numbers. Finally, the function returns the set of all composite numbers found in the specified range.