 Here is a possible implementation of the `composite_nums_between_indices` function in Python:
```
def composite_nums_between_indices(my_list):
    # Initialize an empty set to store the composite numbers
    composite_numbers = set()

    # Iterate over the list of positive integers
    for i in range(len(my_list)):
        # Check if the current number is composite
        if my_list[i] > 1 and my_list[i] % 2 != 0:
            # If it is, add it to the set of composite numbers
            composite_numbers.add(my_list[i])

    # Return the set of all composite numbers between index 5 and index 7, both inclusive
    return composite_numbers
```
This code uses a loop to iterate over each number in the list. For each number, it checks if it is greater than 1 and not divisible by 2 (since only odd numbers can be prime). If a number is composite, its corresponding index is added to the set of composite numbers. Finally, the function returns the set of all composite numbers between index 5 and index 7, both inclusive.