 ```
def composite_nums_between_indices(my_list):
    # Check if the input is a list of positive integers
    if not all(isinstance(x, int) and x > 0 for x in my_list)):
        raise ValueError("The input must be a list of positive integers")
    # Initialize an empty set to store the composite numbers
    composite_nums = set()
    # Iterate over the indices in the specified range
    for i in range(25, 60):
        # Check if the current number is prime
        if my_list[i] == 1:
            continue

        # Iterate over the factors of the current number
        for j in range(2, int(my_list[i]) ** 0.5 + 1):
            # Check if the current factor divides the current number
            if my_list[i] % j == 0:
                # Add the composite number to the set of composite numbers
                composite_nums.add(my_list[i])
                # Break out of the inner loop since we have found a factor
                break

    # Return the set of composite numbers in the specified range
    return composite_nums
```