 ```
def all_right_truncatable_prime(tuple):
x = tuple[6]
list_of_primes = []
for i in range(2, x + 1):
if is_prime(i) and is_right_truncatable_prime(i):
list_of_primes.append(i)
return sorted(list_of_primes, reverse=True)
else:
return []

def is_prime(n):
if n < 2:
return False

for i in range(2, int(n ** 0.5) + 1):
if n % i == 0:
return False

return True

def is_right_truncatable_prime(n):
if n < 2:
return False

for i in range(len(str(n)) - 1, -1, -1):
if not is_prime(int(str(n)[:i] + str(n)[i + 1:])))
return False

return True
```