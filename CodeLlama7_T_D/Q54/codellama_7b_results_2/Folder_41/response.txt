 def all_right_truncatable_prime(nums):
	# Check if the number is prime
	def is_prime(n):
		if n == 1 or n % 2 == 0:
			return False

		for i in range(3, int(n ** 0.5) + 1, 2):
			if n % i == 0:
				return False

		return True

	# Check if the number is right-truncatable prime
	def is_right_truncatable_prime(n):
		for i in range(1, len(str(n)))[::-1]:
			if n % 10 ** i == 0:
				return False

		return True

	# Find all right-truncatable prime numbers less than x
	result = []
	for num in nums[:46]:
		if is_prime(num) and is_right_truncatable_prime(num):
			result.append(num)

	# Return the sorted list of all right-truncatable prime numbers less than x
	return sorted(result, reverse=True)