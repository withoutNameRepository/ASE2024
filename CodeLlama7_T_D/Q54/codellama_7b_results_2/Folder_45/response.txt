 ```
def all_right_truncatable_prime(tuple):
x = tuple[61]
right_truncatable_primes = []
for i in range(2, x):
if is_prime(i) and is_right_truncatable_prime(i):
right_truncatable_primes.append(i)
return sorted(right_truncatable_primes)
def is_prime(n):
if n < 2:
return False

for i in range(2, int(n ** 0.5) + 1):
if n % i == 0:
return False

return True

def is_right_truncatable_prime(n):
if n < 2:
return False

while n > 0:

digit = n % 10

if digit == 0:

return False

n //= 10

return True

```
This code defines a function `all_right_truncatable_prime` that takes a tuple of positive integers as an argument. The function then uses the helper functions `is_prime` and `is_right_truncatable_prime` to determine whether each number in the tuple is a right-truncatable prime number. If it is, the corresponding integer is appended to a list called `right_truncatable_primes`. Once all the numbers have been checked, the list is sorted in ascending order using the built-in function `sorted` and returned by the function.