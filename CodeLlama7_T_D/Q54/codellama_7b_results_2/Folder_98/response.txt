 ```
def all_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_list = []

    # Iterate from 10 to x-1
    for i in range(10, x):
        # Check if the number is a prime number
        if is_prime(i):
            # Add the prime number to the list
            prime_list.append(i)

    # Sort the list in descending order
    prime_list.sort(reverse=True)

    # Return the sorted list of all right-truncatable prime numbers less than x
    return prime_list

# Function to check if a number is a prime number
def is_prime(n):
    # Check if n is greater than 1
    if n > 1:
        # Iterate from 2 to the square root of n
        for i in range(2, int(n ** 0.5) + 1)):
            # Check if i divides n
            if n % i == 0:
                # Return False if i divides n
                return False

    # Return True if n is a prime number
    return True

# Driver code to test the function
x = 100
#print(all_right_truncatable_prime(x))
```