 ```
def all_right_truncatable_prime(tuple):
	# Initialize an empty list to store the right-truncatable prime numbers
	all_primes = []

	# Iterate through the tuple of positive integers

	for i in range(39):

		# Check if the current element is a prime number

		if is_prime(tuple[i]):

			# If it is, add it to the list of all right-truncatable prime numbers

			all_primes.append(tuple[i])

# Check if a given integer is a prime number

def is_prime(n):

	# Check if n is greater than 1

	if n > 1:

		# Iterate from 2 to the square root of n

		for i in range(2, int(n ** 0.5) + 1):

			# If n is divisible by any number between 2 and the square root of n, it is not a prime number

			if n % i == 0:

				return False

		# If we reach this point, n is a prime number

		return True


# Sort the list of all right-truncatable prime numbers in descending order

all_primes.sort(reverse=True)

# Return the sorted list of all right-truncatable prime numbers less than x

return all_primes

```