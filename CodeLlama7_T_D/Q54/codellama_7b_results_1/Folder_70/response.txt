 ```
def all_right_truncatable_prime(tuple):
    # Initialize an empty list to store the sorted right-truncatable prime numbers
    prime_list = []

    # Iterate over the elements of the input tuple

    for element in tuple:

        # Check if the current element is a prime number

        if is_prime(element):

            # Append the current element to the list of right-truncatable prime numbers

            prime_list.append(element)

    # Sort the list of right-truncatable prime numbers in descending order

    prime_list = sorted(prime_list, reverse=True)

    # Return the sorted list of all right-truncatable prime numbers less than x

    return prime_list

def is_prime(n):

    # Check if n is greater than 1

    if n > 1:

        # Iterate from 2 to the square root of n

        for i in range(2, int(n ** 0.5) + 1):

            # Check if i divides n

            if n % i == 0:

                # If i divides n, return False

                return False

    # If n is greater than 1 and it is not divisible by any prime in the range, it is a prime number

    return True
```