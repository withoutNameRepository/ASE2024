 Here is a possible implementation of the `all_right_truncatable_prime` function:
```python
def all_right_truncatable_prime(nums):
    # Initialize an empty list to store the prime numbers
    prime_numbers = []

    # Loop through each number in the tuple
    for num in nums:
        # Check if the number is a prime number
        if is_prime(num):
            # Add the prime number to the list of prime numbers
            prime_numbers.append(num)

    # Return the sorted list of prime numbers in descending order
    return sorted(prime_numbers, reverse=True)
```
This code first initializes an empty list to store the prime numbers that are right-truncatable prime numbers less than x. It then loops through each number in the tuple and checks if it is a prime number using the `is_prime` function. If the number is a prime number, it is added to the list of prime numbers. Finally, the sorted list of prime numbers is returned in descending order.