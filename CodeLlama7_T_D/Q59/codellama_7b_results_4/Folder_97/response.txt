 def all_left_truncatable_prime(tuple):
	# Initialize list of prime numbers
	prime_numbers = []

	# Iterate over the tuple
	for number in tuple:
		# Check if the number is a prime number
		if is_prime(number):
			# If it is, append it to the list of prime numbers
			prime_numbers.append(number)

	# Sort the list of prime numbers in ascending order
	prime_numbers = sorted(prime_numbers)

	# Return the list of prime numbers
	return prime_numbers

def is_prime(number):
	# Check if the number is less than 2, as all numbers less than 2 are not prime
	if number < 2:
		return False

	# Iterate from 2 to the square root of the number
	for i in range(2, int(number ** 0.5) + 1):
		# Check if the number is divisible by any number between 2 and its square root
		if number % i == 0:
			return False

	# If none of the above conditions are met, then the number must be prime
	return True

# Test the function with a tuple of positive integers
tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9)
#print(all_left_truncatable_prime(tuple))