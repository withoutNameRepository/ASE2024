 ```
def all_left_truncatable_prime(tuple):
    x = tuple[11]
    list_of_all_left_truncatable_prime_numbers = []
    for i in range(2, x):
        if is_prime(i) and is_left_truncatable_prime(i):
            list_of_all_left_truncatable_prime_numbers.append(i)
    return sorted(list_of_all_left_truncatable_prime_numbers)

def is_prime(n):
    if n < 2:
        return False

    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False

    return True


def is_left_truncatable_prime(n):
    string_representation_of_n = str(n)
    length_of_string_representation_of_n = len(string_representation_of_n)

    for i in range(length_of_string_representation_of_n - 1):
        if string_representation_of_n[i] != "0":
            return False

        int_representation_of_substring = int(string_representation_of_n[i + 1:])

        if not is_prime(int_representation_of_substring):
            return False

    return True
```