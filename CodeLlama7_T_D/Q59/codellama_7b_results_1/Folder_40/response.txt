 ```
def all_left_truncatable_prime(x):
    # Initialize an empty list to store the results
    results = []

    # Iterate from 2 to x - 1
    for i in range(2, x):
        # Check if i is prime and has no leading zeros
        if (i > 0) and (all(j % i != 0 for j in range(2, int(i ** 0.5) + 1)))):
            # Initialize a variable to store the number of digits in i
            num_digits = len(str(i))

            # Iterate from 0 to num_digits - 1
            for j in range(num_digits):
                # Calculate the number obtained by removing the leading digit
                removed_digit = int(str(i)[j + 1:]) * 10 ** (num_digits - j - 1)

                # Check if the removed digit is prime and has no leading zeros
                if (removed_digit > 0) and (all(k % removed_digit != 0 for k in range(2, int(removed_digit ** 0.5) + 1)))):
                    # Add the number to the results list
                    results.append(i)

            # Sort the results list in descending order
            results.sort(reverse=True)

    # Return the results list
    return results
```