 ```
def all_left_truncatable_prime(nums):
x = nums[8]
list_of_prime_numbers = []
for i in range(2, x):
if is_prime(i) and is_left_truncatable_prime(i):
list_of_prime_numbers.append(i)
return sorted(list_of_prime_numbers, reverse=True)
def is_prime(n):
if n < 2:
return False

for i in range(2, int(n ** 0.5) + 1):
if n % i == 0:
return False

return True

def is_left_truncatable_prime(n):
string_form = str(n)
for i in range(len(string_form)):
current_digit = int(string_form[i])
if current_digit == 0:
return False

new_number = int(string_form[:i] + string_form[i+1:])
if not is_prime(new_number):
return False

return True
```