 ```
def all_left_truncatable_prime(tuple):
    # Initialize a list to store the left-truncatable prime numbers
    prime_list = []
    # Iterate through the tuple of positive integers
    for i in tuple:
        # Check if the current number is a prime number
        if is_prime(i):
            # If it is, add it to the list of left-truncatable prime numbers
            prime_list.append(i)
    return sorted(prime_list, reverse=True)
# Define a function to check if a number is a prime number
def is_prime(n):
    # Check if n is greater than 1
    if n > 1:
        # Iterate from 2 to the square root of n
        for i in range(2, int(n ** 0.5) + 1):
            # If n is divisible by any number between 2 and the square root of n, it is not prime
            if n % i == 0:
                return False

    # If n is greater than 1 and it is not divisible by any number between 2 and the square root of n, it is prime
    return True

# Test the function with a tuple of positive integers
tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9)
#print(all_left_truncatable_prime(tuple))
```