 ```
def remove_repeat_chars(string):
    # Create a new string with the characters in order
    new_string = ""

    # Iterate over each character in the string
    for char in string:
        # If the character is not already in the new string, add it
        if char not in new_string:
            new_string += char

    # Return the altered string
    return new_string

# Test the function with a sample input
#print(remove_repeat_chars("hello world"))
```
This code will remove any repeated characters from the given string, while preserving the order of all characters in the string. The `remove_repeat_chars` function takes one argument, a string, and returns the altered string with no repeated characters. The code uses a for loop to iterate over each character in the input string, and checks if the current character is already in the new string using the `in` operator. If the character is not already in the new string, it adds it to the new string using concatenation. Finally, the function returns the altered string using the return statement.
Note that this code assumes that the input string is a single line of characters without any newline characters. If the input string can contain multiple lines, you may need to modify the code accordingly.