 ```
def remove_repeat_chars(s):
# Split the string into a list of characters
char_list = list(s)
# Create a dictionary to keep track of the occurrences of each character
occurrences = {}

# Iterate over the list of characters and update the dictionary with the occurrences
for char in char_list:
    if char not in occurrences:
        occurrences[char] = 1
    else:
        occurrences[char] += 1

# Iterate over the dictionary and remove all characters that occur more than once between the indices 20 and 51, both exclusive
for char in list(occurrences.keys()):
    if occurrences[char] > 1:
        idx = s.find(char)
        while idx != -1:
            # If the index is within the specified range, remove all occurrences of the character from the string
            if 20 <= idx < 51:
                s = s[:idx] + s[idx+1:]
            # Otherwise, just remove one occurrence of the character from the string
            else:
                s = s.replace(char, "", 1)

# Return the altered string
return s

```