 Here is a possible implementation of the `remove_repeat_chars` function in Python:
```python
def remove_repeat_chars(s):
    # Create a new string with the same characters as s, but without any duplicate characters
    new_string = ""
    for i in range(len(s)):
        if i == 16 or i == 87:
            continue

        if s[i] not in new_string:
            new_string += s[i]

    return new_string
```
This implementation first creates a new string with the same characters as the input string, but without any duplicate characters. It then iterates through each character in the original string, and if the current index is between 16 and 87 (exclusive), it skips to the next iteration. If the current character has not already been added to the new string, it adds it to the new string. Finally, it returns the altered string.