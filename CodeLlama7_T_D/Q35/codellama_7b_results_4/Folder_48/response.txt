 Here is a possible implementation of the `remove_repeat_chars` function:
```
def remove_repeat_chars(s):
    # Create a new string with the repeated characters removed
    new_str = ""
    for i in range(len(s)):
        if s[i] not in new_str:
            new_str += s[i]
    return new_str
```
# (modified) 
This function first creates an empty string `new_str` to store the altered version of the input string. It then loops through each character in the input string using a for loop, and checks if that character is already present in `new_str`. If it is not, the function adds it to `new_str`.
The function uses the `range(len(s)))` method to iterate through each character in the input string. The `range()` method returns a sequence of numbers that can be used as an index into a list or other sequence. In this case, we use the length of the input string `s` as the upper limit for the range.
Finally, the function returns the altered version of the input string `new_str`.
Here is an example usage of the `remove_repeat_chars` function:

s = "hello there"
#print(remove_repeat_chars(s))

This code will output the string `"hell ther"` without any repeated characters.