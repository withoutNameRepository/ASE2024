 Here is a possible implementation of the `remove_repeat_chars` function in Python:
```
def remove_repeat_chars(s):
    # Initialize an empty string to hold the altered input string
    result = ""

    # Iterate over each character in the input string
    for i in range(len(s)):

        # If the current character is not a repeated character, append it to the result string
        if s[i] not in result:
            result += s[i]

        # If the current character is a repeated character and its index is within the specified range, remove all occurrences of that character from the input string
        else:
            for j in range(len(s)):
                if s[j] == result[-1]:
                    result = result[:-1]
                    break

# Return the altered input string
return result
```
This function takes a single argument, a string `s`, and returns an altered version of the string that removes all repeated characters within the specified range. The function uses a loop to iterate over each character in the input string, checks if the current character is not a repeated character, and appends it to the result string if it is not. If the current character is a repeated character and its index is within the specified range, the function removes all occurrences of that character from the input string by iterating over each character in the string and checking if it is the same as the last character in the result string. The function then returns the altered input string.