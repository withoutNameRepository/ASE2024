 ```
def all_ints_div_by_both_two_nums(my_list):
    # Initialize an empty list to store the result
    result = []

    # Loop through the specified range of indices in the input list
    for i in range(35, 64 + 1):
        # Check if the current element is divisible by both -30 and -95
        if my_list[i] % (-30) == 0 and my_list[i] % (-95) == 0:
            # If it is, add it to the result list
            result.append(my_list[i])

    # Return the result list
    return result

# Test the function with a sample input
#print(all_ints_div_by_both_two_nums([1, 2, 3, 4, 5, 6, 7, 8, 9]))
```
This code defines a function called `all_ints_div_by_both_two_nums` that takes a single argument of type list. The function returns a list of all integers in the specified range of indices in the input list that are divisible by both -30 and -95. If no such integers exist in the specified range, the function should return an empty list.
The code first initializes an empty list to store the result. It then loops through the specified range of indices in the input list using a for loop. For each element in the range, the code checks if the current element is divisible by both -30 and -95 using the modulo operator. If it is, the code adds the current element to the result list. Finally, the code returns the result list.
When testing this function with a sample input of `[1, 2, 3, 4, 5, 6, 7, 8, 9]`, the output should be `[]`.