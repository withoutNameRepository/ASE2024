 ```
def palindrome_of_length_at_least_n(string, n):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the string
    for i in range(len(string)):
        # Get the character at position i
        char = string[i]
        # If the character is uppercase, convert it to lowercase
        if char.isupper():
            char = char.lower()
        # Loop through each character in the reversed substring starting at position i
        for j in range(len(string) - i)):
            # Get the character at position j
            rev_char = string[j]
            # If the character is uppercase, convert it to lowercase
            if rev_char.isupper():
                rev_char = rev_char.lower()
            # Check if the character and its reverse are the same
            if char == rev_char:
                # Add the palindrome to the set of palindromes
                palindromes.add(string[i:j+1])
    return palindromes
```