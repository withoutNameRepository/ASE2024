 ```
def palindrome_of_length_at_least_n(string, n):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each word in the string
    for word in string.split():
        # Check if the word is a palindrome of length greater than or equal to n
        if len(word) >= n and word == word[::-1]:
            # Add the palindrome to the set
            palindromes.add(word)
    # Return the set of palindromes
    return palindromes
```
Explanation:

The function `palindrome_of_length_at_least_n` takes two arguments: a string and an integer `n`. It returns a set of all palindromes in the given string that are of length greater than or equal to `n`. The function uses the `split` method of strings to split the input string into individual words, and then checks each word to see if it is a palindrome. If the word is a palindrome, it is added to the set of palindromes. Finally, the set of palindromes is returned by the function.