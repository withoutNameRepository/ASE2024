 ```
def palindrome_of_length_at_least_n(string, n):
    # Find all substrings of length greater than or equal to n in the given string
    substrings = [string[i:i+n] for i in range(len(string)-n+1)]
    # Filter out substrings that are not palindromes
    palindromes = [s for s in substrings if s == s[::-1]]
    return set(palindromes)
```
This function takes two arguments: `string`, which is the input string to search for palindromes, and `n`, which is the minimum length of palindromes to find. The function first finds all substrings of length greater than or equal to `n` in the input string using a list comprehension. It then filters out any substrings that are not palindromes by comparing each substring to its reverse. Finally, it returns the set of palindromes found in the input string.