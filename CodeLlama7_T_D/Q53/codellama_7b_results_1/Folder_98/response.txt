 ```
def palindrome_of_length_at_least_n(string, n):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each word in the string
    for word in string.split():
        # Check if the word is a palindrome of length greater than or equal to n
        if len(word) >= n and word == word[::-1]:
            # Add the word to the set of palindromes
            palindromes.add(word)
    # Return the set of palindromes
    return palindromes
```
This function takes two arguments: a string and an integer `n`. It returns the set of all palindromes of length greater than or equal to `n` that exist in the given string. Each palindrome should only consist of English letters. If no such palindromes exist in the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.
For example, if we call the function with the following arguments:
```
string = "A man, a plan, a canal, Panama!"
n = 6
```
The function will return the following set of palindromes:
```
{"aman", "a plan", "canal", "Panama"}
```
Note that the function is case-insensitive, so it should find both "A man" and "aman" as palindromes.