 ```
def palindrome_of_length_at_least_n(string, n=70):
    # Convert the input string to lowercase
    string = string.lower()
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over the characters in the string
    for i in range(len(string)):
        # Check if the character is a letter (not a space or punctuation)
        if string[i].isalpha():
            # Iterate over the characters in the reverse of the string
            for j in range(len(string)-1, -1, -1):
                # Check if the character is a letter (not a space or punctuation)
                if string[j].isalpha():
                    # Check if the substring starting at index i and ending at index j is a palindrome
                    if string[i:j+1] == string[i:j+1][::-1]:
                        # Add the palindrome to the set
                        palindromes.add(string[i:j+1])
    # Return the set of palindromes of length greater than or equal to n that exist in the given string
    return palindromes
```