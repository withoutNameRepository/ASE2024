 Here is a possible implementation of the `palindrome_of_length_at_least_n` function in Python:
```
def palindrome_of_length_at_least_n(string, n):
    # Create a set to store the palindromes
    palindromes = set()
    # Loop through each word in the string
    for word in string.split():
        # Check if the word is a palindrome of length greater than or equal to n
        if len(word) >= n and word == word[::-1]:
            # If it is, add it to the set of palindromes
            palindromes.add(word)
    # Return the set of palindromes
    return palindromes
```
This function takes two arguments: a string `string` and an integer `n`. It returns a set containing all the palindromes of length greater than or equal to `n` that exist in the given string. Each palindrome is only made up of English letters, and the function finds them in a case-insensitive manner.