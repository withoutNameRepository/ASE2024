 Here is a possible implementation of the `palindrome_of_length_at_least_n` function in Python:
```
import re

def palindrome_of_length_at_least_n(string, n):
    # Check if the input string is valid
    if not isinstance(string, str) or len(string) == 0:
        raise ValueError("Invalid input string")

    # Check if the input length is valid
    if not isinstance(n, int) or n <= 0:
        raise ValueError("Invalid input length")

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate over each substring of the given string
    for i in range(len(string)):

        # Check if the current substring is a palindrome
        if string[i:].lower() == string[i:].lower()[::-1]:

            # Add the palindrome to the set
            palindromes.add(string[i:])

    # Return the set of palindromes
    return palindromes
```