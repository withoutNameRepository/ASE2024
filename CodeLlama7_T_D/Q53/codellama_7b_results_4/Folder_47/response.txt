 ```
def palindrome_of_length_at_least_n(string, n):
    # Create a list of all palindromes in the string
    palindromes = []
    for i in range(len(string)):
        for j in range(i + 1, len(string) + 1):
            substring = string[i:j]
            if len(substring) < n:
                continue

            if substring == substring[::-1]:
                palindromes.append(substring)
    return set(palindromes)
```
This function takes two arguments, a string and an integer `n`. It returns the set of all palindromes of length greater than or equal to `n` that exist in the given string. Each palindrome should only consist of English letters. If no such palindromes exist in the given string, the function should return an empty set.
The function first creates a list of all palindromes in the string by iterating over each substring of the string and checking if it is a palindrome. It then returns the set of all palindromes that have a length greater than or equal to `n`.