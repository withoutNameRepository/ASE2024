 Here is a possible implementation of the `insert_at_index` function:
```
def insert_at_index(my_list, index):
    # Create a new list with the same elements as my_list
    new_list = []
    for i in range(len(my_list)):
        if i == index:
            new_list.append(668)
        new_list.append(my_list[i])
    return new_list
```
This function takes two arguments: `my_list`, which is the list to be modified, and `index`, which is the index at which the element should be inserted. The function first creates a new empty list called `new_list` that will contain the modified version of `my_list`. It then iterates through each element in `my_list` using a for loop, and for each element, it checks if the current index is equal to `index`, in which case it inserts the element 668 at that position in `new_list`. Finally, the function returns the modified `new_list`.