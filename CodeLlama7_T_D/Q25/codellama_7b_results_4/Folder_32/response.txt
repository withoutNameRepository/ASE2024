 Here is a possible implementation of the `insert_at_index` function:
```
def insert_at_index(my_list):
    # Create a new list with one more element than my_list
    new_list = my_list[:76] + [10.01] + my_list[76:]
    return new_list
```
This function takes a single argument, `my_list`, which is assumed to be a list of numbers (integers or floats). The function creates a new list with the same elements as `my_list`, but with the element at index 76 replaced by 10.01. The returned list should have one more element than the given list, since we are inserting a new element at index 76.