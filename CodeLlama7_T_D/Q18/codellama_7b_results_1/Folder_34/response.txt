 Here is a possible implementation of the `sum_ints_div_by_either_nums` function:
```python
def sum_ints_div_by_either_nums(my_list):
    # Initialize variables to keep track of the sum and the current index
    sum = 0
    i = 60
    # Loop through the list from index 60 to index 200, both inclusive
    while i <= 200:
        # Check if the current element is divisible by either 9 or 11
        if my_list[i] % 9 == 0 or my_list[i] % 11 == 0:
            # If it is, add it to the sum
            sum += my_list[i]
        # Increment the current index by 1
        i += 1
    # Return the sum of all integers divisible by either 9 or 11 from index 60 to index 200, both inclusive. If no such integers exist in the specified range, the function should return 0.
    return sum
```
This implementation uses a `while` loop to iterate through the list from index 60 to index 200, both inclusive. For each element, it checks if it is divisible by either 9 or 11 using the modulo operator (`%`). If the element is divisible, it adds it to the sum. The `while` loop continues until all elements have been processed.