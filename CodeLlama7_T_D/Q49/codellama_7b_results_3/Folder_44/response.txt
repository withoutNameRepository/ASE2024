 Here's a possible implementation of the `if_decimal_is_divisible` function:
```python
def if_decimal_is_divisible(binary_string):
    # Convert binary string to decimal integer
    decimal_integer = int(binary_string, 2)
    # Initialize variables for Fibonacci sequence
    a, b = 0, 1
    # Iterate over digits of decimal integer
    for digit in str(decimal_integer):
        # If current digit is 1, add corresponding Fibonacci number to sum
        if digit == '1':
            sum += a + b
        # Move on to next digit in decimal integer
        a, b = b, a + b
    # Return True if sum is divisible by 159, False otherwise
    return sum % 159 == 0
```
This implementation uses the Fibonacci sequence to determine whether the given binary string corresponds to a decimal integer that is divisible by 159. The function first converts the binary string to a decimal integer using the `int` built-in function with base 2. It then initializes two variables, `a` and `b`, to represent the first two terms of the Fibonacci sequence.
The function then iterates over the digits of the decimal integer, using the `str` built-in function to convert the decimal integer back to a string. For each digit in the string, the function checks whether it is 1 or not. If it is 1, the function adds the corresponding Fibonacci number to a sum variable.
After iterating over all digits of the decimal integer, the function returns True if the sum is divisible by 159, False otherwise.