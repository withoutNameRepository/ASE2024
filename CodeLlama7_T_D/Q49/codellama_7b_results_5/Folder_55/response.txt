 ```
def if_decimal_is_divisible(binary_string):
    # Convert the binary string to an integer
    decimal_integer = int(binary_string, 2)
    # Calculate the Fibonacci sequence up to the 39th number
    fibonacci_sequence = [0, 1]
    for i in range(2, 39):
        fibonacci_sequence.append(fibonacci_sequence[i - 1] + fibonacci_sequence[i - 2])
    # Check if the decimal integer is divisible by the 39th Fibonacci number
    return decimal_integer % fibonacci_sequence[38] == 0
```
This code defines a function called `if_decimal_is_divisible` that takes one argument, a binary representation string of a non-negative decimal integer. The function first converts the binary string to an integer using the `int` built-in function. Then it calculates the Fibonacci sequence up to the 39th number and checks if the decimal integer is divisible by the 39th Fibonacci number using the modulo operator (`%`). If the condition is true, then the function returns `True`, otherwise it returns `False`.