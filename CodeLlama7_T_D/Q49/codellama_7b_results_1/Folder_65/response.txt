 Here's a possible implementation of the `if_decimal_is_divisible` function:
```
def if_decimal_is_divisible(binary_string):
	# Convert binary string to decimal integer
	decimal_integer = int(binary_string, 2)
	# Initialize Fibonacci sequence with first two numbers
	fib_seq = [0, 1]
	# Loop through Fibonacci sequence until 127th number is reached
	for i in range(2, 127):
		# Calculate next number in Fibonacci sequence
		next_num = fib_seq[i - 1] + fib_seq[i - 2]
		# Add next number to Fibonacci sequence
		fib_seq.append(next_num)
	# Check if decimal integer is divisible by 127th number in Fibonacci sequence
	if decimal_integer % fib_seq[126] == 0:
		return True
	else:
		return False
```
This function takes a binary representation string of a non-negative decimal integer as input, converts it to a decimal integer, and then checks if the decimal integer is divisible by the 127th number in the Fibonacci sequence. If the decimal integer is divisible by this number, the function returns `True`, otherwise it returns `False`.