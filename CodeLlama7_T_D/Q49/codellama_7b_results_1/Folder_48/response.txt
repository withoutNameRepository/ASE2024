 ```
def if_decimal_is_divisible(binary_rep):
    # Convert binary representation to decimal
    decimal = int(binary_rep, 2)
    # Calculate the Fibonacci sequence up to the 198th number
    fibonacci = [0, 1]
    for i in range(2, 198 + 1):
        fibonacci.append(fibonacci[i - 2] + fibonacci[i - 1])
    # Check if the decimal integer is divisible by the 198th number of the Fibonacci sequence
    return decimal % fibonacci[198] == 0
```
Explanation:
The function takes in a binary representation string of a non-negative decimal integer. It converts the binary representation to its corresponding decimal value using the built-in `int()` function.
Next, the function calculates the Fibonacci sequence up to the 198th number and stores it in a list called `fibonacci`. The first two elements of the list are `0` and `1`, respectively.
The function then checks if the decimal integer is divisible by the 198th number of the Fibonacci sequence using the modulo operator (`%`). If the remainder is equal to zero, then the decimal integer is divisible by the 198th number of the Fibonacci sequence, and the function returns `True`. Otherwise, if the remainder is not equal to zero, then the decimal integer is not divisible by the 198th number of the Fibonacci sequence, and the function returns `False`.