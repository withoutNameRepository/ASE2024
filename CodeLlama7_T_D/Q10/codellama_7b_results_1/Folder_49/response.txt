 Here is a possible implementation of the `all_odd_ints_exclusive` function in Python:
```
def all_odd_ints_exclusive(my_list):
    # Check if list is empty or None
    if not my_list:
        return []

    # Get length of list
    list_len = len(my_list)

    # Set starting and ending indices for odd integers
    start_idx = 80
    end_idx = 200

    # Check if there are any odd integers in the specified range
    if not any(my_list[start_idx:end_idx] % 2):
        return []

    # Return list of all odd integers from specified range
    return [x for x in my_list[start_idx:end_idx] if x % 2]
```
This function takes a single argument, `my_list`, which is a list of integers. The function then checks if the list is empty or None, and if not, it gets the length of the list. Next, the function sets the starting and ending indices for the odd integers in the specified range. Then, the function checks if there are any odd integers in the specified range, and if not, it returns an empty list. Finally, the function returns a list of all the odd integers from the specified range, using list comprehension to create the list.