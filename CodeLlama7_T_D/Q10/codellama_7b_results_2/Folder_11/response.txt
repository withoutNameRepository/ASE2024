 ```
def all_odd_ints_exclusive(my_list):
    # Create a new list to store the odd integers
    odd_ints = []

    # Iterate through the list of integers
    # Starting from index 15 (inclusive) and ending at index 99 (exclusive)
    for i in range(15, 99):
        # Check if the current element is an odd integer
        if my_list[i] % 2 != 0:
            # If it is, add it to the list of odd integers
            odd_ints.append(my_list[i])

    # Return the list of all odd integers in the specified range, or an empty list if no such integers exist
    return odd_ints

# Test the function with a sample input
#print(all_odd_ints_exclusive([1, 2, 3, 4, 5, 6, 7, 8, 9]))
```
This code defines a function `all_odd_ints_exclusive` that takes a list of integers as input and returns the list of all odd integers from index 15 to index 99, both exclusive. If no odd integers exist in the specified range, the function should return an empty list.
The function first creates an empty list `odd_ints` to store the odd integers. It then iterates through the list of integers starting from index 15 (inclusive) and ending at index 99 (exclusive).
For each element in the range, the function checks if it is an odd integer using the modulo operator (`%`). If it is, the function adds it to the `odd_ints` list.
After iterating through all elements in the specified range, the function returns the `odd_ints` list or an empty list if no such integers exist.
Note that this code assumes that the input list of integers contains at least 15 elements (from index 0 to index 14). If the input list is shorter than 15 elements, the function will return an empty list.