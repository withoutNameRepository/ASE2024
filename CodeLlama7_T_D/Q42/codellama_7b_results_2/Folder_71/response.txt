 Here's a possible implementation of the `prime_factors` function:
```
def prime_factors(numbers):
    result = set()
    for number in numbers:
        if is_prime(number):
            result.add(number)
    return result

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True
```
This implementation first creates an empty set to store the prime factors. It then iterates over each number in the input list, and checks whether it is a prime number using the `is_prime` function. If a number is a prime factor, it is added to the set of prime factors. Finally, the set of prime factors is returned.
Note that this implementation assumes that all numbers in the input list are positive integers. If some of the numbers in the input list are not positive integers, or if they are not integers at all, then this implementation may produce incorrect results.