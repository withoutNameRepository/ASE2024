 ```
def palindromes_of_specific_lengths(string):
    # Define the substring range for consideration of palindromes
    sub_range = string[12:122]
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the substring
    for i in range(len(sub_range)):
        # Check if the current character is a palindrome
        if sub_range[i:i+1] == sub_range[i:i+1][::-1]:
            # If it is, append it to the set of palindromes
            palindromes.add(sub_range[i:i+1])
    # Return the set of palindromes that meet the specified requirements
    return palindromes
```
This code defines a function called `palindromes_of_specific_lengths` that takes one argument, a string. The given string may consist of any character. The function should return the set of all palindromes with the following requirements:
1. Only palindromes occurring in the substring from index 12 to index 122, both inclusive, should be considered.
2. Only palindromes of lengths between 12 to 220 (both inclusive) should be considered.
3. Each palindrome should only consist of English letters.
4. If no such palindrome with the length specified occurs in the specified index range, the function should return an empty set.
The function should find the palindromes in a case-insensitive manner.