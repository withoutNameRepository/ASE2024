 ```
def palindromes_of_specific_lengths(string):
    # Define the range of indices for the substring
    start_index = 10
    end_index = 59
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the string within the specified index range
    for i in range(start_index, end_index + 1):
        # Check if the current character is a letter (A-Z or a-z)
        if string[i].isalpha():
            # Define the length of the palindrome
            length = min(36, len(string))
            # Iterate over each substring of length `length` within the specified index range
            for j in range(start_index, end_index - length + 1):
                # Check if the current substring is a palindrome
                if string[j:j+length] == string[j:j+length][::-1]:
                    # Add the palindrome to the set
                    palindromes.add(string[j:j+length])
    return palindromes
```