 Here is a Python function that meets the requirements you specified:
```python
def palindromes_of_specific_lengths(input_string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the input string
    for i in range(10, 75 + 1):
        # Check if the current character is a letter (a-z or A-Z)
        if input_string[i].isalpha():
            # Initialize a variable to store the palindrome
            palindrome = ""
            # Loop through each character in the input string, starting from the current index and ending at the end of the input string
            for j in range(i, len(input_string))):
                # Check if the current character is a letter (a-z or A-Z)
                if input_string[j].isalpha():
                    # Add the current character to the palindrome
                    palindrome += input_string[j]
            # Check if the palindrome has the required length and only consists of English letters
            if len(palindrome) >= 10 and len(palindrome) <= 20 and all(char.isalpha() for char in palindrome)):
                # Add the palindrome to the set of palindromes
                palindromes.add(palindrome)
    # Return the set of palindromes
    return palindromes
```
This function takes a single argument, a string, and returns a set of all palindromes that occur in the substring from index 10 to index 75, both inclusive, and have lengths between 10 to 20 (both inclusive), and only consist of English letters. The function uses a loop to iterate through each character in the input string, and checks if the current character is a letter (a-z or A-Z) using the `isalpha()` method. If the current character is a letter, the function adds it to a palindrome variable that stores the palindrome. The function then checks if the palindrome has the required length and only consists of English letters using the `len()` method and the `all()` method. If the palindrome meets these requirements, the function adds it to the set of palindromes. Finally, the function returns the set of palindromes.