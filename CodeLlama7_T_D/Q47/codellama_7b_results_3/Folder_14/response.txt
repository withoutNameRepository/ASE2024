 Here is a possible implementation of the `palindromes_of_specific_lengths` function in Python:
```python
def palindromes_of_specific_lengths(string):
    # Convert the string to lowercase for case-insensitive matching
    string = string.lower()
    # Find all substrings that match the specified index range and length requirements
    substrings = [substring for substring in string[10:74] if len(substring) >= 6 and len(substring) <= 8 and all(char.isalpha() for char in substring)]
    # Return the set of palindromes found
    return set(substrings)
```
This function first converts the input string to lowercase using the `lower()` method, as required by the problem statement. It then uses a list comprehension to find all substrings that match the specified index range and length requirements using the `range()` and `len()` methods. Finally, it uses the `set()` constructor to convert the list of palindromes into a set, which eliminates any duplicate palindromes.