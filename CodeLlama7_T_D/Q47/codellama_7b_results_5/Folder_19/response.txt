 ```
def palindromes_of_specific_lengths(string, min_len=3, max_len=7):
    # find all palindromes in the specified substring
    palindromes = []
    for i in range(min_len, max_len+1):
        for j in range(i+1):
            if string[j:j+i] == string[j:j+i][::-1]:
                palindromes.append(string[j:j+i])
    return set(palindromes)

# example usage
string = "abcdefghijklmnopqrstuvwxyz"
min_len = 3
max_len = 7
#print(palindromes_of_specific_lengths(string, min_len, max_len))
```
This code defines a function `palindromes_of_specific_lengths` that takes two arguments: the input string and the minimum and maximum lengths of palindromes to consider. The function returns a set of all palindromes in the input string with the specified length constraints.
The function first finds all palindromes in the substring from index 10 to index 55, both inclusive. It then checks each palindrome to see if its length falls within the specified range of 3 to 7 (both inclusive). If it does, the function adds it to a set of palindromes to return.
The function is case-insensitive, meaning that it ignores the case of letters when searching for palindromes. This is achieved by converting both the input string and each candidate palindrome to lowercase before comparing them.