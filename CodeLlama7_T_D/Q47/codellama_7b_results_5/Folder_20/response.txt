 ```
def palindromes_of_specific_lengths(string):
# Define the range of indices for the substring
start_index = 20
end_index = 74
# Initialize an empty set to store the palindromes
palindromes = set()
# Iterate over each character in the substring
for i in range(start_index, end_index + 1):
# Check if the current character is a letter (uppercase or lowercase)
if string[i].isalpha():
# Convert the current character to lowercase
current_char = string[i].lower()
# Define the starting index for the palindrome
start_index = i

# Iterate over each character in the substring from the starting index to the end index, both inclusive
for j in range(start_index, end_index + 1):
# Check if the current character is a letter (uppercase or lowercase)
if string[j].isalpha():
# Convert the current character to lowercase
current_char = string[j].lower()
# If the current character is the same as the starting character, add the palindrome to the set of palindromes
if current_char == start_char:
palindromes.add(string[start_index:end_index + 1])
return palindromes
```