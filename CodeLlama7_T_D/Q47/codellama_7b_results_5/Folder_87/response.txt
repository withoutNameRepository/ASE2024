 ```
def palindromes_of_specific_lengths(string):
    # Define the range of lengths we want to consider
    min_length = 34
    max_length = 54
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the string
    for i in range(len(string)):
        # Get the substring starting from the current character and extending to the end of the string
        substr = string[i:]
        # Loop through each length in the range we defined earlier
        for length in range(min_length, max_length + 1):
            # Check if the substring is at least as long as the current length
            if len(substr) < length:
                continue

            # Get the palindrome starting from the current character and extending to the end of the string
            palindrome = substr[:length]
            # Check if the palindrome is a valid English word
            if not all(c.isalpha() for c in palindrome):
                continue

            # Add the palindrome to the set
            palindromes.add(palindrome)
    return palindromes
```