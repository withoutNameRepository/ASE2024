{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests47_25_5.py::test_string_of_distinct_chars", "location": ["tests47_25_5.py", 17, "test_string_of_distinct_chars"], "keywords": {"test_string_of_distinct_chars": 1, "tests47_25_5.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.171798592433333e-05, "start": 1700276382.0300844, "stop": 1700276382.0301762, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "08f48809bb2f4354991722e132ce0a17", "node": "<WorkerController gw1>"}
{"nodeid": "tests47_25_5.py::test_string_of_similar_chars", "location": ["tests47_25_5.py", 3, "test_string_of_similar_chars"], "keywords": {"test_string_of_similar_chars": 1, "tests47_25_5.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.98030009213835e-05, "start": 1700276382.0300605, "stop": 1700276382.030161, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08f48809bb2f4354991722e132ce0a17", "node": "<WorkerController gw0>"}
{"nodeid": "tests47_25_5.py::test_string_of_distinct_chars", "location": ["tests47_25_5.py", 17, "test_string_of_distinct_chars"], "keywords": {"test_string_of_distinct_chars": 1, "tests47_25_5.py": 1, "Folder_25": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q47/codellama_7b_results_5/Folder_25/tests47_25_5.py", "lineno": 20, "message": "AssertionError: assert not ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...]\n +  where ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...] = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_distinct_chars():", "        s = 'abc' * (84 * 3)", ">       assert not palindromes_of_specific_lengths(s)", "E       AssertionError: assert not ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...]", "E        +  where ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...] = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q47/codellama_7b_results_5/Folder_25/tests47_25_5.py", "lineno": 20, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_distinct_chars():", "        s = 'abc' * (84 * 3)", ">       assert not palindromes_of_specific_lengths(s)", "E       AssertionError: assert not ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...]", "E        +  where ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...] = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q47/codellama_7b_results_5/Folder_25/tests47_25_5.py", "lineno": 20, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q47/codellama_7b_results_5/Folder_25/tests47_25_5.py", "lineno": 20, "message": "AssertionError: assert not ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...]\n +  where ['cabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcab', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabc', ...] = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005844340194016695, "start": 1700276382.030329, "stop": 1700276382.030914, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "08f48809bb2f4354991722e132ce0a17", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
