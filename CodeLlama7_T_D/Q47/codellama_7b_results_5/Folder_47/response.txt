 ```
def palindromes_of_specific_lengths(string):
    # Define the substring range of interest
    substr = string[39:94]
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the substring
    for i in range(len(substr)):
        # Get the index of the character in the original string
        orig_index = substr.index(substr[i]) + 39
        # Check if the character is a letter
        if substr[i].isalpha():
            # Get the length of the palindrome starting at the current character
            palindrome_length = 0
            for j in range(orig_index, len(string)):
                if string[j] == substr[i]:
                    palindrome_length += 1
                    if palindrome_length >= 14 and palindrome_length <= 52:
                        # Add the palindrome to the set of palindromes
                        palindromes.add(string[j - (palindrome_length - 1):j + 1])
    return palindromes
```