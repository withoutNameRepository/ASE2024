 ```
def palindromes_of_specific_lengths(string):
    # Define the index range for the substring
    start = 10
    end = 74

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate through each character in the substring
    for i in range(start, end + 1):
        # Check if the current character is a letter or not
        if string[i].isalpha():
            # Define the length of the current palindrome
            length = i - start + 1

            # Check if the length of the current palindrome is between 6 and 8 (both inclusive)
            if length >= 6 and length <= 8:
                # Initialize an empty string to store the current palindrome
                current_palindrome = ""

                # Iterate through each character in the substring starting from the current index
                for j in range(i - length + 1, i + 1):
                    # Append the current character to the current palindrome
                    current_palindrome += string[j]

                # Check if the current palindrome is a palindrome or not
                if current_palindrome == current_palindrome[::-1]:
                    # Add the current palindrome to the set of palindromes
                    palindromes.add(current_palindrome)

    # Return the set of palindromes
    return palindromes
```