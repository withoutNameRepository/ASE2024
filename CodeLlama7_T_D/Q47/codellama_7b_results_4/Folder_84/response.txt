 def palindromes_of_specific_lengths(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the string
    for i in range(23, 78):
        # Check if the character is a letter (a-z or A-Z)
        if string[i].isalpha():
            # Initialize an empty string to store the palindrome
            palindrome = ""
            # Loop through each character in the substring starting at index i and ending at index 77 (inclusive)
            for j in range(i, 78):
                # Check if the character is a letter (a-z or A-Z)
                if string[j].isalpha():
                    # Add the character to the palindrome string
                    palindrome += string[j]
            # Convert the palindrome string to lowercase
            palindrome = palindrome.lower()
            # Check if the palindrome is a valid palindrome (i.e., it reads the same forward and backward)
            if palindrome == palindrome[::-1]:
                # If the palindrome is valid, add it to the set of palindromes
                palindromes.add(palindrome)
    # Return the set of palindromes
    return palindromes