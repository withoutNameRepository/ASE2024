 ```
def palindromes_of_specific_lengths(string):
    # Define the substring range of interest
    start = 15
    end = 72

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate over each character in the substring range
    for i in range(start, end + 1):
        # Check if the current character is a letter (lowercase or uppercase)
        if string[i].isalpha():
            # Convert the current character to lowercase
            char = string[i].lower()

            # Iterate over each length in the specified range
            for j in range(19, 56):
                # Check if the current length is valid (i.e., within the specified range)
                if j <= end - start:
                    # Check if the current character is a palindrome with the specified length
                    if char == char[::-1][:j]:
                        # If so, add it to the set of palindromes
                        palindromes.add(char)

    # Return the set of palindromes (if any) found in the specified substring range
    return palindromes
```