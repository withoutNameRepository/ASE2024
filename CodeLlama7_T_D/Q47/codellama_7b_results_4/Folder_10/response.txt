 ```
def palindromes_of_specific_lengths(string):
# Define the substring range for finding palindromes
substring = string[16:39]
# Initialize an empty set to store the palindromes
palindromes = set()
# Iterate over each character in the substring
for i in range(len(substring)):
# Check if the current character is a letter (lowercase or uppercase)
if substring[i].isalpha():
# If it is, check if the reverse of the string starting at the current index is equal to the original string
if substring[::-1][i:].lower() == substring[i:].lower():
# If it is, add the palindrome to the set
palindromes.add(substring[i:])
return palindromes
```