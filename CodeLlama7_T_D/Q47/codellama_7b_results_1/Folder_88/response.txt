 ```
def palindromes_of_specific_lengths(string):
    # Find the substring from index 11 to index 87, both inclusive
    substr = string[10:88]
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the substring
    for i in range(len(substr)):
        # Check if the current character is a letter
        if substr[i].isalpha():
            # Find the length of the palindrome starting from the current character
            length = len(substring_reverse(substr[i:])) + 1
            # Check if the length of the palindrome is between 4 to 5 (both inclusive)
            if length >= 4 and length <= 5:
                # Add the palindrome to the set of palindromes
                palindromes.add(substr[i:i+length])
    return palindromes

def substring_reverse(substring):
    """
    Reverse a substring.
    :param substring: The substring to reverse.
    :return: The reversed substring.
    """
    return substring[::-1]
```