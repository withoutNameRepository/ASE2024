 ```
def palindromes_of_specific_lengths(string):
    # Define the index range for the substring
    start = 32
    end = 79

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate over each character in the substring
    for i in range(start, end + 1):
        # Check if the current character is a letter
        if string[i].isalpha():
            # Define the length of the current palindrome
            length = len(string[i:end])

            # Check if the length is within the specified range
            if length >= 35 and length <= 41:
                # Define the palindrome string
                palindrome = ''.join([string[i:end], string[start:i]])

                # Check if the palindrome is a valid English word
                if len(palindrome) == length and palindrome.isalpha():
                    # Add the palindrome to the set of palindromes
                    palindromes.add(palindrome)

    # Return the set of palindromes in a case-insensitive manner
    return {p.lower() for p in palindromes}
```