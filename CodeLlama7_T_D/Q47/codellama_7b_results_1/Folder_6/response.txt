 ```
def palindromes_of_specific_lengths(string, start_index=45, end_index=98):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each index in the specified range
    for i in range(start_index, end_index + 1):
        # Check if the character at the current index is a letter (i.e., not a space or punctuation)
        if string[i].isalpha():
            # Initialize an empty string to store the palindrome
            palindrome = ""
            # Loop through each index in the range of the specified length
            for j in range(i - 4, i + 5):
                # Check if the character at the current index is a letter (i.e., not a space or punctuation) and if it's within the bounds of the string
                if 0 <= j < len(string) and string[j].isalpha():
                    # Append the character to the palindrome string
                    palindrome += string[j]
            # Check if the palindrome is a valid one (i.e., it's not empty and all its characters are letters)
            if len(palindrome) > 0 and all(c.isalpha() for c in palindrome)):
                # Add the palindrome to the set of palindromes
                palindromes.add(palindrome)
    # Return the set of palindromes
    return palindromes
```