 ```
def palindromes_of_specific_lengths(string):
    # Define the range of indices for the substring
    start_index = 24
    end_index = 97
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the substring
    for i in range(start_index, end_index + 1):
        # Check if the character is a letter (lowercase or uppercase)
        if string[i].isalpha():
            # Convert the character to lowercase
            char = string[i].lower()
            # Initialize an empty string to store the palindrome
            palindrome = ""
            # Iterate over each character in the substring, starting from the current index and moving backward
            for j in range(i, start_index - 1, -1):
                # Add the current character to the palindrome string
                palindrome += char
                # Check if the palindrome is within the specified length range
                if len(palindrome) >= 10 and len(palindrome) <= 36:
                    # Add the palindrome to the set of palindromes
                    palindromes.add(palindrome)
            # Reset the palindrome string for the next iteration
            palindrome = ""
    # Return the set of palindromes found in the specified index range and length range
    return palindromes
```