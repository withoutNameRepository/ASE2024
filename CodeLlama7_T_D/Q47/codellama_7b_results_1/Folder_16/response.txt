 ```
def palindromes_of_specific_lengths(string):
# Convert the input string to lowercase for case-insensitive comparison
string = string.lower()

# Define a list of palindrome lengths that we want to consider
palindrome_lengths = [51, 60]

# Initialize an empty set to store the palindromes
palindromes = set()

# Iterate over each palindrome length in the list
for i in range(len(palindrome_lengths)):

# Get the current palindrome length from the list
current_length = palindrome_lengths[i]

# Initialize a variable to store the starting index of the current palindrome
starting_index = 15

# Iterate over each character in the input string starting from the starting index
for j in range(len(string) - current_length + 1):

# Check if the substring starting at index 'j' and with length 'current_length' is a palindrome
if string[j:j+current_length] == string[j:j+current_length][::-1]:

# If it is, add it to the set of palindromes
palindromes.add(string[j:j+current_length])

# Increment the starting index by the length of the current palindrome
starting_index += current_length

return palindromes

```