{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests47_25_1.py::test_string_of_distinct_chars", "location": ["tests47_25_1.py", 17, "test_string_of_distinct_chars"], "keywords": {"test_string_of_distinct_chars": 1, "tests47_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.217200567945838e-05, "start": 1700276213.5775926, "stop": 1700276213.5776854, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7282e9d0e47a429eac193b83dae2e89c", "node": "<WorkerController gw1>"}
{"nodeid": "tests47_25_1.py::test_string_of_similar_chars", "location": ["tests47_25_1.py", 3, "test_string_of_similar_chars"], "keywords": {"test_string_of_similar_chars": 1, "tests47_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015239600907079875, "start": 1700276213.5777447, "stop": 1700276213.5778978, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7282e9d0e47a429eac193b83dae2e89c", "node": "<WorkerController gw0>"}
{"nodeid": "tests47_25_1.py::test_string_of_distinct_chars", "location": ["tests47_25_1.py", 17, "test_string_of_distinct_chars"], "keywords": {"test_string_of_distinct_chars": 1, "tests47_25_1.py": 1, "Folder_25": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q47/codellama_7b_results_1/Folder_25/tests47_25_1.py", "lineno": 20, "message": "AssertionError: assert not {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'}\n +  where {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_distinct_chars():", "        s = 'abc' * (84 * 3)", ">       assert not palindromes_of_specific_lengths(s)", "E       AssertionError: assert not {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'}", "E        +  where {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q47/codellama_7b_results_1/Folder_25/tests47_25_1.py", "lineno": 20, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_distinct_chars():", "        s = 'abc' * (84 * 3)", ">       assert not palindromes_of_specific_lengths(s)", "E       AssertionError: assert not {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'}", "E        +  where {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q47/codellama_7b_results_1/Folder_25/tests47_25_1.py", "lineno": 20, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q47/codellama_7b_results_1/Folder_25/tests47_25_1.py", "lineno": 20, "message": "AssertionError: assert not {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'}\n +  where {'abcabcabcabcabcabcabcabcabcabc', 'abcabcabcabcabcabcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000383328995667398, "start": 1700276213.5778685, "stop": 1700276213.5782523, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7282e9d0e47a429eac193b83dae2e89c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
