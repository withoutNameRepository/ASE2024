 ```
def palindromes_of_specific_lengths(string):
# Convert the input string to lowercase for case-insensitive comparison
lowercase_string = string.lower()
# Define the range of indices that will be considered for palindrome matching
range_start = 18
range_end = 87
# Create an empty set to store the palindromes that are found within the specified range
palindromes = set()
# Iterate over the characters in the string within the specified range
for i in range(range_start, range_end + 1):
    # Define a variable to represent the substring of length 'length' starting at index 'i'
    substring = lowercase_string[i:]
    # If the substring is not a palindrome, continue to the next iteration
    if substring != substring[::-1]:
        continue

    # If the substring is a palindrome, check its length and add it to the set of palindromes if it meets the required criteria
    if len(substring) >= 38 and len(substring) <= 60:
        palindromes.add(substring)
# Return the set of palindromes that were found within the specified range
return palindromes

```