 ```
def return_nth_smallest_ascii(string):
    # Convert the string to a list of characters
    char_list = list(string)
    # Create a dictionary to store the ASCII values of each character
    ascii_dict = {}
    # Iterate through the list of characters and store their ASCII values in the dictionary
    for char in char_list:
        ascii_dict[char] = ord(char)
    # Sort the dictionary by value (ASCII values)
    sorted_ascii_dict = sorted(ascii_dict.items(), key=lambda x: x[1])
    # Return the 8th smallest ASCII value
    return sorted_ascii_dict[7][0]
```
This code defines a function called `return_nth_smallest_ascii` that takes a single argument, a string of distinct characters. The function first converts the input string to a list of characters using the built-in `list()` function. It then creates a dictionary to store the ASCII values of each character in the input string.
Next, the code iterates through the list of characters and stores their ASCII values in the dictionary using the built-in `ord()` function. The `ord()` function returns the Unicode code point for a given character as an integer value.
After storing all the ASCII values in the dictionary, the code sorts the dictionary by value (ASCII values) using the built-in `sorted()` function. The `key` parameter of the `sorted()` function is set to `lambda x: x[1]`, which specifies that the sorting should be done based on the second element of each tuple in the dictionary.
Finally, the code returns the 8th smallest ASCII value from the sorted dictionary by indexing into it using the built-in `[]` operator and returning the character at index 7.