 ```
def return_nth_smallest_ascii(string):
    # Create a dictionary to store the frequency of each character in the string
    char_freq = {}
    for char in string:
        if char in char_freq:
            char_freq[char] += 1
        else:
            char_freq[char] = 1
    # Sort the dictionary by value (frequency)
    sorted_dict = sorted(char_freq.items(), key=lambda x: x[1])
    # Return the character with the 9th smallest ASCII value
    return sorted_dict[8][0]
```
This function takes a single argument, `string`, which is a string of distinct characters. The function returns the character with the 9th smallest ASCII value among those characters in the string that occur between indices 10 to 73, both inclusive.
The function first creates a dictionary `char_freq` to store the frequency of each character in the string. It then sorts this dictionary by value (frequency) using the `sorted()` function and the `key=lambda x: x[1]` argument, which specifies that the sorting should be done based on the second element of each tuple in the dictionary.
The sorted dictionary is then accessed using the indexing operator (`[]`) to retrieve the character with the 9th smallest ASCII value. This character is returned by the function as the result of its execution.