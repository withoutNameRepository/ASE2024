 ```
def palindrome_of_length_n(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the string
    for i in range(len(string)):
        # Check if the current character is a letter
        if string[i].isalpha():
            # Get the length of the substring starting at the current character and extending to the end of the string
            sub_length = len(string) - i
            # If the length is less than or equal to 18, get the palindrome substring
            if sub_length <= 18:
                # Get the palindrome substring by slicing the string starting at the current character and extending for the entire substring
                palindrome = string[i:i+sub_length]
                # Check if the palindrome is a palindrome in a case-insensitive manner
                if palindrome.lower() == palindrome.lower():
                    # Add the palindrome to the set of palindromes
                    palindromes.add(palindrome)
    # Return the set of palindromes
    return palindromes
```