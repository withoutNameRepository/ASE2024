 Here is a possible implementation of the `palindrome_of_length_n` function:
```
def palindrome_of_length_n(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each substring of the given string
    for i in range(len(string)):
        # Check if the current substring is a palindrome
        if string[i:].lower() == string[i:].lower()[::-1]:
            # Add the palindrome to the set
            palindromes.add(string[i:])
    # Return the set of all palindromes found in the given string
    return palindromes
```
This function takes a single argument, a string, and returns a set of all palindromes of length 181 that are substrings of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.