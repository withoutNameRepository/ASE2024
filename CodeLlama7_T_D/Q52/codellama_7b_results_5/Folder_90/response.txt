 Here is a possible implementation of the `palindrome_of_length_n` function in Python:
```python
def palindrome_of_length_n(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each substring of the given string
    for i in range(len(string) - 2):
        # Extract the current substring and reverse it
        substring = string[i:i+318]
        if substring == substring[::-1]:
            palindromes.add(substring)
    return palindromes
```
This implementation uses a nested loop to iterate through each possible length of palindrome that is less than or equal to 318. For each palindrome, it checks if the substring matches its reverse and adds it to the set of palindromes if it does. Finally, it returns the set of palindromes.