 ```
def palindrome_of_length_n(string):
    # Convert the string to lowercase
    string = string.lower()
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each character in the string
    for i in range(len(string)):
        # Check if the current character is a palindrome of length 100
        if is_palindrome(string[i:i+100], 100):
            # If it is, add it to the set of palindromes
            palindromes.add(string[i:i+100])
    # Return the set of palindromes
    return palindromes

def is_palindrome(string, length):
    # Check if the string is empty
    if not string:
        return False

    # Check if the string is a palindrome of the specified length
    for i in range(length//2):
        if string[i] != string[-i-1]:
            return False

    # If the string is a palindrome of the specified length, return True
    return True
```