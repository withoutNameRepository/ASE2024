 Here is a possible implementation of the `palindrome_of_length_n` function:
```python
def palindrome_of_length_n(string):
    # Split the string into substrings of length n
    substrings = [string[i:i+n] for i in range(len(string)-n+1)]
    # Filter out any substrings that are not palindromes
    palindromes = [substring for substring in substrings if substring == substring[::-1]]
    return set(palindromes)
```
This implementation first splits the input string into substrings of length n using a list comprehension. It then filters out any substrings that are not palindromes by comparing each substring with its reverse using the `==` operator. Finally, it returns the set of all palindromes found in the given string.