 ```
def palindrome_of_length_n(string):
# Convert the string to lowercase for case-insensitive comparison
string = string.lower()

# Initialize an empty set to store the palindromes
palindromes = set()

# Iterate over the characters in the string
for i in range(len(string)):

    # Check if the character is a letter (i.e., not a whitespace or punctuation)
    if string[i].isalpha():

        # Check if the substring from the current index to the end of the string is a palindrome
        if string[i:] == string[i:][::-1]:

            # Add the palindrome to the set
            palindromes.add(string[i:])

# Return the set of all palindromes of length 88 that are substrings of the given string
return palindromes
```