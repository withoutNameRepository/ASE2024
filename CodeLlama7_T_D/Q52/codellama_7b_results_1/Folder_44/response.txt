 ```
def palindrome_of_length_n(string):
    # Convert the string to lowercase for case-insensitive comparison
    string = string.lower()

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate over the characters in the string
    for i in range(len(string)):
        # Check if the current character is a letter
        if string[i].isalpha():
            # Check if the substring starting at the current character and ending at position n-1 is a palindrome
            if string[i:n] == string[i:n][::-1]:
                # Add the palindrome to the set of palindromes
                palindromes.add(string[i:n])

    # Return the set of palindromes
    return palindromes
```