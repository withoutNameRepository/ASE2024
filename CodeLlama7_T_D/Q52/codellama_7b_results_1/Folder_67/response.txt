 ```
def palindrome_of_length_n(string):
    # Find all substrings of length n in the given string
    substrings = []
    for i in range(len(string) - n + 1):
        substring = string[i:i+n]
        # Check if the substring is a palindrome
        if substring == substring[::-1]:
            substrings.append(substring)

    return set(substrings)
```
This function takes a single argument, `string`, which is the input string that contains the substrings of length n. The function returns a set of all palindromes of length n that are substrings of the input string.
The function first finds all substrings of length n in the input string using a loop that iterates over each substring starting from the beginning of the string and ending at the end of the string minus n-1 characters.
Each substring is then checked to see if it is a palindrome by comparing it with its reverse. If the substring is a palindrome, it is added to the set of palindromes. The set is returned at the end of the function.
The function also handles the case-insensitive search for palindromes by converting both the input string and each substring to lowercase before comparing them with their reverse. This ensures that all palindromes are found regardless of whether they were originally uppercase or lowercase.