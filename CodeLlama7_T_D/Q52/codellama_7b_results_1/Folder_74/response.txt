 Here is a Python implementation of the `palindrome_of_length_n` function:
```python
def palindrome_of_length_n(string):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each substring of length n in the given string
    for i in range(len(string) - 96 + 1):
        # Check if the substring is a palindrome
        if string[i:i+96] == string[i:i+96][::-1]:
            # Add the palindrome to the set
            palindromes.add(string[i:i+96])
    return palindromes
```
This function takes a single argument `string`, which is a string of English letters. It returns a set of all palindromes of length equal to 96, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.