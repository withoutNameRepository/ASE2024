 Here is the specified Python function:
def palindrome_of_length_n(string):
\# Convert input string to lowercase for case-insensitive comparison
lowercase_string = string.lower()

\# Initialize an empty set to store palindromes
palindromes = set()

\# Iterate over the length of the input string
for i in range(len(lowercase_string)):

\# Check if the substring starting at index i and having length n is a palindrome
if lowercase_string[i:] == lowercase_string[i:].lower()[::-1]:

\# If it is, add it to the set of palindromes
palindromes.add(lowercase_string[i:])

\# Return the set of palindromes if there are any, or an empty set otherwise
return palindromes

\# The function should accept only strings as input and return a set of palindromes of length equal to 18 where each palindrome is a substring of the given string. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.