 ```
def palindrome_of_length_n(string):
# Convert the string to lowercase for case-insensitive comparison
lowercase_string = string.lower()
# Initialize an empty set to store the palindromes
palindromes = set()
# Iterate over the characters in the lowercase string
for i in range(len(lowercase_string)):
# Check if the character at position i is a letter
if lowercase_string[i].isalpha():
# Get the substring of the string starting from position i and ending at position 2*i-1 (since we want to check palindromes of length n)
substring = lowercase_string[i:2*i-1]
# Check if the substring is a palindrome
if substring == substring[::-1]:
# If it is, add it to the set of palindromes
palindromes.add(substring)
return palindromes
```