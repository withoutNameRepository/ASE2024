 ```
def palindrome_of_length_n(string, n):
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Loop through each substring of length n in the given string
    for i in range(len(string) - n + 1):
        # Check if the substring is a palindrome
        if string[i:i+n] == string[i:i+n][::-1]:
            # Add the palindrome to the set
            palindromes.add(string[i:i+n])
    return palindromes
```
This code defines a function `palindrome_of_length_n` that takes two arguments: a string and an integer `n`. The function returns a set of all palindromes of length `n`, where each palindrome is a substring of the given string. The palindromes are found in a case-insensitive manner, and only consist of English letters. If there are no palindromes of the specified length as a substring of the given string, the function returns an empty set.