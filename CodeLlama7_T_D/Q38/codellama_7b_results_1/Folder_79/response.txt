 ```
def find_subset_of_length_n(set):
    num_subsets = 0
    for i in range(1 << len(set)):
        subset = []
        for j in range(len(set)):
            if (i >> j) & 1:
                subset.append(set[j])
        if len(subset) == n:
            num_subsets += 1

    return num_subsets
```
This code finds the number of all subsets of size n in a given set of elements. The basic idea is to generate all possible subsets by iterating over all possible combinations of elements in the set, and then counting the number of subsets of size n.
The code uses bit manipulation to efficiently generate all possible combinations of elements in the set. Specifically, it uses the << and >> operators to shift the bits of a binary representation of the set, allowing it to iterate over all possible combinations of elements in the set.