 ```
def all_left_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_list = []

    # Iterate from 1 to x (inclusive)
    for i in range(1, x + 1):
        # Check if the number is a prime number
        if is_prime(i):
            # Check if the number is left- and right-truncatable prime number
            if is_left_right_truncatable_prime(i):
                # Add the number to the list of prime numbers
                prime_list.append(i)
    # Return the sorted list of prime numbers
    return sorted(prime_list)

# Check if a number is a prime number
def is_prime(n):
    # Check if n is less than or equal to 1
    if n <= 1:
        # If n is less than or equal to 1, it is not a prime number
        return False

    # Check if n is divisible by 2 to n - 1
    for i in range(2, n):
        # If n is divisible by i, it is not a prime number
        if n % i == 0:
            return False

    # If the loop completes successfully, n is a prime number
    return True

# Check if a number is left- and right-truncatable prime number
def is_left_right_truncatable_prime(n):
    # Check if n contains 0
    if '0' in str(n):
        # If n contains 0, it is not a left- and right-truncatable prime number
        return False

    # Initialize variables to store the leading leftmost and last rightmost digits of n
    leading_leftmost_digit = None
    last_rightmost_digit = None

    # Get the leading leftmost and last rightmost digits of n
    for i in range(1, len(str(n)))):
        # If the current digit is not equal to the leading leftmost digit, it is the last rightmost digit
        if leading_leftmost_digit is None or str(n)[i] != leading_leftmost_digit:
            last_rightmost_digit = str(n)[i]

    # Check if n is divisible by the product of its leading leftmost and last rightmost digits
    for i in range(1, len(str(n)))):
        # If n is divisible by the product of its leading leftmost and last rightmost digits, it is not a left- and right-truncatable prime number
        if str(n)[i] == leading_leftmost_digit and str(n)[i] == last_rightmost_digit:
            return False

    # If the loop completes successfully, n is a left- and right-truncatable prime number
    return True
```