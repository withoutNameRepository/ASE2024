 ```
def all_left_right_truncatable_prime(x):
	# Initialize an empty list to store the prime numbers
	prime_list = []

	# Iterate from 1 to x
	for i in range(1, x + 1):
		# Check if i is a prime number
		if is_prime(i):
			# Check if i is left-and-right-truncatable prime
			if is_left_right_truncatable_prime(i):
				# Add i to the prime list
				prime_list.append(i)

	# Sort the prime list in descending order
	prime_list.sort(reverse=True)

	# Return the sorted prime list
	return prime_list


def is_prime(n):

	# Check if n is less than or equal to 1
	if n <= 1:
		return False

	# Check if n is divisible by 2 to n - 1
	for i in range(2, n):
		if n % i == 0:
			return False

	# If the loop completes successfully, return True
	return True


def is_left_right_truncatable_prime(n):

	# Check if n is less than or equal to 1
	if n <= 1:
		return False

	# Check if n contains a 0
	if '0' in str(n):
		return False

	# Check if the leading leftmost and last rightmost digits of n are simultaneously successively removed down to a one- or two-digit prime
	for i in range(1, len(str(n)))):
		temp = int(str(n)[:i] + str(n)[i+1:]))
		if not is_prime(temp):
			return False

	# If the loop completes successfully, return True
	return True
```