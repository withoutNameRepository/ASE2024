 ```
def all_left_right_truncatable_prime(x):
	"""Return the list of all left-and-right-truncatable prime numbers less than or equal to x. The return list should be sorted in descending order. If no left-and-right-truncatable prime number exists in the specified range, the function should return an empty list."""
	left_right_truncatable_prime_numbers = []
	for i in range(2, x + 1):
		if is_prime(i) and is_left_and_right_truncatable_prime(i):
			left_right_truncatable_prime_numbers.append(i)
	return left_right_truncatable_prime_numbers

def is_prime(n):

	"""Return true if n is a prime number, and false otherwise."""

	if n < 2:

		return False


	for i in range(2, int(n ** 0.5) + 1):

		if n % i == 0:

			return False


	return True


def is_left_and_right_truncatable_prime(n):

	"""Return true if n is a left-and-right-truncatable prime number, and false otherwise."""

	if not is_prime(n):

		return False


	leftmost_digit = int(str(n)[:1])

	last_rightmost_digit = int(str(n)[-1:]))

	if leftmost_digit == 0 or last_rightmost_digit == 0:

		return False


	for i in range(2, int(leftmost_digit ** 0.5) + 1):

		if leftmost_digit % i == 0:

			return False


	for i in range(2, int(last_rightmost_digit ** 0.5) + 1):

		if last_rightmost_digit % i == 0:

			return False


	return True
```