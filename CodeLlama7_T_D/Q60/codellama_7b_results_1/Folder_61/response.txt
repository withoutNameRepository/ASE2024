 ```
def all_left_right_truncatable_prime(tuple):
    x = tuple[3]
    list = []
    for i in range(2, x + 1):
        if is_prime(i) and is_left_and_right_truncatable_prime(i):
            list.append(i)
    return sorted(list, reverse=True)
def is_prime(n):
    if n < 2:
        return False

    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False

    return True

def is_left_and_right_truncatable_prime(n):
    string = str(n)

    for i in range(len(string)):
        if string[i] == "0":
            return False

    for i in range(len(string) - 1, -1, -1):
        if string[i] not in "2468":
            return False

    return True

# Test cases
# (modified) assert all_left_right_truncatable_prime((3, 5, 7, 9)) == [7]
# (modified) assert all_left_right_truncatable_prime((10, 20, 30, 40)) == [11, 13, 17, 19, 23, 29]
# (modified) assert all_left_right_truncatable_prime((100, 200, 300, 400)) == [101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199]
```