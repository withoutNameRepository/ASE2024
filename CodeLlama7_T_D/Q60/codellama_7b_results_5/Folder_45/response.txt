 Here is a possible implementation of the `all_left_right_truncatable_prime` function in Python:
```python
def all_left_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_list = []
    # Iterate through the range of integers from 1 to x
    for i in range(1, x + 1):
        # Check if the current integer is a prime number
        if is_prime(i):
            # Check if the current integer is left-and-right-truncatable prime number
            if is_left_right_truncatable_prime(i):
                # Add the current integer to the list of prime numbers
                prime_list.append(i)
    return prime_list
```
The `is_prime` function checks whether a given integer is prime by iterating through all the possible factors of the number and checking if any of them divide the number evenly. The `is_left_right_truncatable_prime` function checks whether a given integer is left-and-right-truncatable prime by checking if it contains no 0 and remains prime if the leading leftmost and last rightmost digits are simultaneously successively removed down to a one- or two-digit prime.