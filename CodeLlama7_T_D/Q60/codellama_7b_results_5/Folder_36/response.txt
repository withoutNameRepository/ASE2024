 ```
def all_left_right_truncatable_prime(x):
	# Initialize an empty list to store the prime numbers
	prime_numbers = []

	# Iterate from 1 to x
	for i in range(1, x + 1):

		# Check if the number is a prime number
		if is_prime(i):

			# Check if the number is left-and-right-truncatable prime number
			if is_left_right_truncatable_prime(i):

				# Add the prime number to the list
				prime_numbers.append(i)

	# Return the sorted list of prime numbers
	return sorted(prime_numbers)


def is_left_right_truncatable_prime(n):

	# Check if the number contains 0
	if '0' in str(n):
		return False

	# Remove the leading leftmost and last rightmost digits from the number
	leading_leftmost = n // 10
	last_rightmost = n % 10

	# Check if the number is still a prime number after removing the leading leftmost and last rightmost digits
	if is_prime(n - leading_leftmost) and is_prime(n + last_rightmost):
		return True

	else:
		return False


def is_prime(n):

	# Check if the number is less than 2
	if n < 2:
		return False

	# Check if the number is divisible by any number between 1 and the square root of the number
	for i in range(1, int(n ** 0.5) + 1):
		if n % i == 0:
			return False

	# If the number passes all the checks, it is a prime number
	return True
```