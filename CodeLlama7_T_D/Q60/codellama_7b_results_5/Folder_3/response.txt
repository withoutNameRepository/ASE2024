 ```
def all_left_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_numbers = []

    # Loop through all numbers from 1 to x
    for i in range(1, x + 1):
        # If the number is a prime number and has no leading zeros
        if is_prime(i) and not has_leading_zeros(i):
            # Add the number to the list of prime numbers
            prime_numbers.append(i)
    return prime_numbers

# Check if a number is a prime number
def is_prime(n):
    # If the number is less than 2, it is not prime
    if n < 2:
        return False

    # Loop through all numbers from 2 to the square root of n
    for i in range(2, int(n ** 0.5) + 1):
        # If the number is divisible by any number between 2 and the square root of n, it is not prime
        if n % i == 0:
            return False

    # If the number makes it all the way to the end without being divided, it is prime
    return True

# Check if a number has leading zeros
def has_leading_zeros(n):
    # Convert the number to a string
    s = str(n)

    # Loop through all characters in the string from left to right
    for c in s:
        # If any character is not a zero, return False
        if c != '0':
            return False

    # If all characters are zeros, return True
    return True
```