 ```
def all_left_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_list = []

    # Iterate from 1 to x (inclusive)
    for i in range(1, x + 1):

        # Check if i is a prime number
        if is_prime(i):

            # Check if i is left- and right-truncatable prime number
            if is_left_right_truncatable_prime(i):

                # Add i to the list of prime numbers
                prime_list.append(i)

    # Sort the list in descending order
    prime_list = sorted(prime_list, reverse=True)

    # Return the list of prime numbers
    return prime_list

# Define a function to check if a number is prime
def is_prime(n):

    # Check if n is 1 or a negative number
    if n <= 1:
        return False

    # Check if n is divisible by 2 to n-1
    for i in range(2, n):
        if n % i == 0:
            return False

    # If the loop completes, return True
    return True

# Define a function to check if a number is left- and right-truncatable prime number
def is_left_right_truncatable_prime(n):

    # Check if n contains any 0 digit
    if "0" in str(n):
        return False

    # Remove the leading leftmost digit of n and check if it remains a prime number
    if is_prime(int(str(n)[1:])):
        return True

    # If the above condition fails, remove the last rightmost digit of n and check if it remains a prime number
    if is_prime(int(str(n)[:-1]))):
        return True

    # If the loop completes, return False
    return False

# Driver code to test the function
x = 100
#print("All left-and-right-truncatable prime numbers less than or equal to", x, "are:")
for i in all_left_right_truncatable_prime(x):
#    print(i)
```