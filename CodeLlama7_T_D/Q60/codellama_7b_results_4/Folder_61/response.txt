 ```
def all_left_right_truncatable_prime(x):
	# Initialize an empty list to store the prime numbers
	primes = []

	# Iterate from 1 to x
	for i in range(1, x + 1):

		# Check if i is a prime number
		if is_prime(i):

			# Check if i is left-and-right-truncatable prime number
			if is_left_right_truncatable_prime(i):
				# Add i to the list of prime numbers
				primes.append(i)

	# Sort the list of prime numbers in descending order
	primes = sorted(primes, reverse=True)

	# Return the list of prime numbers
	return primes

# Check if a number is prime
def is_prime(n):
	# Check if n is less than or equal to 1
	if n <= 1:
		return False

	# Check if n is divisible by 2 to n - 1
	for i in range(2, n):
		if n % i == 0:
			return False

	# If n is greater than 1 and it is not divisible by 2 to n - 1, it is prime
	return True

# Check if a number is left-and-right-truncatable prime number
def is_left_right_truncatable_prime(n):
	# Check if n is less than or equal to 1
	if n <= 1:
		return False

	# Check if n contains any 0
	if '0' in str(n):
		return False

	# Check if n is prime
	if not is_prime(n):
		return False

	# Check if the leading leftmost and last rightmost digits of n are simultaneously successively removed down to a one- or two-digit prime.
	for i in range(2, n + 1):
		if str(i)[0] == '1' or str(i)[-1] == '1':
			return False

	# If n is greater than 1 and it does not contain any 0 and it is not divisible by 2 to n - 1, it is left-and-right-truncatable prime number
	return True
```