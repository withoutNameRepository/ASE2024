 ```
def all_left_right_truncatable_prime(x):
    # Define a function to check if a number is prime
    def is_prime(n):
        if n == 1 or n == 0:
            return False

        for i in range(2, int(n ** 0.5) + 1):
            if n % i == 0:
                return False

        return True

    # Define a function to check if a number is left-and-right-truncatable prime
    def is_left_right_truncatable_prime(n):
        if not is_prime(n):
            return False

        for i in range(1, int(n ** 0.5) + 1):
            if n % i == 0:
                # Check if the number is left-truncatable prime by removing the leading digit
                temp = n // i
                while True:
                    if temp < 10 and is_prime(temp):
                        break

                    temp = temp // 10

                # Check if the number is right-truncatable prime by removing the last digit
                temp = n % i
                while True:
                    if temp < 10 and is_prime(temp):
                        break

                    temp = temp // 10

                if not (is_prime(temp) or is_prime(n - temp)):
                    return False

        return True

    # Return the list of all left-and-right-truncatable prime numbers less than or equal to x
    prime_numbers = []

    for i in range(1, int(x ** 0.5) + 1):
        if is_left_right_truncatable_prime(i):
            prime_numbers.append(i)

    return sorted(prime_numbers, reverse=True)
```