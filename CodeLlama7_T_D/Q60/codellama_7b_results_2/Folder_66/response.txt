 ```
def all_left_right_truncatable_prime(x):
# Initialize an empty list to store the prime numbers
primes = []
# Loop through the range of prime numbers less than or equal to x
for i in range(2, x+1):
# Check if the current number is a prime number using the Miller-Rabin primality test
if is_prime(i):
# Check if the current number is a left-and-right-truncatable prime number using the following algorithm:
# 1. Check if the current number contains any 0 digits. If it does, move on to the next number.
# 2. Remove the leading leftmost digit and check if the resulting number is still prime. If it is not, move on to the next number.
# 3. Remove the last rightmost digit and check if the resulting number is still prime. If it is not, move on to the next number.
# 4. If all of the above steps are successful, add the current number to the list of prime numbers.
    if '0' in str(i):
        continue

    if i % int(str(i)[1:]) == 0:
        continue

    if i % int(str(i)[:-1]) == 0:
        continue

    primes.append(i)

# Return the list of all left-and-right-truncatable prime numbers less than or equal to x, sorted in descending order.
return sorted(primes, reverse=True)
```