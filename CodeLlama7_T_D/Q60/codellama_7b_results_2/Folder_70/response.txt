 ```
def all_left_right_truncatable_prime(x):
    # Initialize an empty list to store the prime numbers
    prime_list = []

    # Loop through all numbers from 1 to x
    for i in range(1, x + 1):

        # Check if the number is a prime number
        if is_prime(i):

            # Check if the number is left-and-right-truncatable prime number
            if is_left_right_truncatable_prime(i):

                # Add the number to the list of prime numbers
                prime_list.append(i)

    # Sort the list of prime numbers in descending order
    prime_list = sorted(prime_list, reverse=True)

    # Return the list of prime numbers
    return prime_list

# Define a function to check if a number is a prime number
def is_prime(n):

    # Check if n is greater than 1
    if n > 1:

        # Loop through all numbers from 2 to the square root of n
        for i in range(2, int(n ** 0.5) + 1)):

            # Check if any number divides n evenly
            if n % i == 0:

                # Return False if any number divides n evenly
                return False

    # If no numbers divide n evenly, return True
    return True

# Define a function to check if a number is left-and-right-truncatable prime number
def is_left_right_truncatable_prime(n):

    # Check if n is a prime number
    if not is_prime(n):

        # Return False if n is not a prime number
        return False

    # Check if the leading leftmost and last rightmost digits of n are both equal to 1
    if n % 10 == 1:

        # Return True if the leading leftmost and last rightmost digits of n are both equal to 1
        return True

    # Return False if the leading leftmost and last rightmost digits of n are not both equal to 1
    return False
```