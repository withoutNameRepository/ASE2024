 ```
def all_left_right_truncatable_prime(x):
	# Initialize an empty list to store the prime numbers
	prime_numbers = []

	# Loop through all the prime numbers less than or equal to x
	for i in range(2, x + 1):

		# Check if the current number is a prime number
		if is_prime(i):

			# Check if the current number is left- and right-truncatable prime number
			if left_right_truncatable_prime(i):

				# Add the current number to the list of prime numbers
				prime_numbers.append(i)

	# Sort the list of prime numbers in ascending order
	prime_numbers.sort()

	# Return the sorted list of prime numbers
	return prime_numbers


# Check if a number is a prime number
def is_prime(n):

	# If the number is less than 2, it is not a prime number
	if n < 2:
		return False

	# If the number is divisible by 2 to n-1, it is not a prime number
	for i in range(2, n):
		if n % i == 0:
			return False

	# If the number is greater than 1 and it is divisible only by 1 and itself, it is a prime number
	return True


# Check if a number is left- and right-truncatable prime number
def left_right_truncatable_prime(n):

	# If the number is not a prime number, it is not left- and right-truncatable prime number
	if not is_prime(n):
		return False

	# Check if the current number contains 0 digit
	for i in range(2, n + 1):
		if str(i).find('0') != -1:
			return False

	# If the current number does not contain any 0 digit, it is left- and right-truncatable prime number
	return True
```