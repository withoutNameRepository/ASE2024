 Here is the Python function `insert_after_character` that meets the requirements:
```python
def insert_after_character(string):
    # Create a new string with the same characters as the input string
    new_string = ""

    # Iterate over the characters in the input string
    for char in string:
        # If the current character is 'j', insert the character '1' immediately after it
        if char == 'j':
            new_string += "1" + char
        else:
            new_string += char

    return new_string
```
To test this function, you can use the following code:
```python
#print(insert_after_character("hello")) # Should print "h1ello"
#print(insert_after_character("jjjj")) # Should print "j1jjj"
#print(insert_after_character("abcdefg")) # Should print "abcdefg" (no changes made)
```
This function takes a single string argument and returns a new string with the same characters as the input string, except that any occurrences of the character 'j' have been replaced by the character '1' immediately succeeding it.