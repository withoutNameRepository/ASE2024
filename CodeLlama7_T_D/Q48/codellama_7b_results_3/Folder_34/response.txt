 Here is a possible implementation of the function described in the text specification:
```
def return_binary_or_hexa(tuple):
    # Define variables for the range of integers and the sum
    a = tuple[60]
    b = tuple[200]
    sum = 0

    # Calculate the sum of all integers from a + 1 to b - 1 (both inclusive) that are not present in the tuple between indices 60 and 200
    for i in range(a + 1, b):
        if i not in tuple[60:200]:
            sum += i

    # If the sum is an odd number, return the binary representation string of the sum. Otherwise, return the hexadecimal representation string of the sum. The binary and hexadecimal representations should start with the most significant digit and have no leading zeros.
    if sum % 2 == 1:
        return f"{sum:b}"[::-1]
    else:
        return f"{sum:x}"[::-1]
```