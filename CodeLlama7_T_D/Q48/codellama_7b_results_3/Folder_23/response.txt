 ```
def return_binary_or_hexa(my_tuple):
# Check if all integers from a + 1 to b - 1 (both inclusive) are present in the specified range in the tuple
if not any(i for i in range(my_tuple[20] + 1, my_tuple[36] - 1) if i not in my_tuple):
# If so, return an empty string
return ""

# Calculate the sum of all integers from a + 1 to b - 1 (both inclusive) that are not present in the tuple between indices 20 and 36
sum = sum(i for i in range(my_tuple[20] + 1, my_tuple[36] - 1) if i not in my_tuple))
# If the sum is an odd number, return the binary representation string of the sum; otherwise, it should return the hexadecimal representation string of the sum. The binary representation should not be prefixed with '0b'. The hexadecimal representation should not be prefixed with '0x'. The binary and hexadecimal representations should start with the most significant digit and have no leading zeros. The letters in hexadecimal representation can be either in lowercase or uppercase.
if sum % 2 == 1:
return format(sum, "b")[2:]
else:
return format(sum, "x")[2:]

# If all integers from a + 1 to b - 1 (both inclusive) are present in the specified range in the tuple, the function should return an empty string.

```