 ```
def return_binary_or_hexa(my_tuple):
# Check if all integers from a + 1 to b - 1 (both inclusive) are present in the specified range in the tuple, and if so, return an empty string
if all([i in my_tuple for i in range(my_tuple[90] + 1, my_tuple[97] - 1)])):
return ''

# Calculate the sum of all integers from a + 1 to b - 1 (both inclusive) that are not present in the tuple between indices 90 and 97
sum = 0
for i in range(my_tuple[90] + 1, my_tuple[97] - 1):
if i not in my_tuple:
sum += i

# Check if the sum is an odd number, and if so, return the binary representation string of the sum; otherwise, it should return the hexadecimal representation string of the sum. The binary representation should not be prefixed with '0b'. The hexadecimal representation should not be prefixed with '0x'. The binary and hexadecimal representations should start with the most significant digit and have no leading zeros. The letters in hexadecimal representation can be either in lowercase or uppercase.
if sum % 2 == 1:
return bin(sum)[2:]
else:
return hex(sum)[2:]
```