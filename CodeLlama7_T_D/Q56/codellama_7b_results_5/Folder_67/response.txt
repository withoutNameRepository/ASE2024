 ```
def all_substring_of_size_n(string, n):
    if len(string) < n:
        return []

    substrings = []

    for i in range(len(string) - n + 1):

        substring = string[i:i+n]

        if not any(substring == s for s in substrings):
            substrings.append(substring)

    return substrings

```
This code defines a function called `all_substring_of_size_n` that takes two arguments: the first is a string, and the second is an integer representing the size of the substrings to be returned. The function returns all distinct substrings of length equal to the given size in the given string. If there are no such substrings, the function returns an empty list.
The function starts by checking if the length of the input string is less than the given size `n`. If this is the case, then there are no substrings of the desired size in the input string, and the function returns an empty list.
Otherwise, the function initializes an empty list called `substrings` to store all distinct substrings of the desired size. It then uses a loop to iterate over the characters of the input string starting from index 0.
Inside the loop, the function checks if the substring of length `n` starting at the current character is already present in the `substrings` list. If it is not present, the function adds it to the `substrings` list. This ensures that all distinct substrings are added only once to the `substrings` list.
After iterating over all characters of the input string using the loop, the function returns the `substrings` list containing all distinct substrings of length equal to the given size in the input string. If there are no such substrings, the function returns an empty list.