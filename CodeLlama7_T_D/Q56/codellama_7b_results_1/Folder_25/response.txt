 Here's a possible implementation of the `all_substring_of_size_n` function:
```python
def all_substring_of_size_n(string, n):
    # Initialize an empty list to store the substrings
    substrings = []

    # Iterate over the characters in the string
    for i in range(len(string) - n + 1):
        substring = string[i:i+n]

        # Check if the substring already exists in the list
        if substring not in substrings:
            substrings.append(substring)

    return substrings
```
This function takes two arguments: `string`, which is the input string, and `n`, which is the size of the substrings to find. It returns a list of all distinct substrings of length `n` in the input string, in any order.
For example, if we call the function with `all_substring_of_size_n("abcd", 3)`, it will return the list `["abc", "bcd"]`, because those are the only two substrings of length three in the input string "abcd".