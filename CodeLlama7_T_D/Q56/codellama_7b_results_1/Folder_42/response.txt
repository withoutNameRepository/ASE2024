 Here is a possible implementation of the `all_substring_of_size_n` function:
```python
def all_substring_of_size_n(s):
    # Initialize an empty list to store the substrings
    substrings = []

    # Iterate over the characters in the string
    for i in range(len(s)):
        # Extract a substring of length n starting at position i
        substring = s[i:i+n]
        # If the substring is not already in the list, add it
        if substring not in substrings:
            substrings.append(substring)

    # Return the list of substrings
    return substrings
```
This function takes a string `s` as input and returns a list of all distinct substrings of length 45 with no duplicate characters. If there are no such substrings in the given string, the function returns an empty list. The order of the substrings in the returned list does not matter.