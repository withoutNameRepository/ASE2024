 Here is a possible implementation of the `all_substring_of_size_n` function:
```python
def all_substring_of_size_n(s, n):
    # Initialize an empty list to store the substrings
    substrings = []

    # Iterate over each substring of length n in the input string s
    for i in range(len(s) - n + 1):
        # Add the substring to the list of substrings
        substrings.append(s[i:i+n])

    # Return the list of substrings
    return substrings
```
This function takes two arguments: `s`, which is a string, and `n`, which is an integer representing the length of the substrings to be returned.
The function first initializes an empty list to store the substrings. It then iterates over each substring of length n in the input string s, starting from the beginning of the string. For each substring, it adds it to the list of substrings using the `append` method. Finally, it returns the list of substrings.
Note that this function assumes that the input string is non-empty and contains at least one substring of length n. If the input string is empty or has no such substrings, the function will return an empty list.