 Here's a possible implementation of the `find_primes_between_indices` function:
```python
def find_primes_between_indices(my_list):
    # Define a list to store the prime numbers found in the range
    prime_numbers = []
    # Iterate over the elements in the list
    for i in range(23, 60):
        # Check if the current element is prime
        if is_prime(my_list[i]):
            # If it is prime, add it to the list of prime numbers
            prime_numbers.append(my_list[i])
    # Return the sorted list of prime numbers in descending order
    return sorted(prime_numbers, reverse=True)

# Define a function to check if an element is prime
def is_prime(n):
    # Check if n is greater than 1
    if n > 1:
        # Iterate from 2 to the square root of n
        for i in range(2, int(n ** 0.5) + 1):
            # If n is divisible by any number between 2 and the square root of n, it is not prime
            if n % i == 0:
                return False

    # If n is greater than 1 and it is not divisible by any number between 2 and the square root of n, it is prime
    return True
```