 Here is a possible implementation of the `find_primes_between_indices` function in Python:
```
def find_primes_between_indices(my_list):
    # Initialize an empty list to store the prime numbers
    prime_numbers = []

    # Iterate over the specified range of indices
    for i in range(13, 68 + 1):
        # Check if the current element is a prime number
        if is_prime(my_list[i]):
            # If it is, add it to the list of prime numbers
            prime_numbers.append(my_list[i])

    # Return the sorted list of prime numbers
    return sorted(prime_numbers)
```
This function takes a single argument, `my_list`, which should be a list of integers. It then iterates over the specified range of indices in `my_list` and checks if each element is a prime number using the `is_prime()` function. If it is a prime number, it is added to the list of prime numbers that will be returned at the end of the function. Finally, the sorted list of prime numbers is returned.
Note that this implementation assumes that the `my_list` argument passed to the function is a valid Python list and that its elements are all integers.