{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_74_1.py::test_if_result_is_sorted", "location": ["tests39_74_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_1.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010479800403118134, "start": 1700273302.2311814, "stop": 1700273302.2312865, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1873ae813cdf4518b1155d559737bc83", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_74_1.py::test_strings_of_size_equal_to_5", "location": ["tests39_74_1.py", 5, "test_strings_of_size_equal_to_5"], "keywords": {"test_strings_of_size_equal_to_5": 1, "tests39_74_1.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019922299543395638, "start": 1700273302.231314, "stop": 1700273302.2315145, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1873ae813cdf4518b1155d559737bc83", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_74_1.py::test_if_result_is_sorted", "location": ["tests39_74_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_1.py": 1, "Folder_74": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_1/Folder_74/tests39_74_1.py", "lineno": 26, "message": "AssertionError: assert ['g', 'G', 'C', '3', '!'] == ['!', '3', 'C', 'G', 'g']\n  At index 0 diff: 'g' != '!'\n  Full diff:\n  - ['!', '3', 'C', 'G', 'g']\n  + ['g', 'G', 'C', '3', '!']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['g', 'G', 'C', '3', '!'] == ['!', '3', 'C', 'G', 'g']", "E             At index 0 diff: 'g' != '!'", "E             Full diff:", "E             - ['!', '3', 'C', 'G', 'g']", "E             + ['g', 'G', 'C', '3', '!']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_1/Folder_74/tests39_74_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['g', 'G', 'C', '3', '!'] == ['!', '3', 'C', 'G', 'g']", "E             At index 0 diff: 'g' != '!'", "E             Full diff:", "E             - ['!', '3', 'C', 'G', 'g']", "E             + ['g', 'G', 'C', '3', '!']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_1/Folder_74/tests39_74_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_1/Folder_74/tests39_74_1.py", "lineno": 26, "message": "AssertionError: assert ['g', 'G', 'C', '3', '!'] == ['!', '3', 'C', 'G', 'g']\n  At index 0 diff: 'g' != '!'\n  Full diff:\n  - ['!', '3', 'C', 'G', 'g']\n  + ['g', 'G', 'C', '3', '!']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003506869834382087, "start": 1700273302.2314606, "stop": 1700273302.2318115, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1873ae813cdf4518b1155d559737bc83", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
