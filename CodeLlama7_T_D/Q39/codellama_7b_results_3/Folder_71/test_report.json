{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011634800466708839, "start": 1700273407.9439232, "stop": 1700273407.9440403, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5d5ad9d2cfa84f6ca8c1e23fb02135f7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_3.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_3.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013744400348514318, "start": 1700273407.943893, "stop": 1700273407.9440312, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5d5ad9d2cfa84f6ca8c1e23fb02135f7", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['y', 'v', 't...'n', 'm', ...] == ['@', 'B', 'D...'Q', ']', ...]\n  At index 0 diff: 'y' != '@'\n  Full diff:\n  - ['@', 'B', 'D', 'P', 'Q', ']', '_', 'd', 'm', 'n', 'o', 't', 'v', 'y']\n  + ['y', 'v', 't', 'o', 'n', 'm', 'd', '_', ']', 'Q', 'P', 'D', 'B', '@']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['y', 'v', 't...'n', 'm', ...] == ['@', 'B', 'D...'Q', ']', ...]", "E             At index 0 diff: 'y' != '@'", "E             Full diff:", "E             - ['@', 'B', 'D', 'P', 'Q', ']', '_', 'd', 'm', 'n', 'o', 't', 'v', 'y']", "E             + ['y', 'v', 't', 'o', 'n', 'm', 'd', '_', ']', 'Q', 'P', 'D', 'B', '@']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['y', 'v', 't...'n', 'm', ...] == ['@', 'B', 'D...'Q', ']', ...]", "E             At index 0 diff: 'y' != '@'", "E             Full diff:", "E             - ['@', 'B', 'D', 'P', 'Q', ']', '_', 'd', 'm', 'n', 'o', 't', 'v', 'y']", "E             + ['y', 'v', 't', 'o', 'n', 'm', 'd', '_', ']', 'Q', 'P', 'D', 'B', '@']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['y', 'v', 't...'n', 'm', ...] == ['@', 'B', 'D...'Q', ']', ...]\n  At index 0 diff: 'y' != '@'\n  Full diff:\n  - ['@', 'B', 'D', 'P', 'Q', ']', '_', 'd', 'm', 'n', 'o', 't', 'v', 'y']\n  + ['y', 'v', 't', 'o', 'n', 'm', 'd', '_', ']', 'Q', 'P', 'D', 'B', '@']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004997389914933592, "start": 1700273407.9442172, "stop": 1700273407.9447174, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5d5ad9d2cfa84f6ca8c1e23fb02135f7", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
