{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_74_3.py::test_strings_of_size_equal_to_5", "location": ["tests39_74_3.py", 5, "test_strings_of_size_equal_to_5"], "keywords": {"test_strings_of_size_equal_to_5": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011386399273760617, "start": 1700273408.8864903, "stop": 1700273408.8866048, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b7456786f9bf4377bf75ce0d776c2c11", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_74_3.py::test_if_result_is_sorted", "location": ["tests39_74_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.542398038320243e-05, "start": 1700273408.8863583, "stop": 1700273408.886454, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b7456786f9bf4377bf75ce0d776c2c11", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_74_3.py::test_if_result_is_sorted", "location": ["tests39_74_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError: assert ['r', '[', 'U', ':', '5'] == ['5', ':', 'U', '[', 'r']\n  At index 0 diff: 'r' != '5'\n  Full diff:\n  - ['5', ':', 'U', '[', 'r']\n  + ['r', '[', 'U', ':', '5']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['r', '[', 'U', ':', '5'] == ['5', ':', 'U', '[', 'r']", "E             At index 0 diff: 'r' != '5'", "E             Full diff:", "E             - ['5', ':', 'U', '[', 'r']", "E             + ['r', '[', 'U', ':', '5']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['r', '[', 'U', ':', '5'] == ['5', ':', 'U', '[', 'r']", "E             At index 0 diff: 'r' != '5'", "E             Full diff:", "E             - ['5', ':', 'U', '[', 'r']", "E             + ['r', '[', 'U', ':', '5']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError: assert ['r', '[', 'U', ':', '5'] == ['5', ':', 'U', '[', 'r']\n  At index 0 diff: 'r' != '5'\n  Full diff:\n  - ['5', ':', 'U', '[', 'r']\n  + ['r', '[', 'U', ':', '5']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032603999716229737, "start": 1700273408.886613, "stop": 1700273408.8869393, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b7456786f9bf4377bf75ce0d776c2c11", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
