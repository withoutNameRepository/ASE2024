 Here's a possible implementation of the `return_n_greatest_chars` function:
```python
def return_n_greatest_chars(string, n):
    # Create a list of tuples containing the character and its ASCII value
    char_list = [(char, ord(char)) for char in string]
    # Sort the list in descending order based on the ASCII values
    sorted_list = sorted(char_list, key=lambda x: -x[1])
    # Return the top n characters from the sorted list
    return [char for char, _ in sorted_list[:n]]
```
This implementation first creates a list of tuples containing each character and its ASCII value. It then sorts this list in descending order based on the ASCII values, using the `sorted` function with a custom sorting key that returns the negative ASCII value of each character.
Finally, it returns the top n characters from the sorted list, by taking the first n elements of the sorted list and extracting only the characters (i.e., the first element of each tuple).