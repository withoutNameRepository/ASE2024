{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_2.py::test_if_result_is_sorted", "location": ["tests39_71_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_2.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013233697973191738, "start": 1700273349.7805657, "stop": 1700273349.7806988, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5f9cc68ba3794eada9159aeb84be381e", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_2.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_2.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_2.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001554200134705752, "start": 1700273349.7806354, "stop": 1700273349.7807918, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5f9cc68ba3794eada9159aeb84be381e", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_2.py::test_if_result_is_sorted", "location": ["tests39_71_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_2.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_2/Folder_71/tests39_71_2.py", "lineno": 26, "message": "AssertionError: assert ['w', 'p', 'f...'_', 'T', ...] == ['5', '=', '@...'C', 'D', ...]\n  At index 0 diff: 'w' != '5'\n  Full diff:\n  - ['5', '=', '@', 'B', 'C', 'D', 'E', 'H', 'T', '_', 'b', 'f', 'p', 'w']\n  + ['w', 'p', 'f', 'b', '_', 'T', 'H', 'E', 'D', 'C', 'B', '@', '=', '5']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['w', 'p', 'f...'_', 'T', ...] == ['5', '=', '@...'C', 'D', ...]", "E             At index 0 diff: 'w' != '5'", "E             Full diff:", "E             - ['5', '=', '@', 'B', 'C', 'D', 'E', 'H', 'T', '_', 'b', 'f', 'p', 'w']", "E             + ['w', 'p', 'f', 'b', '_', 'T', 'H', 'E', 'D', 'C', 'B', '@', '=', '5']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_2/Folder_71/tests39_71_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['w', 'p', 'f...'_', 'T', ...] == ['5', '=', '@...'C', 'D', ...]", "E             At index 0 diff: 'w' != '5'", "E             Full diff:", "E             - ['5', '=', '@', 'B', 'C', 'D', 'E', 'H', 'T', '_', 'b', 'f', 'p', 'w']", "E             + ['w', 'p', 'f', 'b', '_', 'T', 'H', 'E', 'D', 'C', 'B', '@', '=', '5']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_2/Folder_71/tests39_71_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_2/Folder_71/tests39_71_2.py", "lineno": 26, "message": "AssertionError: assert ['w', 'p', 'f...'_', 'T', ...] == ['5', '=', '@...'C', 'D', ...]\n  At index 0 diff: 'w' != '5'\n  Full diff:\n  - ['5', '=', '@', 'B', 'C', 'D', 'E', 'H', 'T', '_', 'b', 'f', 'p', 'w']\n  + ['w', 'p', 'f', 'b', '_', 'T', 'H', 'E', 'D', 'C', 'B', '@', '=', '5']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006674760079476982, "start": 1700273349.7809293, "stop": 1700273349.7815974, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5f9cc68ba3794eada9159aeb84be381e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
