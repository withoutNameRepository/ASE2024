 Here is a possible implementation of the `return_n_greatest_chars` function:
```python
def return_n_greatest_chars(string, n):
    # Convert the string to a list of characters
    char_list = list(string)
    # Sort the list of characters in descending order based on their ASCII values
    sorted_char_list = sorted(char_list, key=ord, reverse=True)
    # Return the top 43 characters from the sorted list
    return sorted_char_list[:n]
```
This function takes two arguments: `string`, which is a string of distinct characters, and `n`, which is an integer representing the number of greatest characters to be returned. The function first converts the input `string` into a list of characters using the `list()` function. Then it sorts this list of characters in descending order based on their ASCII values using the `sorted()` function with the `key` parameter set to `ord`. Finally, it returns the top 43 characters from the sorted list by taking the first 43 elements from the sorted list using slicing.