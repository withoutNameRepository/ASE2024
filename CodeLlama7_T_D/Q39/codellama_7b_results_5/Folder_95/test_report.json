{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_95_5.py::test_if_result_is_sorted", "location": ["tests39_95_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_95_5.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010706199100241065, "start": 1700273569.3349142, "stop": 1700273569.3350217, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5d999c8c4c14e46a7e331c33ee02515", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_95_5.py::test_strings_of_size_equal_to_36", "location": ["tests39_95_5.py", 5, "test_strings_of_size_equal_to_36"], "keywords": {"test_strings_of_size_equal_to_36": 1, "tests39_95_5.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013019298785366118, "start": 1700273569.3349202, "stop": 1700273569.3350513, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5d999c8c4c14e46a7e331c33ee02515", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_95_5.py::test_if_result_is_sorted", "location": ["tests39_95_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_95_5.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_5/Folder_95/tests39_95_5.py", "lineno": 26, "message": "AssertionError: assert ['~', '}', '{...'t', 'r', ...] == ['#', '&', ')...',', '2', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '}',\n  +  '{',\n  +  'x',...\n  \n  ...Full output truncated (68 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '}', '{...'t', 'r', ...] == ['#', '&', ')...',', '2', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '}',", "E             +  '{',", "E             +  'x',...", "E             ", "E             ...Full output truncated (68 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_95/tests39_95_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '}', '{...'t', 'r', ...] == ['#', '&', ')...',', '2', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '}',", "E             +  '{',", "E             +  'x',...", "E             ", "E             ...Full output truncated (68 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_95/tests39_95_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_5/Folder_95/tests39_95_5.py", "lineno": 26, "message": "AssertionError: assert ['~', '}', '{...'t', 'r', ...] == ['#', '&', ')...',', '2', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '}',\n  +  '{',\n  +  'x',...\n  \n  ...Full output truncated (68 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003873779787681997, "start": 1700273569.335191, "stop": 1700273569.3355787, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5d999c8c4c14e46a7e331c33ee02515", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
