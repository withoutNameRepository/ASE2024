{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_2_5.py::test_if_result_is_sorted", "location": ["tests39_2_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.13869880605489e-05, "start": 1700273493.3392293, "stop": 1700273493.3393211, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1204ac0cbae844828f1a84996e9f907f", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_2_5.py::test_strings_of_size_equal_to_48", "location": ["tests39_2_5.py", 5, "test_strings_of_size_equal_to_48"], "keywords": {"test_strings_of_size_equal_to_48": 1, "tests39_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011341099161654711, "start": 1700273493.3392637, "stop": 1700273493.3393776, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1204ac0cbae844828f1a84996e9f907f", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_2_5.py::test_if_result_is_sorted", "location": ["tests39_2_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q39/codellama_7b_results_5/Folder_2/tests39_2_5.py", "lineno": 26, "message": "AssertionError: assert '~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!' == ['!', '$', '%', '(', ',', '-', ...]\n +  where ['!', '$', '%', '(', ',', '-', ...] = sorted('~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=48 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!' == ['!', '$', '%', '(', ',', '-', ...]", "E            +  where ['!', '$', '%', '(', ',', '-', ...] = sorted('~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_2/tests39_2_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=48 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert '~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!' == ['!', '$', '%', '(', ',', '-', ...]", "E            +  where ['!', '$', '%', '(', ',', '-', ...] = sorted('~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_2/tests39_2_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q39/codellama_7b_results_5/Folder_2/tests39_2_5.py", "lineno": 26, "message": "AssertionError: assert '~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!' == ['!', '$', '%', '(', ',', '-', ...]\n +  where ['!', '$', '%', '(', ',', '-', ...] = sorted('~}|zyvtrqnmlkhgdcbaXTSLJHGC@?>=<:98765431/-,(%$!')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019822397734969854, "start": 1700273493.3394802, "stop": 1700273493.3396788, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1204ac0cbae844828f1a84996e9f907f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
