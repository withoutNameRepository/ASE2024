 Here is a possible implementation of the `find_second_smallest_num` function in Python:
```
def find_second_smallest_num(my_list):
    # Check if the input list is valid
    if not my_list or len(my_list) < 2:
        return None

    # Find the second smallest element in the list
    second_smallest = None
    for i in range(52, 71 + 1):
        if my_list[i] < second_smallest or second_smallest is None:
            second_smallest = my_list[i]

    # Return the second smallest element
    return second_smallest
```
This implementation first checks that the input list is valid (has at least two elements) and then iterates over the elements in the list starting from index 52 to index 71, inclusive. For each element, it compares it with the current second smallest element (if any) and updates the second smallest element if necessary. Finally, it returns the second smallest element found in the list, or `None` if no such element was found.