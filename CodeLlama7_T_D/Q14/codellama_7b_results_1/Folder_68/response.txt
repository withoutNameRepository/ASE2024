 Here's a possible implementation of the `find_second_smallest_num` function in Python:
```python
def find_second_smallest_num(my_list):
    # Check if the input list is empty
    if not my_list:
        return None

    # Sort the list and get the second smallest element
    sorted_list = sorted(my_list)
    second_smallest = None
    for i in range(len(sorted_list)):
        if sorted_list[i] != sorted_list[0]:
            second_smallest = sorted_list[i]
            break

    return second_smallest
```
This implementation first checks if the input list is empty, and if so, returns `None`. Otherwise, it sorts the list using the built-in `sorted` function, then iterates over the elements of the sorted list and finds the second smallest element. If there is no such element (i.e., all elements are equal to the first element), the function returns `None`.