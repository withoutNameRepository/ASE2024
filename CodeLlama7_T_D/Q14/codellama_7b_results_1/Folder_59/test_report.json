{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests14_59_1.py::test_unsorted_large_range", "location": ["tests14_59_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010608100274112076, "start": 1700251170.4451733, "stop": 1700251170.4452798, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_59_1.py::test_smallest_is_in_range", "location": ["tests14_59_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001906649995362386, "start": 1700251170.4454484, "stop": 1700251170.44564, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_smallest_is_in_range", "location": ["tests14_59_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001719799911370501, "start": 1700251170.4459352, "stop": 1700251170.4461079, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_smallest_is_in_range", "location": ["tests14_59_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010929499694611877, "start": 1700251170.4464066, "stop": 1700251170.4465168, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_large_range", "location": ["tests14_59_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.954600732773542e-05, "start": 1700251170.447613, "stop": 1700251170.447693, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_large_range", "location": ["tests14_59_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032638000266160816, "start": 1700251170.447786, "stop": 1700251170.448113, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_large_range", "location": ["tests14_59_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.771798896603286e-05, "start": 1700251170.4482694, "stop": 1700251170.4483275, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_reversed_range", "location": ["tests14_59_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.924500096123666e-05, "start": 1700251170.4492424, "stop": 1700251170.4493222, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_reversed_range", "location": ["tests14_59_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.232399704866111e-05, "start": 1700251170.4494145, "stop": 1700251170.449497, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_reversed_range", "location": ["tests14_59_1.py", 42, "test_reversed_range"], "keywords": {"test_reversed_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.955000233370811e-05, "start": 1700251170.4496446, "stop": 1700251170.4497044, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw0", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_59_1.py::test_unsorted_large_range", "location": ["tests14_59_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_59_1.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q14/codellama_7b_results_1/Folder_59/tests14_59_1.py", "lineno": 30, "message": "assert -999 == -655\n +  where -999 = find_second_smallest_num([377, -655, -65, 202, 528, -396, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 9 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 9:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:9 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -655", "E            +  where -999 = find_second_smallest_num([377, -655, -65, 202, 528, -396, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_7b_results_1/Folder_59/tests14_59_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 9 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 9:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:9 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert -999 == -655", "E            +  where -999 = find_second_smallest_num([377, -655, -65, 202, 528, -396, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codellama_7b_results_1/Folder_59/tests14_59_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q14/codellama_7b_results_1/Folder_59/tests14_59_1.py", "lineno": 30, "message": "assert -999 == -655\n +  where -999 = find_second_smallest_num([377, -655, -65, 202, 528, -396, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006801929994253442, "start": 1700251170.4454434, "stop": 1700251170.446124, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "129e32a8029a4047b0e4b3d2f720eded", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
