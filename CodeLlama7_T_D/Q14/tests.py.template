from Q14.$4_results_$5.Folder_$2.generated_answer import $3
import random


def test_smallest_is_in_range():
    large_list = random.choices(range(-1000, 1000), k=($1 + 2))
    if $0 == $1:
        assert $3(large_list) == None
    else:
        assert $3(large_list) in large_list


def test_large_range():
    large_list = [i for i in range(0,($1 + 1) * 1000)]
    if $0 == $1:
        assert $3(large_list) == None
    else:
        expected_result = large_list[$0 + 1]
        assert $3(large_list) == expected_result


def test_unsorted_large_range():
    initial_list = [i for i in range(-1000, $1 + 1000)]
    random.shuffle(initial_list)
    if $0 == $1:
            assert $3(initial_list) == None
    else:
        sliced_list = initial_list[$0:$1 + 1]
        sliced_list.sort()
        assert $3(initial_list) == sliced_list[1]


def test_fixed_list_in_the_range():
    insert_list = [i for i in range($1 - $0 + 1)]
    larger_list = [-i for i in range(1, $1 * 2)]
    input_list = larger_list[:$0] + insert_list + larger_list[$0:]
    if $0 == $1:
        assert $3(input_list) == None
    else:
        assert $3(input_list) == 1


def test_reversed_range():
    initial_list = [i for i in range(-100, $1 + 100)]
    if $0 == $1:
            assert $3(initial_list) == None
    else:
        sliced_list = initial_list[$0:$1 + 1]
        sliced_list.reverse()
        assert $3(initial_list) == sliced_list[-2]
