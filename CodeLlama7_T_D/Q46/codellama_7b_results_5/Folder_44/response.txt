 ```
def gcf_three_nums(my_list):
    # Calculate the greatest common factor of the elements at indices 62, 96 and 26
    gcf = my_list[62]
    for i in range(len(my_list)):
        if my_list[i] != 0:
            while (my_list[i] % gcf) == 0:
                gcf = my_list[i]
    return gcf
```
This code defines a function called `gcf_three_nums` that takes one argument, a list of positive integers. The function calculates the greatest common factor (GCF) of the elements at indices 62, 96 and 26 in the given list. The GCF is calculated using the Euclidean algorithm.
The function first initializes a variable `gcf` to the element at index 62 in the given list. Then it iterates over each element in the list, starting from the element at index 96. If the element at a particular index is not equal to zero, then the loop calculates the greatest common divisor of the element at the current index and the previous value of `gcf`. This process continues until the `gcf` variable contains the smallest possible GCF of the elements at indices 62, 96 and 26 in the given list.
Finally, the function returns the value stored in the `gcf` variable as the greatest common factor of the elements at indices 62, 96 and 26 in the given list.