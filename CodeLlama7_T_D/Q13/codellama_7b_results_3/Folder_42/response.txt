 Here's a possible implementation of the `find_second_largest_num` function in Python:
```
def find_second_largest_num(my_list):
    # Check if the input list is empty or has less than two elements
    if len(my_list) < 2:
        return None

    # Find the second largest element in the list
    second_largest = None
    for i in range(len(my_list)):
        if my_list[i] > second_largest or second_largest is None:
            second_largest = my_list[i]

    # Return the second largest element, or 'None' if it doesn't exist
    return second_largest
```
This implementation first checks if the input list has at least two elements. If it does not have enough elements, the function returns `None`.
Next, the function iterates over the elements of the input list and finds the second largest element. It uses a variable called `second_largest` to keep track of the current second largest element, and it updates this value as it goes through the list.
Finally, the function returns the second largest element, or `None` if it doesn't exist.