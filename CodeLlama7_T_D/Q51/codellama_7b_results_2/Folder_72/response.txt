 ```
def if_contains_anagrams(my_list):
    # Create a dictionary to store the anagram counts
    anagram_counts = {}

    for word in my_list:
        # Get the anagram of the current word
        anagram = ''.join(sorted(word.lower()))

        if len(anagram) < 3:
            continue

        # Increment the count of the anagram
        if anagram in anagram_counts:
            anagram_counts[anagram] += 1

        else:
            anagram_counts[anagram] = 1

    # Check if there are more than 188 pairs of anagrams in the list
    return sum(count > 1 for count in anagram_counts.values()) <= 188
```
This code uses a dictionary to store the counts of each anagram that appears in the input list. It then iterates through the list and for each word, it generates its anagram by sorting the letters in the word in alphabetical order. If the length of the anagram is less than 3, it skips the current word and moves on to the next one. Otherwise, it increments the count of the anagram if it has already been seen before, or initializes a new count for this anagram otherwise. Finally, it checks if there are more than 188 pairs of anagrams in the list by summing up the number of counts that are greater than 1. If the sum is less than or equal to 188, then there are at most 188 pairs of anagrams in the list, and the function returns true. Otherwise, if the sum is greater than 188, then there are more than 188 pairs of anagrams in the list, and the function returns false.