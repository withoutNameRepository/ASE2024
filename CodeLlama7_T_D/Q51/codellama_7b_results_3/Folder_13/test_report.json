{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_13_3.py::test_list_of_strings_of_length_two", "location": ["tests51_13_3.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_13_3.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014265699428506196, "start": 1700277732.805805, "stop": 1700277732.8059483, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "83982d8de67a4f20836ef3d2fd9c2ff5", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_13_3.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_13_3.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_13_3.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010946401744149625, "start": 1700277732.8057346, "stop": 1700277732.8058445, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "83982d8de67a4f20836ef3d2fd9c2ff5", "node": "<WorkerController gw1>"}
{"nodeid": "tests51_13_3.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_13_3.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_13_3.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama/Q51/codellama_7b_results_3/Folder_13/generated_answer.py", "lineno": 10, "message": "TypeError: unhashable type: 'list'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_7b_results_3/Folder_13/tests51_13_3.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(str_list):", "        # Check if the list is empty", "        if not str_list:", "            return False", "    ", "        # Get a list of all possible anagrams", "        anagram_set = set()", "        for s in str_list:", ">           anagram_set.add(sorted(s.lower()))", "E           TypeError: unhashable type: 'list'"], "reprfuncargs": {"args": [["str_list", "['aaaa', 'aaaa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_7b_results_3/Folder_13/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_7b_results_3/Folder_13/tests51_13_3.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(str_list):", "        # Check if the list is empty", "        if not str_list:", "            return False", "    ", "        # Get a list of all possible anagrams", "        anagram_set = set()", "        for s in str_list:", ">           anagram_set.add(sorted(s.lower()))", "E           TypeError: unhashable type: 'list'"], "reprfuncargs": {"args": [["str_list", "['aaaa', 'aaaa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q51/codellama_7b_results_3/Folder_13/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama/Q51/codellama_7b_results_3/Folder_13/generated_answer.py", "lineno": 10, "message": "TypeError: unhashable type: 'list'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.667599806562066e-05, "start": 1700277732.8060167, "stop": 1700277732.8061137, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "83982d8de67a4f20836ef3d2fd9c2ff5", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
