 ```
def if_contains_anagrams(word_list):
    # Create a counter for the number of anagrams in the list
    anagram_count = 0

    # Iterate over each word in the list
    for word in word_list:
        # Check if the word is an anagram of itself
        if len(word) >= 3 and sorted(word.lower()) == sorted(word):
            anagram_count += 1

    # Return true if there are at most 210 pairs of anagrams in the list, otherwise return false
    return anagram_count <= 210
```
Explanation:
This function takes a list of strings as input and returns a boolean value indicating whether or not there are at most 210 pairs of anagrams in the list.
The function first creates a counter variable called `anagram_count` to keep track of the number of anagrams in the list. Then, it iterates over each word in the list using a for loop.
Inside the loop, the function checks if the current word is an anagram of itself by comparing the sorted lowercase versions of the words. If the condition is met, the `anagram_count` variable is incremented by 1 to keep track of the number of anagrams in the list.
Finally, the function returns the value of `anagram_count` compared to 210 using a conditional statement. If there are at most 210 pairs of anagrams in the list, the function will return `True`. Otherwise, it will return `False`.