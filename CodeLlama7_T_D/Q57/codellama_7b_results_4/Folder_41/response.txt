 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize a list to store the submatrices
    submatrices = []

    # Loop through each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop through each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a list to store the elements of the submatrix
            submatrix = []

            # Calculate the starting row and column index for the submatrix
            start_row = i - 2
            if start_row < 0:
                start_row = 0

            start_col = j - 2
            if start_col < 0:
                start_col = 0

            # Calculate the ending row and column index for the submatrix
            end_row = i + 3
            if end_row > matrix.shape[0]:
                end_row = matrix.shape[0]

            end_col = j + 3
            if end_col > matrix.shape[1]:
                end_col = matrix.shape[1]

            # Calculate the sum of the elements in the submatrix
            submatrix_sum = np.sum(matrix[start_row:end_row, start_col:end_col])

            # Check if the submatrix sum equals -26
            if submatrix_sum == -26:
                # Add the submatrix to the list of submatrices
                submatrices.append(submatrix)

    # Return the list of submatrices that have a sum equal to -26
    return submatrices
```