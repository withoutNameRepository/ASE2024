 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize the output list
    submatrices = []

    # Iterate over all possible submatrix sizes
    for size in range(1, len(matrix) + 1):
        # Iterate over all starting positions of a submatrix
        for i in range(len(matrix)):
            for j in range(i, len(matrix[0])):
                # Calculate the sum of the current submatrix
                sum = np.sum(matrix[i:i + size, j:j + size])
                # If the sum is equal to 56, add the submatrix to the output list
                if sum == 56:
                    submatrices.append((i, i + size - 1, j, j + size - 1)))
    return submatrices

# Test the function with a simple example
matrix = np.array([[1, 2], [3, 4]])
submatrices = submatrix_with_particular_sum(matrix)
#print(submatrices)
```