 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the submatrices
    submatrices = []

    # Loop through each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop through each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a variable to store the sum of the submatrix
            submatrix_sum = 0

            # Loop through each element of the submatrix
            for row in range(i, i + 2):
                for col in range(j, j + 2):
                    # Add the current element to the sum of the submatrix
                    submatrix_sum += matrix[row][col]

                    # If the sum of the submatrix is equal to -452, add it to the list of submatrices and break out of the inner loops
                    if submatrix_sum == -452:
                        submatrices.append(matrix[i:i + 2, j:j + 2])
                        break

            # If a submatrix with the sum of -452 is found, break out of the outer loops
            if len(submatrices) > 0:
                break

    # Return the list of all submatrices with the sum of -452
    return submatrices

# Test the function with a sample matrix
matrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
#print(submatrix_with_particular_sum(matrix))
```