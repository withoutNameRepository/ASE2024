 ```
import numpy as np
def submatrix_with_particular_sum(matrix):
    # Initialize a list to store the submatrices
    submatrices = []

    # Loop over each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop over each column of the matrix
        for j in range(matrix.shape[1]):
            # Extract the submatrix from the original matrix
            submatrix = matrix[i:, j:]
            # Check if the sum of all integers in the submatrix is equal to -65
            if np.sum(submatrix) == -65:
                # If it is, add the submatrix to the list of submatrices
                submatrices.append(submatrix)

    # Return the list of submatrices that have a sum of all integers equal to -65, or an empty list if no such submatrix is found.
    return submatrices

# Test the function with a sample matrix
matrix = np.array([[10, 20, 30], [40, 50, 60]])
submatrices = submatrix_with_particular_sum(matrix)
#print(submatrices)
```