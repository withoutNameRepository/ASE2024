 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize a list to store the submatrices with the desired sum
    submatrices = []

    # Iterate over each row of the matrix
    for i in range(matrix.shape[0]):
        # Iterate over each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a variable to store the sum of the submatrix
            submatrix_sum = 0

            # Iterate over each element of the submatrix
            for row in range(i, i + 3):
                for col in range(j, j + 3):
                    # Add the current element to the sum of the submatrix
                    submatrix_sum += matrix[row][col]

                    # If the sum of the submatrix is equal to 0, add it to the list of submatrices and break out of the inner loop
                    if submatrix_sum == 0:
                        submatrices.append((i, j))
                        break

            # If the sum of the submatrix is not equal to 0, continue iterating over the elements of the matrix
            else:
                continue

            # Break out of the outer loop if a submatrix with the desired sum has been found
            break

    # Return an empty list if no such submatrix was found
    return submatrices
```