 Here's a possible implementation of the `submatrix_with_particular_sum` function in Python:
```python
import numpy as np

def submatrix_with_particular_sum(matrix, sum):
    # Initialize an empty list to store the submatrices
    submatrices = []
    # Loop over each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop over each column of the matrix
        for j in range(matrix.shape[1]):
            # Create a copy of the original matrix
            submatrix = matrix.copy()
            # Remove all elements from the row and column i
            submatrix = np.delete(submatrix, i, 0)
            submatrix = np.delete(submatrix, j, 1)
            # Check if the sum of all elements in the submatrix is equal to the target sum
            if np.sum(submatrix) == sum:
                # If so, add the submatrix to the list of submatrices
                submatrices.append(submatrix)
    return submatrices
```
The `submatrix_with_particular_sum` function takes two arguments: a two-dimensional numpy matrix of integers and an integer representing the target sum. The function returns a list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals the target sum. If no such submatrix is found, the function returns an empty list.
Here's an example usage of the `submatrix_with_particular_sum` function:
```python
# Create a 3x4 matrix with integer elements
matrix = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
# Call the submatrix_with_particular_sum function with a target sum of -47
submatrices = submatrix_with_particular_sum(matrix, -47)
#print(submatrices)
```
In this example, we create a 3x4 matrix with integer elements and then call the `submatrix_with_particular_sum` function with a target sum of -47. The function returns a list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals the target sum. In this case, there is only one submatrix that meets the criteria, which is the 2x2 matrix located at row index 1 and column index 2. The `submatrix_with_particular_sum` function returns a list containing this submatrix.