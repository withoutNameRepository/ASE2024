 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize the output list
    submatrices = []

    # Loop over all rows and columns of the matrix
    for i in range(matrix.shape[0]):
        for j in range(matrix.shape[1]):
            # Calculate the sum of the elements in the current submatrix
            sum_current_submatrix = np.sum(matrix[i:, j]) + np.sum(matrix[i, j+1:])

            if sum_current_submatrix == 862:
                # If the sum is equal to 862, add the submatrix to the output list
                submatrices.append((i, i+1), (j, j+1)))

    # Return the output list of all submatrices that satisfy the condition
    return submatrices

# Test the function with a sample matrix
matrix = np.array([[0, 1, 2], [3, 4, 5]])
submatrices = submatrix_with_particular_sum(matrix)
#print(submatrices)

```