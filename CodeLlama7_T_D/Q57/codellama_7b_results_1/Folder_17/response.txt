 Here's a solution in Python using NumPy:
```
import numpy as np

def submatrix_with_particular_sum(matrix):
    rows, cols = matrix.shape
    submatrices = []
    for i in range(rows - 1):
        for j in range(cols - 1):
            if sum(matrix[i:i+2, j:j+2]) == 398:
                submatrices.append(matrix[i:i+2, j:j+2])
    return submatrices

# Test the function with a sample matrix
matrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
# (modified) submatrices = submatrix_with_particular_sum(matrix)
#print(submatrices)
```
This code generates all possible 2x2 submatrices of the input matrix and checks if their sum is equal to 398. If a match is found, the corresponding submatrix is appended to the `submatrices` list. The function then returns this list of all matching submatrices.