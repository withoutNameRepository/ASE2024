 Here's a possible implementation of the `submatrix_with_particular_sum` function:
```python
import numpy as np

def submatrix_with_particular_sum(matrix, sum):
    # Initialize an empty list to store the submatrices
    submatrices = []

    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            # Get a reference to the current element
            element = matrix[i][j]

            if element == sum:
                # If the element is equal to the sum, add the submatrix to the list
                submatrices.append(matrix[i:i+1, j:j+1])

    return submatrices
```
This implementation uses two nested loops to iterate over the elements of the input matrix. For each element, it checks if its value is equal to the `sum` parameter, and if so, adds a 1x1 submatrix containing that element to the list of submatrices. Finally, it returns the list of submatrices.