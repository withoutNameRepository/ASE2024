 ```
import numpy as np

def submatrix_with_particular_sum(matrix):
    # Initialize an empty list to store the submatrices
    submatrices = []
    # Loop through each row of the matrix
    for i in range(matrix.shape[0]):
        # Loop through each column of the matrix
        for j in range(matrix.shape[1]):
            # Initialize a counter variable to keep track of the sum of elements in the submatrix
            count = 0
            # Loop through each element of the submatrix
            for row in range(i, i + 2):
                for col in range(j, j + 2):
                    # Add the element to the counter variable if it is within the bounds of the matrix
                    if row < matrix.shape[0] and col < matrix.shape[1]:
                        count += matrix[row][col]
            # If the sum of elements in the submatrix equals -27, add it to the list of submatrices
            if count == -27:
                submatrices.append([i, j])
    # Return the list of all submatrices that satisfy the condition
    return submatrices
```