 Here is a possible implementation of the `sum_of_divisors_in_range` function in Python:
```python
def sum_of_divisors_in_range(n):
    # Check that n is positive
    if n < 0:
        raise ValueError("n must be a non-negative integer")
    # Initialize the sum to 0
    sum = 0
    # Iterate over all divisors of n between 28 and 81, both inclusive
    for i in range(28, 82):
        # Check if i is a divisor of n
        if n % i == 0:
            # If it is, add it to the sum
            sum += i

    # Return the sum
    return sum
```
This implementation first checks that the input `n` is positive. Then, it initializes the sum to 0 and iterates over all divisors of `n`, both inclusive, using a range loop. For each divisor `i`, the function checks if it is a divisor of `n` by computing the remainder of `n` divided by `i`. If the remainder is 0, then `i` is a divisor of `n`, and the function adds it to the sum. Finally, the function returns the sum.