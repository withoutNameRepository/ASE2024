{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018803199054673314, "start": 1700088743.0265465, "stop": 1700088743.0267353, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019778301066253334, "start": 1700088743.0270152, "stop": 1700088743.0272136, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.80909971985966e-05, "start": 1700088743.0275304, "stop": 1700088743.0276291, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011152199294883758, "start": 1700088743.028234, "stop": 1700088743.028346, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_horizontal_matrix", "location": ["tests58_80_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015287399583030492, "start": 1700088743.0436974, "stop": 1700088743.043851, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 89 == 1\n +  where 89 = submatrix_with_n_numbers(matrix([[  92,    7],\\n        [  10,   19],\\n        [   3,   30],\\n        [  41,  -23],\\n        [ -24,   94],\\n        [  29,   11],\\n        [ -55,   24],\\n        [  36,   36],\\n        [  84,  -89],\\n        [  49,    3],\\n        [ -16,   41],\\n        [  77, -100],\\n        [ -28,  -70],\\n        [ -25,   -1],\\n        [ -50,  -33],\\n        [  -2,   92],\\n        [  73,   10],\\n        [ -91,  -58],\\n        [ -36,  -11],\\n        [  51,   83],\\n        [ -31,   47],\\n        [ -65,  -54],\\n        [  81,   91],\\n        [  94,   54],\\n        [  47,   -8],\\n        [  38,  -48],\\n        [  95,  100],\\n        [   3,   92],\\n        [  54,  -37],\\n        [  78,  -81],\\n        [ -75,  -19],\\n        [ -99,  -56],\\n        [   3,   63],\\n        [  65,   51],\\n        [ -44,   42],\\n        [ -23,   82],\\n        [  66,   14],\\n        [  76,   67],\\n        [  38,   57],\\n        [ -21,   24],\\n        [   8,  -65],\\n        [  45,  -32],\\n        [ -97,   83],\\n        [  67,  -95],\\n        [  80,  -98],\\n        [ -88,   85],\\n        [  47,  -61],\\n        [ -23,   -8],\\n        [  82,   -7],\\n        [  91,   98],\\n        [ -79,   14],\\n        [ -24,   23],\\n        [ -65,   79],\\n        [ -48,  -84],\\n        [ -33,  -73],\\n        [ -29,   46],\\n        [  15,   65],\\n        [  53,   51],\\n        [ -66,  -86],\\n        [  58,    0],\\n        [ -65,   68],\\n        [  98,   18],\\n        [  58,  -15],\\n        [  35,    8],\\n        [  25,   51],\\n        [ -81,    9],\\n        [  82,   42],\\n        [ -99,   -8],\\n        [ -10,   64],\\n        [  -9,  -37],\\n        [  24,  -65],\\n        [ -22,  -74],\\n        [  63,   25],\\n        [  -5,   35],\\n        [  12,  -63],\\n        [ -71,  -78],\\n        [  42,   76],\\n        [ -84,   80],\\n        [ -28,  -97],\\n        [  37,  -67],\\n        [ -67,   37],\\n        [  52,  -73],\\n        [  77,   -4],\\n        [  59,  -47],\\n        [  86,   21],\\n        [  82,   74],\\n        [ -48,  -26],\\n        [ -43,   51],\\n        [ -16,   80],\\n        [  63,   27]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 89 == 1", "E        +  where 89 = submatrix_with_n_numbers(matrix([[  92,    7],\\n        [  10,   19],\\n        [   3,   30],\\n        [  41,  -23],\\n        [ -24,   94],\\n        [  29,   11],\\n        [ -55,   24],\\n        [  36,   36],\\n        [  84,  -89],\\n        [  49,    3],\\n        [ -16,   41],\\n        [  77, -100],\\n        [ -28,  -70],\\n        [ -25,   -1],\\n        [ -50,  -33],\\n        [  -2,   92],\\n        [  73,   10],\\n        [ -91,  -58],\\n        [ -36,  -11],\\n        [  51,   83],\\n        [ -31,   47],\\n        [ -65,  -54],\\n        [  81,   91],\\n        [  94,   54],\\n        [  47,   -8],\\n        [  38,  -48],\\n        [  95,  100],\\n        [   3,   92],\\n        [  54,  -37],\\n        [  78,  -81],\\n        [ -75,  -19],\\n        [ -99,  -56],\\n        [   3,   63],\\n        [  65,   51],\\n        [ -44,   42],\\n        [ -23,   82],\\n        [  66,   14],\\n        [  76,   67],\\n        [  38,   57],\\n        [ -21,   24],\\n        [   8,  -65],\\n        [  45,  -32],\\n        [ -97,   83],\\n        [  67,  -95],\\n        [  80,  -98],\\n        [ -88,   85],\\n        [  47,  -61],\\n        [ -23,   -8],\\n        [  82,   -7],\\n        [  91,   98],\\n        [ -79,   14],\\n        [ -24,   23],\\n        [ -65,   79],\\n        [ -48,  -84],\\n        [ -33,  -73],\\n        [ -29,   46],\\n        [  15,   65],\\n        [  53,   51],\\n        [ -66,  -86],\\n        [  58,    0],\\n        [ -65,   68],\\n        [  98,   18],\\n        [  58,  -15],\\n        [  35,    8],\\n        [  25,   51],\\n        [ -81,    9],\\n        [  82,   42],\\n        [ -99,   -8],\\n        [ -10,   64],\\n        [  -9,  -37],\\n        [  24,  -65],\\n        [ -22,  -74],\\n        [  63,   25],\\n        [  -5,   35],\\n        [  12,  -63],\\n        [ -71,  -78],\\n        [  42,   76],\\n        [ -84,   80],\\n        [ -28,  -97],\\n        [  37,  -67],\\n        [ -67,   37],\\n        [  52,  -73],\\n        [  77,   -4],\\n        [  59,  -47],\\n        [  86,   21],\\n        [  82,   74],\\n        [ -48,  -26],\\n        [ -43,   51],\\n        [ -16,   80],\\n        [  63,   27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 89 == 1", "E        +  where 89 = submatrix_with_n_numbers(matrix([[  92,    7],\\n        [  10,   19],\\n        [   3,   30],\\n        [  41,  -23],\\n        [ -24,   94],\\n        [  29,   11],\\n        [ -55,   24],\\n        [  36,   36],\\n        [  84,  -89],\\n        [  49,    3],\\n        [ -16,   41],\\n        [  77, -100],\\n        [ -28,  -70],\\n        [ -25,   -1],\\n        [ -50,  -33],\\n        [  -2,   92],\\n        [  73,   10],\\n        [ -91,  -58],\\n        [ -36,  -11],\\n        [  51,   83],\\n        [ -31,   47],\\n        [ -65,  -54],\\n        [  81,   91],\\n        [  94,   54],\\n        [  47,   -8],\\n        [  38,  -48],\\n        [  95,  100],\\n        [   3,   92],\\n        [  54,  -37],\\n        [  78,  -81],\\n        [ -75,  -19],\\n        [ -99,  -56],\\n        [   3,   63],\\n        [  65,   51],\\n        [ -44,   42],\\n        [ -23,   82],\\n        [  66,   14],\\n        [  76,   67],\\n        [  38,   57],\\n        [ -21,   24],\\n        [   8,  -65],\\n        [  45,  -32],\\n        [ -97,   83],\\n        [  67,  -95],\\n        [  80,  -98],\\n        [ -88,   85],\\n        [  47,  -61],\\n        [ -23,   -8],\\n        [  82,   -7],\\n        [  91,   98],\\n        [ -79,   14],\\n        [ -24,   23],\\n        [ -65,   79],\\n        [ -48,  -84],\\n        [ -33,  -73],\\n        [ -29,   46],\\n        [  15,   65],\\n        [  53,   51],\\n        [ -66,  -86],\\n        [  58,    0],\\n        [ -65,   68],\\n        [  98,   18],\\n        [  58,  -15],\\n        [  35,    8],\\n        [  25,   51],\\n        [ -81,    9],\\n        [  82,   42],\\n        [ -99,   -8],\\n        [ -10,   64],\\n        [  -9,  -37],\\n        [  24,  -65],\\n        [ -22,  -74],\\n        [  63,   25],\\n        [  -5,   35],\\n        [  12,  -63],\\n        [ -71,  -78],\\n        [  42,   76],\\n        [ -84,   80],\\n        [ -28,  -97],\\n        [  37,  -67],\\n        [ -67,   37],\\n        [  52,  -73],\\n        [  77,   -4],\\n        [  59,  -47],\\n        [  86,   21],\\n        [  82,   74],\\n        [ -48,  -26],\\n        [ -43,   51],\\n        [ -16,   80],\\n        [  63,   27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 89 == 1\n +  where 89 = submatrix_with_n_numbers(matrix([[  92,    7],\\n        [  10,   19],\\n        [   3,   30],\\n        [  41,  -23],\\n        [ -24,   94],\\n        [  29,   11],\\n        [ -55,   24],\\n        [  36,   36],\\n        [  84,  -89],\\n        [  49,    3],\\n        [ -16,   41],\\n        [  77, -100],\\n        [ -28,  -70],\\n        [ -25,   -1],\\n        [ -50,  -33],\\n        [  -2,   92],\\n        [  73,   10],\\n        [ -91,  -58],\\n        [ -36,  -11],\\n        [  51,   83],\\n        [ -31,   47],\\n        [ -65,  -54],\\n        [  81,   91],\\n        [  94,   54],\\n        [  47,   -8],\\n        [  38,  -48],\\n        [  95,  100],\\n        [   3,   92],\\n        [  54,  -37],\\n        [  78,  -81],\\n        [ -75,  -19],\\n        [ -99,  -56],\\n        [   3,   63],\\n        [  65,   51],\\n        [ -44,   42],\\n        [ -23,   82],\\n        [  66,   14],\\n        [  76,   67],\\n        [  38,   57],\\n        [ -21,   24],\\n        [   8,  -65],\\n        [  45,  -32],\\n        [ -97,   83],\\n        [  67,  -95],\\n        [  80,  -98],\\n        [ -88,   85],\\n        [  47,  -61],\\n        [ -23,   -8],\\n        [  82,   -7],\\n        [  91,   98],\\n        [ -79,   14],\\n        [ -24,   23],\\n        [ -65,   79],\\n        [ -48,  -84],\\n        [ -33,  -73],\\n        [ -29,   46],\\n        [  15,   65],\\n        [  53,   51],\\n        [ -66,  -86],\\n        [  58,    0],\\n        [ -65,   68],\\n        [  98,   18],\\n        [  58,  -15],\\n        [  35,    8],\\n        [  25,   51],\\n        [ -81,    9],\\n        [  82,   42],\\n        [ -99,   -8],\\n        [ -10,   64],\\n        [  -9,  -37],\\n        [  24,  -65],\\n        [ -22,  -74],\\n        [  63,   25],\\n        [  -5,   35],\\n        [  12,  -63],\\n        [ -71,  -78],\\n        [  42,   76],\\n        [ -84,   80],\\n        [ -28,  -97],\\n        [  37,  -67],\\n        [ -67,   37],\\n        [  52,  -73],\\n        [  77,   -4],\\n        [  59,  -47],\\n        [  86,   21],\\n        [  82,   74],\\n        [ -48,  -26],\\n        [ -43,   51],\\n        [ -16,   80],\\n        [  63,   27]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014244060002965853, "start": 1700088743.028482, "stop": 1700088743.029907, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dc879c86a2674f52b0329cc4e4741311", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
