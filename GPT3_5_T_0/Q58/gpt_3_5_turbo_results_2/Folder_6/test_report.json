{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003931889950763434, "start": 1700088378.2778432, "stop": 1700088378.278237, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005453720077639446, "start": 1700088378.2785065, "stop": 1700088378.2790523, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000472316998639144, "start": 1700088378.2793756, "stop": 1700088378.2798483, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005289449909469113, "start": 1700088378.280264, "stop": 1700088378.2807934, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_horizontal_matrix", "location": ["tests58_6_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013205100549384952, "start": 1700088378.2899747, "stop": 1700088378.2901075, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 26,  95],\\n        [-46,  77],\\n        [ 71,  11],\\n        [ 46,  23],\\n        [-94,  14],\\n        [-42, -59],\\n        [ 64,  90],\\n        [-21, -88],\\n        [ -1, -74],\\n        [-98,  -2],\\n        [-68,  11],\\n        [ 46, -21],\\n        [-50, -13],\\n        [ -1, -17],\\n        [-71,   0],\\n        [-38, -24],\\n        [-31,  70],\\n        [-68, -27],\\n        [ 89,  82],\\n        [ 27,  82],\\n        [ 17,  80],\\n        [-56,  37],\\n        [ 95,  85],\\n        [ 67,  60],\\n        [  0,  91],\\n        [ 16,  34],\\n        [ 83, -49],\\n        [-89, -37],\\n        [ 29, -89],\\n        [ 17, -61],\\n        [ 80,  -1],\\n        [ 61, -85],\\n        [ 75, 100],\\n        [100,  72],\\n        [-25,  91],\\n        [-15,  43],\\n        [ 10,  72],\\n        [ 88, -72],\\n        [-75, -31],\\n        [ 43,  57],\\n        [ 45, -81],\\n        [  2, -44],\\n        [ 97,  -3],\\n        [ 68,  98],\\n        [  1, -93],\\n        [ 79, -43],\\n        [-57, -29],\\n        [ 50,  -9],\\n        [ 54,  87],\\n        [-27, -67],\\n        [ -8, -81],\\n        [ 51, -27],\\n        [ 92,  51],\\n        [-21, -26],\\n        [-99,  77],\\n        [ 29, -11],\\n        [ 61,  50],\\n        [-83,   0],\\n        [-72,  85],\\n        [-21, -27],\\n        [ 46,  26]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 26,  95],\\n        [-46,  77],\\n        [ 71,  11],\\n        [ 46,  23],\\n        [-94,  14],\\n        [-42, -59],\\n        [ 64,  90],\\n        [-21, -88],\\n        [ -1, -74],\\n        [-98,  -2],\\n        [-68,  11],\\n        [ 46, -21],\\n        [-50, -13],\\n        [ -1, -17],\\n        [-71,   0],\\n        [-38, -24],\\n        [-31,  70],\\n        [-68, -27],\\n        [ 89,  82],\\n        [ 27,  82],\\n        [ 17,  80],\\n        [-56,  37],\\n        [ 95,  85],\\n        [ 67,  60],\\n        [  0,  91],\\n        [ 16,  34],\\n        [ 83, -49],\\n        [-89, -37],\\n        [ 29, -89],\\n        [ 17, -61],\\n        [ 80,  -1],\\n        [ 61, -85],\\n        [ 75, 100],\\n        [100,  72],\\n        [-25,  91],\\n        [-15,  43],\\n        [ 10,  72],\\n        [ 88, -72],\\n        [-75, -31],\\n        [ 43,  57],\\n        [ 45, -81],\\n        [  2, -44],\\n        [ 97,  -3],\\n        [ 68,  98],\\n        [  1, -93],\\n        [ 79, -43],\\n        [-57, -29],\\n        [ 50,  -9],\\n        [ 54,  87],\\n        [-27, -67],\\n        [ -8, -81],\\n        [ 51, -27],\\n        [ 92,  51],\\n        [-21, -26],\\n        [-99,  77],\\n        [ 29, -11],\\n        [ 61,  50],\\n        [-83,   0],\\n        [-72,  85],\\n        [-21, -27],\\n        [ 46,  26]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 26,  95],\\n        [-46,  77],\\n        [ 71,  11],\\n        [ 46,  23],\\n        [-94,  14],\\n        [-42, -59],\\n        [ 64,  90],\\n        [-21, -88],\\n        [ -1, -74],\\n        [-98,  -2],\\n        [-68,  11],\\n        [ 46, -21],\\n        [-50, -13],\\n        [ -1, -17],\\n        [-71,   0],\\n        [-38, -24],\\n        [-31,  70],\\n        [-68, -27],\\n        [ 89,  82],\\n        [ 27,  82],\\n        [ 17,  80],\\n        [-56,  37],\\n        [ 95,  85],\\n        [ 67,  60],\\n        [  0,  91],\\n        [ 16,  34],\\n        [ 83, -49],\\n        [-89, -37],\\n        [ 29, -89],\\n        [ 17, -61],\\n        [ 80,  -1],\\n        [ 61, -85],\\n        [ 75, 100],\\n        [100,  72],\\n        [-25,  91],\\n        [-15,  43],\\n        [ 10,  72],\\n        [ 88, -72],\\n        [-75, -31],\\n        [ 43,  57],\\n        [ 45, -81],\\n        [  2, -44],\\n        [ 97,  -3],\\n        [ 68,  98],\\n        [  1, -93],\\n        [ 79, -43],\\n        [-57, -29],\\n        [ 50,  -9],\\n        [ 54,  87],\\n        [-27, -67],\\n        [ -8, -81],\\n        [ 51, -27],\\n        [ 92,  51],\\n        [-21, -26],\\n        [-99,  77],\\n        [ 29, -11],\\n        [ 61,  50],\\n        [-83,   0],\\n        [-72,  85],\\n        [-21, -27],\\n        [ 46,  26]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 26,  95],\\n        [-46,  77],\\n        [ 71,  11],\\n        [ 46,  23],\\n        [-94,  14],\\n        [-42, -59],\\n        [ 64,  90],\\n        [-21, -88],\\n        [ -1, -74],\\n        [-98,  -2],\\n        [-68,  11],\\n        [ 46, -21],\\n        [-50, -13],\\n        [ -1, -17],\\n        [-71,   0],\\n        [-38, -24],\\n        [-31,  70],\\n        [-68, -27],\\n        [ 89,  82],\\n        [ 27,  82],\\n        [ 17,  80],\\n        [-56,  37],\\n        [ 95,  85],\\n        [ 67,  60],\\n        [  0,  91],\\n        [ 16,  34],\\n        [ 83, -49],\\n        [-89, -37],\\n        [ 29, -89],\\n        [ 17, -61],\\n        [ 80,  -1],\\n        [ 61, -85],\\n        [ 75, 100],\\n        [100,  72],\\n        [-25,  91],\\n        [-15,  43],\\n        [ 10,  72],\\n        [ 88, -72],\\n        [-75, -31],\\n        [ 43,  57],\\n        [ 45, -81],\\n        [  2, -44],\\n        [ 97,  -3],\\n        [ 68,  98],\\n        [  1, -93],\\n        [ 79, -43],\\n        [-57, -29],\\n        [ 50,  -9],\\n        [ 54,  87],\\n        [-27, -67],\\n        [ -8, -81],\\n        [ 51, -27],\\n        [ 92,  51],\\n        [-21, -26],\\n        [-99,  77],\\n        [ 29, -11],\\n        [ 61,  50],\\n        [-83,   0],\\n        [-72,  85],\\n        [-21, -27],\\n        [ 46,  26]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012858620029874146, "start": 1700088378.280933, "stop": 1700088378.2822192, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8aba532a2b284eaa8126650782ebaa6b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
