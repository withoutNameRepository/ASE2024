{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_3_1.py::test_horizontal_matrix", "location": ["tests58_3_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012419800623320043, "start": 1700088297.811542, "stop": 1700088297.8116667, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000426992992288433, "start": 1700088297.8115582, "stop": 1700088297.811986, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004670549969887361, "start": 1700088297.8125424, "stop": 1700088297.8130102, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005000430101063102, "start": 1700088297.8133159, "stop": 1700088297.8138163, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_having_54_integers", "location": ["tests58_3_1.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005381919909268618, "start": 1700088297.8142316, "stop": 1700088297.8147705, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_having_54_integers", "location": ["tests58_3_1.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  66,    0],\\n        [  83,  -13],\\n        [  71,  -51],\\n        [  76,  -31],\\n        [ -48,  -64],\\n        [  65,  -72],\\n        [ -86,   76],\\n        [ -49, -100],\\n        [  19,  -91],\\n        [  16,   62],\\n        [ -24,  -66],\\n        [  95,   25],\\n        [ -10,  -26],\\n        [  66,  -48],\\n        [  84,  -13],\\n        [  -8,  -79],\\n        [ -12,   -1],\\n        [  49,  -47],\\n        [ -24,  -78],\\n        [ -71,  -41],\\n        [ -26,   17],\\n        [  16,  -69],\\n        [ -59,  -31],\\n        [ -28,  -52],\\n        [  16,  -78],\\n        [  86,    4],\\n        [ -26,  -51]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  66,    0],\\n        [  83,  -13],\\n        [  71,  -51],\\n        [  76,  -31],\\n        [ -48,  -64],\\n        [  65,  -72],\\n        [ -86,   76],\\n        [ -49, -100],\\n        [  19,  -91],\\n        [  16,   62],\\n        [ -24,  -66],\\n        [  95,   25],\\n        [ -10,  -26],\\n        [  66,  -48],\\n        [  84,  -13],\\n        [  -8,  -79],\\n        [ -12,   -1],\\n        [  49,  -47],\\n        [ -24,  -78],\\n        [ -71,  -41],\\n        [ -26,   17],\\n        [  16,  -69],\\n        [ -59,  -31],\\n        [ -28,  -52],\\n        [  16,  -78],\\n        [  86,    4],\\n        [ -26,  -51]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  66,    0],\\n        [  83,  -13],\\n        [  71,  -51],\\n        [  76,  -31],\\n        [ -48,  -64],\\n        [  65,  -72],\\n        [ -86,   76],\\n        [ -49, -100],\\n        [  19,  -91],\\n        [  16,   62],\\n        [ -24,  -66],\\n        [  95,   25],\\n        [ -10,  -26],\\n        [  66,  -48],\\n        [  84,  -13],\\n        [  -8,  -79],\\n        [ -12,   -1],\\n        [  49,  -47],\\n        [ -24,  -78],\\n        [ -71,  -41],\\n        [ -26,   17],\\n        [  16,  -69],\\n        [ -59,  -31],\\n        [ -28,  -52],\\n        [  16,  -78],\\n        [  86,    4],\\n        [ -26,  -51]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  66,    0],\\n        [  83,  -13],\\n        [  71,  -51],\\n        [  76,  -31],\\n        [ -48,  -64],\\n        [  65,  -72],\\n        [ -86,   76],\\n        [ -49, -100],\\n        [  19,  -91],\\n        [  16,   62],\\n        [ -24,  -66],\\n        [  95,   25],\\n        [ -10,  -26],\\n        [  66,  -48],\\n        [  84,  -13],\\n        [  -8,  -79],\\n        [ -12,   -1],\\n        [  49,  -47],\\n        [ -24,  -78],\\n        [ -71,  -41],\\n        [ -26,   17],\\n        [  16,  -69],\\n        [ -59,  -31],\\n        [ -28,  -52],\\n        [  16,  -78],\\n        [  86,    4],\\n        [ -26,  -51]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008700589969521388, "start": 1700088297.8149133, "stop": 1700088297.815784, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f5494030b7c14d3ba819a71149f88ca9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
