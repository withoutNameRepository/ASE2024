{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_1.py::test_horizontal_matrix", "location": ["tests58_35_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013612299517262727, "start": 1700088320.3875847, "stop": 1700088320.3877218, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018461000581737608, "start": 1700088320.387644, "stop": 1700088320.3878298, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002253909915452823, "start": 1700088320.3880975, "stop": 1700088320.3883235, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.441999671049416e-05, "start": 1700088320.3886077, "stop": 1700088320.3886926, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.414199692197144e-05, "start": 1700088320.389071, "stop": 1700088320.3891559, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 91, -88,  27,  35, -58,  21,  41,  21, -77,  67,  81,  29, -59,\\n          22, -36,  14, -80, -57, -99, -42, -18, -93,  28,  35, -99, -64,\\n         -52, -92,  17, -19,  -1,  87,  59,  -9, -70, -91, -67, -56,  64,\\n         -15,  61,  65,  40,  67,  37,  26,   6,  84,  33, -21,  38, -48,\\n           4,  18, -37, 100,  54,  13,  -1,  94, -47,  37, -89,  89,  44,\\n         -15, -77,  41,  84,  -7, -40,  -6, -89, -66,  27, -68, -48, -95,\\n          53, -83, -79,  67, -72,  88, -11,  15,  31,  44,  53, -76, -20,\\n         -67, -61,  66, -93,  75, -96,  74, -31, -49,  14,  81, -75, -71,\\n         -92,  89,  48,  10,  18, -73,  31]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 91, -88,  27,  35, -58,  21,  41,  21, -77,  67,  81,  29, -59,\\n          22, -36,  14, -80, -57, -99, -42, -18, -93,  28,  35, -99, -64,\\n         -52, -92,  17, -19,  -1,  87,  59,  -9, -70, -91, -67, -56,  64,\\n         -15,  61,  65,  40,  67,  37,  26,   6,  84,  33, -21,  38, -48,\\n           4,  18, -37, 100,  54,  13,  -1,  94, -47,  37, -89,  89,  44,\\n         -15, -77,  41,  84,  -7, -40,  -6, -89, -66,  27, -68, -48, -95,\\n          53, -83, -79,  67, -72,  88, -11,  15,  31,  44,  53, -76, -20,\\n         -67, -61,  66, -93,  75, -96,  74, -31, -49,  14,  81, -75, -71,\\n         -92,  89,  48,  10,  18, -73,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 91, -88,  27,  35, -58,  21,  41,  21, -77,  67,  81,  29, -59,\\n          22, -36,  14, -80, -57, -99, -42, -18, -93,  28,  35, -99, -64,\\n         -52, -92,  17, -19,  -1,  87,  59,  -9, -70, -91, -67, -56,  64,\\n         -15,  61,  65,  40,  67,  37,  26,   6,  84,  33, -21,  38, -48,\\n           4,  18, -37, 100,  54,  13,  -1,  94, -47,  37, -89,  89,  44,\\n         -15, -77,  41,  84,  -7, -40,  -6, -89, -66,  27, -68, -48, -95,\\n          53, -83, -79,  67, -72,  88, -11,  15,  31,  44,  53, -76, -20,\\n         -67, -61,  66, -93,  75, -96,  74, -31, -49,  14,  81, -75, -71,\\n         -92,  89,  48,  10,  18, -73,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 91, -88,  27,  35, -58,  21,  41,  21, -77,  67,  81,  29, -59,\\n          22, -36,  14, -80, -57, -99, -42, -18, -93,  28,  35, -99, -64,\\n         -52, -92,  17, -19,  -1,  87,  59,  -9, -70, -91, -67, -56,  64,\\n         -15,  61,  65,  40,  67,  37,  26,   6,  84,  33, -21,  38, -48,\\n           4,  18, -37, 100,  54,  13,  -1,  94, -47,  37, -89,  89,  44,\\n         -15, -77,  41,  84,  -7, -40,  -6, -89, -66,  27, -68, -48, -95,\\n          53, -83, -79,  67, -72,  88, -11,  15,  31,  44,  53, -76, -20,\\n         -67, -61,  66, -93,  75, -96,  74, -31, -49,  14,  81, -75, -71,\\n         -92,  89,  48,  10,  18, -73,  31]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006996209995122626, "start": 1700088320.389274, "stop": 1700088320.389974, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e2cd25602e744b8880dabc8b9104013f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
