{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_31_1.py::test_matrix_of_one_integer", "location": ["tests58_31_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004650129994843155, "start": 1700088317.1374545, "stop": 1700088317.1379209, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2807418c7a94f90b20e5ec4986a10e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_31_1.py::test_matrix_of_one_integer", "location": ["tests58_31_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005410349986050278, "start": 1700088317.1382055, "stop": 1700088317.1387472, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2807418c7a94f90b20e5ec4986a10e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_31_1.py::test_matrix_of_one_integer", "location": ["tests58_31_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005024820129619911, "start": 1700088317.1390448, "stop": 1700088317.1395478, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2807418c7a94f90b20e5ec4986a10e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_31_1.py::test_matrix_of_having_45_integers", "location": ["tests58_31_1.py", 28, "test_matrix_of_having_45_integers"], "keywords": {"test_matrix_of_having_45_integers": 1, "__wrapped__": 1, "tests58_31_1.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005483240092871711, "start": 1700088317.1399772, "stop": 1700088317.140526, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a2807418c7a94f90b20e5ec4986a10e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_31_1.py::test_matrix_of_having_45_integers", "location": ["tests58_31_1.py", 28, "test_matrix_of_having_45_integers"], "keywords": {"test_matrix_of_having_45_integers": 1, "__wrapped__": 1, "tests58_31_1.py": 1, "Folder_31": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_31/tests58_31_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -96, -64,  63,  69, -76,  62,  74,   9,  58,  89, -31,  76,\\n         -50,  64, -38,  -7,  11,  71, -90,  34, -33, -16,  23,  41,  97,\\n         -22, -87, -77,  76, -20,  94,  98, -40,  -5,  31, -36, -17,  24,\\n           4, -84,  91, -15,  56,  74]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_45_integers():", "        if 45 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(45 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(45)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -96, -64,  63,  69, -76,  62,  74,   9,  58,  89, -31,  76,\\n         -50,  64, -38,  -7,  11,  71, -90,  34, -33, -16,  23,  41,  97,\\n         -22, -87, -77,  76, -20,  94,  98, -40,  -5,  31, -36, -17,  24,\\n           4, -84,  91, -15,  56,  74]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_31/tests58_31_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_45_integers():", "        if 45 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(45 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(45)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -96, -64,  63,  69, -76,  62,  74,   9,  58,  89, -31,  76,\\n         -50,  64, -38,  -7,  11,  71, -90,  34, -33, -16,  23,  41,  97,\\n         -22, -87, -77,  76, -20,  94,  98, -40,  -5,  31, -36, -17,  24,\\n           4, -84,  91, -15,  56,  74]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_31/tests58_31_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_1/Folder_31/tests58_31_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -96, -64,  63,  69, -76,  62,  74,   9,  58,  89, -31,  76,\\n         -50,  64, -38,  -7,  11,  71, -90,  34, -33, -16,  23,  41,  97,\\n         -22, -87, -77,  76, -20,  94,  98, -40,  -5,  31, -36, -17,  24,\\n           4, -84,  91, -15,  56,  74]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000786276999861002, "start": 1700088317.1406665, "stop": 1700088317.1414533, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a2807418c7a94f90b20e5ec4986a10e8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
