{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_3.py::test_horizontal_matrix", "location": ["tests58_35_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013023200153838843, "start": 1700088490.0708387, "stop": 1700088490.0709696, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_35_3.py::test_matrix_of_one_integer", "location": ["tests58_35_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00043487099173944443, "start": 1700088490.0708623, "stop": 1700088490.0712981, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_3.py::test_matrix_of_one_integer", "location": ["tests58_35_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006651179865002632, "start": 1700088490.0716016, "stop": 1700088490.0722673, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_3.py::test_matrix_of_one_integer", "location": ["tests58_35_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004883239889750257, "start": 1700088490.0725985, "stop": 1700088490.0730872, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_3.py::test_matrix_of_having_111_integers", "location": ["tests58_35_3.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005269190005492419, "start": 1700088490.0735219, "stop": 1700088490.0740495, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_3.py::test_matrix_of_having_111_integers", "location": ["tests58_35_3.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_3.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_3/Folder_35/tests58_35_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32, -30,  86, -60,  35,  96,  16,  53, -85,   6,   3,  86, -63,\\n           2,  50, -39, -59,  58, -44, -22,  95, -15, -50, -52,  24,  87,\\n         -89, -34,  35, -75,  87,  48, -27,  38,  50, -56, -54, -72, -54,\\n         -89,  91, -50,  18,  93,  -5, -55,  21,  82,   8,  39,  61, -44,\\n         -83, -29,  93,  67,  15,  47,  28, -19,  97,  70, -19, -86,  20,\\n           3, -38,  11,  45, -45,  76, -88, -15,  37,  27,  -3, -31,   0,\\n          32, -72, -88,  37,  70,  45, -13,  75,  30,  94,  31, -23,  -9,\\n         -55, -56,  81,  25,   8,  89, -69, -21, -19,  97,   5, -97, -80,\\n         -60, -25, -10, -27,  -7, -36,  95]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-32, -30,  86, -60,  35,  96,  16,  53, -85,   6,   3,  86, -63,\\n           2,  50, -39, -59,  58, -44, -22,  95, -15, -50, -52,  24,  87,\\n         -89, -34,  35, -75,  87,  48, -27,  38,  50, -56, -54, -72, -54,\\n         -89,  91, -50,  18,  93,  -5, -55,  21,  82,   8,  39,  61, -44,\\n         -83, -29,  93,  67,  15,  47,  28, -19,  97,  70, -19, -86,  20,\\n           3, -38,  11,  45, -45,  76, -88, -15,  37,  27,  -3, -31,   0,\\n          32, -72, -88,  37,  70,  45, -13,  75,  30,  94,  31, -23,  -9,\\n         -55, -56,  81,  25,   8,  89, -69, -21, -19,  97,   5, -97, -80,\\n         -60, -25, -10, -27,  -7, -36,  95]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_3/Folder_35/tests58_35_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-32, -30,  86, -60,  35,  96,  16,  53, -85,   6,   3,  86, -63,\\n           2,  50, -39, -59,  58, -44, -22,  95, -15, -50, -52,  24,  87,\\n         -89, -34,  35, -75,  87,  48, -27,  38,  50, -56, -54, -72, -54,\\n         -89,  91, -50,  18,  93,  -5, -55,  21,  82,   8,  39,  61, -44,\\n         -83, -29,  93,  67,  15,  47,  28, -19,  97,  70, -19, -86,  20,\\n           3, -38,  11,  45, -45,  76, -88, -15,  37,  27,  -3, -31,   0,\\n          32, -72, -88,  37,  70,  45, -13,  75,  30,  94,  31, -23,  -9,\\n         -55, -56,  81,  25,   8,  89, -69, -21, -19,  97,   5, -97, -80,\\n         -60, -25, -10, -27,  -7, -36,  95]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_3/Folder_35/tests58_35_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q58/gpt_3_5_turbo_results_3/Folder_35/tests58_35_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32, -30,  86, -60,  35,  96,  16,  53, -85,   6,   3,  86, -63,\\n           2,  50, -39, -59,  58, -44, -22,  95, -15, -50, -52,  24,  87,\\n         -89, -34,  35, -75,  87,  48, -27,  38,  50, -56, -54, -72, -54,\\n         -89,  91, -50,  18,  93,  -5, -55,  21,  82,   8,  39,  61, -44,\\n         -83, -29,  93,  67,  15,  47,  28, -19,  97,  70, -19, -86,  20,\\n           3, -38,  11,  45, -45,  76, -88, -15,  37,  27,  -3, -31,   0,\\n          32, -72, -88,  37,  70,  45, -13,  75,  30,  94,  31, -23,  -9,\\n         -55, -56,  81,  25,   8,  89, -69, -21, -19,  97,   5, -97, -80,\\n         -60, -25, -10, -27,  -7, -36,  95]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010388379887444898, "start": 1700088490.0741913, "stop": 1700088490.0752308, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ec52407c79c544e6a61ac4782c50e446", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
