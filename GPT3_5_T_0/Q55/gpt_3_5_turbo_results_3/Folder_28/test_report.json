{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_28_3.py::test_list_of_several_same_number", "location": ["tests55_28_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010289200145052746, "start": 1700015277.3157034, "stop": 1700015277.3158066, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_list_of_single_number", "location": ["tests55_28_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010309200297342613, "start": 1700015277.315714, "stop": 1700015277.315817, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_28_3.py::test_list_of_single_number", "location": ["tests55_28_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012680800136877224, "start": 1700015277.3160024, "stop": 1700015277.3161294, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_28_3.py::test_list_of_single_number", "location": ["tests55_28_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.066400187090039e-05, "start": 1700015277.316344, "stop": 1700015277.3164253, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_28_3.py::test_list_of_several_same_number", "location": ["tests55_28_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003908930011675693, "start": 1700015277.315978, "stop": 1700015277.3163693, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_list_of_several_same_number", "location": ["tests55_28_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.003499922575429e-05, "start": 1700015277.3165698, "stop": 1700015277.3166401, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_28_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.891999899176881e-05, "start": 1700015277.3176687, "stop": 1700015277.317728, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_28_3.py::test_list_of_not_containing_number", "location": ["tests55_28_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.217500049388036e-05, "start": 1700015277.3179536, "stop": 1700015277.3180163, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_list_of_not_containing_number", "location": ["tests55_28_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.818799738539383e-05, "start": 1700015277.3181005, "stop": 1700015277.318169, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_list_of_not_containing_number", "location": ["tests55_28_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9710004532244056e-05, "start": 1700015277.3183105, "stop": 1700015277.3183606, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_return_elements_are_in_given_list", "location": ["tests55_28_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.655999848386273e-05, "start": 1700015277.3189, "stop": 1700015277.3189573, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_return_elements_are_in_given_list", "location": ["tests55_28_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.865199975436553e-05, "start": 1700015277.31903, "stop": 1700015277.319099, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_return_elements_are_in_given_list", "location": ["tests55_28_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.816200089408085e-05, "start": 1700015277.3192313, "stop": 1700015277.3192797, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_if_sublist_product_equals_number", "location": ["tests55_28_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.86989985499531e-05, "start": 1700015277.3197865, "stop": 1700015277.3198657, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_28_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_28_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_28_3.py": 1, "Folder_28": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_28/tests55_28_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f43efc0d000>([85])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f43efc0d000>([1, 85])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f43efc0d000>([85, 1])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 85, 1, 85, 1, 85]", "        result = lists_with_product_equal_n(input_list)", "        if 85 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 85 == 1:", "            assert result.count([85]) == 6 and result.count([1, 85]) == 6 and result.count([85, 1]) == 6 and result.count([1, 85, 1]) == 6", "        else:", ">           assert result.count([85]) == 3 and result.count([1, 85]) == 3 and result.count([85, 1]) == 3 and result.count([1, 85, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f43efc0d000>([85])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f43efc0d000>([1, 85])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f43efc0d000>([85, 1])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_28/tests55_28_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 85, 1, 85, 1, 85]", "        result = lists_with_product_equal_n(input_list)", "        if 85 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 85 == 1:", "            assert result.count([85]) == 6 and result.count([1, 85]) == 6 and result.count([85, 1]) == 6 and result.count([1, 85, 1]) == 6", "        else:", ">           assert result.count([85]) == 3 and result.count([1, 85]) == 3 and result.count([85, 1]) == 3 and result.count([1, 85, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f43efc0d000>([85])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f43efc0d000>([1, 85])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f43efc0d000>([85, 1])", "E            +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_28/tests55_28_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_28/tests55_28_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f43efc0d000>([85])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f43efc0d000>([1, 85])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f43efc0d000>([85, 1])\n +    where <built-in method count of list object at 0x7f43efc0d000> = [[1, 85], [1, 85, 1], [85], [85, 1], [1, 85], [1, 85, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002697140007512644, "start": 1700015277.317833, "stop": 1700015277.3181033, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0f891f4de7c64e329c74e392e3d2d286", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
