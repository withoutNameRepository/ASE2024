{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_63_3.py::test_list_of_several_same_number", "location": ["tests55_63_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.899899694370106e-05, "start": 1700015302.3804066, "stop": 1700015302.3804958, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_list_of_single_number", "location": ["tests55_63_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.332800254924223e-05, "start": 1700015302.380261, "stop": 1700015302.380355, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_3.py::test_list_of_single_number", "location": ["tests55_63_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.451299800071865e-05, "start": 1700015302.380535, "stop": 1700015302.3806195, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_3.py::test_list_of_single_number", "location": ["tests55_63_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.095399632817134e-05, "start": 1700015302.3808303, "stop": 1700015302.3809016, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_3.py::test_list_of_several_same_number", "location": ["tests55_63_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004754840047098696, "start": 1700015302.3806446, "stop": 1700015302.3811204, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_list_of_several_same_number", "location": ["tests55_63_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9541998780332506e-05, "start": 1700015302.3812907, "stop": 1700015302.3813508, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.217500049388036e-05, "start": 1700015302.3820815, "stop": 1700015302.382144, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_3.py::test_list_of_not_containing_number", "location": ["tests55_63_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.02610016358085e-05, "start": 1700015302.3824208, "stop": 1700015302.3824813, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_list_of_not_containing_number", "location": ["tests55_63_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.63820028421469e-05, "start": 1700015302.3825617, "stop": 1700015302.3826287, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_list_of_not_containing_number", "location": ["tests55_63_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.890700074611232e-05, "start": 1700015302.3827648, "stop": 1700015302.3828142, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_return_elements_are_in_given_list", "location": ["tests55_63_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.908100138185546e-05, "start": 1700015302.3833854, "stop": 1700015302.3834448, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_return_elements_are_in_given_list", "location": ["tests55_63_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.516299905953929e-05, "start": 1700015302.3835194, "stop": 1700015302.383615, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_return_elements_are_in_given_list", "location": ["tests55_63_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.037999653723091e-05, "start": 1700015302.383755, "stop": 1700015302.3838058, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_if_sublist_product_equals_number", "location": ["tests55_63_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.610999505734071e-05, "start": 1700015302.3842952, "stop": 1700015302.3843515, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_3.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_63/tests55_63_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f59776f0a00>([96])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f59776f0a00>([1, 96])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f59776f0a00>([96, 1])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f59776f0a00>([96])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f59776f0a00>([1, 96])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f59776f0a00>([96, 1])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_63/tests55_63_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f59776f0a00>([96])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f59776f0a00>([1, 96])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f59776f0a00>([96, 1])", "E            +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_63/tests55_63_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_63/tests55_63_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f59776f0a00>([96])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f59776f0a00>([1, 96])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f59776f0a00>([96, 1])\n +    where <built-in method count of list object at 0x7f59776f0a00> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002745379970292561, "start": 1700015302.3822236, "stop": 1700015302.3824985, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0fbd2b006b09441e964ce4bba71cc085", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
