{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_65_3.py::test_list_of_several_same_number", "location": ["tests55_65_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002015650024986826, "start": 1700015303.9675086, "stop": 1700015303.967711, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_list_of_single_number", "location": ["tests55_65_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023653099924558774, "start": 1700015303.9677093, "stop": 1700015303.9679468, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_3.py::test_list_of_single_number", "location": ["tests55_65_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017692700203042477, "start": 1700015303.9682975, "stop": 1700015303.9684753, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_3.py::test_list_of_single_number", "location": ["tests55_65_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011575300595723093, "start": 1700015303.9688392, "stop": 1700015303.968956, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_3.py::test_list_of_several_same_number", "location": ["tests55_65_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012037509950459935, "start": 1700015303.9680765, "stop": 1700015303.9692812, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_list_of_several_same_number", "location": ["tests55_65_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011445499694673344, "start": 1700015303.9696078, "stop": 1700015303.9697232, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001264789971173741, "start": 1700015303.970437, "stop": 1700015303.9705644, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_3.py::test_list_of_not_containing_number", "location": ["tests55_65_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014628499775426462, "start": 1700015303.97143, "stop": 1700015303.9715774, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_list_of_not_containing_number", "location": ["tests55_65_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012492599489632994, "start": 1700015303.9717474, "stop": 1700015303.9718728, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_list_of_not_containing_number", "location": ["tests55_65_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.785200043348595e-05, "start": 1700015303.9721327, "stop": 1700015303.9722211, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_return_elements_are_in_given_list", "location": ["tests55_65_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010469699918758124, "start": 1700015303.9733453, "stop": 1700015303.9734507, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_return_elements_are_in_given_list", "location": ["tests55_65_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000114310001663398, "start": 1700015303.9735818, "stop": 1700015303.9736965, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_return_elements_are_in_given_list", "location": ["tests55_65_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.216800440801308e-05, "start": 1700015303.9739075, "stop": 1700015303.9739802, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_if_sublist_product_equals_number", "location": ["tests55_65_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.484399975510314e-05, "start": 1700015303.9747727, "stop": 1700015303.974848, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_3.py": 1, "Folder_65": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_65/tests55_65_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f00146396c0>([46])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f00146396c0>([1, 46])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f00146396c0>([46, 1])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f00146396c0>([46])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f00146396c0>([1, 46])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f00146396c0>([46, 1])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_65/tests55_65_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f00146396c0>([46])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f00146396c0>([1, 46])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f00146396c0>([46, 1])", "E            +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_65/tests55_65_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_65/tests55_65_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f00146396c0>([46])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f00146396c0>([1, 46])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f00146396c0>([46, 1])\n +    where <built-in method count of list object at 0x7f00146396c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005231060058576986, "start": 1700015303.9707272, "stop": 1700015303.9712512, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b497d01f44634f999dab9a6393d7fb01", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
