{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_4_3.py::test_list_of_single_number", "location": ["tests55_4_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021025000023655593, "start": 1700015260.621924, "stop": 1700015260.622135, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_3.py::test_list_of_several_same_number", "location": ["tests55_4_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018236499454360455, "start": 1700015260.6218536, "stop": 1700015260.622037, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_list_of_single_number", "location": ["tests55_4_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016605600103503093, "start": 1700015260.6224523, "stop": 1700015260.622619, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_3.py::test_list_of_single_number", "location": ["tests55_4_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011395000183256343, "start": 1700015260.6229744, "stop": 1700015260.6230893, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_3.py::test_list_of_several_same_number", "location": ["tests55_4_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00038816899905214086, "start": 1700015260.6223562, "stop": 1700015260.622745, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_list_of_several_same_number", "location": ["tests55_4_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011384399840608239, "start": 1700015260.6230872, "stop": 1700015260.6232016, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_4_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012026300100842491, "start": 1700015260.6249166, "stop": 1700015260.6250377, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_3.py::test_list_of_not_containing_number", "location": ["tests55_4_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014009599544806406, "start": 1700015260.62539, "stop": 1700015260.6255312, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_list_of_not_containing_number", "location": ["tests55_4_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013772799866274, "start": 1700015260.6257136, "stop": 1700015260.625852, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_list_of_not_containing_number", "location": ["tests55_4_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.117699664784595e-05, "start": 1700015260.6261241, "stop": 1700015260.6262157, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_return_elements_are_in_given_list", "location": ["tests55_4_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001409760006936267, "start": 1700015260.6272917, "stop": 1700015260.6274335, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_return_elements_are_in_given_list", "location": ["tests55_4_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001284380050492473, "start": 1700015260.627583, "stop": 1700015260.6277122, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_return_elements_are_in_given_list", "location": ["tests55_4_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.814800483174622e-05, "start": 1700015260.6279478, "stop": 1700015260.6280265, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_if_sublist_product_equals_number", "location": ["tests55_4_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010650700278347358, "start": 1700015260.6288376, "stop": 1700015260.6289449, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_4_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_4_3.py": 1, "Folder_4": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_4/tests55_4_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fec1b470980>([91])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fec1b470980>([1, 91])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fec1b470980>([91, 1])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 91, 1, 91, 1, 91]", "        result = lists_with_product_equal_n(input_list)", "        if 91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 91 == 1:", "            assert result.count([91]) == 6 and result.count([1, 91]) == 6 and result.count([91, 1]) == 6 and result.count([1, 91, 1]) == 6", "        else:", ">           assert result.count([91]) == 3 and result.count([1, 91]) == 3 and result.count([91, 1]) == 3 and result.count([1, 91, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fec1b470980>([91])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fec1b470980>([1, 91])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fec1b470980>([91, 1])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_4/tests55_4_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 91, 1, 91, 1, 91]", "        result = lists_with_product_equal_n(input_list)", "        if 91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 91 == 1:", "            assert result.count([91]) == 6 and result.count([1, 91]) == 6 and result.count([91, 1]) == 6 and result.count([1, 91, 1]) == 6", "        else:", ">           assert result.count([91]) == 3 and result.count([1, 91]) == 3 and result.count([91, 1]) == 3 and result.count([1, 91, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fec1b470980>([91])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fec1b470980>([1, 91])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fec1b470980>([91, 1])", "E            +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_4/tests55_4_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_4/tests55_4_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fec1b470980>([91])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fec1b470980>([1, 91])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fec1b470980>([91, 1])\n +    where <built-in method count of list object at 0x7fec1b470980> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005197980062803254, "start": 1700015260.625194, "stop": 1700015260.6257145, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "41b3e007d8b94c87963ff8b9ad087eed", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
