{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_15_3.py::test_list_of_several_same_number", "location": ["tests55_15_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.63300044531934e-05, "start": 1700015268.4094205, "stop": 1700015268.4095173, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_list_of_single_number", "location": ["tests55_15_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001488760026404634, "start": 1700015268.4094746, "stop": 1700015268.409624, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_3.py::test_list_of_single_number", "location": ["tests55_15_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.299399971496314e-05, "start": 1700015268.4098332, "stop": 1700015268.4099267, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_3.py::test_list_of_single_number", "location": ["tests55_15_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.900799442315474e-05, "start": 1700015268.4101315, "stop": 1700015268.4101908, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_3.py::test_list_of_several_same_number", "location": ["tests55_15_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005273659990052693, "start": 1700015268.4097075, "stop": 1700015268.4102354, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_list_of_several_same_number", "location": ["tests55_15_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.8905003243125975e-05, "start": 1700015268.4104095, "stop": 1700015268.4104688, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.562300015706569e-05, "start": 1700015268.4110541, "stop": 1700015268.4111304, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_3.py::test_list_of_not_containing_number", "location": ["tests55_15_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.747699808329344e-05, "start": 1700015268.4112709, "stop": 1700015268.4113388, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_list_of_not_containing_number", "location": ["tests55_15_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.944900087546557e-05, "start": 1700015268.4114225, "stop": 1700015268.411492, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_list_of_not_containing_number", "location": ["tests55_15_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.3693998779635876e-05, "start": 1700015268.4116333, "stop": 1700015268.4116874, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_return_elements_are_in_given_list", "location": ["tests55_15_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.884999700356275e-05, "start": 1700015268.412233, "stop": 1700015268.4122927, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_return_elements_are_in_given_list", "location": ["tests55_15_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.469999789260328e-05, "start": 1700015268.412368, "stop": 1700015268.4124331, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_return_elements_are_in_given_list", "location": ["tests55_15_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.657400131691247e-05, "start": 1700015268.4125636, "stop": 1700015268.4126105, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_if_sublist_product_equals_number", "location": ["tests55_15_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.3214003855828196e-05, "start": 1700015268.4131005, "stop": 1700015268.4131541, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_3.py": 1, "Folder_15": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_15/tests55_15_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f66df6f09c0>([-7])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f66df6f09c0>([1, -7])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f66df6f09c0>([-7, 1])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f66df6f09c0>([-7])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f66df6f09c0>([1, -7])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f66df6f09c0>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_15/tests55_15_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f66df6f09c0>([-7])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f66df6f09c0>([1, -7])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f66df6f09c0>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_15/tests55_15_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_15/tests55_15_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f66df6f09c0>([-7])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f66df6f09c0>([1, -7])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f66df6f09c0>([-7, 1])\n +    where <built-in method count of list object at 0x7f66df6f09c0> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003027820057468489, "start": 1700015268.4112215, "stop": 1700015268.4115248, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "25176fb6556e463a8d17c4eb007843b8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
