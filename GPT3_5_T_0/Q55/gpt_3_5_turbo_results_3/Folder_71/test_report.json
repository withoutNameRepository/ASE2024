{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_71_3.py::test_list_of_several_same_number", "location": ["tests55_71_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.493599645793438e-05, "start": 1700015308.1912537, "stop": 1700015308.1913493, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_list_of_single_number", "location": ["tests55_71_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012018700363114476, "start": 1700015308.1912389, "stop": 1700015308.1913595, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_3.py::test_list_of_single_number", "location": ["tests55_71_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015527799405390397, "start": 1700015308.1915598, "stop": 1700015308.1917152, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_3.py::test_list_of_several_same_number", "location": ["tests55_71_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024969699734356254, "start": 1700015308.1915243, "stop": 1700015308.1917744, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_list_of_several_same_number", "location": ["tests55_71_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.138799603329971e-05, "start": 1700015308.1919408, "stop": 1700015308.1920228, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_list_of_single_number", "location": ["tests55_71_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.344799425685778e-05, "start": 1700015308.1919062, "stop": 1700015308.1919904, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_3.py::test_list_of_not_containing_number", "location": ["tests55_71_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.602899909717962e-05, "start": 1700015308.1932309, "stop": 1700015308.1932871, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.576399755431339e-05, "start": 1700015308.193362, "stop": 1700015308.193428, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_3.py::test_list_of_not_containing_number", "location": ["tests55_71_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.728400330757722e-05, "start": 1700015308.193397, "stop": 1700015308.1934645, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_list_of_not_containing_number", "location": ["tests55_71_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.016400245949626e-05, "start": 1700015308.1936014, "stop": 1700015308.1936517, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_sublist_size", "location": ["tests55_71_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.5864002206362784e-05, "start": 1700015308.1944299, "stop": 1700015308.194486, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_sublist_size", "location": ["tests55_71_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.756099901394919e-05, "start": 1700015308.1945612, "stop": 1700015308.1946292, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_sublist_size", "location": ["tests55_71_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.5642002078238875e-05, "start": 1700015308.1947596, "stop": 1700015308.1948059, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_if_sublist_product_equals_number", "location": ["tests55_71_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.703100032405928e-05, "start": 1700015308.1953378, "stop": 1700015308.1953952, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_3.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_71/tests55_71_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f42b1e74dc0>([47])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f42b1e74dc0>([1, 47])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f42b1e74dc0>([47, 1])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f42b1e74dc0>([47])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f42b1e74dc0>([1, 47])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f42b1e74dc0>([47, 1])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_71/tests55_71_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f42b1e74dc0>([47])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f42b1e74dc0>([1, 47])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f42b1e74dc0>([47, 1])", "E            +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_71/tests55_71_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_71/tests55_71_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f42b1e74dc0>([47])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f42b1e74dc0>([1, 47])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f42b1e74dc0>([47, 1])\n +    where <built-in method count of list object at 0x7f42b1e74dc0> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032819699845276773, "start": 1700015308.1935236, "stop": 1700015308.1938524, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "524310a7d1df43be8190512768f6220c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
