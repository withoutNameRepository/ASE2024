{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_30_3.py::test_list_of_several_same_number", "location": ["tests55_30_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.748499385546893e-05, "start": 1700015278.8539891, "stop": 1700015278.8540769, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_list_of_single_number", "location": ["tests55_30_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010458900214871392, "start": 1700015278.8541336, "stop": 1700015278.8542387, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_3.py::test_list_of_single_number", "location": ["tests55_30_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.383599924854934e-05, "start": 1700015278.8544044, "stop": 1700015278.8544886, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_3.py::test_list_of_single_number", "location": ["tests55_30_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7803998060990125e-05, "start": 1700015278.854705, "stop": 1700015278.8547633, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_3.py::test_list_of_several_same_number", "location": ["tests55_30_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000390330002119299, "start": 1700015278.8542504, "stop": 1700015278.8546412, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_list_of_several_same_number", "location": ["tests55_30_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.165899685584009e-05, "start": 1700015278.8548446, "stop": 1700015278.8549068, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_30_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.041899905540049e-05, "start": 1700015278.8554647, "stop": 1700015278.8555255, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_3.py::test_list_of_not_containing_number", "location": ["tests55_30_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.365300214383751e-05, "start": 1700015278.8559923, "stop": 1700015278.8560562, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_list_of_not_containing_number", "location": ["tests55_30_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.215100049506873e-05, "start": 1700015278.8561418, "stop": 1700015278.8562143, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_list_of_not_containing_number", "location": ["tests55_30_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.204499757383019e-05, "start": 1700015278.8563561, "stop": 1700015278.8564086, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_return_elements_are_in_given_list", "location": ["tests55_30_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.989100463921204e-05, "start": 1700015278.8569117, "stop": 1700015278.856972, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_return_elements_are_in_given_list", "location": ["tests55_30_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.80729969847016e-05, "start": 1700015278.85705, "stop": 1700015278.8571281, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_return_elements_are_in_given_list", "location": ["tests55_30_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.872400313615799e-05, "start": 1700015278.857266, "stop": 1700015278.8573148, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_if_sublist_product_equals_number", "location": ["tests55_30_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.7001001550816e-05, "start": 1700015278.8578122, "stop": 1700015278.8578699, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_30_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_30_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_30_3.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_30/tests55_30_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f344ef6e600>([99])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f344ef6e600>([1, 99])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f344ef6e600>([99, 1])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 99, 1, 99, 1, 99]", "        result = lists_with_product_equal_n(input_list)", "        if 99 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 99 == 1:", "            assert result.count([99]) == 6 and result.count([1, 99]) == 6 and result.count([99, 1]) == 6 and result.count([1, 99, 1]) == 6", "        else:", ">           assert result.count([99]) == 3 and result.count([1, 99]) == 3 and result.count([99, 1]) == 3 and result.count([1, 99, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f344ef6e600>([99])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f344ef6e600>([1, 99])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f344ef6e600>([99, 1])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_30/tests55_30_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 99, 1, 99, 1, 99]", "        result = lists_with_product_equal_n(input_list)", "        if 99 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 99 == 1:", "            assert result.count([99]) == 6 and result.count([1, 99]) == 6 and result.count([99, 1]) == 6 and result.count([1, 99, 1]) == 6", "        else:", ">           assert result.count([99]) == 3 and result.count([1, 99]) == 3 and result.count([99, 1]) == 3 and result.count([1, 99, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f344ef6e600>([99])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f344ef6e600>([1, 99])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f344ef6e600>([99, 1])", "E            +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_30/tests55_30_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_30/tests55_30_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f344ef6e600>([99])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f344ef6e600>([1, 99])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f344ef6e600>([99, 1])\n +    where <built-in method count of list object at 0x7f344ef6e600> = [[1, 99], [1, 99, 1], [99], [99, 1], [1, 99], [1, 99, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002741940043051727, "start": 1700015278.855603, "stop": 1700015278.8558776, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "239010235b634d8fa37d975ec3833493", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
