{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_100_3.py::test_list_of_single_number", "location": ["tests55_100_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015331800386775285, "start": 1700015334.9648123, "stop": 1700015334.9649668, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_100_3.py::test_list_of_single_number", "location": ["tests55_100_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013158399815438315, "start": 1700015334.9652164, "stop": 1700015334.965349, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_100_3.py::test_list_of_single_number", "location": ["tests55_100_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.579999459674582e-05, "start": 1700015334.965628, "stop": 1700015334.9657247, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_100_3.py::test_list_of_several_same_number", "location": ["tests55_100_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000249561999225989, "start": 1700015334.9650095, "stop": 1700015334.9652603, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_list_of_several_same_number", "location": ["tests55_100_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028224499692441896, "start": 1700015334.965678, "stop": 1700015334.9659612, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_list_of_several_same_number", "location": ["tests55_100_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00029610599449370056, "start": 1700015334.9664242, "stop": 1700015334.9667215, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_100_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001476519973948598, "start": 1700015334.9677393, "stop": 1700015334.967888, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_100_3.py::test_list_of_not_containing_number", "location": ["tests55_100_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002510090052965097, "start": 1700015334.9684858, "stop": 1700015334.9687383, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_list_of_not_containing_number", "location": ["tests55_100_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028901600308017805, "start": 1700015334.969103, "stop": 1700015334.9693935, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_list_of_not_containing_number", "location": ["tests55_100_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00021441399439936504, "start": 1700015334.9699628, "stop": 1700015334.9701786, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_return_elements_are_in_given_list", "location": ["tests55_100_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002091269998345524, "start": 1700015334.9716525, "stop": 1700015334.971863, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_return_elements_are_in_given_list", "location": ["tests55_100_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022793099924456328, "start": 1700015334.972093, "stop": 1700015334.972322, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_return_elements_are_in_given_list", "location": ["tests55_100_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013462900096783414, "start": 1700015334.9727042, "stop": 1700015334.9728403, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_if_sublist_product_equals_number", "location": ["tests55_100_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013548699644161388, "start": 1700015334.9740288, "stop": 1700015334.9741654, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_100_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_100_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_100_3.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_100/tests55_100_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5843475000>([48])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5843475000>([1, 48])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5843475000>([48, 1])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 48, 1, 48, 1, 48]", "        result = lists_with_product_equal_n(input_list)", "        if 48 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 48 == 1:", "            assert result.count([48]) == 6 and result.count([1, 48]) == 6 and result.count([48, 1]) == 6 and result.count([1, 48, 1]) == 6", "        else:", ">           assert result.count([48]) == 3 and result.count([1, 48]) == 3 and result.count([48, 1]) == 3 and result.count([1, 48, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5843475000>([48])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5843475000>([1, 48])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5843475000>([48, 1])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_100/tests55_100_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 48, 1, 48, 1, 48]", "        result = lists_with_product_equal_n(input_list)", "        if 48 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 48 == 1:", "            assert result.count([48]) == 6 and result.count([1, 48]) == 6 and result.count([48, 1]) == 6 and result.count([1, 48, 1]) == 6", "        else:", ">           assert result.count([48]) == 3 and result.count([1, 48]) == 3 and result.count([48, 1]) == 3 and result.count([1, 48, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5843475000>([48])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5843475000>([1, 48])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5843475000>([48, 1])", "E            +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_100/tests55_100_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_100/tests55_100_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5843475000>([48])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5843475000>([1, 48])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5843475000>([48, 1])\n +    where <built-in method count of list object at 0x7f5843475000> = [[1, 48], [1, 48, 1], [48], [48, 1], [1, 48], [1, 48, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005594849935732782, "start": 1700015334.968072, "stop": 1700015334.9686325, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0d1d8b36841a454caaf895b13cc977a0", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
