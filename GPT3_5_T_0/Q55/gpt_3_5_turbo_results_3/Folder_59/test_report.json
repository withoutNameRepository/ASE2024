{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_59_3.py::test_list_of_several_same_number", "location": ["tests55_59_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014071300392970443, "start": 1700015299.6096601, "stop": 1700015299.6098015, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_list_of_single_number", "location": ["tests55_59_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015899699792498723, "start": 1700015299.6098351, "stop": 1700015299.6099951, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_3.py::test_list_of_single_number", "location": ["tests55_59_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001329220031038858, "start": 1700015299.61025, "stop": 1700015299.6103835, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_3.py::test_list_of_single_number", "location": ["tests55_59_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.031100151129067e-05, "start": 1700015299.6106493, "stop": 1700015299.6107302, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_3.py::test_list_of_several_same_number", "location": ["tests55_59_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004967639979440719, "start": 1700015299.6100373, "stop": 1700015299.6105347, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_list_of_several_same_number", "location": ["tests55_59_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.167099440470338e-05, "start": 1700015299.610782, "stop": 1700015299.6108644, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010689500049920753, "start": 1700015299.6118846, "stop": 1700015299.6119924, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_3.py::test_list_of_not_containing_number", "location": ["tests55_59_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010465100058354437, "start": 1700015299.6123967, "stop": 1700015299.6125023, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_list_of_not_containing_number", "location": ["tests55_59_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010309999925084412, "start": 1700015299.6126382, "stop": 1700015299.612742, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_list_of_not_containing_number", "location": ["tests55_59_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.371199899353087e-05, "start": 1700015299.6129541, "stop": 1700015299.6130285, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_return_elements_are_in_given_list", "location": ["tests55_59_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.796400313964114e-05, "start": 1700015299.6136577, "stop": 1700015299.6137362, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_return_elements_are_in_given_list", "location": ["tests55_59_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.763699588598683e-05, "start": 1700015299.6138442, "stop": 1700015299.6139324, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_return_elements_are_in_given_list", "location": ["tests55_59_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.420300633180887e-05, "start": 1700015299.614112, "stop": 1700015299.6141765, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_if_sublist_product_equals_number", "location": ["tests55_59_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.658800703007728e-05, "start": 1700015299.6148624, "stop": 1700015299.6149294, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_3.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_59/tests55_59_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc574870c80>([-3])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc574870c80>([1, -3])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc574870c80>([-3, 1])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc574870c80>([-3])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc574870c80>([1, -3])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc574870c80>([-3, 1])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_59/tests55_59_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc574870c80>([-3])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc574870c80>([1, -3])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc574870c80>([-3, 1])", "E            +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_59/tests55_59_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_59/tests55_59_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc574870c80>([-3])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc574870c80>([1, -3])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc574870c80>([-3, 1])\n +    where <built-in method count of list object at 0x7fc574870c80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004072029987582937, "start": 1700015299.6121216, "stop": 1700015299.6125295, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6069d1d4f4a44bcc9d8628473fcf258a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
