{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_87_3.py::test_list_of_several_same_number", "location": ["tests55_87_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012301599781494588, "start": 1700015319.9918697, "stop": 1700015319.9919932, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_list_of_single_number", "location": ["tests55_87_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011638800060609356, "start": 1700015319.9917645, "stop": 1700015319.9918811, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_87_3.py::test_list_of_single_number", "location": ["tests55_87_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.647399954497814e-05, "start": 1700015319.992072, "stop": 1700015319.992159, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_87_3.py::test_list_of_single_number", "location": ["tests55_87_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.697699816664681e-05, "start": 1700015319.9923363, "stop": 1700015319.9923937, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_87_3.py::test_list_of_several_same_number", "location": ["tests55_87_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00046707400179002434, "start": 1700015319.992145, "stop": 1700015319.9926126, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_list_of_several_same_number", "location": ["tests55_87_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.5964999774005264e-05, "start": 1700015319.9927845, "stop": 1700015319.9928408, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_87_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.897600203752518e-05, "start": 1700015319.993943, "stop": 1700015319.9940023, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_87_3.py::test_list_of_not_containing_number", "location": ["tests55_87_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.062899774406105e-05, "start": 1700015319.9944203, "stop": 1700015319.994481, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_list_of_not_containing_number", "location": ["tests55_87_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.468100036727265e-05, "start": 1700015319.994562, "stop": 1700015319.994627, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_list_of_not_containing_number", "location": ["tests55_87_3.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.799599992111325e-05, "start": 1700015319.9947624, "stop": 1700015319.9948108, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_return_elements_are_in_given_list", "location": ["tests55_87_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.555700045078993e-05, "start": 1700015319.9958758, "stop": 1700015319.9959319, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_return_elements_are_in_given_list", "location": ["tests55_87_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.619199848501012e-05, "start": 1700015319.9960039, "stop": 1700015319.9960704, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_return_elements_are_in_given_list", "location": ["tests55_87_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.095199594506994e-05, "start": 1700015319.9962018, "stop": 1700015319.996253, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_if_sublist_product_equals_number", "location": ["tests55_87_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.663499905494973e-05, "start": 1700015319.9970124, "stop": 1700015319.9970696, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_87_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_87_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_87_3.py": 1, "Folder_87": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_87/tests55_87_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5d10374940>([27])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5d10374940>([1, 27])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5d10374940>([27, 1])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 27, 1, 27, 1, 27]", "        result = lists_with_product_equal_n(input_list)", "        if 27 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 27 == 1:", "            assert result.count([27]) == 6 and result.count([1, 27]) == 6 and result.count([27, 1]) == 6 and result.count([1, 27, 1]) == 6", "        else:", ">           assert result.count([27]) == 3 and result.count([1, 27]) == 3 and result.count([27, 1]) == 3 and result.count([1, 27, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5d10374940>([27])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5d10374940>([1, 27])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5d10374940>([27, 1])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_87/tests55_87_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 27, 1, 27, 1, 27]", "        result = lists_with_product_equal_n(input_list)", "        if 27 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 27 == 1:", "            assert result.count([27]) == 6 and result.count([1, 27]) == 6 and result.count([27, 1]) == 6 and result.count([1, 27, 1]) == 6", "        else:", ">           assert result.count([27]) == 3 and result.count([1, 27]) == 3 and result.count([27, 1]) == 3 and result.count([1, 27, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5d10374940>([27])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5d10374940>([1, 27])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5d10374940>([27, 1])", "E            +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_3/Folder_87/tests55_87_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_3/Folder_87/tests55_87_3.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5d10374940>([27])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5d10374940>([1, 27])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5d10374940>([27, 1])\n +    where <built-in method count of list object at 0x7f5d10374940> = [[1, 27], [1, 27, 1], [27], [27, 1], [1, 27], [1, 27, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002889579991460778, "start": 1700015319.9940782, "stop": 1700015319.9943676, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00e8d319434440709d466e43659d3d56", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
