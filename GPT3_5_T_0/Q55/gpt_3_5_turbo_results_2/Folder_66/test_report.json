{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_66_2.py::test_list_of_single_number", "location": ["tests55_66_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011178999557159841, "start": 1700015228.7154667, "stop": 1700015228.715579, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_66_2.py::test_list_of_several_same_number", "location": ["tests55_66_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013010299880988896, "start": 1700015228.7155416, "stop": 1700015228.715672, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_list_of_single_number", "location": ["tests55_66_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.029699867824093e-05, "start": 1700015228.7157755, "stop": 1700015228.715866, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_66_2.py::test_list_of_single_number", "location": ["tests55_66_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.095899880165234e-05, "start": 1700015228.7160826, "stop": 1700015228.7161438, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_66_2.py::test_list_of_several_same_number", "location": ["tests55_66_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006329250027192757, "start": 1700015228.7158208, "stop": 1700015228.716454, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_list_of_several_same_number", "location": ["tests55_66_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.804800457553938e-05, "start": 1700015228.7166238, "stop": 1700015228.7166824, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_66_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.868299922440201e-05, "start": 1700015228.716997, "stop": 1700015228.717056, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_66_2.py::test_list_of_not_containing_number", "location": ["tests55_66_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.289000157266855e-05, "start": 1700015228.717768, "stop": 1700015228.7178311, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_list_of_not_containing_number", "location": ["tests55_66_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.858600681880489e-05, "start": 1700015228.7179177, "stop": 1700015228.7179868, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_list_of_not_containing_number", "location": ["tests55_66_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.935299511998892e-05, "start": 1700015228.7181249, "stop": 1700015228.7181745, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_return_elements_are_in_given_list", "location": ["tests55_66_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.6198005040641874e-05, "start": 1700015228.7188303, "stop": 1700015228.7188869, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_return_elements_are_in_given_list", "location": ["tests55_66_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.791999814799055e-05, "start": 1700015228.7189643, "stop": 1700015228.7190425, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_return_elements_are_in_given_list", "location": ["tests55_66_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.7533001634292305e-05, "start": 1700015228.7191763, "stop": 1700015228.719224, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_if_sublist_product_equals_number", "location": ["tests55_66_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.259200017666444e-05, "start": 1700015228.7197323, "stop": 1700015228.7197952, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_66_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_66_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_66_2.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_66/tests55_66_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f95230753c0>([78])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f95230753c0>([1, 78])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f95230753c0>([78, 1])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 78, 1, 78, 1, 78]", "        result = lists_with_product_equal_n(input_list)", "        if 78 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 78 == 1:", "            assert result.count([78]) == 6 and result.count([1, 78]) == 6 and result.count([78, 1]) == 6 and result.count([1, 78, 1]) == 6", "        else:", ">           assert result.count([78]) == 3 and result.count([1, 78]) == 3 and result.count([78, 1]) == 3 and result.count([1, 78, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f95230753c0>([78])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f95230753c0>([1, 78])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f95230753c0>([78, 1])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_66/tests55_66_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 78, 1, 78, 1, 78]", "        result = lists_with_product_equal_n(input_list)", "        if 78 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 78 == 1:", "            assert result.count([78]) == 6 and result.count([1, 78]) == 6 and result.count([78, 1]) == 6 and result.count([1, 78, 1]) == 6", "        else:", ">           assert result.count([78]) == 3 and result.count([1, 78]) == 3 and result.count([78, 1]) == 3 and result.count([1, 78, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f95230753c0>([78])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f95230753c0>([1, 78])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f95230753c0>([78, 1])", "E            +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_66/tests55_66_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_66/tests55_66_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f95230753c0>([78])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f95230753c0>([1, 78])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f95230753c0>([78, 1])\n +    where <built-in method count of list object at 0x7f95230753c0> = [[1, 78], [1, 78, 1], [78], [78, 1], [1, 78], [1, 78, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027735999901778996, "start": 1700015228.7171307, "stop": 1700015228.7174084, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "80ded8d231c744438f66a6785cabab69", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
