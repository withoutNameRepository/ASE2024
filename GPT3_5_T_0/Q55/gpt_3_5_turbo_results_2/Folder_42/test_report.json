{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_42_2.py::test_list_of_several_same_number", "location": ["tests55_42_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001388079981552437, "start": 1700015213.119933, "stop": 1700015213.1200724, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_list_of_single_number", "location": ["tests55_42_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014607100456487387, "start": 1700015213.1199865, "stop": 1700015213.1201332, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_2.py::test_list_of_single_number", "location": ["tests55_42_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012919300206704065, "start": 1700015213.1204114, "stop": 1700015213.120541, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_2.py::test_list_of_single_number", "location": ["tests55_42_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.666500070830807e-05, "start": 1700015213.1208017, "stop": 1700015213.1208892, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_2.py::test_list_of_several_same_number", "location": ["tests55_42_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006059650040697306, "start": 1700015213.1203058, "stop": 1700015213.120912, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_list_of_several_same_number", "location": ["tests55_42_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.672200056025758e-05, "start": 1700015213.1211703, "stop": 1700015213.1212575, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_42_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.257099736714736e-05, "start": 1700015213.1222925, "stop": 1700015213.1223857, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_2.py::test_list_of_not_containing_number", "location": ["tests55_42_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.81770029081963e-05, "start": 1700015213.1227953, "stop": 1700015213.122884, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_list_of_not_containing_number", "location": ["tests55_42_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010292999650118873, "start": 1700015213.1230056, "stop": 1700015213.123109, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_list_of_not_containing_number", "location": ["tests55_42_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.286999945994467e-05, "start": 1700015213.123317, "stop": 1700015213.1234002, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_return_elements_are_in_given_list", "location": ["tests55_42_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010601599933579564, "start": 1700015213.1242537, "stop": 1700015213.1243606, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_return_elements_are_in_given_list", "location": ["tests55_42_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011044300481444225, "start": 1700015213.1244915, "stop": 1700015213.1246026, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_return_elements_are_in_given_list", "location": ["tests55_42_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.031600009417161e-05, "start": 1700015213.12483, "stop": 1700015213.1249108, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_if_sublist_product_equals_number", "location": ["tests55_42_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010993200703524053, "start": 1700015213.1257958, "stop": 1700015213.1259065, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_42_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_42_2.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_42/tests55_42_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc328b74980>([25])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc328b74980>([1, 25])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc328b74980>([25, 1])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 25, 1, 25, 1, 25]", "        result = lists_with_product_equal_n(input_list)", "        if 25 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 25 == 1:", "            assert result.count([25]) == 6 and result.count([1, 25]) == 6 and result.count([25, 1]) == 6 and result.count([1, 25, 1]) == 6", "        else:", ">           assert result.count([25]) == 3 and result.count([1, 25]) == 3 and result.count([25, 1]) == 3 and result.count([1, 25, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc328b74980>([25])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc328b74980>([1, 25])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc328b74980>([25, 1])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_42/tests55_42_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 25, 1, 25, 1, 25]", "        result = lists_with_product_equal_n(input_list)", "        if 25 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 25 == 1:", "            assert result.count([25]) == 6 and result.count([1, 25]) == 6 and result.count([25, 1]) == 6 and result.count([1, 25, 1]) == 6", "        else:", ">           assert result.count([25]) == 3 and result.count([1, 25]) == 3 and result.count([25, 1]) == 3 and result.count([1, 25, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc328b74980>([25])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc328b74980>([1, 25])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc328b74980>([25, 1])", "E            +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_42/tests55_42_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_42/tests55_42_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc328b74980>([25])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc328b74980>([1, 25])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc328b74980>([25, 1])\n +    where <built-in method count of list object at 0x7fc328b74980> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004091239970875904, "start": 1700015213.1225069, "stop": 1700015213.1229165, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5ff6618889c1416f98c79e31d33c45ea", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
