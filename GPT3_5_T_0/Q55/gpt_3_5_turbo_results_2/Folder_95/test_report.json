{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_95_2.py::test_list_of_several_same_number", "location": ["tests55_95_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001013309956761077, "start": 1700015247.8735304, "stop": 1700015247.8736322, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_list_of_single_number", "location": ["tests55_95_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013994100299896672, "start": 1700015247.8735933, "stop": 1700015247.873734, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_2.py::test_list_of_single_number", "location": ["tests55_95_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.67890048539266e-05, "start": 1700015247.8738995, "stop": 1700015247.8739865, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_2.py::test_list_of_single_number", "location": ["tests55_95_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.636500281980261e-05, "start": 1700015247.8741863, "stop": 1700015247.874243, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_2.py::test_list_of_several_same_number", "location": ["tests55_95_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005817389974254183, "start": 1700015247.873803, "stop": 1700015247.874385, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_list_of_several_same_number", "location": ["tests55_95_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7108998589683324e-05, "start": 1700015247.8745806, "stop": 1700015247.8746383, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_95_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.124300125520676e-05, "start": 1700015247.875441, "stop": 1700015247.8755028, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_2.py::test_list_of_not_containing_number", "location": ["tests55_95_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.911500142654404e-05, "start": 1700015247.8755853, "stop": 1700015247.875665, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_list_of_not_containing_number", "location": ["tests55_95_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.518200436607003e-05, "start": 1700015247.875768, "stop": 1700015247.8758435, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_list_of_not_containing_number", "location": ["tests55_95_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.310599954100326e-05, "start": 1700015247.8759978, "stop": 1700015247.876051, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_return_elements_are_in_given_list", "location": ["tests55_95_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.9557998611126095e-05, "start": 1700015247.877169, "stop": 1700015247.8772287, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_return_elements_are_in_given_list", "location": ["tests55_95_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.324000034714118e-05, "start": 1700015247.8773067, "stop": 1700015247.8773801, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_return_elements_are_in_given_list", "location": ["tests55_95_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.813000123249367e-05, "start": 1700015247.8775153, "stop": 1700015247.8775637, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_if_sublist_product_equals_number", "location": ["tests55_95_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.0369995480868965e-05, "start": 1700015247.8784385, "stop": 1700015247.878499, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_95_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_95_2.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_95/tests55_95_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5329674d00>([28])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5329674d00>([1, 28])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5329674d00>([28, 1])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 28, 1, 28, 1, 28]", "        result = lists_with_product_equal_n(input_list)", "        if 28 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 28 == 1:", "            assert result.count([28]) == 6 and result.count([1, 28]) == 6 and result.count([28, 1]) == 6 and result.count([1, 28, 1]) == 6", "        else:", ">           assert result.count([28]) == 3 and result.count([1, 28]) == 3 and result.count([28, 1]) == 3 and result.count([1, 28, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5329674d00>([28])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5329674d00>([1, 28])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5329674d00>([28, 1])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_95/tests55_95_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 28, 1, 28, 1, 28]", "        result = lists_with_product_equal_n(input_list)", "        if 28 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 28 == 1:", "            assert result.count([28]) == 6 and result.count([1, 28]) == 6 and result.count([28, 1]) == 6 and result.count([1, 28, 1]) == 6", "        else:", ">           assert result.count([28]) == 3 and result.count([1, 28]) == 3 and result.count([28, 1]) == 3 and result.count([1, 28, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5329674d00>([28])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5329674d00>([1, 28])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5329674d00>([28, 1])", "E            +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_95/tests55_95_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_95/tests55_95_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5329674d00>([28])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5329674d00>([1, 28])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5329674d00>([28, 1])\n +    where <built-in method count of list object at 0x7f5329674d00> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027536400011740625, "start": 1700015247.875582, "stop": 1700015247.8758576, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1e7b44f27ff44e03ad4554a3f93d3be6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
