{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_62_2.py::test_list_of_single_number", "location": ["tests55_62_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011360799544490874, "start": 1700015226.1228888, "stop": 1700015226.1230028, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_62_2.py::test_list_of_several_same_number", "location": ["tests55_62_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.533199772704393e-05, "start": 1700015226.1229255, "stop": 1700015226.1230214, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_list_of_several_same_number", "location": ["tests55_62_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026582899590721354, "start": 1700015226.1232026, "stop": 1700015226.1234689, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_list_of_several_same_number", "location": ["tests55_62_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.791799776488915e-05, "start": 1700015226.1236637, "stop": 1700015226.123722, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_list_of_single_number", "location": ["tests55_62_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013900100020691752, "start": 1700015226.1232004, "stop": 1700015226.12334, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_62_2.py::test_list_of_single_number", "location": ["tests55_62_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.186500104377046e-05, "start": 1700015226.123552, "stop": 1700015226.1236143, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_62_2.py::test_list_of_not_containing_number", "location": ["tests55_62_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.873399641131982e-05, "start": 1700015226.1247866, "stop": 1700015226.1248457, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_list_of_not_containing_number", "location": ["tests55_62_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.550300167873502e-05, "start": 1700015226.1249268, "stop": 1700015226.1249926, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_list_of_not_containing_number", "location": ["tests55_62_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.979299410479143e-05, "start": 1700015226.1251307, "stop": 1700015226.125181, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_62_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.0742000641766936e-05, "start": 1700015226.1249328, "stop": 1700015226.1249938, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_62_2.py::test_sublist_size", "location": ["tests55_62_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.7348006521351635e-05, "start": 1700015226.1259632, "stop": 1700015226.1260211, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_sublist_size", "location": ["tests55_62_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.3914004790131e-05, "start": 1700015226.1261022, "stop": 1700015226.1261866, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_sublist_size", "location": ["tests55_62_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.106699973111972e-05, "start": 1700015226.1263278, "stop": 1700015226.1263793, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_if_sublist_product_equals_number", "location": ["tests55_62_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.531199713004753e-05, "start": 1700015226.1270027, "stop": 1700015226.1270585, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_62_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_62_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_62_2.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_62/tests55_62_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f0340f3c180>([100])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f0340f3c180>([1, 100])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f0340f3c180>([100, 1])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 100, 1, 100, 1, 100]", "        result = lists_with_product_equal_n(input_list)", "        if 100 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 100 == 1:", "            assert result.count([100]) == 6 and result.count([1, 100]) == 6 and result.count([100, 1]) == 6 and result.count([1, 100, 1]) == 6", "        else:", ">           assert result.count([100]) == 3 and result.count([1, 100]) == 3 and result.count([100, 1]) == 3 and result.count([1, 100, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f0340f3c180>([100])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f0340f3c180>([1, 100])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f0340f3c180>([100, 1])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_62/tests55_62_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 100, 1, 100, 1, 100]", "        result = lists_with_product_equal_n(input_list)", "        if 100 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 100 == 1:", "            assert result.count([100]) == 6 and result.count([1, 100]) == 6 and result.count([100, 1]) == 6 and result.count([1, 100, 1]) == 6", "        else:", ">           assert result.count([100]) == 3 and result.count([1, 100]) == 3 and result.count([100, 1]) == 3 and result.count([1, 100, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f0340f3c180>([100])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f0340f3c180>([1, 100])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f0340f3c180>([100, 1])", "E            +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_62/tests55_62_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_62/tests55_62_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f0340f3c180>([100])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f0340f3c180>([1, 100])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f0340f3c180>([100, 1])\n +    where <built-in method count of list object at 0x7f0340f3c180> = [[1, 100], [1, 100, 1], [100], [100, 1], [1, 100], [1, 100, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027655099984258413, "start": 1700015226.1250734, "stop": 1700015226.1253505, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "907b11e96c884d17915c7573420b9876", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
