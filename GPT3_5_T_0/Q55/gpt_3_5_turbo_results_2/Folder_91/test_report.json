{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_91_2.py::test_list_of_several_same_number", "location": ["tests55_91_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001375600040773861, "start": 1700015245.2432117, "stop": 1700015245.2433498, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_list_of_single_number", "location": ["tests55_91_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010474499867996201, "start": 1700015245.243207, "stop": 1700015245.2433121, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_91_2.py::test_list_of_single_number", "location": ["tests55_91_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.920500113163143e-05, "start": 1700015245.24352, "stop": 1700015245.2436097, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_91_2.py::test_list_of_single_number", "location": ["tests55_91_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.689499711384997e-05, "start": 1700015245.2438157, "stop": 1700015245.243913, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_91_2.py::test_list_of_several_same_number", "location": ["tests55_91_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003506739958538674, "start": 1700015245.2435217, "stop": 1700015245.2438731, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_list_of_several_same_number", "location": ["tests55_91_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.22669977019541e-05, "start": 1700015245.2440722, "stop": 1700015245.244135, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_91_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.982100214576349e-05, "start": 1700015245.2449844, "stop": 1700015245.2450645, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_91_2.py::test_list_of_not_containing_number", "location": ["tests55_91_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.985700358403847e-05, "start": 1700015245.2452765, "stop": 1700015245.2453566, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_list_of_not_containing_number", "location": ["tests55_91_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.877599950414151e-05, "start": 1700015245.245451, "stop": 1700015245.2455504, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_list_of_not_containing_number", "location": ["tests55_91_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.258300320245326e-05, "start": 1700015245.245705, "stop": 1700015245.245778, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_return_elements_are_in_given_list", "location": ["tests55_91_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.73059985274449e-05, "start": 1700015245.2463448, "stop": 1700015245.2464125, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_return_elements_are_in_given_list", "location": ["tests55_91_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.62979975156486e-05, "start": 1700015245.2464943, "stop": 1700015245.246591, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_return_elements_are_in_given_list", "location": ["tests55_91_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.259099947987124e-05, "start": 1700015245.2467413, "stop": 1700015245.2468145, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_if_sublist_product_equals_number", "location": ["tests55_91_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.869500066386536e-05, "start": 1700015245.2473788, "stop": 1700015245.247448, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_91_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_91_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_91_2.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_91/tests55_91_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f6f74775040>([2])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f6f74775040>([1, 2])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f6f74775040>([2, 1])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 2, 1, 2, 1, 2]", "        result = lists_with_product_equal_n(input_list)", "        if 2 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 2 == 1:", "            assert result.count([2]) == 6 and result.count([1, 2]) == 6 and result.count([2, 1]) == 6 and result.count([1, 2, 1]) == 6", "        else:", ">           assert result.count([2]) == 3 and result.count([1, 2]) == 3 and result.count([2, 1]) == 3 and result.count([1, 2, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f6f74775040>([2])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f6f74775040>([1, 2])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f6f74775040>([2, 1])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_91/tests55_91_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 2, 1, 2, 1, 2]", "        result = lists_with_product_equal_n(input_list)", "        if 2 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 2 == 1:", "            assert result.count([2]) == 6 and result.count([1, 2]) == 6 and result.count([2, 1]) == 6 and result.count([1, 2, 1]) == 6", "        else:", ">           assert result.count([2]) == 3 and result.count([1, 2]) == 3 and result.count([2, 1]) == 3 and result.count([1, 2, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f6f74775040>([2])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f6f74775040>([1, 2])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f6f74775040>([2, 1])", "E            +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_91/tests55_91_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_91/tests55_91_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f6f74775040>([2])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f6f74775040>([1, 2])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f6f74775040>([2, 1])\n +    where <built-in method count of list object at 0x7f6f74775040> = [[1, 2], [1, 2, 1], [2], [2, 1], [1, 2], [1, 2, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002778189955279231, "start": 1700015245.2451718, "stop": 1700015245.24545, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "706b084083dd4560898d3424ea434d25", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
