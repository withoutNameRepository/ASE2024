{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_45_2.py::test_list_of_several_same_number", "location": ["tests55_45_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.818300168262795e-05, "start": 1700015215.066226, "stop": 1700015215.0663245, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_list_of_single_number", "location": ["tests55_45_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011288699897704646, "start": 1700015215.0662024, "stop": 1700015215.066316, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_2.py::test_list_of_single_number", "location": ["tests55_45_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.816200326895341e-05, "start": 1700015215.0664966, "stop": 1700015215.066595, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_2.py::test_list_of_single_number", "location": ["tests55_45_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.926399510120973e-05, "start": 1700015215.0667915, "stop": 1700015215.0668612, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_2.py::test_list_of_several_same_number", "location": ["tests55_45_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004155990027356893, "start": 1700015215.066492, "stop": 1700015215.0669081, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_list_of_several_same_number", "location": ["tests55_45_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.003199814585969e-05, "start": 1700015215.0671077, "stop": 1700015215.067168, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_45_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.390699854819104e-05, "start": 1700015215.067667, "stop": 1700015215.0677311, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_2.py::test_list_of_not_containing_number", "location": ["tests55_45_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.023500074865296e-05, "start": 1700015215.0685048, "stop": 1700015215.0685754, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_list_of_not_containing_number", "location": ["tests55_45_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.236700184876099e-05, "start": 1700015215.0686626, "stop": 1700015215.0687351, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_list_of_not_containing_number", "location": ["tests55_45_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.2056995627935976e-05, "start": 1700015215.0688803, "stop": 1700015215.0689328, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_return_elements_are_in_given_list", "location": ["tests55_45_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.267599383136258e-05, "start": 1700015215.0693913, "stop": 1700015215.0694544, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_return_elements_are_in_given_list", "location": ["tests55_45_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.858699634904042e-05, "start": 1700015215.069552, "stop": 1700015215.069621, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_return_elements_are_in_given_list", "location": ["tests55_45_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.8510002670809627e-05, "start": 1700015215.0697615, "stop": 1700015215.0698104, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_if_sublist_product_equals_number", "location": ["tests55_45_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.461699765874073e-05, "start": 1700015215.0702412, "stop": 1700015215.070296, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_45_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_45_2.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_45/tests55_45_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f2e90a782c0>([-5])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f2e90a782c0>([1, -5])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f2e90a782c0>([-5, 1])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -5, 1, -5, 1, -5]", "        result = lists_with_product_equal_n(input_list)", "        if -5 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -5 == 1:", "            assert result.count([-5]) == 6 and result.count([1, -5]) == 6 and result.count([-5, 1]) == 6 and result.count([1, -5, 1]) == 6", "        else:", ">           assert result.count([-5]) == 3 and result.count([1, -5]) == 3 and result.count([-5, 1]) == 3 and result.count([1, -5, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f2e90a782c0>([-5])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f2e90a782c0>([1, -5])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f2e90a782c0>([-5, 1])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_45/tests55_45_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -5, 1, -5, 1, -5]", "        result = lists_with_product_equal_n(input_list)", "        if -5 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -5 == 1:", "            assert result.count([-5]) == 6 and result.count([1, -5]) == 6 and result.count([-5, 1]) == 6 and result.count([1, -5, 1]) == 6", "        else:", ">           assert result.count([-5]) == 3 and result.count([1, -5]) == 3 and result.count([-5, 1]) == 3 and result.count([1, -5, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f2e90a782c0>([-5])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f2e90a782c0>([1, -5])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f2e90a782c0>([-5, 1])", "E            +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_45/tests55_45_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_45/tests55_45_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f2e90a782c0>([-5])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f2e90a782c0>([1, -5])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f2e90a782c0>([-5, 1])\n +    where <built-in method count of list object at 0x7f2e90a782c0> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030952299857744947, "start": 1700015215.0678298, "stop": 1700015215.0681396, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b49af0e9f99a4c30b786c118998b9c59", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
