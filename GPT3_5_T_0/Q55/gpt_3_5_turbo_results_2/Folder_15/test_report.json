{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_15_2.py::test_list_of_several_same_number", "location": ["tests55_15_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011550600174814463, "start": 1700015196.2014983, "stop": 1700015196.2016144, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_list_of_single_number", "location": ["tests55_15_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011393600289011374, "start": 1700015196.2014694, "stop": 1700015196.2015839, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_2.py::test_list_of_several_same_number", "location": ["tests55_15_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010765899787656963, "start": 1700015196.2017667, "stop": 1700015196.2018747, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_list_of_several_same_number", "location": ["tests55_15_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.405000309925526e-05, "start": 1700015196.2020571, "stop": 1700015196.2021518, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_list_of_single_number", "location": ["tests55_15_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010819200542755425, "start": 1700015196.201767, "stop": 1700015196.2018754, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_2.py::test_list_of_single_number", "location": ["tests55_15_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.760099884355441e-05, "start": 1700015196.2020712, "stop": 1700015196.2021291, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_2.py::test_list_of_not_containing_number", "location": ["tests55_15_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.781800427939743e-05, "start": 1700015196.203089, "stop": 1700015196.203147, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.402200233424082e-05, "start": 1700015196.2032228, "stop": 1700015196.2032874, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_2.py::test_list_of_not_containing_number", "location": ["tests55_15_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.746099825249985e-05, "start": 1700015196.2032368, "stop": 1700015196.2033048, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_list_of_not_containing_number", "location": ["tests55_15_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.1713999710045755e-05, "start": 1700015196.2034767, "stop": 1700015196.203529, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_sublist_size", "location": ["tests55_15_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.4921998525969684e-05, "start": 1700015196.2041192, "stop": 1700015196.2041745, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_sublist_size", "location": ["tests55_15_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.820699491072446e-05, "start": 1700015196.204251, "stop": 1700015196.2043195, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_sublist_size", "location": ["tests55_15_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9442001909483224e-05, "start": 1700015196.2044587, "stop": 1700015196.2045083, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_if_sublist_product_equals_number", "location": ["tests55_15_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.464300193125382e-05, "start": 1700015196.204926, "stop": 1700015196.204981, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_2.py": 1, "Folder_15": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_15/tests55_15_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f02e533c180>([-7])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f02e533c180>([1, -7])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f02e533c180>([-7, 1])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f02e533c180>([-7])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f02e533c180>([1, -7])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f02e533c180>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_15/tests55_15_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f02e533c180>([-7])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f02e533c180>([1, -7])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f02e533c180>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_15/tests55_15_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_15/tests55_15_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f02e533c180>([-7])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f02e533c180>([1, -7])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f02e533c180>([-7, 1])\n +    where <built-in method count of list object at 0x7f02e533c180> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028880099853267893, "start": 1700015196.2034023, "stop": 1700015196.2036915, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "158c93a328894c5fb55f612cc2c7f77b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
