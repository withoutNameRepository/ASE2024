{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_63_2.py::test_list_of_several_same_number", "location": ["tests55_63_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010040400229627267, "start": 1700015226.7292473, "stop": 1700015226.7293482, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_list_of_single_number", "location": ["tests55_63_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012613899889402092, "start": 1700015226.7292888, "stop": 1700015226.7294154, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_2.py::test_list_of_single_number", "location": ["tests55_63_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011450499732745811, "start": 1700015226.729584, "stop": 1700015226.7296987, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_2.py::test_list_of_single_number", "location": ["tests55_63_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7624005421530455e-05, "start": 1700015226.7298923, "stop": 1700015226.7299504, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_2.py::test_list_of_several_same_number", "location": ["tests55_63_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005200880041229539, "start": 1700015226.729523, "stop": 1700015226.7300434, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_list_of_several_same_number", "location": ["tests55_63_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.711999983759597e-05, "start": 1700015226.7302139, "stop": 1700015226.7302716, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_list_of_not_containing_number", "location": ["tests55_63_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.355100049404427e-05, "start": 1700015226.731369, "stop": 1700015226.731433, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.229999755509198e-05, "start": 1700015226.7311463, "stop": 1700015226.731219, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_2.py::test_list_of_not_containing_number", "location": ["tests55_63_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.70569934300147e-05, "start": 1700015226.731516, "stop": 1700015226.731583, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_list_of_not_containing_number", "location": ["tests55_63_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.059900286141783e-05, "start": 1700015226.7317204, "stop": 1700015226.7317715, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_return_elements_are_in_given_list", "location": ["tests55_63_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.741800123360008e-05, "start": 1700015226.732679, "stop": 1700015226.7327368, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_return_elements_are_in_given_list", "location": ["tests55_63_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.611299901735038e-05, "start": 1700015226.7328143, "stop": 1700015226.7329109, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_return_elements_are_in_given_list", "location": ["tests55_63_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.684300074586645e-05, "start": 1700015226.733043, "stop": 1700015226.7330902, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_if_sublist_product_equals_number", "location": ["tests55_63_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.647599755320698e-05, "start": 1700015226.7336311, "stop": 1700015226.733688, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_2.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_63/tests55_63_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f7882675540>([96])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f7882675540>([1, 96])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f7882675540>([96, 1])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f7882675540>([96])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f7882675540>([1, 96])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f7882675540>([96, 1])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_63/tests55_63_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f7882675540>([96])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f7882675540>([1, 96])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f7882675540>([96, 1])", "E            +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_63/tests55_63_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_63/tests55_63_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f7882675540>([96])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f7882675540>([1, 96])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f7882675540>([96, 1])\n +    where <built-in method count of list object at 0x7f7882675540> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002833990001818165, "start": 1700015226.7313044, "stop": 1700015226.7315881, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9829cdfc88d1442eb4668bf02bbd5195", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
