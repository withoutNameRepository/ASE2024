{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_59_2.py::test_list_of_several_same_number", "location": ["tests55_59_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.416299872100353e-05, "start": 1700015224.108587, "stop": 1700015224.1086814, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_list_of_single_number", "location": ["tests55_59_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015258300118148327, "start": 1700015224.1086433, "stop": 1700015224.1087964, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_2.py::test_list_of_single_number", "location": ["tests55_59_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.639699808554724e-05, "start": 1700015224.1089602, "stop": 1700015224.109047, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_2.py::test_list_of_single_number", "location": ["tests55_59_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.412699440261349e-05, "start": 1700015224.1092505, "stop": 1700015224.1093152, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_2.py::test_list_of_several_same_number", "location": ["tests55_59_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002974599992739968, "start": 1700015224.1088579, "stop": 1700015224.109156, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_list_of_several_same_number", "location": ["tests55_59_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.787499685538933e-05, "start": 1700015224.1093278, "stop": 1700015224.109386, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.121600017650053e-05, "start": 1700015224.1104753, "stop": 1700015224.110537, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_2.py::test_list_of_not_containing_number", "location": ["tests55_59_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.930399493081495e-05, "start": 1700015224.110534, "stop": 1700015224.1105936, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_list_of_not_containing_number", "location": ["tests55_59_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.550300167873502e-05, "start": 1700015224.1106734, "stop": 1700015224.1107395, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_list_of_not_containing_number", "location": ["tests55_59_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.7295005060732365e-05, "start": 1700015224.1108756, "stop": 1700015224.1109233, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_return_elements_are_in_given_list", "location": ["tests55_59_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.7810000726021826e-05, "start": 1700015224.1115012, "stop": 1700015224.1115594, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_return_elements_are_in_given_list", "location": ["tests55_59_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.439400021918118e-05, "start": 1700015224.1116338, "stop": 1700015224.1116984, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_return_elements_are_in_given_list", "location": ["tests55_59_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.250200047157705e-05, "start": 1700015224.1118348, "stop": 1700015224.111888, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_if_sublist_product_equals_number", "location": ["tests55_59_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.805399996461347e-05, "start": 1700015224.1122873, "stop": 1700015224.1123457, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_2.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_59/tests55_59_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f8377e14f80>([-3])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f8377e14f80>([1, -3])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f8377e14f80>([-3, 1])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f8377e14f80>([-3])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f8377e14f80>([1, -3])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f8377e14f80>([-3, 1])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_59/tests55_59_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f8377e14f80>([-3])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f8377e14f80>([1, -3])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f8377e14f80>([-3, 1])", "E            +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_59/tests55_59_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_59/tests55_59_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f8377e14f80>([-3])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f8377e14f80>([1, -3])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f8377e14f80>([-3, 1])\n +    where <built-in method count of list object at 0x7f8377e14f80> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002785219985526055, "start": 1700015224.1106148, "stop": 1700015224.1108937, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a114fafae6c438cba61c2dadef05d48", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
