{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_32_2.py::test_list_of_single_number", "location": ["tests55_32_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012242700177012011, "start": 1700015206.7399614, "stop": 1700015206.7400842, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_32_2.py::test_list_of_single_number", "location": ["tests55_32_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.171000419883057e-05, "start": 1700015206.7402601, "stop": 1700015206.7403522, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_32_2.py::test_list_of_single_number", "location": ["tests55_32_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9789002989418805e-05, "start": 1700015206.7405474, "stop": 1700015206.7406077, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_32_2.py::test_list_of_several_same_number", "location": ["tests55_32_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010695899982238188, "start": 1700015206.7399745, "stop": 1700015206.740082, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_list_of_several_same_number", "location": ["tests55_32_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002536289975978434, "start": 1700015206.7402349, "stop": 1700015206.7404888, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_list_of_several_same_number", "location": ["tests55_32_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9624995628837496e-05, "start": 1700015206.740667, "stop": 1700015206.7407272, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_32_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.452600402757525e-05, "start": 1700015206.741769, "stop": 1700015206.7418437, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_32_2.py::test_list_of_not_containing_number", "location": ["tests55_32_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.384600030491129e-05, "start": 1700015206.7420602, "stop": 1700015206.7421346, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_list_of_not_containing_number", "location": ["tests55_32_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.506000499939546e-05, "start": 1700015206.7422142, "stop": 1700015206.7422798, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_list_of_not_containing_number", "location": ["tests55_32_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.774999979417771e-05, "start": 1700015206.742427, "stop": 1700015206.7424753, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_return_elements_are_in_given_list", "location": ["tests55_32_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.535600212169811e-05, "start": 1700015206.7429137, "stop": 1700015206.7429695, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_return_elements_are_in_given_list", "location": ["tests55_32_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.294199895113707e-05, "start": 1700015206.7430432, "stop": 1700015206.7431164, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_return_elements_are_in_given_list", "location": ["tests55_32_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9823000153992325e-05, "start": 1700015206.743249, "stop": 1700015206.743299, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_if_sublist_product_equals_number", "location": ["tests55_32_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.556600081035867e-05, "start": 1700015206.743696, "stop": 1700015206.7437518, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_32_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_32_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_32_2.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_32/tests55_32_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7febe9774940>([76])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7febe9774940>([1, 76])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7febe9774940>([76, 1])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 76, 1, 76, 1, 76]", "        result = lists_with_product_equal_n(input_list)", "        if 76 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 76 == 1:", "            assert result.count([76]) == 6 and result.count([1, 76]) == 6 and result.count([76, 1]) == 6 and result.count([1, 76, 1]) == 6", "        else:", ">           assert result.count([76]) == 3 and result.count([1, 76]) == 3 and result.count([76, 1]) == 3 and result.count([1, 76, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7febe9774940>([76])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7febe9774940>([1, 76])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7febe9774940>([76, 1])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_32/tests55_32_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 76, 1, 76, 1, 76]", "        result = lists_with_product_equal_n(input_list)", "        if 76 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 76 == 1:", "            assert result.count([76]) == 6 and result.count([1, 76]) == 6 and result.count([76, 1]) == 6 and result.count([1, 76, 1]) == 6", "        else:", ">           assert result.count([76]) == 3 and result.count([1, 76]) == 3 and result.count([76, 1]) == 3 and result.count([1, 76, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7febe9774940>([76])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7febe9774940>([1, 76])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7febe9774940>([76, 1])", "E            +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_32/tests55_32_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_32/tests55_32_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7febe9774940>([76])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7febe9774940>([1, 76])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7febe9774940>([76, 1])\n +    where <built-in method count of list object at 0x7febe9774940> = [[1, 76], [1, 76, 1], [76], [76, 1], [1, 76], [1, 76, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00029236500267870724, "start": 1700015206.7419212, "stop": 1700015206.742214, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "39727237c1444859bb0157d7d6c396a8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
