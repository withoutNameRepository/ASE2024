{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_17_2.py::test_list_of_single_number", "location": ["tests55_17_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.598800195613876e-05, "start": 1700015197.5494606, "stop": 1700015197.549547, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_17_2.py::test_list_of_several_same_number", "location": ["tests55_17_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010333999671274796, "start": 1700015197.549584, "stop": 1700015197.5496879, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_list_of_single_number", "location": ["tests55_17_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010450800618855283, "start": 1700015197.5497303, "stop": 1700015197.549835, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_17_2.py::test_list_of_single_number", "location": ["tests55_17_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.185300298966467e-05, "start": 1700015197.5500083, "stop": 1700015197.5500708, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_17_2.py::test_list_of_several_same_number", "location": ["tests55_17_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002343989981454797, "start": 1700015197.5498807, "stop": 1700015197.5501156, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_list_of_several_same_number", "location": ["tests55_17_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.531499820994213e-05, "start": 1700015197.5503283, "stop": 1700015197.5503943, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_17_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.696800119243562e-05, "start": 1700015197.5511496, "stop": 1700015197.551217, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_17_2.py::test_list_of_not_containing_number", "location": ["tests55_17_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.714500290807337e-05, "start": 1700015197.5515075, "stop": 1700015197.551595, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_list_of_not_containing_number", "location": ["tests55_17_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010114199540112168, "start": 1700015197.5516782, "stop": 1700015197.5517797, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_list_of_not_containing_number", "location": ["tests55_17_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.17350048944354e-05, "start": 1700015197.55193, "stop": 1700015197.5520022, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_return_elements_are_in_given_list", "location": ["tests55_17_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.418399763992056e-05, "start": 1700015197.5525424, "stop": 1700015197.5526173, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_return_elements_are_in_given_list", "location": ["tests55_17_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010672499774955213, "start": 1700015197.5527067, "stop": 1700015197.552814, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_return_elements_are_in_given_list", "location": ["tests55_17_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.276300311787054e-05, "start": 1700015197.5529616, "stop": 1700015197.5530348, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_if_sublist_product_equals_number", "location": ["tests55_17_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.571599806193262e-05, "start": 1700015197.5535104, "stop": 1700015197.5535765, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_17_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_17_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_17_2.py": 1, "Folder_17": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_17/tests55_17_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc5d3138600>([18])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc5d3138600>([1, 18])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc5d3138600>([18, 1])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 18, 1, 18, 1, 18]", "        result = lists_with_product_equal_n(input_list)", "        if 18 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 18 == 1:", "            assert result.count([18]) == 6 and result.count([1, 18]) == 6 and result.count([18, 1]) == 6 and result.count([1, 18, 1]) == 6", "        else:", ">           assert result.count([18]) == 3 and result.count([1, 18]) == 3 and result.count([18, 1]) == 3 and result.count([1, 18, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc5d3138600>([18])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc5d3138600>([1, 18])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc5d3138600>([18, 1])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_17/tests55_17_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 18, 1, 18, 1, 18]", "        result = lists_with_product_equal_n(input_list)", "        if 18 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 18 == 1:", "            assert result.count([18]) == 6 and result.count([1, 18]) == 6 and result.count([18, 1]) == 6 and result.count([1, 18, 1]) == 6", "        else:", ">           assert result.count([18]) == 3 and result.count([1, 18]) == 3 and result.count([18, 1]) == 3 and result.count([1, 18, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc5d3138600>([18])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc5d3138600>([1, 18])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc5d3138600>([18, 1])", "E            +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_17/tests55_17_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_17/tests55_17_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc5d3138600>([18])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc5d3138600>([1, 18])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc5d3138600>([18, 1])\n +    where <built-in method count of list object at 0x7fc5d3138600> = [[1, 18], [1, 18, 1], [18], [18, 1], [1, 18], [1, 18, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030184199567884207, "start": 1700015197.5513027, "stop": 1700015197.551605, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "541ec4b68d8a4c5fbf107cf10a26b3c7", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
