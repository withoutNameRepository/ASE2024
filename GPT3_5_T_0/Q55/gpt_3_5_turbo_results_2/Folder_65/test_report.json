{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_65_2.py::test_list_of_several_same_number", "location": ["tests55_65_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001202569983433932, "start": 1700015227.98882, "stop": 1700015227.9889405, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_list_of_single_number", "location": ["tests55_65_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010098799975821748, "start": 1700015227.9887562, "stop": 1700015227.9888577, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_2.py::test_list_of_single_number", "location": ["tests55_65_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.08699948922731e-05, "start": 1700015227.9890535, "stop": 1700015227.9891448, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_2.py::test_list_of_single_number", "location": ["tests55_65_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.340199615806341e-05, "start": 1700015227.989355, "stop": 1700015227.989419, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_2.py::test_list_of_several_same_number", "location": ["tests55_65_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005364360040402971, "start": 1700015227.9890966, "stop": 1700015227.9896336, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_list_of_several_same_number", "location": ["tests55_65_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.8460995205678046e-05, "start": 1700015227.989816, "stop": 1700015227.9898748, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.184499943628907e-05, "start": 1700015227.990709, "stop": 1700015227.9907713, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_2.py::test_list_of_not_containing_number", "location": ["tests55_65_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.00909988861531e-05, "start": 1700015227.990957, "stop": 1700015227.9910178, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_list_of_not_containing_number", "location": ["tests55_65_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.062499935273081e-05, "start": 1700015227.9910994, "stop": 1700015227.9911704, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_list_of_not_containing_number", "location": ["tests55_65_2.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.143099744804204e-05, "start": 1700015227.991312, "stop": 1700015227.991374, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_return_elements_are_in_given_list", "location": ["tests55_65_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.7292003475595266e-05, "start": 1700015227.992192, "stop": 1700015227.99225, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_return_elements_are_in_given_list", "location": ["tests55_65_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.224299770314246e-05, "start": 1700015227.9923282, "stop": 1700015227.992401, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_return_elements_are_in_given_list", "location": ["tests55_65_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.742100281873718e-05, "start": 1700015227.9925394, "stop": 1700015227.992587, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_if_sublist_product_equals_number", "location": ["tests55_65_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.337000038707629e-05, "start": 1700015227.9931226, "stop": 1700015227.9931762, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_2.py": 1, "Folder_65": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_65/tests55_65_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fcfefd09240>([46])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fcfefd09240>([1, 46])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fcfefd09240>([46, 1])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fcfefd09240>([46])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fcfefd09240>([1, 46])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fcfefd09240>([46, 1])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_65/tests55_65_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fcfefd09240>([46])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fcfefd09240>([1, 46])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fcfefd09240>([46, 1])", "E            +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_2/Folder_65/tests55_65_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_2/Folder_65/tests55_65_2.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fcfefd09240>([46])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fcfefd09240>([1, 46])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fcfefd09240>([46, 1])\n +    where <built-in method count of list object at 0x7fcfefd09240> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002732840002863668, "start": 1700015227.990851, "stop": 1700015227.9911244, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "08c4f9c06c524a2fb7048f8e523d20d3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
