{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_15_4.py::test_list_of_several_same_number", "location": ["tests55_15_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012324500130489469, "start": 1700015346.3787763, "stop": 1700015346.3789, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_list_of_single_number", "location": ["tests55_15_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010689599730540067, "start": 1700015346.3787544, "stop": 1700015346.3788617, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_4.py::test_list_of_single_number", "location": ["tests55_15_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.039899305207655e-05, "start": 1700015346.3790858, "stop": 1700015346.3791766, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_4.py::test_list_of_single_number", "location": ["tests55_15_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.511299579869956e-05, "start": 1700015346.3793688, "stop": 1700015346.3794343, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_4.py::test_list_of_several_same_number", "location": ["tests55_15_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005375300024752505, "start": 1700015346.3790872, "stop": 1700015346.3796253, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_list_of_several_same_number", "location": ["tests55_15_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.086900248192251e-05, "start": 1700015346.3798091, "stop": 1700015346.3798702, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.13410011283122e-05, "start": 1700015346.3806598, "stop": 1700015346.3807213, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_15_4.py::test_list_of_not_containing_number", "location": ["tests55_15_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.148200191091746e-05, "start": 1700015346.380904, "stop": 1700015346.3809657, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_list_of_not_containing_number", "location": ["tests55_15_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.731699977535754e-05, "start": 1700015346.3810453, "stop": 1700015346.381113, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_list_of_not_containing_number", "location": ["tests55_15_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9059999582823366e-05, "start": 1700015346.3812492, "stop": 1700015346.3812988, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_return_elements_are_in_given_list", "location": ["tests55_15_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.472599877975881e-05, "start": 1700015346.3819017, "stop": 1700015346.381957, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_return_elements_are_in_given_list", "location": ["tests55_15_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.334100180538371e-05, "start": 1700015346.3820283, "stop": 1700015346.3820918, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_return_elements_are_in_given_list", "location": ["tests55_15_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.1413997425697744e-05, "start": 1700015346.3822258, "stop": 1700015346.3822775, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_if_sublist_product_equals_number", "location": ["tests55_15_4.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.918600072618574e-05, "start": 1700015346.382764, "stop": 1700015346.3828237, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_15_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_15_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_15_4.py": 1, "Folder_15": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_15/tests55_15_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5a40738680>([-7])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5a40738680>([1, -7])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5a40738680>([-7, 1])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5a40738680>([-7])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5a40738680>([1, -7])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5a40738680>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_15/tests55_15_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -7, 1, -7, 1, -7]", "        result = lists_with_product_equal_n(input_list)", "        if -7 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -7 == 1:", "            assert result.count([-7]) == 6 and result.count([1, -7]) == 6 and result.count([-7, 1]) == 6 and result.count([1, -7, 1]) == 6", "        else:", ">           assert result.count([-7]) == 3 and result.count([1, -7]) == 3 and result.count([-7, 1]) == 3 and result.count([1, -7, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f5a40738680>([-7])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f5a40738680>([1, -7])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f5a40738680>([-7, 1])", "E            +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_15/tests55_15_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_15/tests55_15_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f5a40738680>([-7])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f5a40738680>([1, -7])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f5a40738680>([-7, 1])\n +    where <built-in method count of list object at 0x7f5a40738680> = [[1, -7], [1, -7, 1], [-7], [-7, 1], [1, -7], [1, -7, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002692679991014302, "start": 1700015346.3807995, "stop": 1700015346.3810694, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ec0cea2125a84702b1b18d328dd7af8a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
