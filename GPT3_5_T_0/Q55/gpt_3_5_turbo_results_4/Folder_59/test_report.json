{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_59_4.py::test_list_of_several_same_number", "location": ["tests55_59_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.011899965116754e-05, "start": 1700015380.7035873, "stop": 1700015380.7036777, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_list_of_single_number", "location": ["tests55_59_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001023030054057017, "start": 1700015380.7035923, "stop": 1700015380.7036948, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_4.py::test_list_of_single_number", "location": ["tests55_59_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.646199421491474e-05, "start": 1700015380.7038581, "stop": 1700015380.7039452, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_4.py::test_list_of_single_number", "location": ["tests55_59_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.940999835729599e-05, "start": 1700015380.704115, "stop": 1700015380.7041748, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_4.py::test_list_of_several_same_number", "location": ["tests55_59_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005167929994058795, "start": 1700015380.703829, "stop": 1700015380.7043462, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_list_of_several_same_number", "location": ["tests55_59_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.6778997532092035e-05, "start": 1700015380.704515, "stop": 1700015380.7045724, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.355499838013202e-05, "start": 1700015380.7051194, "stop": 1700015380.7051935, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_4.py::test_list_of_not_containing_number", "location": ["tests55_59_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.198899791343138e-05, "start": 1700015380.7055473, "stop": 1700015380.7056098, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_list_of_not_containing_number", "location": ["tests55_59_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.690300506306812e-05, "start": 1700015380.705692, "stop": 1700015380.7057595, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_list_of_not_containing_number", "location": ["tests55_59_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.899400664726272e-05, "start": 1700015380.705898, "stop": 1700015380.7059472, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_return_elements_are_in_given_list", "location": ["tests55_59_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.5067001085262746e-05, "start": 1700015380.7063859, "stop": 1700015380.7064414, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_return_elements_are_in_given_list", "location": ["tests55_59_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.383799336617813e-05, "start": 1700015380.7065156, "stop": 1700015380.7065797, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_return_elements_are_in_given_list", "location": ["tests55_59_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.7861998609732836e-05, "start": 1700015380.7067106, "stop": 1700015380.7067587, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_if_sublist_product_equals_number", "location": ["tests55_59_4.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.682500341208652e-05, "start": 1700015380.7071633, "stop": 1700015380.7072206, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_4.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_59/tests55_59_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc81743c940>([-3])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc81743c940>([1, -3])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc81743c940>([-3, 1])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc81743c940>([-3])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc81743c940>([1, -3])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc81743c940>([-3, 1])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_59/tests55_59_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc81743c940>([-3])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc81743c940>([1, -3])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc81743c940>([-3, 1])", "E            +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_59/tests55_59_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_59/tests55_59_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc81743c940>([-3])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc81743c940>([1, -3])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc81743c940>([-3, 1])\n +    where <built-in method count of list object at 0x7fc81743c940> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028085300436941907, "start": 1700015380.705281, "stop": 1700015380.7055624, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "949e67e750334fb095a796440997361e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
