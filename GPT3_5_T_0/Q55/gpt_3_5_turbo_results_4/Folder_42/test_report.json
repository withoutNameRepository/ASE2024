{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_42_4.py::test_list_of_single_number", "location": ["tests55_42_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010612700134515762, "start": 1700015367.1620634, "stop": 1700015367.16217, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_4.py::test_list_of_several_same_number", "location": ["tests55_42_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.561600018059835e-05, "start": 1700015367.1619382, "stop": 1700015367.1620343, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_list_of_single_number", "location": ["tests55_42_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.704400144983083e-05, "start": 1700015367.1623356, "stop": 1700015367.162433, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_4.py::test_list_of_single_number", "location": ["tests55_42_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.164900307543576e-05, "start": 1700015367.1626256, "stop": 1700015367.1626978, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_4.py::test_list_of_several_same_number", "location": ["tests55_42_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005522249994101003, "start": 1700015367.1622124, "stop": 1700015367.162765, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_list_of_several_same_number", "location": ["tests55_42_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.828699795529246e-05, "start": 1700015367.1629357, "stop": 1700015367.1629944, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_42_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.331199594773352e-05, "start": 1700015367.1639755, "stop": 1700015367.1640491, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_42_4.py::test_list_of_not_containing_number", "location": ["tests55_42_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.189299503806978e-05, "start": 1700015367.1641502, "stop": 1700015367.1642225, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_list_of_not_containing_number", "location": ["tests55_42_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.281199941644445e-05, "start": 1700015367.1643176, "stop": 1700015367.1643908, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_list_of_not_containing_number", "location": ["tests55_42_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.106099706608802e-05, "start": 1700015367.1645348, "stop": 1700015367.1645863, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_return_elements_are_in_given_list", "location": ["tests55_42_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.361700409092009e-05, "start": 1700015367.1654541, "stop": 1700015367.1655283, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_return_elements_are_in_given_list", "location": ["tests55_42_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.522500527556986e-05, "start": 1700015367.1656196, "stop": 1700015367.1656952, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_return_elements_are_in_given_list", "location": ["tests55_42_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.394299660110846e-05, "start": 1700015367.1658454, "stop": 1700015367.1658998, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_if_sublist_product_equals_number", "location": ["tests55_42_4.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.8905003243125975e-05, "start": 1700015367.1663098, "stop": 1700015367.166369, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_42_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_42_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_42/tests55_42_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fe22ca6dac0>([25])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fe22ca6dac0>([1, 25])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fe22ca6dac0>([25, 1])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 25, 1, 25, 1, 25]", "        result = lists_with_product_equal_n(input_list)", "        if 25 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 25 == 1:", "            assert result.count([25]) == 6 and result.count([1, 25]) == 6 and result.count([25, 1]) == 6 and result.count([1, 25, 1]) == 6", "        else:", ">           assert result.count([25]) == 3 and result.count([1, 25]) == 3 and result.count([25, 1]) == 3 and result.count([1, 25, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fe22ca6dac0>([25])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fe22ca6dac0>([1, 25])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fe22ca6dac0>([25, 1])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_42/tests55_42_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 25, 1, 25, 1, 25]", "        result = lists_with_product_equal_n(input_list)", "        if 25 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 25 == 1:", "            assert result.count([25]) == 6 and result.count([1, 25]) == 6 and result.count([25, 1]) == 6 and result.count([1, 25, 1]) == 6", "        else:", ">           assert result.count([25]) == 3 and result.count([1, 25]) == 3 and result.count([25, 1]) == 3 and result.count([1, 25, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fe22ca6dac0>([25])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fe22ca6dac0>([1, 25])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fe22ca6dac0>([25, 1])", "E            +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_42/tests55_42_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_42/tests55_42_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fe22ca6dac0>([25])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fe22ca6dac0>([1, 25])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fe22ca6dac0>([25, 1])\n +    where <built-in method count of list object at 0x7fe22ca6dac0> = [[1, 25], [1, 25, 1], [25], [25, 1], [1, 25], [1, 25, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002829450022545643, "start": 1700015367.1641397, "stop": 1700015367.1644232, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c58c8d47fa5f4ed98b743150465d5b86", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
