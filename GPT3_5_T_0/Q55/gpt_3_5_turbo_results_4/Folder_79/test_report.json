{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_79_4.py::test_list_of_several_same_number", "location": ["tests55_79_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.314500155393034e-05, "start": 1700015396.937721, "stop": 1700015396.9378045, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_list_of_single_number", "location": ["tests55_79_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010124999971594661, "start": 1700015396.9377966, "stop": 1700015396.9378984, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_79_4.py::test_list_of_several_same_number", "location": ["tests55_79_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001911490035126917, "start": 1700015396.937955, "stop": 1700015396.9381464, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_list_of_several_same_number", "location": ["tests55_79_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.812499875901267e-05, "start": 1700015396.9383216, "stop": 1700015396.9383802, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_list_of_single_number", "location": ["tests55_79_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010357699648011476, "start": 1700015396.9380622, "stop": 1700015396.938166, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_79_4.py::test_list_of_single_number", "location": ["tests55_79_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.362599767977372e-05, "start": 1700015396.938337, "stop": 1700015396.938391, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_79_4.py::test_list_of_not_containing_number", "location": ["tests55_79_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.0400998336263e-05, "start": 1700015396.939831, "stop": 1700015396.9398918, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_list_of_not_containing_number", "location": ["tests55_79_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.852899969089776e-05, "start": 1700015396.939994, "stop": 1700015396.940063, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_list_of_not_containing_number", "location": ["tests55_79_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9401998694520444e-05, "start": 1700015396.9402077, "stop": 1700015396.9402573, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_79_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.967400546884164e-05, "start": 1700015396.9402466, "stop": 1700015396.9403467, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_79_4.py::test_sublist_size", "location": ["tests55_79_4.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.49890028196387e-05, "start": 1700015396.9411917, "stop": 1700015396.9412472, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_sublist_size", "location": ["tests55_79_4.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.709800072712824e-05, "start": 1700015396.9413216, "stop": 1700015396.9413893, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_sublist_size", "location": ["tests55_79_4.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.2205003157723695e-05, "start": 1700015396.9415283, "stop": 1700015396.9415808, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_if_sublist_product_equals_number", "location": ["tests55_79_4.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.850900197401643e-05, "start": 1700015396.9420257, "stop": 1700015396.9420848, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_79_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_79_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_79_4.py": 1, "Folder_79": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_79/tests55_79_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fb219074a80>([-83])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fb219074a80>([1, -83])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fb219074a80>([-83, 1])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -83, 1, -83, 1, -83]", "        result = lists_with_product_equal_n(input_list)", "        if -83 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -83 == 1:", "            assert result.count([-83]) == 6 and result.count([1, -83]) == 6 and result.count([-83, 1]) == 6 and result.count([1, -83, 1]) == 6", "        else:", ">           assert result.count([-83]) == 3 and result.count([1, -83]) == 3 and result.count([-83, 1]) == 3 and result.count([1, -83, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fb219074a80>([-83])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fb219074a80>([1, -83])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fb219074a80>([-83, 1])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_79/tests55_79_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -83, 1, -83, 1, -83]", "        result = lists_with_product_equal_n(input_list)", "        if -83 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -83 == 1:", "            assert result.count([-83]) == 6 and result.count([1, -83]) == 6 and result.count([-83, 1]) == 6 and result.count([1, -83, 1]) == 6", "        else:", ">           assert result.count([-83]) == 3 and result.count([1, -83]) == 3 and result.count([-83, 1]) == 3 and result.count([1, -83, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fb219074a80>([-83])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fb219074a80>([1, -83])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fb219074a80>([-83, 1])", "E            +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_79/tests55_79_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_79/tests55_79_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fb219074a80>([-83])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fb219074a80>([1, -83])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fb219074a80>([-83, 1])\n +    where <built-in method count of list object at 0x7fb219074a80> = [[1, -83], [1, -83, 1], [-83], [-83, 1], [1, -83], [1, -83, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002880710017052479, "start": 1700015396.940436, "stop": 1700015396.9407244, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "53ba7982d7394beba943b1fc134fb652", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
