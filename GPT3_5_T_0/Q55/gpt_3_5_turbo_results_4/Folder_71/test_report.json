{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_71_4.py::test_list_of_single_number", "location": ["tests55_71_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010310999641660601, "start": 1700015390.394009, "stop": 1700015390.3941126, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_4.py::test_list_of_single_number", "location": ["tests55_71_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.677600271767005e-05, "start": 1700015390.3942766, "stop": 1700015390.3943636, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_4.py::test_list_of_several_same_number", "location": ["tests55_71_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.285899432143196e-05, "start": 1700015390.3939862, "stop": 1700015390.3940797, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_list_of_single_number", "location": ["tests55_71_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.799500650027767e-05, "start": 1700015390.3945348, "stop": 1700015390.3945932, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_4.py::test_list_of_several_same_number", "location": ["tests55_71_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005313200017553754, "start": 1700015390.3942313, "stop": 1700015390.394763, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_list_of_several_same_number", "location": ["tests55_71_4.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.889299791306257e-05, "start": 1700015390.3949404, "stop": 1700015390.3949995, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.355099660344422e-05, "start": 1700015390.3957667, "stop": 1700015390.395841, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_4.py::test_list_of_not_containing_number", "location": ["tests55_71_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.221600051503628e-05, "start": 1700015390.3959749, "stop": 1700015390.3960373, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_list_of_not_containing_number", "location": ["tests55_71_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.778099486837164e-05, "start": 1700015390.3961215, "stop": 1700015390.39619, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_list_of_not_containing_number", "location": ["tests55_71_4.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.4271004046313465e-05, "start": 1700015390.396334, "stop": 1700015390.3963885, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_return_elements_are_in_given_list", "location": ["tests55_71_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.94669982092455e-05, "start": 1700015390.396972, "stop": 1700015390.397032, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_return_elements_are_in_given_list", "location": ["tests55_71_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.865800241939723e-05, "start": 1700015390.39711, "stop": 1700015390.3971791, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_return_elements_are_in_given_list", "location": ["tests55_71_4.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.7932000597938895e-05, "start": 1700015390.397312, "stop": 1700015390.3973603, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_if_sublist_product_equals_number", "location": ["tests55_71_4.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.458499799715355e-05, "start": 1700015390.3978484, "stop": 1700015390.3979034, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_4.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_71/tests55_71_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc367b09500>([47])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc367b09500>([1, 47])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc367b09500>([47, 1])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc367b09500>([47])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc367b09500>([1, 47])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc367b09500>([47, 1])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_71/tests55_71_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fc367b09500>([47])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fc367b09500>([1, 47])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fc367b09500>([47, 1])", "E            +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_4/Folder_71/tests55_71_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_4/Folder_71/tests55_71_4.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fc367b09500>([47])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fc367b09500>([1, 47])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fc367b09500>([47, 1])\n +    where <built-in method count of list object at 0x7fc367b09500> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002767689948086627, "start": 1700015390.39593, "stop": 1700015390.3962073, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4d36b1ceced447d28d23aa6660830d5a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
