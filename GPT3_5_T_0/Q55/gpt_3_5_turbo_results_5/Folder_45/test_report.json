{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_45_5.py::test_list_of_several_same_number", "location": ["tests55_45_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001515500043751672, "start": 1700015457.417023, "stop": 1700015457.4171753, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_list_of_single_number", "location": ["tests55_45_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016472899733344093, "start": 1700015457.4170125, "stop": 1700015457.417178, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_5.py::test_list_of_single_number", "location": ["tests55_45_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012675600009970367, "start": 1700015457.417443, "stop": 1700015457.4175704, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_5.py::test_list_of_several_same_number", "location": ["tests55_45_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040398300188826397, "start": 1700015457.4174228, "stop": 1700015457.4178276, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_list_of_several_same_number", "location": ["tests55_45_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.684299973538145e-05, "start": 1700015457.4181035, "stop": 1700015457.4181912, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_list_of_single_number", "location": ["tests55_45_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010865899821510538, "start": 1700015457.4178326, "stop": 1700015457.417942, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_5.py::test_list_of_not_containing_number", "location": ["tests55_45_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001328979997197166, "start": 1700015457.4202845, "stop": 1700015457.420418, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_45_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011079999967478216, "start": 1700015457.4204671, "stop": 1700015457.4205787, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_45_5.py::test_list_of_not_containing_number", "location": ["tests55_45_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001607410013093613, "start": 1700015457.4205728, "stop": 1700015457.4207344, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_list_of_not_containing_number", "location": ["tests55_45_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001303449971601367, "start": 1700015457.4210176, "stop": 1700015457.421149, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_sublist_size", "location": ["tests55_45_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001493520030635409, "start": 1700015457.4225967, "stop": 1700015457.422747, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_sublist_size", "location": ["tests55_45_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020176099496893585, "start": 1700015457.422918, "stop": 1700015457.423121, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_sublist_size", "location": ["tests55_45_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015329800226027146, "start": 1700015457.4234385, "stop": 1700015457.423593, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_if_sublist_product_equals_number", "location": ["tests55_45_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001748750000842847, "start": 1700015457.424635, "stop": 1700015457.4248111, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_45_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_45_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_45_5.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_45/tests55_45_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f1c6c53c180>([-5])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f1c6c53c180>([1, -5])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f1c6c53c180>([-5, 1])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -5, 1, -5, 1, -5]", "        result = lists_with_product_equal_n(input_list)", "        if -5 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -5 == 1:", "            assert result.count([-5]) == 6 and result.count([1, -5]) == 6 and result.count([-5, 1]) == 6 and result.count([1, -5, 1]) == 6", "        else:", ">           assert result.count([-5]) == 3 and result.count([1, -5]) == 3 and result.count([-5, 1]) == 3 and result.count([1, -5, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f1c6c53c180>([-5])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f1c6c53c180>([1, -5])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f1c6c53c180>([-5, 1])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_45/tests55_45_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -5, 1, -5, 1, -5]", "        result = lists_with_product_equal_n(input_list)", "        if -5 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -5 == 1:", "            assert result.count([-5]) == 6 and result.count([1, -5]) == 6 and result.count([-5, 1]) == 6 and result.count([1, -5, 1]) == 6", "        else:", ">           assert result.count([-5]) == 3 and result.count([1, -5]) == 3 and result.count([-5, 1]) == 3 and result.count([1, -5, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f1c6c53c180>([-5])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f1c6c53c180>([1, -5])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f1c6c53c180>([-5, 1])", "E            +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_45/tests55_45_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_45/tests55_45_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f1c6c53c180>([-5])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f1c6c53c180>([1, -5])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f1c6c53c180>([-5, 1])\n +    where <built-in method count of list object at 0x7f1c6c53c180> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004801050017704256, "start": 1700015457.4207213, "stop": 1700015457.4212022, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b29096292ae14dfebeb073e7c8562d6c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
