{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_72_5.py::test_list_of_several_same_number", "location": ["tests55_72_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012614500155905262, "start": 1700015480.7554734, "stop": 1700015480.7556, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_list_of_single_number", "location": ["tests55_72_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011441999959060922, "start": 1700015480.7554333, "stop": 1700015480.7555482, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_72_5.py::test_list_of_single_number", "location": ["tests55_72_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.091599349630997e-05, "start": 1700015480.755764, "stop": 1700015480.7558553, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_72_5.py::test_list_of_single_number", "location": ["tests55_72_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.968699406366795e-05, "start": 1700015480.756029, "stop": 1700015480.756089, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_72_5.py::test_list_of_several_same_number", "location": ["tests55_72_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005512529969564639, "start": 1700015480.7557743, "stop": 1700015480.756326, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_list_of_several_same_number", "location": ["tests55_72_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.6299002608284354e-05, "start": 1700015480.7564921, "stop": 1700015480.756549, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_72_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.270100129768252e-05, "start": 1700015480.7570407, "stop": 1700015480.7571037, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_72_5.py::test_list_of_not_containing_number", "location": ["tests55_72_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.00200000917539e-05, "start": 1700015480.7575414, "stop": 1700015480.7576015, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_list_of_not_containing_number", "location": ["tests55_72_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.486599886557087e-05, "start": 1700015480.7576814, "stop": 1700015480.7577467, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_list_of_not_containing_number", "location": ["tests55_72_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.8387999413535e-05, "start": 1700015480.7578802, "stop": 1700015480.7579293, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_return_elements_are_in_given_list", "location": ["tests55_72_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.4365998948924243e-05, "start": 1700015480.7585597, "stop": 1700015480.7586143, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_return_elements_are_in_given_list", "location": ["tests55_72_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.974300049478188e-05, "start": 1700015480.7586884, "stop": 1700015480.7587583, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_return_elements_are_in_given_list", "location": ["tests55_72_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.7601999540347606e-05, "start": 1700015480.758893, "stop": 1700015480.758941, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_if_sublist_product_equals_number", "location": ["tests55_72_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.791199509985745e-05, "start": 1700015480.7594237, "stop": 1700015480.759482, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_72_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_72_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_72_5.py": 1, "Folder_72": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_72/tests55_72_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fef5c374580>([10])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fef5c374580>([1, 10])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fef5c374580>([10, 1])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 10, 1, 10, 1, 10]", "        result = lists_with_product_equal_n(input_list)", "        if 10 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 10 == 1:", "            assert result.count([10]) == 6 and result.count([1, 10]) == 6 and result.count([10, 1]) == 6 and result.count([1, 10, 1]) == 6", "        else:", ">           assert result.count([10]) == 3 and result.count([1, 10]) == 3 and result.count([10, 1]) == 3 and result.count([1, 10, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fef5c374580>([10])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fef5c374580>([1, 10])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fef5c374580>([10, 1])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_72/tests55_72_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 10, 1, 10, 1, 10]", "        result = lists_with_product_equal_n(input_list)", "        if 10 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 10 == 1:", "            assert result.count([10]) == 6 and result.count([1, 10]) == 6 and result.count([10, 1]) == 6 and result.count([1, 10, 1]) == 6", "        else:", ">           assert result.count([10]) == 3 and result.count([1, 10]) == 3 and result.count([10, 1]) == 3 and result.count([1, 10, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fef5c374580>([10])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fef5c374580>([1, 10])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fef5c374580>([10, 1])", "E            +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_72/tests55_72_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_72/tests55_72_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fef5c374580>([10])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fef5c374580>([1, 10])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fef5c374580>([10, 1])\n +    where <built-in method count of list object at 0x7fef5c374580> = [[1, 10], [1, 10, 1], [10], [10, 1], [1, 10], [1, 10, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027370899624656886, "start": 1700015480.75718, "stop": 1700015480.757454, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5c65be21bc284e48a8bae02565e1022c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
