{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_65_5.py::test_list_of_single_number", "location": ["tests55_65_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000129031999676954, "start": 1700015474.7999415, "stop": 1700015474.8000712, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_5.py::test_list_of_several_same_number", "location": ["tests55_65_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.735300409374759e-05, "start": 1700015474.7999387, "stop": 1700015474.8000362, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_list_of_several_same_number", "location": ["tests55_65_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005250469985185191, "start": 1700015474.800207, "stop": 1700015474.8007321, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_list_of_single_number", "location": ["tests55_65_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.36170035856776e-05, "start": 1700015474.8002505, "stop": 1700015474.800345, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_5.py::test_list_of_single_number", "location": ["tests55_65_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.0675003624055535e-05, "start": 1700015474.800569, "stop": 1700015474.8006303, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_5.py::test_list_of_several_same_number", "location": ["tests55_65_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.753900040872395e-05, "start": 1700015474.8008993, "stop": 1700015474.8009574, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.623499550390989e-05, "start": 1700015474.802019, "stop": 1700015474.8020957, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_65_5.py::test_list_of_not_containing_number", "location": ["tests55_65_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.975800013402477e-05, "start": 1700015474.802237, "stop": 1700015474.802297, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_list_of_not_containing_number", "location": ["tests55_65_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.857200060039759e-05, "start": 1700015474.8023815, "stop": 1700015474.8024504, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_list_of_not_containing_number", "location": ["tests55_65_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.047200102126226e-05, "start": 1700015474.8025923, "stop": 1700015474.802643, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_return_elements_are_in_given_list", "location": ["tests55_65_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.6094002502504736e-05, "start": 1700015474.8030987, "stop": 1700015474.8031552, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_return_elements_are_in_given_list", "location": ["tests55_65_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.075999747030437e-05, "start": 1700015474.80323, "stop": 1700015474.803301, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_return_elements_are_in_given_list", "location": ["tests55_65_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.798900044988841e-05, "start": 1700015474.8034377, "stop": 1700015474.803486, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_if_sublist_product_equals_number", "location": ["tests55_65_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.595800030278042e-05, "start": 1700015474.8040428, "stop": 1700015474.804099, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_65_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_65_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_65_5.py": 1, "Folder_65": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_65/tests55_65_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fb3e02756c0>([46])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fb3e02756c0>([1, 46])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fb3e02756c0>([46, 1])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fb3e02756c0>([46])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fb3e02756c0>([1, 46])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fb3e02756c0>([46, 1])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_65/tests55_65_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 46, 1, 46, 1, 46]", "        result = lists_with_product_equal_n(input_list)", "        if 46 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 46 == 1:", "            assert result.count([46]) == 6 and result.count([1, 46]) == 6 and result.count([46, 1]) == 6 and result.count([1, 46, 1]) == 6", "        else:", ">           assert result.count([46]) == 3 and result.count([1, 46]) == 3 and result.count([46, 1]) == 3 and result.count([1, 46, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fb3e02756c0>([46])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fb3e02756c0>([1, 46])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fb3e02756c0>([46, 1])", "E            +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_65/tests55_65_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_65/tests55_65_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fb3e02756c0>([46])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fb3e02756c0>([1, 46])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fb3e02756c0>([46, 1])\n +    where <built-in method count of list object at 0x7fb3e02756c0> = [[1, 46], [1, 46, 1], [46], [46, 1], [1, 46], [1, 46, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002835889972629957, "start": 1700015474.8021858, "stop": 1700015474.80247, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b629427f23c48e7b56224077e911879", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
