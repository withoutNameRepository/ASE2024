{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_70_5.py::test_list_of_several_same_number", "location": ["tests55_70_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010589400335447863, "start": 1700015479.0474896, "stop": 1700015479.0475957, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_list_of_several_same_number", "location": ["tests55_70_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002272909987368621, "start": 1700015479.0477743, "stop": 1700015479.048002, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_list_of_single_number", "location": ["tests55_70_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011661600001389161, "start": 1700015479.0474925, "stop": 1700015479.0476098, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_5.py::test_list_of_single_number", "location": ["tests55_70_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010916800238192081, "start": 1700015479.047805, "stop": 1700015479.0479145, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_5.py::test_list_of_single_number", "location": ["tests55_70_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.5878997955005616e-05, "start": 1700015479.0481296, "stop": 1700015479.0481858, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_5.py::test_list_of_several_same_number", "location": ["tests55_70_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.16750034573488e-05, "start": 1700015479.0481753, "stop": 1700015479.0482576, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_list_of_not_containing_number", "location": ["tests55_70_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.157300180755556e-05, "start": 1700015479.0497255, "stop": 1700015479.0498073, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_list_of_not_containing_number", "location": ["tests55_70_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.035000453470275e-05, "start": 1700015479.049911, "stop": 1700015479.0499816, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_70_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.30589997349307e-05, "start": 1700015479.049709, "stop": 1700015479.0497925, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_5.py::test_list_of_not_containing_number", "location": ["tests55_70_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.282199319684878e-05, "start": 1700015479.0501325, "stop": 1700015479.0501957, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_return_elements_are_in_given_list", "location": ["tests55_70_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.74529985897243e-05, "start": 1700015479.051452, "stop": 1700015479.0515099, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_return_elements_are_in_given_list", "location": ["tests55_70_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.109700527507812e-05, "start": 1700015479.0515835, "stop": 1700015479.0516548, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_return_elements_are_in_given_list", "location": ["tests55_70_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.584099951898679e-05, "start": 1700015479.0517857, "stop": 1700015479.0518317, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_if_sublist_product_equals_number", "location": ["tests55_70_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.83220020821318e-05, "start": 1700015479.0527856, "stop": 1700015479.0528646, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_70_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_70_5.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_70/tests55_70_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f8717d10b40>([32])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f8717d10b40>([1, 32])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f8717d10b40>([32, 1])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 32, 1, 32, 1, 32]", "        result = lists_with_product_equal_n(input_list)", "        if 32 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 32 == 1:", "            assert result.count([32]) == 6 and result.count([1, 32]) == 6 and result.count([32, 1]) == 6 and result.count([1, 32, 1]) == 6", "        else:", ">           assert result.count([32]) == 3 and result.count([1, 32]) == 3 and result.count([32, 1]) == 3 and result.count([1, 32, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f8717d10b40>([32])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f8717d10b40>([1, 32])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f8717d10b40>([32, 1])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_70/tests55_70_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 32, 1, 32, 1, 32]", "        result = lists_with_product_equal_n(input_list)", "        if 32 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 32 == 1:", "            assert result.count([32]) == 6 and result.count([1, 32]) == 6 and result.count([32, 1]) == 6 and result.count([1, 32, 1]) == 6", "        else:", ">           assert result.count([32]) == 3 and result.count([1, 32]) == 3 and result.count([32, 1]) == 3 and result.count([1, 32, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f8717d10b40>([32])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f8717d10b40>([1, 32])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f8717d10b40>([32, 1])", "E            +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_70/tests55_70_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_5/Folder_70/tests55_70_5.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f8717d10b40>([32])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f8717d10b40>([1, 32])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f8717d10b40>([32, 1])\n +    where <built-in method count of list object at 0x7f8717d10b40> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002997560004587285, "start": 1700015479.0499115, "stop": 1700015479.0502117, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a50d5fdd72904f11b1223bdd30c950f0", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
