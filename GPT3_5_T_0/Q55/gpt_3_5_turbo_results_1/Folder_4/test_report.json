{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_4_1.py::test_list_of_single_number", "location": ["tests55_4_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013173600018490106, "start": 1700015127.0220938, "stop": 1700015127.022226, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_1.py::test_list_of_several_same_number", "location": ["tests55_4_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011418400390539318, "start": 1700015127.0219655, "stop": 1700015127.0220804, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_list_of_single_number", "location": ["tests55_4_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011124400043627247, "start": 1700015127.0224404, "stop": 1700015127.0225523, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_1.py::test_list_of_single_number", "location": ["tests55_4_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.093499880284071e-05, "start": 1700015127.0227823, "stop": 1700015127.0228536, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_1.py::test_list_of_several_same_number", "location": ["tests55_4_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007938490016385913, "start": 1700015127.022271, "stop": 1700015127.0230653, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_list_of_several_same_number", "location": ["tests55_4_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.36599977244623e-05, "start": 1700015127.0232725, "stop": 1700015127.0233467, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_4_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.339199510170147e-05, "start": 1700015127.02391, "stop": 1700015127.023984, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_4_1.py::test_list_of_not_containing_number", "location": ["tests55_4_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.735199713148177e-05, "start": 1700015127.0244591, "stop": 1700015127.0245268, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_list_of_not_containing_number", "location": ["tests55_4_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.377199654001743e-05, "start": 1700015127.0246184, "stop": 1700015127.0246928, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_list_of_not_containing_number", "location": ["tests55_4_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.189599662320688e-05, "start": 1700015127.0248518, "stop": 1700015127.0249143, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_return_elements_are_in_given_list", "location": ["tests55_4_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.631499854847789e-05, "start": 1700015127.0254502, "stop": 1700015127.025517, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_return_elements_are_in_given_list", "location": ["tests55_4_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.030999742913991e-05, "start": 1700015127.0256052, "stop": 1700015127.025686, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_return_elements_are_in_given_list", "location": ["tests55_4_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.129400233272463e-05, "start": 1700015127.025832, "stop": 1700015127.025884, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_if_sublist_product_equals_number", "location": ["tests55_4_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.590399814536795e-05, "start": 1700015127.026382, "stop": 1700015127.0264385, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_4_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_4_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_4_1.py": 1, "Folder_4": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_4/tests55_4_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fba86839940>([91])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fba86839940>([1, 91])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fba86839940>([91, 1])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 91, 1, 91, 1, 91]", "        result = lists_with_product_equal_n(input_list)", "        if 91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 91 == 1:", "            assert result.count([91]) == 6 and result.count([1, 91]) == 6 and result.count([91, 1]) == 6 and result.count([1, 91, 1]) == 6", "        else:", ">           assert result.count([91]) == 3 and result.count([1, 91]) == 3 and result.count([91, 1]) == 3 and result.count([1, 91, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fba86839940>([91])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fba86839940>([1, 91])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fba86839940>([91, 1])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_4/tests55_4_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 91, 1, 91, 1, 91]", "        result = lists_with_product_equal_n(input_list)", "        if 91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 91 == 1:", "            assert result.count([91]) == 6 and result.count([1, 91]) == 6 and result.count([91, 1]) == 6 and result.count([1, 91, 1]) == 6", "        else:", ">           assert result.count([91]) == 3 and result.count([1, 91]) == 3 and result.count([91, 1]) == 3 and result.count([1, 91, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fba86839940>([91])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fba86839940>([1, 91])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fba86839940>([91, 1])", "E            +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_4/tests55_4_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_4/tests55_4_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fba86839940>([91])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fba86839940>([1, 91])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fba86839940>([91, 1])\n +    where <built-in method count of list object at 0x7fba86839940> = [[1, 91], [1, 91, 1], [91], [91, 1], [1, 91], [1, 91, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003038240029127337, "start": 1700015127.024075, "stop": 1700015127.0243795, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7666ce6d0fcd47429fe16261bbe08d3f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
