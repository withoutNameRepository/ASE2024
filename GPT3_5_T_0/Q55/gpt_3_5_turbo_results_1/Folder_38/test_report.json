{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_38_1.py::test_list_of_single_number", "location": ["tests55_38_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.246599802281708e-05, "start": 1700015145.4869504, "stop": 1700015145.4870434, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_38_1.py::test_list_of_several_same_number", "location": ["tests55_38_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.660400246502832e-05, "start": 1700015145.4869628, "stop": 1700015145.487062, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_list_of_single_number", "location": ["tests55_38_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.688399975653738e-05, "start": 1700015145.4872265, "stop": 1700015145.4873137, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_38_1.py::test_list_of_several_same_number", "location": ["tests55_38_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002542180009186268, "start": 1700015145.4872487, "stop": 1700015145.487503, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_list_of_several_same_number", "location": ["tests55_38_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.39749996480532e-05, "start": 1700015145.4876888, "stop": 1700015145.487753, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_list_of_single_number", "location": ["tests55_38_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.514900112757459e-05, "start": 1700015145.487526, "stop": 1700015145.4875815, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_38_1.py::test_list_of_not_containing_number", "location": ["tests55_38_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.23309931345284e-05, "start": 1700015145.4889958, "stop": 1700015145.4890685, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_38_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.218900282168761e-05, "start": 1700015145.4890435, "stop": 1700015145.4891162, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_38_1.py::test_list_of_not_containing_number", "location": ["tests55_38_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.432999700540677e-05, "start": 1700015145.4891608, "stop": 1700015145.4892352, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_list_of_not_containing_number", "location": ["tests55_38_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.9033995310310274e-05, "start": 1700015145.4893777, "stop": 1700015145.489427, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_sublist_size", "location": ["tests55_38_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.393600440584123e-05, "start": 1700015145.4900367, "stop": 1700015145.490091, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_sublist_size", "location": ["tests55_38_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.19469938101247e-05, "start": 1700015145.4901643, "stop": 1700015145.4902265, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_sublist_size", "location": ["tests55_38_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.4885993702337146e-05, "start": 1700015145.4903595, "stop": 1700015145.4904048, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_if_sublist_product_equals_number", "location": ["tests55_38_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.320499571505934e-05, "start": 1700015145.4909337, "stop": 1700015145.4910076, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_38_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_38_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_38_1.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_38/tests55_38_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f9803d10d00>([-23])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f9803d10d00>([1, -23])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f9803d10d00>([-23, 1])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -23, 1, -23, 1, -23]", "        result = lists_with_product_equal_n(input_list)", "        if -23 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -23 == 1:", "            assert result.count([-23]) == 6 and result.count([1, -23]) == 6 and result.count([-23, 1]) == 6 and result.count([1, -23, 1]) == 6", "        else:", ">           assert result.count([-23]) == 3 and result.count([1, -23]) == 3 and result.count([-23, 1]) == 3 and result.count([1, -23, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f9803d10d00>([-23])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f9803d10d00>([1, -23])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f9803d10d00>([-23, 1])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_38/tests55_38_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -23, 1, -23, 1, -23]", "        result = lists_with_product_equal_n(input_list)", "        if -23 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -23 == 1:", "            assert result.count([-23]) == 6 and result.count([1, -23]) == 6 and result.count([-23, 1]) == 6 and result.count([1, -23, 1]) == 6", "        else:", ">           assert result.count([-23]) == 3 and result.count([1, -23]) == 3 and result.count([-23, 1]) == 3 and result.count([1, -23, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f9803d10d00>([-23])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f9803d10d00>([1, -23])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f9803d10d00>([-23, 1])", "E            +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_38/tests55_38_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_38/tests55_38_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f9803d10d00>([-23])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f9803d10d00>([1, -23])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f9803d10d00>([-23, 1])\n +    where <built-in method count of list object at 0x7f9803d10d00> = [[1, -23], [1, -23, 1], [-23], [-23, 1], [1, -23], [1, -23, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027644399960990995, "start": 1700015145.4892151, "stop": 1700015145.4894922, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ee0adf8e1c3c4044ba9fb51eb084c889", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
