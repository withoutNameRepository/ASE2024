{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_95_1.py::test_list_of_single_number", "location": ["tests55_95_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001243680017068982, "start": 1700015178.3687437, "stop": 1700015178.3688686, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_1.py::test_list_of_single_number", "location": ["tests55_95_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010565700358711183, "start": 1700015178.3690746, "stop": 1700015178.369181, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_1.py::test_list_of_single_number", "location": ["tests55_95_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.495799945900217e-05, "start": 1700015178.3693914, "stop": 1700015178.3694668, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_1.py::test_list_of_several_same_number", "location": ["tests55_95_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001177200028905645, "start": 1700015178.3687806, "stop": 1700015178.3688989, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_list_of_several_same_number", "location": ["tests55_95_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00047723900206619874, "start": 1700015178.3690822, "stop": 1700015178.3695598, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_list_of_several_same_number", "location": ["tests55_95_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.856199615867808e-05, "start": 1700015178.3697617, "stop": 1700015178.3698308, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_95_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.945300265215337e-05, "start": 1700015178.371149, "stop": 1700015178.371219, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_95_1.py::test_list_of_not_containing_number", "location": ["tests55_95_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.650299812667072e-05, "start": 1700015178.3719718, "stop": 1700015178.3720489, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_list_of_not_containing_number", "location": ["tests55_95_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.117799734463915e-05, "start": 1700015178.3721468, "stop": 1700015178.3722286, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_list_of_not_containing_number", "location": ["tests55_95_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.102600309532136e-05, "start": 1700015178.3723986, "stop": 1700015178.3724601, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_return_elements_are_in_given_list", "location": ["tests55_95_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.539099897257984e-05, "start": 1700015178.3737292, "stop": 1700015178.373805, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_return_elements_are_in_given_list", "location": ["tests55_95_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.27459986996837e-05, "start": 1700015178.373907, "stop": 1700015178.3740003, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_return_elements_are_in_given_list", "location": ["tests55_95_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.206399848451838e-05, "start": 1700015178.3741753, "stop": 1700015178.3742378, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_if_sublist_product_equals_number", "location": ["tests55_95_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.383899744832888e-05, "start": 1700015178.3750653, "stop": 1700015178.3751297, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_95_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_95_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_95_1.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_95/tests55_95_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f0b83d10d80>([28])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f0b83d10d80>([1, 28])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f0b83d10d80>([28, 1])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 28, 1, 28, 1, 28]", "        result = lists_with_product_equal_n(input_list)", "        if 28 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 28 == 1:", "            assert result.count([28]) == 6 and result.count([1, 28]) == 6 and result.count([28, 1]) == 6 and result.count([1, 28, 1]) == 6", "        else:", ">           assert result.count([28]) == 3 and result.count([1, 28]) == 3 and result.count([28, 1]) == 3 and result.count([1, 28, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f0b83d10d80>([28])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f0b83d10d80>([1, 28])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f0b83d10d80>([28, 1])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_95/tests55_95_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 28, 1, 28, 1, 28]", "        result = lists_with_product_equal_n(input_list)", "        if 28 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 28 == 1:", "            assert result.count([28]) == 6 and result.count([1, 28]) == 6 and result.count([28, 1]) == 6 and result.count([1, 28, 1]) == 6", "        else:", ">           assert result.count([28]) == 3 and result.count([1, 28]) == 3 and result.count([28, 1]) == 3 and result.count([1, 28, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f0b83d10d80>([28])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f0b83d10d80>([1, 28])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f0b83d10d80>([28, 1])", "E            +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_95/tests55_95_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_95/tests55_95_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f0b83d10d80>([28])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f0b83d10d80>([1, 28])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f0b83d10d80>([28, 1])\n +    where <built-in method count of list object at 0x7f0b83d10d80> = [[1, 28], [1, 28, 1], [28], [28, 1], [1, 28], [1, 28, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033253499714192003, "start": 1700015178.3713138, "stop": 1700015178.371647, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2d2661bf16d344bb9f609148b6b3bc89", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
