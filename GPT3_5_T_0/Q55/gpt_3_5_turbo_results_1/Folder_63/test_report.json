{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_63_1.py::test_list_of_several_same_number", "location": ["tests55_63_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013813400437356904, "start": 1700015159.6892529, "stop": 1700015159.6893914, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_list_of_several_same_number", "location": ["tests55_63_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001109020013245754, "start": 1700015159.689554, "stop": 1700015159.689665, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_list_of_several_same_number", "location": ["tests55_63_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012161300401203334, "start": 1700015159.6898553, "stop": 1700015159.6899772, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_list_of_single_number", "location": ["tests55_63_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011575000098673627, "start": 1700015159.689246, "stop": 1700015159.6893623, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_1.py::test_list_of_single_number", "location": ["tests55_63_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010402100451756269, "start": 1700015159.6895561, "stop": 1700015159.6896608, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_1.py::test_list_of_single_number", "location": ["tests55_63_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.182499782880768e-05, "start": 1700015159.6898582, "stop": 1700015159.6899204, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_1.py::test_list_of_not_containing_number", "location": ["tests55_63_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.819399615982547e-05, "start": 1700015159.6910174, "stop": 1700015159.691096, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_list_of_not_containing_number", "location": ["tests55_63_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.867299427744001e-05, "start": 1700015159.6912227, "stop": 1700015159.6913018, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_list_of_not_containing_number", "location": ["tests55_63_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.569800123339519e-05, "start": 1700015159.6914856, "stop": 1700015159.6915417, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.695399785414338e-05, "start": 1700015159.6912756, "stop": 1700015159.691373, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_63_1.py::test_sublist_size", "location": ["tests55_63_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.28260017442517e-05, "start": 1700015159.6921382, "stop": 1700015159.6922214, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_sublist_size", "location": ["tests55_63_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011399499635444954, "start": 1700015159.6923282, "stop": 1700015159.6924427, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_sublist_size", "location": ["tests55_63_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.384000153047964e-05, "start": 1700015159.6926143, "stop": 1700015159.6926787, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_if_sublist_product_equals_number", "location": ["tests55_63_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.109199891099706e-05, "start": 1700015159.6933208, "stop": 1700015159.6934123, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_63_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_63_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_63/tests55_63_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f7368f74780>([96])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f7368f74780>([1, 96])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f7368f74780>([96, 1])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f7368f74780>([96])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f7368f74780>([1, 96])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f7368f74780>([96, 1])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_63/tests55_63_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 96, 1, 96, 1, 96]", "        result = lists_with_product_equal_n(input_list)", "        if 96 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 96 == 1:", "            assert result.count([96]) == 6 and result.count([1, 96]) == 6 and result.count([96, 1]) == 6 and result.count([1, 96, 1]) == 6", "        else:", ">           assert result.count([96]) == 3 and result.count([1, 96]) == 3 and result.count([96, 1]) == 3 and result.count([1, 96, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f7368f74780>([96])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f7368f74780>([1, 96])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f7368f74780>([96, 1])", "E            +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_63/tests55_63_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_63/tests55_63_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f7368f74780>([96])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f7368f74780>([1, 96])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f7368f74780>([96, 1])\n +    where <built-in method count of list object at 0x7f7368f74780> = [[1, 96], [1, 96, 1], [96], [96, 1], [1, 96], [1, 96, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030196299485396594, "start": 1700015159.6914654, "stop": 1700015159.6917677, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "02c71032a75045f2a20002f7e42fc5f2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
