{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_71_1.py::test_list_of_single_number", "location": ["tests55_71_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011166000331286341, "start": 1700015164.2839994, "stop": 1700015164.2841115, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_1.py::test_list_of_single_number", "location": ["tests55_71_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.362200216855854e-05, "start": 1700015164.2843108, "stop": 1700015164.2844048, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_1.py::test_list_of_single_number", "location": ["tests55_71_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.8889003412332386e-05, "start": 1700015164.2846093, "stop": 1700015164.2846687, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_1.py::test_list_of_several_same_number", "location": ["tests55_71_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001277289993595332, "start": 1700015164.2840765, "stop": 1700015164.2842045, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_list_of_several_same_number", "location": ["tests55_71_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027892599609913304, "start": 1700015164.2843673, "stop": 1700015164.2846467, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_list_of_several_same_number", "location": ["tests55_71_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.984699964756146e-05, "start": 1700015164.2848263, "stop": 1700015164.2848868, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.77629980398342e-05, "start": 1700015164.2859015, "stop": 1700015164.2859597, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_71_1.py::test_list_of_not_containing_number", "location": ["tests55_71_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.912999768042937e-05, "start": 1700015164.286068, "stop": 1700015164.2861273, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_list_of_not_containing_number", "location": ["tests55_71_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.425700121326372e-05, "start": 1700015164.2862086, "stop": 1700015164.286273, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_list_of_not_containing_number", "location": ["tests55_71_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.821699985768646e-05, "start": 1700015164.2864082, "stop": 1700015164.2864568, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_return_elements_are_in_given_list", "location": ["tests55_71_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.5143995268736035e-05, "start": 1700015164.2868915, "stop": 1700015164.286947, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_return_elements_are_in_given_list", "location": ["tests55_71_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.385699816746637e-05, "start": 1700015164.2870195, "stop": 1700015164.2870839, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_return_elements_are_in_given_list", "location": ["tests55_71_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.64510012534447e-05, "start": 1700015164.287212, "stop": 1700015164.2872586, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_if_sublist_product_equals_number", "location": ["tests55_71_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.527399480342865e-05, "start": 1700015164.2876582, "stop": 1700015164.287714, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_71_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_71_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_71_1.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_71/tests55_71_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fbface3d280>([47])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fbface3d280>([1, 47])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fbface3d280>([47, 1])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fbface3d280>([47])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fbface3d280>([1, 47])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fbface3d280>([47, 1])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_71/tests55_71_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 47, 1, 47, 1, 47]", "        result = lists_with_product_equal_n(input_list)", "        if 47 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 47 == 1:", "            assert result.count([47]) == 6 and result.count([1, 47]) == 6 and result.count([47, 1]) == 6 and result.count([1, 47, 1]) == 6", "        else:", ">           assert result.count([47]) == 3 and result.count([1, 47]) == 3 and result.count([47, 1]) == 3 and result.count([1, 47, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7fbface3d280>([47])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7fbface3d280>([1, 47])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7fbface3d280>([47, 1])", "E            +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_71/tests55_71_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_71/tests55_71_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7fbface3d280>([47])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7fbface3d280>([1, 47])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7fbface3d280>([47, 1])\n +    where <built-in method count of list object at 0x7fbface3d280> = [[1, 47], [1, 47, 1], [47], [47, 1], [1, 47], [1, 47, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002725240046856925, "start": 1700015164.2860367, "stop": 1700015164.2863097, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b74e2a86cb0643c693f58813f885a296", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
