{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_70_1.py::test_list_of_several_same_number", "location": ["tests55_70_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012558700109366328, "start": 1700015163.7436829, "stop": 1700015163.7438087, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_list_of_single_number", "location": ["tests55_70_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011130500206490979, "start": 1700015163.7436495, "stop": 1700015163.743761, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_1.py::test_list_of_single_number", "location": ["tests55_70_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.808200411498547e-05, "start": 1700015163.7439482, "stop": 1700015163.744047, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_1.py::test_list_of_single_number", "location": ["tests55_70_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.868600030429661e-05, "start": 1700015163.7442524, "stop": 1700015163.7443216, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_1.py::test_list_of_several_same_number", "location": ["tests55_70_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00043181399814784527, "start": 1700015163.7439547, "stop": 1700015163.7443871, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_list_of_several_same_number", "location": ["tests55_70_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.865500133950263e-05, "start": 1700015163.7445648, "stop": 1700015163.744624, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_70_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.0389997088350356e-05, "start": 1700015163.7454085, "stop": 1700015163.7454693, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_70_1.py::test_list_of_not_containing_number", "location": ["tests55_70_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.949699698248878e-05, "start": 1700015163.7457318, "stop": 1700015163.7457917, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_list_of_not_containing_number", "location": ["tests55_70_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.59889992675744e-05, "start": 1700015163.745871, "stop": 1700015163.7459373, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_list_of_not_containing_number", "location": ["tests55_70_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.851600533584133e-05, "start": 1700015163.7460732, "stop": 1700015163.7461221, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_return_elements_are_in_given_list", "location": ["tests55_70_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.627099744742736e-05, "start": 1700015163.7467752, "stop": 1700015163.7468317, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_return_elements_are_in_given_list", "location": ["tests55_70_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.207100134110078e-05, "start": 1700015163.746904, "stop": 1700015163.7469761, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_return_elements_are_in_given_list", "location": ["tests55_70_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.093399522593245e-05, "start": 1700015163.7471077, "stop": 1700015163.747159, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_if_sublist_product_equals_number", "location": ["tests55_70_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.728700489271432e-05, "start": 1700015163.7477775, "stop": 1700015163.7478352, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_70_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_70_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_70_1.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_70/tests55_70_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7faff0478380>([32])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7faff0478380>([1, 32])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7faff0478380>([32, 1])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 32, 1, 32, 1, 32]", "        result = lists_with_product_equal_n(input_list)", "        if 32 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 32 == 1:", "            assert result.count([32]) == 6 and result.count([1, 32]) == 6 and result.count([32, 1]) == 6 and result.count([1, 32, 1]) == 6", "        else:", ">           assert result.count([32]) == 3 and result.count([1, 32]) == 3 and result.count([32, 1]) == 3 and result.count([1, 32, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7faff0478380>([32])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7faff0478380>([1, 32])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7faff0478380>([32, 1])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_70/tests55_70_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 32, 1, 32, 1, 32]", "        result = lists_with_product_equal_n(input_list)", "        if 32 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 32 == 1:", "            assert result.count([32]) == 6 and result.count([1, 32]) == 6 and result.count([32, 1]) == 6 and result.count([1, 32, 1]) == 6", "        else:", ">           assert result.count([32]) == 3 and result.count([1, 32]) == 3 and result.count([32, 1]) == 3 and result.count([1, 32, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7faff0478380>([32])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7faff0478380>([1, 32])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7faff0478380>([32, 1])", "E            +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_70/tests55_70_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_70/tests55_70_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7faff0478380>([32])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7faff0478380>([1, 32])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7faff0478380>([32, 1])\n +    where <built-in method count of list object at 0x7faff0478380> = [[1, 32], [1, 32, 1], [32], [32, 1], [1, 32], [1, 32, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027861199487233534, "start": 1700015163.7455475, "stop": 1700015163.7458265, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "93994319a6504616b52f6e37c9775b32", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
