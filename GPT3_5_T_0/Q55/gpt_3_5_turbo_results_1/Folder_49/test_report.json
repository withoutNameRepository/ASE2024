{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_49_1.py::test_list_of_several_same_number", "location": ["tests55_49_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.692699677543715e-05, "start": 1700015151.7941258, "stop": 1700015151.794223, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_list_of_several_same_number", "location": ["tests55_49_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012227999832248315, "start": 1700015151.7944145, "stop": 1700015151.7945373, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_list_of_several_same_number", "location": ["tests55_49_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013292199582792819, "start": 1700015151.7947478, "stop": 1700015151.7948813, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_list_of_single_number", "location": ["tests55_49_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011281199840595946, "start": 1700015151.794297, "stop": 1700015151.7944105, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_49_1.py::test_list_of_single_number", "location": ["tests55_49_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.318899537902325e-05, "start": 1700015151.7946436, "stop": 1700015151.7947373, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_49_1.py::test_list_of_single_number", "location": ["tests55_49_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.89379997109063e-05, "start": 1700015151.7949414, "stop": 1700015151.7950008, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_49_1.py::test_list_of_not_containing_number", "location": ["tests55_49_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.412799848476425e-05, "start": 1700015151.795911, "stop": 1700015151.7959757, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_list_of_not_containing_number", "location": ["tests55_49_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.974700227146968e-05, "start": 1700015151.796082, "stop": 1700015151.796152, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_list_of_not_containing_number", "location": ["tests55_49_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.1173999963793904e-05, "start": 1700015151.7962978, "stop": 1700015151.7963493, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_49_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.064700523391366e-05, "start": 1700015151.7963765, "stop": 1700015151.7964578, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_49_1.py::test_sublist_size", "location": ["tests55_49_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.149800174171105e-05, "start": 1700015151.7974539, "stop": 1700015151.7975159, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_sublist_size", "location": ["tests55_49_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.9246998464223e-05, "start": 1700015151.7975972, "stop": 1700015151.7976668, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_sublist_size", "location": ["tests55_49_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.896499740425497e-05, "start": 1700015151.797804, "stop": 1700015151.7978535, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_if_sublist_product_equals_number", "location": ["tests55_49_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.616399721475318e-05, "start": 1700015151.7983494, "stop": 1700015151.798406, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_49_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_49_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_49_1.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_49/tests55_49_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f1b5fb08a00>([-61])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f1b5fb08a00>([1, -61])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f1b5fb08a00>([-61, 1])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -61, 1, -61, 1, -61]", "        result = lists_with_product_equal_n(input_list)", "        if -61 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -61 == 1:", "            assert result.count([-61]) == 6 and result.count([1, -61]) == 6 and result.count([-61, 1]) == 6 and result.count([1, -61, 1]) == 6", "        else:", ">           assert result.count([-61]) == 3 and result.count([1, -61]) == 3 and result.count([-61, 1]) == 3 and result.count([1, -61, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f1b5fb08a00>([-61])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f1b5fb08a00>([1, -61])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f1b5fb08a00>([-61, 1])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_49/tests55_49_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -61, 1, -61, 1, -61]", "        result = lists_with_product_equal_n(input_list)", "        if -61 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -61 == 1:", "            assert result.count([-61]) == 6 and result.count([1, -61]) == 6 and result.count([-61, 1]) == 6 and result.count([1, -61, 1]) == 6", "        else:", ">           assert result.count([-61]) == 3 and result.count([1, -61]) == 3 and result.count([-61, 1]) == 3 and result.count([1, -61, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f1b5fb08a00>([-61])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f1b5fb08a00>([1, -61])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f1b5fb08a00>([-61, 1])", "E            +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_49/tests55_49_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_49/tests55_49_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f1b5fb08a00>([-61])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f1b5fb08a00>([1, -61])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f1b5fb08a00>([-61, 1])\n +    where <built-in method count of list object at 0x7f1b5fb08a00> = [[1, -61], [1, -61, 1], [-61], [-61, 1], [1, -61], [1, -61, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002996090042870492, "start": 1700015151.796552, "stop": 1700015151.7968519, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b28772b6ed743658b2321c91341b534", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
