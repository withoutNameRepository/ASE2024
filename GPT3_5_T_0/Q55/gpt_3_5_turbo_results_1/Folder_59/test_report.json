{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_59_1.py::test_list_of_several_same_number", "location": ["tests55_59_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016844699712237343, "start": 1700015157.3951, "stop": 1700015157.3952694, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_list_of_single_number", "location": ["tests55_59_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018915499822469428, "start": 1700015157.3951166, "stop": 1700015157.3953068, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_1.py::test_list_of_several_same_number", "location": ["tests55_59_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001725590045680292, "start": 1700015157.3955724, "stop": 1700015157.3957455, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_list_of_single_number", "location": ["tests55_59_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017131899949163198, "start": 1700015157.3956423, "stop": 1700015157.3958144, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_1.py::test_list_of_single_number", "location": ["tests55_59_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011149000056320801, "start": 1700015157.3961382, "stop": 1700015157.3962507, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_1.py::test_list_of_several_same_number", "location": ["tests55_59_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019151000014971942, "start": 1700015157.3960729, "stop": 1700015157.3962653, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012089999654563144, "start": 1700015157.3982913, "stop": 1700015157.398413, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_59_1.py::test_list_of_not_containing_number", "location": ["tests55_59_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000156185997184366, "start": 1700015157.3990595, "stop": 1700015157.3992164, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_list_of_not_containing_number", "location": ["tests55_59_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001542329991934821, "start": 1700015157.399428, "stop": 1700015157.3995829, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_list_of_not_containing_number", "location": ["tests55_59_1.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.992499690270051e-05, "start": 1700015157.3998842, "stop": 1700015157.3999848, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_return_elements_are_in_given_list", "location": ["tests55_59_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001322410025750287, "start": 1700015157.401108, "stop": 1700015157.401241, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_return_elements_are_in_given_list", "location": ["tests55_59_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013199699606047943, "start": 1700015157.4014099, "stop": 1700015157.4015427, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_return_elements_are_in_given_list", "location": ["tests55_59_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.1583002358675e-05, "start": 1700015157.4018135, "stop": 1700015157.401906, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_if_sublist_product_equals_number", "location": ["tests55_59_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.818700345931575e-05, "start": 1700015157.4028125, "stop": 1700015157.4029112, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_59_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_59_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_59_1.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_59/tests55_59_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f07f8e74c00>([-3])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f07f8e74c00>([1, -3])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f07f8e74c00>([-3, 1])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f07f8e74c00>([-3])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f07f8e74c00>([1, -3])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f07f8e74c00>([-3, 1])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_59/tests55_59_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -3, 1, -3, 1, -3]", "        result = lists_with_product_equal_n(input_list)", "        if -3 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -3 == 1:", "            assert result.count([-3]) == 6 and result.count([1, -3]) == 6 and result.count([-3, 1]) == 6 and result.count([1, -3, 1]) == 6", "        else:", ">           assert result.count([-3]) == 3 and result.count([1, -3]) == 3 and result.count([-3, 1]) == 3 and result.count([1, -3, 1]) == 3", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x7f07f8e74c00>([-3])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   3 = <built-in method count of list object at 0x7f07f8e74c00>([1, -3])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count", "E            +  and   2 = <built-in method count of list object at 0x7f07f8e74c00>([-3, 1])", "E            +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_1/Folder_59/tests55_59_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5_T0/Q55/gpt_3_5_turbo_results_1/Folder_59/tests55_59_1.py", "lineno": 21, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x7f07f8e74c00>([-3])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f07f8e74c00>([1, -3])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x7f07f8e74c00>([-3, 1])\n +    where <built-in method count of list object at 0x7f07f8e74c00> = [[1, -3], [1, -3, 1], [-3], [-3, 1], [1, -3], [1, -3, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005725759983761236, "start": 1700015157.3985703, "stop": 1700015157.3991437, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1ab715d970994f3a86e4748053802bd8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
