{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_84_2.py::test_if_result_is_sorted", "location": ["tests39_84_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_84_2.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001160809988505207, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ab656cbf0c0746d686e254d2a44f6b07", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_84_2.py::test_strings_of_size_equal_to_10", "location": ["tests39_84_2.py", 5, "test_strings_of_size_equal_to_10"], "keywords": {"test_strings_of_size_equal_to_10": 1, "tests39_84_2.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001662780050537549, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ab656cbf0c0746d686e254d2a44f6b07", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_84_2.py::test_if_result_is_sorted", "location": ["tests39_84_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_84_2.py": 1, "Folder_84": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_2/Folder_84/tests39_84_2.py", "lineno": 26, "message": "AssertionError: assert ['Y', 'L', 'N', 'D'] == ['D', 'L', 'N', 'Y']\n  At index 0 diff: 'Y' != 'D'\n  Full diff:\n  - ['D', 'L', 'N', 'Y']\n  ?   ^              ^\n  + ['Y', 'L', 'N', 'D']\n  ?   ^              ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=10 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Y', 'L', 'N', 'D'] == ['D', 'L', 'N', 'Y']", "E             At index 0 diff: 'Y' != 'D'", "E             Full diff:", "E             - ['D', 'L', 'N', 'Y']", "E             ?   ^              ^", "E             + ['Y', 'L', 'N', 'D']", "E             ?   ^              ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_84/tests39_84_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=10 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Y', 'L', 'N', 'D'] == ['D', 'L', 'N', 'Y']", "E             At index 0 diff: 'Y' != 'D'", "E             Full diff:", "E             - ['D', 'L', 'N', 'Y']", "E             ?   ^              ^", "E             + ['Y', 'L', 'N', 'D']", "E             ?   ^              ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_84/tests39_84_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_2/Folder_84/tests39_84_2.py", "lineno": 26, "message": "AssertionError: assert ['Y', 'L', 'N', 'D'] == ['D', 'L', 'N', 'Y']\n  At index 0 diff: 'Y' != 'D'\n  Full diff:\n  - ['D', 'L', 'N', 'Y']\n  ?   ^              ^\n  + ['Y', 'L', 'N', 'D']\n  ?   ^              ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005129810015205294, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ab656cbf0c0746d686e254d2a44f6b07", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
