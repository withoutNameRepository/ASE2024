{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_80_2.py::test_if_result_is_sorted", "location": ["tests39_80_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013176199718145654, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88ffa218fa0546298859ab715631579f", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_2.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_2.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001533739996375516, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88ffa218fa0546298859ab715631579f", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_80_2.py::test_if_result_is_sorted", "location": ["tests39_80_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_2.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_2/Folder_80/tests39_80_2.py", "lineno": 26, "message": "AssertionError: assert ['L', 'V', 'C...'K', 'H', ...] == ['C', 'H', 'I...'K', 'L', ...]\n  At index 0 diff: 'L' != 'C'\n  Full diff:\n  - ['C', 'H', 'I', 'J', 'K', 'L', 'O', 'U', 'V']\n  + ['L', 'V', 'C', 'J', 'K', 'H', 'U', 'O', 'I']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['L', 'V', 'C...'K', 'H', ...] == ['C', 'H', 'I...'K', 'L', ...]", "E             At index 0 diff: 'L' != 'C'", "E             Full diff:", "E             - ['C', 'H', 'I', 'J', 'K', 'L', 'O', 'U', 'V']", "E             + ['L', 'V', 'C', 'J', 'K', 'H', 'U', 'O', 'I']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_80/tests39_80_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['L', 'V', 'C...'K', 'H', ...] == ['C', 'H', 'I...'K', 'L', ...]", "E             At index 0 diff: 'L' != 'C'", "E             Full diff:", "E             - ['C', 'H', 'I', 'J', 'K', 'L', 'O', 'U', 'V']", "E             + ['L', 'V', 'C', 'J', 'K', 'H', 'U', 'O', 'I']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_80/tests39_80_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_2/Folder_80/tests39_80_2.py", "lineno": 26, "message": "AssertionError: assert ['L', 'V', 'C...'K', 'H', ...] == ['C', 'H', 'I...'K', 'L', ...]\n  At index 0 diff: 'L' != 'C'\n  Full diff:\n  - ['C', 'H', 'I', 'J', 'K', 'L', 'O', 'U', 'V']\n  + ['L', 'V', 'C', 'J', 'K', 'H', 'U', 'O', 'I']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006699910009047017, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88ffa218fa0546298859ab715631579f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
