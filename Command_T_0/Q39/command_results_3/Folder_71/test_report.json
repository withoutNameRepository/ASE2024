{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001409190008416772, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5e2d9c5e87be4328a67ea7b86ad01f78", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_3.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_3.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015171000268310308, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5e2d9c5e87be4328a67ea7b86ad01f78", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_3.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_3.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_71/tests39_71_3.py", "lineno": 10, "message": "AssertionError: assert ['U', 'K', 'I', 'H', 'T', 'P'] == ['#', '$', '5...'<', 'H', ...]\n  At index 0 diff: 'U' != '#'\n  Right contains 8 more items, first extra item: 'I'\n  Full diff:\n  - ['#', '$', '5', '6', '<', 'H', 'I', 'K', 'P', 'T', 'U', 'c', 'l', 'u']\n  + ['U', 'K', 'I', 'H', 'T', 'P']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_14():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['U', 'K', 'I', 'H', 'T', 'P'] == ['#', '$', '5...'<', 'H', ...]", "E             At index 0 diff: 'U' != '#'", "E             Right contains 8 more items, first extra item: 'I'", "E             Full diff:", "E             - ['#', '$', '5', '6', '<', 'H', 'I', 'K', 'P', 'T', 'U', 'c', 'l', 'u']", "E             + ['U', 'K', 'I', 'H', 'T', 'P']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_71/tests39_71_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_14():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['U', 'K', 'I', 'H', 'T', 'P'] == ['#', '$', '5...'<', 'H', ...]", "E             At index 0 diff: 'U' != '#'", "E             Right contains 8 more items, first extra item: 'I'", "E             Full diff:", "E             - ['#', '$', '5', '6', '<', 'H', 'I', 'K', 'P', 'T', 'U', 'c', 'l', 'u']", "E             + ['U', 'K', 'I', 'H', 'T', 'P']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_71/tests39_71_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_71/tests39_71_3.py", "lineno": 10, "message": "AssertionError: assert ['U', 'K', 'I', 'H', 'T', 'P'] == ['#', '$', '5...'<', 'H', ...]\n  At index 0 diff: 'U' != '#'\n  Right contains 8 more items, first extra item: 'I'\n  Full diff:\n  - ['#', '$', '5', '6', '<', 'H', 'I', 'K', 'P', 'T', 'U', 'c', 'l', 'u']\n  + ['U', 'K', 'I', 'H', 'T', 'P']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041433199658058584, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5e2d9c5e87be4328a67ea7b86ad01f78", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
