{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_50_3.py::test_if_result_is_sorted", "location": ["tests39_50_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_3.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012003899610135704, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7b54a27b0a4b45cf982f83b848f73bed", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_50_3.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_3.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_3.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015118900046218187, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7b54a27b0a4b45cf982f83b848f73bed", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_50_3.py::test_if_result_is_sorted", "location": ["tests39_50_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_3.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_50/tests39_50_3.py", "lineno": 28, "message": "AssertionError: assert [',', '0', '3...'@', 'a', ...] == ['z', 'w', 'r...'g', 'a', ...]\n  At index 0 diff: ',' != 'z'\n  Full diff:\n  - ['z', 'w', 'r', 'p', 'g', 'a', 'Q', 'P', 'O', 'N', 'J', '@', '<', '3', '0', ',']\n  + [',', '0', '3', '<', '@', 'a', 'g', 'J', 'N', 'O', 'P', 'p', 'Q', 'r', 'w', 'z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert [',', '0', '3...'@', 'a', ...] == ['z', 'w', 'r...'g', 'a', ...]", "E             At index 0 diff: ',' != 'z'", "E             Full diff:", "E             - ['z', 'w', 'r', 'p', 'g', 'a', 'Q', 'P', 'O', 'N', 'J', '@', '<', '3', '0', ',']", "E             + [',', '0', '3', '<', '@', 'a', 'g', 'J', 'N', 'O', 'P', 'p', 'Q', 'r', 'w', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_50/tests39_50_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert [',', '0', '3...'@', 'a', ...] == ['z', 'w', 'r...'g', 'a', ...]", "E             At index 0 diff: ',' != 'z'", "E             Full diff:", "E             - ['z', 'w', 'r', 'p', 'g', 'a', 'Q', 'P', 'O', 'N', 'J', '@', '<', '3', '0', ',']", "E             + [',', '0', '3', '<', '@', 'a', 'g', 'J', 'N', 'O', 'P', 'p', 'Q', 'r', 'w', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_50/tests39_50_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_50/tests39_50_3.py", "lineno": 28, "message": "AssertionError: assert [',', '0', '3...'@', 'a', ...] == ['z', 'w', 'r...'g', 'a', ...]\n  At index 0 diff: ',' != 'z'\n  Full diff:\n  - ['z', 'w', 'r', 'p', 'g', 'a', 'Q', 'P', 'O', 'N', 'J', '@', '<', '3', '0', ',']\n  + [',', '0', '3', '<', '@', 'a', 'g', 'J', 'N', 'O', 'P', 'p', 'Q', 'r', 'w', 'z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007464570007869042, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7b54a27b0a4b45cf982f83b848f73bed", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
