{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_80_3.py::test_if_result_is_sorted", "location": ["tests39_80_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_3.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001214320000144653, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9399028ea2c7460d8ccde7ab37a45d55", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_3.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_3.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_3.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016748099733376876, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9399028ea2c7460d8ccde7ab37a45d55", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_80_3.py::test_if_result_is_sorted", "location": ["tests39_80_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_3.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_80/tests39_80_3.py", "lineno": 26, "message": "AssertionError: assert ['O', 'N', 'R...'S', 'W', ...] == ['E', 'L', 'N...'R', 'S', ...]\n  At index 0 diff: 'O' != 'E'\n  Full diff:\n  - ['E', 'L', 'N', 'O', 'R', 'S', 'W', 'X']\n  + ['O', 'N', 'R', 'X', 'S', 'W', 'L', 'E']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['O', 'N', 'R...'S', 'W', ...] == ['E', 'L', 'N...'R', 'S', ...]", "E             At index 0 diff: 'O' != 'E'", "E             Full diff:", "E             - ['E', 'L', 'N', 'O', 'R', 'S', 'W', 'X']", "E             + ['O', 'N', 'R', 'X', 'S', 'W', 'L', 'E']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_80/tests39_80_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['O', 'N', 'R...'S', 'W', ...] == ['E', 'L', 'N...'R', 'S', ...]", "E             At index 0 diff: 'O' != 'E'", "E             Full diff:", "E             - ['E', 'L', 'N', 'O', 'R', 'S', 'W', 'X']", "E             + ['O', 'N', 'R', 'X', 'S', 'W', 'L', 'E']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_80/tests39_80_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_3/Folder_80/tests39_80_3.py", "lineno": 26, "message": "AssertionError: assert ['O', 'N', 'R...'S', 'W', ...] == ['E', 'L', 'N...'R', 'S', ...]\n  At index 0 diff: 'O' != 'E'\n  Full diff:\n  - ['E', 'L', 'N', 'O', 'R', 'S', 'W', 'X']\n  + ['O', 'N', 'R', 'X', 'S', 'W', 'L', 'E']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005796280020149425, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9399028ea2c7460d8ccde7ab37a45d55", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
