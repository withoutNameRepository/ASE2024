{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_29_4.py::test_if_result_is_sorted", "location": ["tests39_29_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_29_4.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011685400386340916, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3f6c5e74dc314b159a9cdb0ea26c54a4", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_29_4.py::test_strings_of_size_equal_to_23", "location": ["tests39_29_4.py", 5, "test_strings_of_size_equal_to_23"], "keywords": {"test_strings_of_size_equal_to_23": 1, "tests39_29_4.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019344899919815361, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3f6c5e74dc314b159a9cdb0ea26c54a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_29_4.py::test_if_result_is_sorted", "location": ["tests39_29_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_29_4.py": 1, "Folder_29": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_4/Folder_29/tests39_29_4.py", "lineno": 28, "message": "AssertionError: assert ['K', 'F', 'G', 'E'] == ['K', 'G', 'F', 'E']\n  At index 1 diff: 'F' != 'G'\n  Full diff:\n  - ['K', 'G', 'F', 'E']\n  ?            -----\n  + ['K', 'F', 'G', 'E']\n  ?       +++++"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=23 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['K', 'F', 'G', 'E'] == ['K', 'G', 'F', 'E']", "E             At index 1 diff: 'F' != 'G'", "E             Full diff:", "E             - ['K', 'G', 'F', 'E']", "E             ?            -----", "E             + ['K', 'F', 'G', 'E']", "E             ?       +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_29/tests39_29_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=23 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['K', 'F', 'G', 'E'] == ['K', 'G', 'F', 'E']", "E             At index 1 diff: 'F' != 'G'", "E             Full diff:", "E             - ['K', 'G', 'F', 'E']", "E             ?            -----", "E             + ['K', 'F', 'G', 'E']", "E             ?       +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_29/tests39_29_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_4/Folder_29/tests39_29_4.py", "lineno": 28, "message": "AssertionError: assert ['K', 'F', 'G', 'E'] == ['K', 'G', 'F', 'E']\n  At index 1 diff: 'F' != 'G'\n  Full diff:\n  - ['K', 'G', 'F', 'E']\n  ?            -----\n  + ['K', 'F', 'G', 'E']\n  ?       +++++"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005271669942885637, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3f6c5e74dc314b159a9cdb0ea26c54a4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
