{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_3_4.py::test_if_result_is_sorted", "location": ["tests39_3_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_3_4.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011541099956957623, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5951567f7d35432680acd37d4cb4da4a", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_3_4.py::test_strings_of_size_equal_to_28", "location": ["tests39_3_4.py", 5, "test_strings_of_size_equal_to_28"], "keywords": {"test_strings_of_size_equal_to_28": 1, "tests39_3_4.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001703550005913712, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5951567f7d35432680acd37d4cb4da4a", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_3_4.py::test_if_result_is_sorted", "location": ["tests39_3_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_3_4.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_4/Folder_3/tests39_3_4.py", "lineno": 28, "message": "AssertionError: assert ['G', 'R', 'S...'E', 'Q', ...] == ['S', 'R', 'Q...'F', 'E', ...]\n  At index 0 diff: 'G' != 'S'\n  Full diff:\n  - ['S', 'R', 'Q', 'G', 'F', 'E', 'D']\n  + ['G', 'R', 'S', 'F', 'E', 'Q', 'D']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=28 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['G', 'R', 'S...'E', 'Q', ...] == ['S', 'R', 'Q...'F', 'E', ...]", "E             At index 0 diff: 'G' != 'S'", "E             Full diff:", "E             - ['S', 'R', 'Q', 'G', 'F', 'E', 'D']", "E             + ['G', 'R', 'S', 'F', 'E', 'Q', 'D']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_3/tests39_3_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=28 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['G', 'R', 'S...'E', 'Q', ...] == ['S', 'R', 'Q...'F', 'E', ...]", "E             At index 0 diff: 'G' != 'S'", "E             Full diff:", "E             - ['S', 'R', 'Q', 'G', 'F', 'E', 'D']", "E             + ['G', 'R', 'S', 'F', 'E', 'Q', 'D']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_3/tests39_3_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_4/Folder_3/tests39_3_4.py", "lineno": 28, "message": "AssertionError: assert ['G', 'R', 'S...'E', 'Q', ...] == ['S', 'R', 'Q...'F', 'E', ...]\n  At index 0 diff: 'G' != 'S'\n  Full diff:\n  - ['S', 'R', 'Q', 'G', 'F', 'E', 'D']\n  + ['G', 'R', 'S', 'F', 'E', 'Q', 'D']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005589080028585158, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5951567f7d35432680acd37d4cb4da4a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
