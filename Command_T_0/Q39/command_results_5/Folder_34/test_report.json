{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_34_5.py::test_strings_of_size_equal_to_9", "location": ["tests39_34_5.py", 5, "test_strings_of_size_equal_to_9"], "keywords": {"test_strings_of_size_equal_to_9": 1, "tests39_34_5.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022143300157040358, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "be4fe5a1d26d4cb08989a2a2f2220750", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_34_5.py::test_if_result_is_sorted", "location": ["tests39_34_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_34_5.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012116199650336057, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "be4fe5a1d26d4cb08989a2a2f2220750", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_34_5.py::test_strings_of_size_equal_to_9", "location": ["tests39_34_5.py", 5, "test_strings_of_size_equal_to_9"], "keywords": {"test_strings_of_size_equal_to_9": 1, "tests39_34_5.py": 1, "Folder_34": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_34/tests39_34_5.py", "lineno": 12, "message": "AssertionError: assert ['%', '0', '4...'I', 'K', ...] == ['}', 'Y', 'Q...'I', '5', ...]\n  At index 0 diff: '%' != '}'\n  Full diff:\n  - ['}', 'Y', 'Q', 'K', 'I', '5', '4', '0', '%']\n  + ['%', '0', '4', '5', 'I', 'K', 'Q', 'Y', '}']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_9():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=9))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['%', '0', '4...'I', 'K', ...] == ['}', 'Y', 'Q...'I', '5', ...]", "E             At index 0 diff: '%' != '}'", "E             Full diff:", "E             - ['}', 'Y', 'Q', 'K', 'I', '5', '4', '0', '%']", "E             + ['%', '0', '4', '5', 'I', 'K', 'Q', 'Y', '}']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_34/tests39_34_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_9():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=9))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['%', '0', '4...'I', 'K', ...] == ['}', 'Y', 'Q...'I', '5', ...]", "E             At index 0 diff: '%' != '}'", "E             Full diff:", "E             - ['}', 'Y', 'Q', 'K', 'I', '5', '4', '0', '%']", "E             + ['%', '0', '4', '5', 'I', 'K', 'Q', 'Y', '}']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_34/tests39_34_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_34/tests39_34_5.py", "lineno": 12, "message": "AssertionError: assert ['%', '0', '4...'I', 'K', ...] == ['}', 'Y', 'Q...'I', '5', ...]\n  At index 0 diff: '%' != '}'\n  Full diff:\n  - ['}', 'Y', 'Q', 'K', 'I', '5', '4', '0', '%']\n  + ['%', '0', '4', '5', 'I', 'K', 'Q', 'Y', '}']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005255450014374219, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "be4fe5a1d26d4cb08989a2a2f2220750", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
