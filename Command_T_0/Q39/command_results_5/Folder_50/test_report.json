{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_50_5.py::test_if_result_is_sorted", "location": ["tests39_50_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_5.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001253100053872913, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c6727139e1ee4bf48945a1b576ee3e65", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_50_5.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_5.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_5.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002019560051849112, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c6727139e1ee4bf48945a1b576ee3e65", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_50_5.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_5.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_5.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_50/tests39_50_5.py", "lineno": 12, "message": "AssertionError: assert ['0', '1', '6...'^', 'i', ...] == ['z', 'y', 't...'n', 'i', ...]\n  At index 0 diff: '0' != 'z'\n  Full diff:\n  - ['z', 'y', 't', 'q', 'n', 'i', '^', 'Y', 'X', 'Q', 'O', 'L', '<', '6', '1', '0']\n  + ['0', '1', '6', '<', '^', 'i', 'L', 'n', 'O', 'q', 'Q', 't', 'X', 'Y', 'y', 'z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['0', '1', '6...'^', 'i', ...] == ['z', 'y', 't...'n', 'i', ...]", "E             At index 0 diff: '0' != 'z'", "E             Full diff:", "E             - ['z', 'y', 't', 'q', 'n', 'i', '^', 'Y', 'X', 'Q', 'O', 'L', '<', '6', '1', '0']", "E             + ['0', '1', '6', '<', '^', 'i', 'L', 'n', 'O', 'q', 'Q', 't', 'X', 'Y', 'y', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_50/tests39_50_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['0', '1', '6...'^', 'i', ...] == ['z', 'y', 't...'n', 'i', ...]", "E             At index 0 diff: '0' != 'z'", "E             Full diff:", "E             - ['z', 'y', 't', 'q', 'n', 'i', '^', 'Y', 'X', 'Q', 'O', 'L', '<', '6', '1', '0']", "E             + ['0', '1', '6', '<', '^', 'i', 'L', 'n', 'O', 'q', 'Q', 't', 'X', 'Y', 'y', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_50/tests39_50_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_50/tests39_50_5.py", "lineno": 12, "message": "AssertionError: assert ['0', '1', '6...'^', 'i', ...] == ['z', 'y', 't...'n', 'i', ...]\n  At index 0 diff: '0' != 'z'\n  Full diff:\n  - ['z', 'y', 't', 'q', 'n', 'i', '^', 'Y', 'X', 'Q', 'O', 'L', '<', '6', '1', '0']\n  + ['0', '1', '6', '<', '^', 'i', 'L', 'n', 'O', 'q', 'Q', 't', 'X', 'Y', 'y', 'z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007786889982526191, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c6727139e1ee4bf48945a1b576ee3e65", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
