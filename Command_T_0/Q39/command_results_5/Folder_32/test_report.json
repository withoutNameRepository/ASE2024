{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_32_5.py::test_if_result_is_sorted", "location": ["tests39_32_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_32_5.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011847600399050862, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2cf0916e17294e04b9ea92e4e0e5c5c1", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_32_5.py::test_strings_of_size_equal_to_8", "location": ["tests39_32_5.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests39_32_5.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018894099775934592, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cf0916e17294e04b9ea92e4e0e5c5c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_32_5.py::test_strings_of_size_equal_to_8", "location": ["tests39_32_5.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests39_32_5.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_32/tests39_32_5.py", "lineno": 10, "message": "AssertionError: assert ['A', 'F'] == [' ', '%', ')...'A', 'F', ...]\n  At index 0 diff: 'A' != ' '\n  Right contains 6 more items, first extra item: ')'\n  Full diff:\n  - [' ', '%', ')', '<', 'A', 'F', '_', 'n']\n  + ['A', 'F']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['A', 'F'] == [' ', '%', ')...'A', 'F', ...]", "E             At index 0 diff: 'A' != ' '", "E             Right contains 6 more items, first extra item: ')'", "E             Full diff:", "E             - [' ', '%', ')', '<', 'A', 'F', '_', 'n']", "E             + ['A', 'F']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_32/tests39_32_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['A', 'F'] == [' ', '%', ')...'A', 'F', ...]", "E             At index 0 diff: 'A' != ' '", "E             Right contains 6 more items, first extra item: ')'", "E             Full diff:", "E             - [' ', '%', ')', '<', 'A', 'F', '_', 'n']", "E             + ['A', 'F']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_32/tests39_32_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_32/tests39_32_5.py", "lineno": 10, "message": "AssertionError: assert ['A', 'F'] == [' ', '%', ')...'A', 'F', ...]\n  At index 0 diff: 'A' != ' '\n  Right contains 6 more items, first extra item: ')'\n  Full diff:\n  - [' ', '%', ')', '<', 'A', 'F', '_', 'n']\n  + ['A', 'F']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004631650008377619, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cf0916e17294e04b9ea92e4e0e5c5c1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
