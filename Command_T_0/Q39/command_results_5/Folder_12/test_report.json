{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_12_5.py::test_if_result_is_sorted", "location": ["tests39_12_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_12_5.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016534599853912368, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "856c39468f3e49e395e527db6409c5d2", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_12_5.py::test_strings_of_size_equal_to_61", "location": ["tests39_12_5.py", 5, "test_strings_of_size_equal_to_61"], "keywords": {"test_strings_of_size_equal_to_61": 1, "tests39_12_5.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002102719954564236, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "856c39468f3e49e395e527db6409c5d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_12_5.py::test_if_result_is_sorted", "location": ["tests39_12_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_12_5.py": 1, "Folder_12": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_12/tests39_12_5.py", "lineno": 28, "message": "AssertionError: assert ['N', 'V', 'D...'H', 'O', ...] == ['Z', 'X', 'W...'U', 'S', ...]\n  At index 0 diff: 'N' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'W', 'V', 'U', 'S', 'P', 'O', 'N', 'K', 'J', 'I', 'H', 'G', 'D', 'A']\n  + ['N', 'V', 'D', 'W', 'H', 'O', 'G', 'U', 'Z', 'J', 'P', 'S', 'I', 'X', 'A', 'K']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=61 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['N', 'V', 'D...'H', 'O', ...] == ['Z', 'X', 'W...'U', 'S', ...]", "E             At index 0 diff: 'N' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'W', 'V', 'U', 'S', 'P', 'O', 'N', 'K', 'J', 'I', 'H', 'G', 'D', 'A']", "E             + ['N', 'V', 'D', 'W', 'H', 'O', 'G', 'U', 'Z', 'J', 'P', 'S', 'I', 'X', 'A', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_12/tests39_12_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=61 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['N', 'V', 'D...'H', 'O', ...] == ['Z', 'X', 'W...'U', 'S', ...]", "E             At index 0 diff: 'N' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'W', 'V', 'U', 'S', 'P', 'O', 'N', 'K', 'J', 'I', 'H', 'G', 'D', 'A']", "E             + ['N', 'V', 'D', 'W', 'H', 'O', 'G', 'U', 'Z', 'J', 'P', 'S', 'I', 'X', 'A', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_12/tests39_12_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_12/tests39_12_5.py", "lineno": 28, "message": "AssertionError: assert ['N', 'V', 'D...'H', 'O', ...] == ['Z', 'X', 'W...'U', 'S', ...]\n  At index 0 diff: 'N' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'W', 'V', 'U', 'S', 'P', 'O', 'N', 'K', 'J', 'I', 'H', 'G', 'D', 'A']\n  + ['N', 'V', 'D', 'W', 'H', 'O', 'G', 'U', 'Z', 'J', 'P', 'S', 'I', 'X', 'A', 'K']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013105750040267594, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "856c39468f3e49e395e527db6409c5d2", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
