{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_51_5.py::test_if_result_is_sorted", "location": ["tests39_51_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011793500016210601, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "984b5fab829149eeb92eaaada46a2ad5", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_51_5.py::test_strings_of_size_equal_to_45", "location": ["tests39_51_5.py", 5, "test_strings_of_size_equal_to_45"], "keywords": {"test_strings_of_size_equal_to_45": 1, "tests39_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016427400259999558, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "984b5fab829149eeb92eaaada46a2ad5", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_51_5.py::test_if_result_is_sorted", "location": ["tests39_51_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_51/tests39_51_5.py", "lineno": 28, "message": "AssertionError: assert ['B', 'L', 'U...'X', 'I', ...] == ['Z', 'X', 'U...'Q', 'O', ...]\n  At index 0 diff: 'B' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'U', 'T', 'Q', 'O', 'N', 'L', 'J', 'I', 'H', 'E', 'D', 'C', 'B']\n  + ['B', 'L', 'U', 'D', 'X', 'I', 'O', 'T', 'Z', 'N', 'Q', 'H', 'E', 'J', 'C']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=45 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['B', 'L', 'U...'X', 'I', ...] == ['Z', 'X', 'U...'Q', 'O', ...]", "E             At index 0 diff: 'B' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'U', 'T', 'Q', 'O', 'N', 'L', 'J', 'I', 'H', 'E', 'D', 'C', 'B']", "E             + ['B', 'L', 'U', 'D', 'X', 'I', 'O', 'T', 'Z', 'N', 'Q', 'H', 'E', 'J', 'C']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_51/tests39_51_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=45 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['B', 'L', 'U...'X', 'I', ...] == ['Z', 'X', 'U...'Q', 'O', ...]", "E             At index 0 diff: 'B' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'U', 'T', 'Q', 'O', 'N', 'L', 'J', 'I', 'H', 'E', 'D', 'C', 'B']", "E             + ['B', 'L', 'U', 'D', 'X', 'I', 'O', 'T', 'Z', 'N', 'Q', 'H', 'E', 'J', 'C']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_51/tests39_51_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_5/Folder_51/tests39_51_5.py", "lineno": 28, "message": "AssertionError: assert ['B', 'L', 'U...'X', 'I', ...] == ['Z', 'X', 'U...'Q', 'O', ...]\n  At index 0 diff: 'B' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'U', 'T', 'Q', 'O', 'N', 'L', 'J', 'I', 'H', 'E', 'D', 'C', 'B']\n  + ['B', 'L', 'U', 'D', 'X', 'I', 'O', 'T', 'Z', 'N', 'Q', 'H', 'E', 'J', 'C']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008102379943011329, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "984b5fab829149eeb92eaaada46a2ad5", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
