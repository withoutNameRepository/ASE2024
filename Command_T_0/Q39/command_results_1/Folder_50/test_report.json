{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_50_1.py::test_if_result_is_sorted", "location": ["tests39_50_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_1.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011825599358417094, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "351eb44e28ab4f5caab7fa74ed671bcf", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_50_1.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_1.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_1.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016838200099300593, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "351eb44e28ab4f5caab7fa74ed671bcf", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_50_1.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_1.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_1.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_50/tests39_50_1.py", "lineno": 12, "message": "AssertionError: assert [' ', '-', '1...'>', 'b', ...] == ['}', 'x', 'o...'f', 'b', ...]\n  At index 0 diff: ' ' != '}'\n  Full diff:\n  - ['}', 'x', 'o', 'j', 'f', 'b', 'X', 'W', 'S', 'H', 'C', '>', '9', '1', '-', ' ']\n  + [' ', '-', '1', '9', '>', 'b', 'C', 'f', 'H', 'j', 'o', 'S', 'W', 'x', 'X', '}']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '-', '1...'>', 'b', ...] == ['}', 'x', 'o...'f', 'b', ...]", "E             At index 0 diff: ' ' != '}'", "E             Full diff:", "E             - ['}', 'x', 'o', 'j', 'f', 'b', 'X', 'W', 'S', 'H', 'C', '>', '9', '1', '-', ' ']", "E             + [' ', '-', '1', '9', '>', 'b', 'C', 'f', 'H', 'j', 'o', 'S', 'W', 'x', 'X', '}']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_50/tests39_50_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '-', '1...'>', 'b', ...] == ['}', 'x', 'o...'f', 'b', ...]", "E             At index 0 diff: ' ' != '}'", "E             Full diff:", "E             - ['}', 'x', 'o', 'j', 'f', 'b', 'X', 'W', 'S', 'H', 'C', '>', '9', '1', '-', ' ']", "E             + [' ', '-', '1', '9', '>', 'b', 'C', 'f', 'H', 'j', 'o', 'S', 'W', 'x', 'X', '}']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_50/tests39_50_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_50/tests39_50_1.py", "lineno": 12, "message": "AssertionError: assert [' ', '-', '1...'>', 'b', ...] == ['}', 'x', 'o...'f', 'b', ...]\n  At index 0 diff: ' ' != '}'\n  Full diff:\n  - ['}', 'x', 'o', 'j', 'f', 'b', 'X', 'W', 'S', 'H', 'C', '>', '9', '1', '-', ' ']\n  + [' ', '-', '1', '9', '>', 'b', 'C', 'f', 'H', 'j', 'o', 'S', 'W', 'x', 'X', '}']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000719084004231263, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "351eb44e28ab4f5caab7fa74ed671bcf", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
