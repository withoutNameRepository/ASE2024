{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_18_1.py::test_if_result_is_sorted", "location": ["tests39_18_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_18_1.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012219299969729036, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "59b502f516d84037923b246282e83eae", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_18_1.py::test_strings_of_size_equal_to_52", "location": ["tests39_18_1.py", 5, "test_strings_of_size_equal_to_52"], "keywords": {"test_strings_of_size_equal_to_52": 1, "tests39_18_1.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016465500084450468, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "59b502f516d84037923b246282e83eae", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_18_1.py::test_if_result_is_sorted", "location": ["tests39_18_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_18_1.py": 1, "Folder_18": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_18/tests39_18_1.py", "lineno": 28, "message": "AssertionError: assert ['D', 'F', 'G...'J', 'K', ...] == ['Y', 'W', 'V...'S', 'R', ...]\n  At index 0 diff: 'D' != 'Y'\n  Full diff:\n  - ['Y', 'W', 'V', 'U', 'S', 'R', 'Q', 'O', 'M', 'K', 'J', 'I', 'G', 'F', 'D']\n  + ['D', 'F', 'G', 'I', 'J', 'K', 'M', 'O', 'Q', 'R', 'S', 'U', 'V', 'W', 'Y']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['D', 'F', 'G...'J', 'K', ...] == ['Y', 'W', 'V...'S', 'R', ...]", "E             At index 0 diff: 'D' != 'Y'", "E             Full diff:", "E             - ['Y', 'W', 'V', 'U', 'S', 'R', 'Q', 'O', 'M', 'K', 'J', 'I', 'G', 'F', 'D']", "E             + ['D', 'F', 'G', 'I', 'J', 'K', 'M', 'O', 'Q', 'R', 'S', 'U', 'V', 'W', 'Y']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_18/tests39_18_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['D', 'F', 'G...'J', 'K', ...] == ['Y', 'W', 'V...'S', 'R', ...]", "E             At index 0 diff: 'D' != 'Y'", "E             Full diff:", "E             - ['Y', 'W', 'V', 'U', 'S', 'R', 'Q', 'O', 'M', 'K', 'J', 'I', 'G', 'F', 'D']", "E             + ['D', 'F', 'G', 'I', 'J', 'K', 'M', 'O', 'Q', 'R', 'S', 'U', 'V', 'W', 'Y']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_18/tests39_18_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_18/tests39_18_1.py", "lineno": 28, "message": "AssertionError: assert ['D', 'F', 'G...'J', 'K', ...] == ['Y', 'W', 'V...'S', 'R', ...]\n  At index 0 diff: 'D' != 'Y'\n  Full diff:\n  - ['Y', 'W', 'V', 'U', 'S', 'R', 'Q', 'O', 'M', 'K', 'J', 'I', 'G', 'F', 'D']\n  + ['D', 'F', 'G', 'I', 'J', 'K', 'M', 'O', 'Q', 'R', 'S', 'U', 'V', 'W', 'Y']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007619160023750737, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "59b502f516d84037923b246282e83eae", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
