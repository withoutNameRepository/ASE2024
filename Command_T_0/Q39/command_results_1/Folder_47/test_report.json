{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_47_1.py::test_if_result_is_sorted", "location": ["tests39_47_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_47_1.py": 1, "Folder_47": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011770499986596406, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7717012c5c6c41cbbf9e64a9d97f44e4", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_47_1.py::test_strings_of_size_equal_to_21", "location": ["tests39_47_1.py", 5, "test_strings_of_size_equal_to_21"], "keywords": {"test_strings_of_size_equal_to_21": 1, "tests39_47_1.py": 1, "Folder_47": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018689699936658144, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7717012c5c6c41cbbf9e64a9d97f44e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_47_1.py::test_strings_of_size_equal_to_21", "location": ["tests39_47_1.py", 5, "test_strings_of_size_equal_to_21"], "keywords": {"test_strings_of_size_equal_to_21": 1, "tests39_47_1.py": 1, "Folder_47": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_47/tests39_47_1.py", "lineno": 12, "message": "AssertionError: assert ['#', '$', '3...'7', '9', ...] == ['~', 'v', 't...'r', 'q', ...]\n  At index 0 diff: '#' != '~'\n  Full diff:\n    [\n  +  '#',\n  +  '$',\n  +  '3',\n  +  '4',...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_21():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=21))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['#', '$', '3...'7', '9', ...] == ['~', 'v', 't...'r', 'q', ...]", "E             At index 0 diff: '#' != '~'", "E             Full diff:", "E               [", "E             +  '#',", "E             +  '$',", "E             +  '3',", "E             +  '4',...", "E             ", "E             ...Full output truncated (39 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_47/tests39_47_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_21():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=21))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['#', '$', '3...'7', '9', ...] == ['~', 'v', 't...'r', 'q', ...]", "E             At index 0 diff: '#' != '~'", "E             Full diff:", "E               [", "E             +  '#',", "E             +  '$',", "E             +  '3',", "E             +  '4',...", "E             ", "E             ...Full output truncated (39 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_47/tests39_47_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_47/tests39_47_1.py", "lineno": 12, "message": "AssertionError: assert ['#', '$', '3...'7', '9', ...] == ['~', 'v', 't...'r', 'q', ...]\n  At index 0 diff: '#' != '~'\n  Full diff:\n    [\n  +  '#',\n  +  '$',\n  +  '3',\n  +  '4',...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005175190017325804, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7717012c5c6c41cbbf9e64a9d97f44e4", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
