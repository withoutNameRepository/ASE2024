{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_32_1.py::test_if_result_is_sorted", "location": ["tests39_32_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011624199396464974, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d21533ccd7cc428c97160e44211aa678", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_32_1.py::test_strings_of_size_equal_to_8", "location": ["tests39_32_1.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests39_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014927599841030315, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d21533ccd7cc428c97160e44211aa678", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_32_1.py::test_strings_of_size_equal_to_8", "location": ["tests39_32_1.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests39_32_1.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_32/tests39_32_1.py", "lineno": 10, "message": "AssertionError: assert ['O'] == ['*', '+', 'O...'h', 'm', ...]\n  At index 0 diff: 'O' != '*'\n  Right contains 7 more items, first extra item: '+'\n  Full diff:\n  - ['*', '+', 'O', ']', 'h', 'm', 'q', 'v']\n  + ['O']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['O'] == ['*', '+', 'O...'h', 'm', ...]", "E             At index 0 diff: 'O' != '*'", "E             Right contains 7 more items, first extra item: '+'", "E             Full diff:", "E             - ['*', '+', 'O', ']', 'h', 'm', 'q', 'v']", "E             + ['O']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_32/tests39_32_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['O'] == ['*', '+', 'O...'h', 'm', ...]", "E             At index 0 diff: 'O' != '*'", "E             Right contains 7 more items, first extra item: '+'", "E             Full diff:", "E             - ['*', '+', 'O', ']', 'h', 'm', 'q', 'v']", "E             + ['O']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_32/tests39_32_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_32/tests39_32_1.py", "lineno": 10, "message": "AssertionError: assert ['O'] == ['*', '+', 'O...'h', 'm', ...]\n  At index 0 diff: 'O' != '*'\n  Right contains 7 more items, first extra item: '+'\n  Full diff:\n  - ['*', '+', 'O', ']', 'h', 'm', 'q', 'v']\n  + ['O']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040689800516702235, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d21533ccd7cc428c97160e44211aa678", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
