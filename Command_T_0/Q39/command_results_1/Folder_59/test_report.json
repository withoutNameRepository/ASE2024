{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests39_59_1.py::test_if_result_is_sorted", "location": ["tests39_59_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001232960057677701, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e2482870717b4cb081d7c73d35fbfa6b", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_59_1.py::test_strings_of_size_equal_to_13", "location": ["tests39_59_1.py", 5, "test_strings_of_size_equal_to_13"], "keywords": {"test_strings_of_size_equal_to_13": 1, "tests39_59_1.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014250200183596462, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2482870717b4cb081d7c73d35fbfa6b", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_59_1.py::test_strings_of_size_equal_to_13", "location": ["tests39_59_1.py", 5, "test_strings_of_size_equal_to_13"], "keywords": {"test_strings_of_size_equal_to_13": 1, "tests39_59_1.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_59/tests39_59_1.py", "lineno": 12, "message": "AssertionError: assert ['Y', 'J'] == ['~', 'x', 'q...'Y', 'J', ...]\n  At index 0 diff: 'Y' != '~'\n  Right contains 11 more items, first extra item: 'q'\n  Full diff:\n  - ['~', 'x', 'q', '_', 'Y', 'J', '?', '>', '4', '/', '.', '-', '$']\n  + ['Y', 'J']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_13():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['Y', 'J'] == ['~', 'x', 'q...'Y', 'J', ...]", "E             At index 0 diff: 'Y' != '~'", "E             Right contains 11 more items, first extra item: 'q'", "E             Full diff:", "E             - ['~', 'x', 'q', '_', 'Y', 'J', '?', '>', '4', '/', '.', '-', '$']", "E             + ['Y', 'J']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_59/tests39_59_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_13():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['Y', 'J'] == ['~', 'x', 'q...'Y', 'J', ...]", "E             At index 0 diff: 'Y' != '~'", "E             Right contains 11 more items, first extra item: 'q'", "E             Full diff:", "E             - ['~', 'x', 'q', '_', 'Y', 'J', '?', '>', '4', '/', '.', '-', '$']", "E             + ['Y', 'J']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_59/tests39_59_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q39/command_results_1/Folder_59/tests39_59_1.py", "lineno": 12, "message": "AssertionError: assert ['Y', 'J'] == ['~', 'x', 'q...'Y', 'J', ...]\n  At index 0 diff: 'Y' != '~'\n  Right contains 11 more items, first extra item: 'q'\n  Full diff:\n  - ['~', 'x', 'q', '_', 'Y', 'J', '?', '>', '4', '/', '.', '-', '$']\n  + ['Y', 'J']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004118470023968257, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2482870717b4cb081d7c73d35fbfa6b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
