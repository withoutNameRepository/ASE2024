{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_67_1.py::test_strings_of_size_equal_to_66", "location": ["tests40_67_1.py", 5, "test_strings_of_size_equal_to_66"], "keywords": {"test_strings_of_size_equal_to_66": 1, "tests40_67_1.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015335300122387707, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bfa8adc96d614bdf82dde1b0e20b8bd1", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_67_1.py::test_if_result_is_sorted", "location": ["tests40_67_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_67_1.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011638199794106185, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bfa8adc96d614bdf82dde1b0e20b8bd1", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_67_1.py::test_if_result_is_sorted", "location": ["tests40_67_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_67_1.py": 1, "Folder_67": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_1/Folder_67/tests40_67_1.py", "lineno": 26, "message": "AssertionError: assert ['c', 's', 'm...'z', 'b', ...] == ['b', 'c', 'd...'h', 'i', ...]\n  At index 0 diff: 'c' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'e', 'h', 'i', 'j', 'l', 'm', 'o', 'r', 's', 'u', 'x', 'y', 'z']\n  + ['c', 's', 'm', 'e', 'z', 'b', 'x', 'y', 'h', 'd', 'r', 'i', 'u', 'l', 'o', 'j']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=66 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['c', 's', 'm...'z', 'b', ...] == ['b', 'c', 'd...'h', 'i', ...]", "E             At index 0 diff: 'c' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'e', 'h', 'i', 'j', 'l', 'm', 'o', 'r', 's', 'u', 'x', 'y', 'z']", "E             + ['c', 's', 'm', 'e', 'z', 'b', 'x', 'y', 'h', 'd', 'r', 'i', 'u', 'l', 'o', 'j']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_67/tests40_67_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=66 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['c', 's', 'm...'z', 'b', ...] == ['b', 'c', 'd...'h', 'i', ...]", "E             At index 0 diff: 'c' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'e', 'h', 'i', 'j', 'l', 'm', 'o', 'r', 's', 'u', 'x', 'y', 'z']", "E             + ['c', 's', 'm', 'e', 'z', 'b', 'x', 'y', 'h', 'd', 'r', 'i', 'u', 'l', 'o', 'j']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_67/tests40_67_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_1/Folder_67/tests40_67_1.py", "lineno": 26, "message": "AssertionError: assert ['c', 's', 'm...'z', 'b', ...] == ['b', 'c', 'd...'h', 'i', ...]\n  At index 0 diff: 'c' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'e', 'h', 'i', 'j', 'l', 'm', 'o', 'r', 's', 'u', 'x', 'y', 'z']\n  + ['c', 's', 'm', 'e', 'z', 'b', 'x', 'y', 'h', 'd', 'r', 'i', 'u', 'l', 'o', 'j']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009682909949333407, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bfa8adc96d614bdf82dde1b0e20b8bd1", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
