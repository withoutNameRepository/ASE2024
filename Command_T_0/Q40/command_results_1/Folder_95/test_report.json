{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_95_1.py::test_if_result_is_sorted", "location": ["tests40_95_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001350880047539249, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "518c19a7ad7f44af9bc2958d08679135", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_95_1.py::test_strings_of_size_equal_to_36", "location": ["tests40_95_1.py", 5, "test_strings_of_size_equal_to_36"], "keywords": {"test_strings_of_size_equal_to_36": 1, "tests40_95_1.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017503399431006983, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "518c19a7ad7f44af9bc2958d08679135", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_95_1.py::test_if_result_is_sorted", "location": ["tests40_95_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_95_1.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_1/Folder_95/tests40_95_1.py", "lineno": 26, "message": "AssertionError: assert ['f', 'b', 'c...'t', 'w', ...] == ['b', 'c', 'd...'g', 'j', ...]\n  At index 0 diff: 'f' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'f', 'g', 'j', 'k', 'l', 'n', 't', 'u', 'w', 'y']\n  + ['f', 'b', 'c', 'j', 't', 'w', 'g', 'd', 'u', 'n', 'l', 'k', 'y']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['f', 'b', 'c...'t', 'w', ...] == ['b', 'c', 'd...'g', 'j', ...]", "E             At index 0 diff: 'f' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'f', 'g', 'j', 'k', 'l', 'n', 't', 'u', 'w', 'y']", "E             + ['f', 'b', 'c', 'j', 't', 'w', 'g', 'd', 'u', 'n', 'l', 'k', 'y']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_95/tests40_95_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['f', 'b', 'c...'t', 'w', ...] == ['b', 'c', 'd...'g', 'j', ...]", "E             At index 0 diff: 'f' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'f', 'g', 'j', 'k', 'l', 'n', 't', 'u', 'w', 'y']", "E             + ['f', 'b', 'c', 'j', 't', 'w', 'g', 'd', 'u', 'n', 'l', 'k', 'y']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_95/tests40_95_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_1/Folder_95/tests40_95_1.py", "lineno": 26, "message": "AssertionError: assert ['f', 'b', 'c...'t', 'w', ...] == ['b', 'c', 'd...'g', 'j', ...]\n  At index 0 diff: 'f' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'f', 'g', 'j', 'k', 'l', 'n', 't', 'u', 'w', 'y']\n  + ['f', 'b', 'c', 'j', 't', 'w', 'g', 'd', 'u', 'n', 'l', 'k', 'y']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009080149975488894, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "518c19a7ad7f44af9bc2958d08679135", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
