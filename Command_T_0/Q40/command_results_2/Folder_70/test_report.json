{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_70_2.py::test_if_result_is_sorted", "location": ["tests40_70_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001356899956590496, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_strings_of_size_equal_to_2", "location": ["tests40_70_2.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019171700114384294, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_70_2.py::test_if_result_is_sorted", "location": ["tests40_70_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001816770018194802, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_if_result_is_sorted", "location": ["tests40_70_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012394700024742633, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_if_result_contains_highest_chars", "location": ["tests40_70_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011242499749641865, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_if_result_contains_highest_chars", "location": ["tests40_70_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001387250013067387, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_if_result_contains_highest_chars", "location": ["tests40_70_2.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011743399954866618, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_70_2.py::test_strings_of_size_equal_to_2", "location": ["tests40_70_2.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_70_2.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_70/tests40_70_2.py", "lineno": 12, "message": "AssertionError: assert [] == ['M', '#']\n  Right contains 2 more items, first extra item: 'M'\n  Full diff:\n  - ['M', '#']\n  + []"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [] == ['M', '#']", "E             Right contains 2 more items, first extra item: 'M'", "E             Full diff:", "E             - ['M', '#']", "E             + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_70/tests40_70_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [] == ['M', '#']", "E             Right contains 2 more items, first extra item: 'M'", "E             Full diff:", "E             - ['M', '#']", "E             + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_70/tests40_70_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_70/tests40_70_2.py", "lineno": 12, "message": "AssertionError: assert [] == ['M', '#']\n  Right contains 2 more items, first extra item: 'M'\n  Full diff:\n  - ['M', '#']\n  + []"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033954899845412, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "734ae1387b944667b91995eddbd52d95", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
