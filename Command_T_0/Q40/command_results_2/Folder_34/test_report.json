{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_34_2.py::test_if_result_is_sorted", "location": ["tests40_34_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_34_2.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001425119990017265, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "64332d7fc1fa4cb5aaa2a08c944fa678", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_34_2.py::test_strings_of_size_equal_to_9", "location": ["tests40_34_2.py", 5, "test_strings_of_size_equal_to_9"], "keywords": {"test_strings_of_size_equal_to_9": 1, "tests40_34_2.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018363100389251485, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "64332d7fc1fa4cb5aaa2a08c944fa678", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_34_2.py::test_strings_of_size_equal_to_9", "location": ["tests40_34_2.py", 5, "test_strings_of_size_equal_to_9"], "keywords": {"test_strings_of_size_equal_to_9": 1, "tests40_34_2.py": 1, "Folder_34": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_34/tests40_34_2.py", "lineno": 12, "message": "AssertionError: assert ['r', 'j'] == ['r', 'j', 'Z...'A', ':', ...]\n  Right contains 7 more items, first extra item: 'Z'\n  Full diff:\n  - ['r', 'j', 'Z', 'M', 'A', ':', '.', '%', ' ']\n  + ['r', 'j']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_9():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=9))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['r', 'j'] == ['r', 'j', 'Z...'A', ':', ...]", "E             Right contains 7 more items, first extra item: 'Z'", "E             Full diff:", "E             - ['r', 'j', 'Z', 'M', 'A', ':', '.', '%', ' ']", "E             + ['r', 'j']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_34/tests40_34_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_9():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=9))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['r', 'j'] == ['r', 'j', 'Z...'A', ':', ...]", "E             Right contains 7 more items, first extra item: 'Z'", "E             Full diff:", "E             - ['r', 'j', 'Z', 'M', 'A', ':', '.', '%', ' ']", "E             + ['r', 'j']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_34/tests40_34_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_34/tests40_34_2.py", "lineno": 12, "message": "AssertionError: assert ['r', 'j'] == ['r', 'j', 'Z...'A', ':', ...]\n  Right contains 7 more items, first extra item: 'Z'\n  Full diff:\n  - ['r', 'j', 'Z', 'M', 'A', ':', '.', '%', ' ']\n  + ['r', 'j']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00045587200293084607, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "64332d7fc1fa4cb5aaa2a08c944fa678", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
