{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_45_2.py::test_if_result_is_sorted", "location": ["tests40_45_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011659200390568003, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "18b8fd611a97447283ce235f45d9910e", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_45_2.py::test_strings_of_size_equal_to_52", "location": ["tests40_45_2.py", 5, "test_strings_of_size_equal_to_52"], "keywords": {"test_strings_of_size_equal_to_52": 1, "tests40_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001874980007414706, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "18b8fd611a97447283ce235f45d9910e", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_45_2.py::test_if_result_is_sorted", "location": ["tests40_45_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_45_2.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_45/tests40_45_2.py", "lineno": 26, "message": "AssertionError: assert ['m', 'e', 'q...'x', 'w', ...] == ['b', 'c', 'd...'h', 'm', ...]\n  At index 0 diff: 'm' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'e', 'h', 'm', 'p', 'q', 't', 'u', 'w', 'x', 'y']\n  + ['m', 'e', 'q', 'd', 'x', 'w', 'p', 'y', 'h', 'b', 'c', 'u', 't']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['m', 'e', 'q...'x', 'w', ...] == ['b', 'c', 'd...'h', 'm', ...]", "E             At index 0 diff: 'm' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'e', 'h', 'm', 'p', 'q', 't', 'u', 'w', 'x', 'y']", "E             + ['m', 'e', 'q', 'd', 'x', 'w', 'p', 'y', 'h', 'b', 'c', 'u', 't']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_45/tests40_45_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=52 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['m', 'e', 'q...'x', 'w', ...] == ['b', 'c', 'd...'h', 'm', ...]", "E             At index 0 diff: 'm' != 'b'", "E             Full diff:", "E             - ['b', 'c', 'd', 'e', 'h', 'm', 'p', 'q', 't', 'u', 'w', 'x', 'y']", "E             + ['m', 'e', 'q', 'd', 'x', 'w', 'p', 'y', 'h', 'b', 'c', 'u', 't']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_45/tests40_45_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_2/Folder_45/tests40_45_2.py", "lineno": 26, "message": "AssertionError: assert ['m', 'e', 'q...'x', 'w', ...] == ['b', 'c', 'd...'h', 'm', ...]\n  At index 0 diff: 'm' != 'b'\n  Full diff:\n  - ['b', 'c', 'd', 'e', 'h', 'm', 'p', 'q', 't', 'u', 'w', 'x', 'y']\n  + ['m', 'e', 'q', 'd', 'x', 'w', 'p', 'y', 'h', 'b', 'c', 'u', 't']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007982360039022751, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "18b8fd611a97447283ce235f45d9910e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
