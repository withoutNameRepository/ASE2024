{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_37_3.py::test_if_result_is_sorted", "location": ["tests40_37_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_37_3.py": 1, "Folder_37": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011610200454015285, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bc0fb368187f43d09db54afdcbb59a5e", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_37_3.py::test_strings_of_size_equal_to_26", "location": ["tests40_37_3.py", 5, "test_strings_of_size_equal_to_26"], "keywords": {"test_strings_of_size_equal_to_26": 1, "tests40_37_3.py": 1, "Folder_37": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015994600107660517, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bc0fb368187f43d09db54afdcbb59a5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_37_3.py::test_if_result_is_sorted", "location": ["tests40_37_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_37_3.py": 1, "Folder_37": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_3/Folder_37/tests40_37_3.py", "lineno": 28, "message": "AssertionError: assert ['c', 'd', 'o', 'q', 's', 'u'] == ['u', 's', 'q', 'o', 'd', 'c']\n  At index 0 diff: 'c' != 'u'\n  Full diff:\n  - ['u', 's', 'q', 'o', 'd', 'c']\n  + ['c', 'd', 'o', 'q', 's', 'u']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=26 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['c', 'd', 'o', 'q', 's', 'u'] == ['u', 's', 'q', 'o', 'd', 'c']", "E             At index 0 diff: 'c' != 'u'", "E             Full diff:", "E             - ['u', 's', 'q', 'o', 'd', 'c']", "E             + ['c', 'd', 'o', 'q', 's', 'u']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_3/Folder_37/tests40_37_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=26 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['c', 'd', 'o', 'q', 's', 'u'] == ['u', 's', 'q', 'o', 'd', 'c']", "E             At index 0 diff: 'c' != 'u'", "E             Full diff:", "E             - ['u', 's', 'q', 'o', 'd', 'c']", "E             + ['c', 'd', 'o', 'q', 's', 'u']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_3/Folder_37/tests40_37_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q40/command_results_3/Folder_37/tests40_37_3.py", "lineno": 28, "message": "AssertionError: assert ['c', 'd', 'o', 'q', 's', 'u'] == ['u', 's', 'q', 'o', 'd', 'c']\n  At index 0 diff: 'c' != 'u'\n  Full diff:\n  - ['u', 's', 'q', 'o', 'd', 'c']\n  + ['c', 'd', 'o', 'q', 's', 'u']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005298130054143257, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bc0fb368187f43d09db54afdcbb59a5e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
