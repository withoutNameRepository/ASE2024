{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021607299277093261, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_horizontal_matrix", "location": ["tests58_90_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018917200213763863, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024017899704631418, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012829600018449128, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_having_176_integers", "location": ["tests58_90_5.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015254200843628496, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_having_176_integers", "location": ["tests58_90_5.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  65,  -64],\\n        [  32,  -36],\\n        [  89,   62],\\n        [  43,  -96],\\n        [ -87,   65],\\n        [  77,   70],\\n        [  -3,   26],\\n        [  23,  -28],\\n        [ -81,   79],\\n        [ -70,  -48],\\n        [  42,  -56],\\n        [ -89,   43],\\n        [  67,   86],\\n        [  45,   59],\\n        [  91,  -35],\\n        [  25,   41],\\n        [  44,   74],\\n        [  62,  -83],\\n        [  36,   11],\\n        [  -7,   34],\\n        [  67,   41],\\n        [ -86,   82],\\n        [   2,   15],\\n        [   5,  -96],\\n        [ -45,   57],\\n        [ -67,  -16],\\n        [  18,   18],\\n        [ -72,   22],\\n        [ -20,  -97],\\n        [  61,  -17],\\n        [ -61,  -69],\\n        [ -98,   49],\\n        [  88,    7],\\n        [  26,   62],\\n        [ -72,  -95],\\n        [ -56,   60],\\n        [  26,  -10],\\n        [ -82,   80],\\n        [  63,   24],\\n        [  67,   26],\\n        [  14,   64],\\n        [ -37,   35],\\n        [  74,  -51],\\n        [  36,    7],\\n        [  79,   73],\\n        [  59,   58],\\n        [  58,  -72],\\n        [ -33,   10],\\n        [ -75,   -5],\\n        [ -41,  -60],\\n        [ -45,    1],\\n        [-100,   -3],\\n        [  17,  -43],\\n        [  44,   41],\\n        [ -12,  -60],\\n        [  -5,  -94],\\n        [  -5,   -3],\\n        [  64,   78],\\n        [ -92,  -60],\\n        [  48,  -95],\\n        [  92,  -57],\\n        [  52,  -12],\\n        [ -80,  -99],\\n        [ -22,   50],\\n        [  63,  -54],\\n        [ -21,  -81],\\n        [  68,  -82],\\n        [ -24,   47],\\n        [  93,  -31],\\n        [ -26,   50],\\n        [  67,  -81],\\n        [ -43,    6],\\n        [  42,  -37],\\n        [ -85,  -23],\\n        [ -97,   86],\\n        [ -27,   58],\\n        [  53,   20],\\n        [  97,  -38],\\n        [ -90,  -16],\\n        [ -20,  -19],\\n        [ -28,  -94],\\n        [ -48,    0],\\n        [  80,  -93],\\n        [ -15,  -44],\\n        [  -6,  -12],\\n        [  11,   -4],\\n        [ -79,  -48],\\n        [ -39,   94]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  65,  -64],\\n        [  32,  -36],\\n        [  89,   62],\\n        [  43,  -96],\\n        [ -87,   65],\\n        [  77,   70],\\n        [  -3,   26],\\n        [  23,  -28],\\n        [ -81,   79],\\n        [ -70,  -48],\\n        [  42,  -56],\\n        [ -89,   43],\\n        [  67,   86],\\n        [  45,   59],\\n        [  91,  -35],\\n        [  25,   41],\\n        [  44,   74],\\n        [  62,  -83],\\n        [  36,   11],\\n        [  -7,   34],\\n        [  67,   41],\\n        [ -86,   82],\\n        [   2,   15],\\n        [   5,  -96],\\n        [ -45,   57],\\n        [ -67,  -16],\\n        [  18,   18],\\n        [ -72,   22],\\n        [ -20,  -97],\\n        [  61,  -17],\\n        [ -61,  -69],\\n        [ -98,   49],\\n        [  88,    7],\\n        [  26,   62],\\n        [ -72,  -95],\\n        [ -56,   60],\\n        [  26,  -10],\\n        [ -82,   80],\\n        [  63,   24],\\n        [  67,   26],\\n        [  14,   64],\\n        [ -37,   35],\\n        [  74,  -51],\\n        [  36,    7],\\n        [  79,   73],\\n        [  59,   58],\\n        [  58,  -72],\\n        [ -33,   10],\\n        [ -75,   -5],\\n        [ -41,  -60],\\n        [ -45,    1],\\n        [-100,   -3],\\n        [  17,  -43],\\n        [  44,   41],\\n        [ -12,  -60],\\n        [  -5,  -94],\\n        [  -5,   -3],\\n        [  64,   78],\\n        [ -92,  -60],\\n        [  48,  -95],\\n        [  92,  -57],\\n        [  52,  -12],\\n        [ -80,  -99],\\n        [ -22,   50],\\n        [  63,  -54],\\n        [ -21,  -81],\\n        [  68,  -82],\\n        [ -24,   47],\\n        [  93,  -31],\\n        [ -26,   50],\\n        [  67,  -81],\\n        [ -43,    6],\\n        [  42,  -37],\\n        [ -85,  -23],\\n        [ -97,   86],\\n        [ -27,   58],\\n        [  53,   20],\\n        [  97,  -38],\\n        [ -90,  -16],\\n        [ -20,  -19],\\n        [ -28,  -94],\\n        [ -48,    0],\\n        [  80,  -93],\\n        [ -15,  -44],\\n        [  -6,  -12],\\n        [  11,   -4],\\n        [ -79,  -48],\\n        [ -39,   94]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  65,  -64],\\n        [  32,  -36],\\n        [  89,   62],\\n        [  43,  -96],\\n        [ -87,   65],\\n        [  77,   70],\\n        [  -3,   26],\\n        [  23,  -28],\\n        [ -81,   79],\\n        [ -70,  -48],\\n        [  42,  -56],\\n        [ -89,   43],\\n        [  67,   86],\\n        [  45,   59],\\n        [  91,  -35],\\n        [  25,   41],\\n        [  44,   74],\\n        [  62,  -83],\\n        [  36,   11],\\n        [  -7,   34],\\n        [  67,   41],\\n        [ -86,   82],\\n        [   2,   15],\\n        [   5,  -96],\\n        [ -45,   57],\\n        [ -67,  -16],\\n        [  18,   18],\\n        [ -72,   22],\\n        [ -20,  -97],\\n        [  61,  -17],\\n        [ -61,  -69],\\n        [ -98,   49],\\n        [  88,    7],\\n        [  26,   62],\\n        [ -72,  -95],\\n        [ -56,   60],\\n        [  26,  -10],\\n        [ -82,   80],\\n        [  63,   24],\\n        [  67,   26],\\n        [  14,   64],\\n        [ -37,   35],\\n        [  74,  -51],\\n        [  36,    7],\\n        [  79,   73],\\n        [  59,   58],\\n        [  58,  -72],\\n        [ -33,   10],\\n        [ -75,   -5],\\n        [ -41,  -60],\\n        [ -45,    1],\\n        [-100,   -3],\\n        [  17,  -43],\\n        [  44,   41],\\n        [ -12,  -60],\\n        [  -5,  -94],\\n        [  -5,   -3],\\n        [  64,   78],\\n        [ -92,  -60],\\n        [  48,  -95],\\n        [  92,  -57],\\n        [  52,  -12],\\n        [ -80,  -99],\\n        [ -22,   50],\\n        [  63,  -54],\\n        [ -21,  -81],\\n        [  68,  -82],\\n        [ -24,   47],\\n        [  93,  -31],\\n        [ -26,   50],\\n        [  67,  -81],\\n        [ -43,    6],\\n        [  42,  -37],\\n        [ -85,  -23],\\n        [ -97,   86],\\n        [ -27,   58],\\n        [  53,   20],\\n        [  97,  -38],\\n        [ -90,  -16],\\n        [ -20,  -19],\\n        [ -28,  -94],\\n        [ -48,    0],\\n        [  80,  -93],\\n        [ -15,  -44],\\n        [  -6,  -12],\\n        [  11,   -4],\\n        [ -79,  -48],\\n        [ -39,   94]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  65,  -64],\\n        [  32,  -36],\\n        [  89,   62],\\n        [  43,  -96],\\n        [ -87,   65],\\n        [  77,   70],\\n        [  -3,   26],\\n        [  23,  -28],\\n        [ -81,   79],\\n        [ -70,  -48],\\n        [  42,  -56],\\n        [ -89,   43],\\n        [  67,   86],\\n        [  45,   59],\\n        [  91,  -35],\\n        [  25,   41],\\n        [  44,   74],\\n        [  62,  -83],\\n        [  36,   11],\\n        [  -7,   34],\\n        [  67,   41],\\n        [ -86,   82],\\n        [   2,   15],\\n        [   5,  -96],\\n        [ -45,   57],\\n        [ -67,  -16],\\n        [  18,   18],\\n        [ -72,   22],\\n        [ -20,  -97],\\n        [  61,  -17],\\n        [ -61,  -69],\\n        [ -98,   49],\\n        [  88,    7],\\n        [  26,   62],\\n        [ -72,  -95],\\n        [ -56,   60],\\n        [  26,  -10],\\n        [ -82,   80],\\n        [  63,   24],\\n        [  67,   26],\\n        [  14,   64],\\n        [ -37,   35],\\n        [  74,  -51],\\n        [  36,    7],\\n        [  79,   73],\\n        [  59,   58],\\n        [  58,  -72],\\n        [ -33,   10],\\n        [ -75,   -5],\\n        [ -41,  -60],\\n        [ -45,    1],\\n        [-100,   -3],\\n        [  17,  -43],\\n        [  44,   41],\\n        [ -12,  -60],\\n        [  -5,  -94],\\n        [  -5,   -3],\\n        [  64,   78],\\n        [ -92,  -60],\\n        [  48,  -95],\\n        [  92,  -57],\\n        [  52,  -12],\\n        [ -80,  -99],\\n        [ -22,   50],\\n        [  63,  -54],\\n        [ -21,  -81],\\n        [  68,  -82],\\n        [ -24,   47],\\n        [  93,  -31],\\n        [ -26,   50],\\n        [  67,  -81],\\n        [ -43,    6],\\n        [  42,  -37],\\n        [ -85,  -23],\\n        [ -97,   86],\\n        [ -27,   58],\\n        [  53,   20],\\n        [  97,  -38],\\n        [ -90,  -16],\\n        [ -20,  -19],\\n        [ -28,  -94],\\n        [ -48,    0],\\n        [  80,  -93],\\n        [ -15,  -44],\\n        [  -6,  -12],\\n        [  11,   -4],\\n        [ -79,  -48],\\n        [ -39,   94]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001087277996703051, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "903d5a4b50ed4e97bda4d78bfc502bab", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
