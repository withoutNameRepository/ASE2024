{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_9_5.py::test_horizontal_matrix", "location": ["tests58_9_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001862359931692481, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_9_5.py::test_matrix_of_one_integer", "location": ["tests58_9_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017862200911622494, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_9_5.py::test_matrix_of_one_integer", "location": ["tests58_9_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001911149884108454, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_9_5.py::test_matrix_of_one_integer", "location": ["tests58_9_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011065199214499444, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_9_5.py::test_matrix_of_having_33_integers", "location": ["tests58_9_5.py", 28, "test_matrix_of_having_33_integers"], "keywords": {"test_matrix_of_having_33_integers": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011618298594839871, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_9_5.py::test_matrix_of_having_33_integers", "location": ["tests58_9_5.py", 28, "test_matrix_of_having_33_integers"], "keywords": {"test_matrix_of_having_33_integers": 1, "__wrapped__": 1, "tests58_9_5.py": 1, "Folder_9": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_9/tests58_9_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,   33,   37,    2,  -98,   -6,  -82,  -36,  -60,   52,\\n          -77,  -69,   88,  -14,   57,  -53,  -53,   72,   -4,  -33,\\n            3, -100,   68,  -99,  100,   44,  -47,   50,   74,  -35,\\n          -37,  -68,   41]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_33_integers():", "        if 33 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(33 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(33)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,   33,   37,    2,  -98,   -6,  -82,  -36,  -60,   52,\\n          -77,  -69,   88,  -14,   57,  -53,  -53,   72,   -4,  -33,\\n            3, -100,   68,  -99,  100,   44,  -47,   50,   74,  -35,\\n          -37,  -68,   41]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_9/tests58_9_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_33_integers():", "        if 33 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(33 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(33)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,   33,   37,    2,  -98,   -6,  -82,  -36,  -60,   52,\\n          -77,  -69,   88,  -14,   57,  -53,  -53,   72,   -4,  -33,\\n            3, -100,   68,  -99,  100,   44,  -47,   50,   74,  -35,\\n          -37,  -68,   41]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_9/tests58_9_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_9/tests58_9_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,   33,   37,    2,  -98,   -6,  -82,  -36,  -60,   52,\\n          -77,  -69,   88,  -14,   57,  -53,  -53,   72,   -4,  -33,\\n            3, -100,   68,  -99,  100,   44,  -47,   50,   74,  -35,\\n          -37,  -68,   41]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005664330092258751, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c0a4ce6c82b04818857dd7e6285910c3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
