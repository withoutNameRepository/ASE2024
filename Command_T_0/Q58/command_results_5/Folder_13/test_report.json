{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_13_5.py::test_horizontal_matrix", "location": ["tests58_13_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018438200640957803, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000471941995783709, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007275310053955764, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005415250052465126, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006246330012800172, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  43,   83,   22,  -33,   66,   76,   18,  -99,  -49,   92,\\n           -1,  -61,   65,  -10,  -61,   83,   37,   90,   71,   66,\\n          -72,  -33,  -74,  -94,   84,  -77,  -84,   56,  -69,  -51,\\n           84,   33,   52,  -39,    7,  -51,  -72,   97,   -3,   97,\\n           29,  -84,  -37,  -96,  -21,  -17,  -92,   75,   14,   30,\\n          -23,   35, -100,   -6,   33,   65,   56,  -30,  -29,   89,\\n           17,  -47,   84,  -15,  -46,  -14,   65,  -36,  -17,  -10,\\n            4,   18,  -59,  -15,  -91,  -64,  -80,  -42,  -35,   47,\\n           30,  -97,  -16,   16,   10,  -12,   71,   10,   99,  -72,\\n           93,   -3,   35,  -74,   72,  -85,  -83,   -9,   47,  -87,\\n          -81,   23,   71,   38,  -64,  -34,  -93,  -65,   -6,   96,\\n           84,   23,   -6,   76,   80,  -90,   34,   19,  -64,  -69,\\n          -10,   -4,  -82,   47,   51,   45,  -88,    2,    9,   64,\\n          -91,  -72,  -41,    0,  -28,   52,  -83,   -3,    9,   18,\\n           28,   49,   53,   63,   88,  -50,   26,   89,  -15,  -10,\\n          -89,   55,  -34,  -82,   51,   92,   31,   67,   98,  -19,\\n          -74,   32,  -93,  -96,  -30,  -68,  -46,   76,  -82,  -88,\\n           55,   67,  -20,   44,  -10]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  43,   83,   22,  -33,   66,   76,   18,  -99,  -49,   92,\\n           -1,  -61,   65,  -10,  -61,   83,   37,   90,   71,   66,\\n          -72,  -33,  -74,  -94,   84,  -77,  -84,   56,  -69,  -51,\\n           84,   33,   52,  -39,    7,  -51,  -72,   97,   -3,   97,\\n           29,  -84,  -37,  -96,  -21,  -17,  -92,   75,   14,   30,\\n          -23,   35, -100,   -6,   33,   65,   56,  -30,  -29,   89,\\n           17,  -47,   84,  -15,  -46,  -14,   65,  -36,  -17,  -10,\\n            4,   18,  -59,  -15,  -91,  -64,  -80,  -42,  -35,   47,\\n           30,  -97,  -16,   16,   10,  -12,   71,   10,   99,  -72,\\n           93,   -3,   35,  -74,   72,  -85,  -83,   -9,   47,  -87,\\n          -81,   23,   71,   38,  -64,  -34,  -93,  -65,   -6,   96,\\n           84,   23,   -6,   76,   80,  -90,   34,   19,  -64,  -69,\\n          -10,   -4,  -82,   47,   51,   45,  -88,    2,    9,   64,\\n          -91,  -72,  -41,    0,  -28,   52,  -83,   -3,    9,   18,\\n           28,   49,   53,   63,   88,  -50,   26,   89,  -15,  -10,\\n          -89,   55,  -34,  -82,   51,   92,   31,   67,   98,  -19,\\n          -74,   32,  -93,  -96,  -30,  -68,  -46,   76,  -82,  -88,\\n           55,   67,  -20,   44,  -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  43,   83,   22,  -33,   66,   76,   18,  -99,  -49,   92,\\n           -1,  -61,   65,  -10,  -61,   83,   37,   90,   71,   66,\\n          -72,  -33,  -74,  -94,   84,  -77,  -84,   56,  -69,  -51,\\n           84,   33,   52,  -39,    7,  -51,  -72,   97,   -3,   97,\\n           29,  -84,  -37,  -96,  -21,  -17,  -92,   75,   14,   30,\\n          -23,   35, -100,   -6,   33,   65,   56,  -30,  -29,   89,\\n           17,  -47,   84,  -15,  -46,  -14,   65,  -36,  -17,  -10,\\n            4,   18,  -59,  -15,  -91,  -64,  -80,  -42,  -35,   47,\\n           30,  -97,  -16,   16,   10,  -12,   71,   10,   99,  -72,\\n           93,   -3,   35,  -74,   72,  -85,  -83,   -9,   47,  -87,\\n          -81,   23,   71,   38,  -64,  -34,  -93,  -65,   -6,   96,\\n           84,   23,   -6,   76,   80,  -90,   34,   19,  -64,  -69,\\n          -10,   -4,  -82,   47,   51,   45,  -88,    2,    9,   64,\\n          -91,  -72,  -41,    0,  -28,   52,  -83,   -3,    9,   18,\\n           28,   49,   53,   63,   88,  -50,   26,   89,  -15,  -10,\\n          -89,   55,  -34,  -82,   51,   92,   31,   67,   98,  -19,\\n          -74,   32,  -93,  -96,  -30,  -68,  -46,   76,  -82,  -88,\\n           55,   67,  -20,   44,  -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  43,   83,   22,  -33,   66,   76,   18,  -99,  -49,   92,\\n           -1,  -61,   65,  -10,  -61,   83,   37,   90,   71,   66,\\n          -72,  -33,  -74,  -94,   84,  -77,  -84,   56,  -69,  -51,\\n           84,   33,   52,  -39,    7,  -51,  -72,   97,   -3,   97,\\n           29,  -84,  -37,  -96,  -21,  -17,  -92,   75,   14,   30,\\n          -23,   35, -100,   -6,   33,   65,   56,  -30,  -29,   89,\\n           17,  -47,   84,  -15,  -46,  -14,   65,  -36,  -17,  -10,\\n            4,   18,  -59,  -15,  -91,  -64,  -80,  -42,  -35,   47,\\n           30,  -97,  -16,   16,   10,  -12,   71,   10,   99,  -72,\\n           93,   -3,   35,  -74,   72,  -85,  -83,   -9,   47,  -87,\\n          -81,   23,   71,   38,  -64,  -34,  -93,  -65,   -6,   96,\\n           84,   23,   -6,   76,   80,  -90,   34,   19,  -64,  -69,\\n          -10,   -4,  -82,   47,   51,   45,  -88,    2,    9,   64,\\n          -91,  -72,  -41,    0,  -28,   52,  -83,   -3,    9,   18,\\n           28,   49,   53,   63,   88,  -50,   26,   89,  -15,  -10,\\n          -89,   55,  -34,  -82,   51,   92,   31,   67,   98,  -19,\\n          -74,   32,  -93,  -96,  -30,  -68,  -46,   76,  -82,  -88,\\n           55,   67,  -20,   44,  -10]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013015879958402365, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f6ccf2194f84492f9e0fb881900671f9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
