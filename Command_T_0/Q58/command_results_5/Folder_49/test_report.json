{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_49_5.py::test_horizontal_matrix", "location": ["tests58_49_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002181269956054166, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_49_5.py::test_matrix_of_one_integer", "location": ["tests58_49_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020706499344669282, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_49_5.py::test_matrix_of_one_integer", "location": ["tests58_49_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020113401114940643, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_49_5.py::test_matrix_of_one_integer", "location": ["tests58_49_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011947800521738827, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_49_5.py::test_matrix_of_having_72_integers", "location": ["tests58_49_5.py", 28, "test_matrix_of_having_72_integers"], "keywords": {"test_matrix_of_having_72_integers": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012628099648281932, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_49_5.py::test_matrix_of_having_72_integers", "location": ["tests58_49_5.py", 28, "test_matrix_of_having_72_integers"], "keywords": {"test_matrix_of_having_72_integers": 1, "__wrapped__": 1, "tests58_49_5.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_49/tests58_49_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 30,  82],\\n        [ -9, -66],\\n        [ 18, -12],\\n        [-96,  43],\\n        [-76,   9],\\n        [-47, -85],\\n        [-62, -61],\\n        [-56, -98],\\n        [-62, -80],\\n        [-33, -70],\\n        [ 56, -71],\\n        [-43, -98],\\n        [-78,  10],\\n        [ 95, -52],\\n        [-17,  85],\\n        [ 81, -19],\\n        [ 33, -30],\\n        [ 29,  90],\\n        [-94,  96],\\n        [ 37,  25],\\n        [-70,  11],\\n        [ 74, -84],\\n        [-18,  32],\\n        [ 26,  24],\\n        [  6,  90],\\n        [100, -41],\\n        [ 83, -29],\\n        [-68, -44],\\n        [ 41, -36],\\n        [-81,  97],\\n        [ 88,  22],\\n        [ 98,  68],\\n        [-15, -45],\\n        [ 70, -62],\\n        [ 92,  20],\\n        [ 16,  85]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_72_integers():", "        if 72 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(72 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(72)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 30,  82],\\n        [ -9, -66],\\n        [ 18, -12],\\n        [-96,  43],\\n        [-76,   9],\\n        [-47, -85],\\n        [-62, -61],\\n        [-56, -98],\\n        [-62, -80],\\n        [-33, -70],\\n        [ 56, -71],\\n        [-43, -98],\\n        [-78,  10],\\n        [ 95, -52],\\n        [-17,  85],\\n        [ 81, -19],\\n        [ 33, -30],\\n        [ 29,  90],\\n        [-94,  96],\\n        [ 37,  25],\\n        [-70,  11],\\n        [ 74, -84],\\n        [-18,  32],\\n        [ 26,  24],\\n        [  6,  90],\\n        [100, -41],\\n        [ 83, -29],\\n        [-68, -44],\\n        [ 41, -36],\\n        [-81,  97],\\n        [ 88,  22],\\n        [ 98,  68],\\n        [-15, -45],\\n        [ 70, -62],\\n        [ 92,  20],\\n        [ 16,  85]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_49/tests58_49_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_72_integers():", "        if 72 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(72 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(72)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 30,  82],\\n        [ -9, -66],\\n        [ 18, -12],\\n        [-96,  43],\\n        [-76,   9],\\n        [-47, -85],\\n        [-62, -61],\\n        [-56, -98],\\n        [-62, -80],\\n        [-33, -70],\\n        [ 56, -71],\\n        [-43, -98],\\n        [-78,  10],\\n        [ 95, -52],\\n        [-17,  85],\\n        [ 81, -19],\\n        [ 33, -30],\\n        [ 29,  90],\\n        [-94,  96],\\n        [ 37,  25],\\n        [-70,  11],\\n        [ 74, -84],\\n        [-18,  32],\\n        [ 26,  24],\\n        [  6,  90],\\n        [100, -41],\\n        [ 83, -29],\\n        [-68, -44],\\n        [ 41, -36],\\n        [-81,  97],\\n        [ 88,  22],\\n        [ 98,  68],\\n        [-15, -45],\\n        [ 70, -62],\\n        [ 92,  20],\\n        [ 16,  85]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_49/tests58_49_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_49/tests58_49_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 30,  82],\\n        [ -9, -66],\\n        [ 18, -12],\\n        [-96,  43],\\n        [-76,   9],\\n        [-47, -85],\\n        [-62, -61],\\n        [-56, -98],\\n        [-62, -80],\\n        [-33, -70],\\n        [ 56, -71],\\n        [-43, -98],\\n        [-78,  10],\\n        [ 95, -52],\\n        [-17,  85],\\n        [ 81, -19],\\n        [ 33, -30],\\n        [ 29,  90],\\n        [-94,  96],\\n        [ 37,  25],\\n        [-70,  11],\\n        [ 74, -84],\\n        [-18,  32],\\n        [ 26,  24],\\n        [  6,  90],\\n        [100, -41],\\n        [ 83, -29],\\n        [-68, -44],\\n        [ 41, -36],\\n        [-81,  97],\\n        [ 88,  22],\\n        [ 98,  68],\\n        [-15, -45],\\n        [ 70, -62],\\n        [ 92,  20],\\n        [ 16,  85]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007758620049571618, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3c92a873402d4d929a95880048fc1f07", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
