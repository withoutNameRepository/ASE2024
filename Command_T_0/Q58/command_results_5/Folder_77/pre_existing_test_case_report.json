{
  "parameter(s)": [
    179
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  89,    0,  -35,    5,    6,   94,  -24,  -83,  -74,  -80,\\n           64,   83,   89,   91,   -3,   87,   32,  -45,   52,  -32,\\n           46,  -28,   99,   15,   67,  -42,   47,   95,  -29,   -9,\\n          -30,   -4,  -55,   73,  -72,   82,   74,   59,   71,  -56,\\n          -87,   79,   45,  -72,  -61,    6,   58,  -80,  -76,  -35,\\n          -56,  -19,   69,  -52,   71,  -53,  -22,  -73,   47,  -53,\\n           66,  -32,   35,  -34,  -72,   85,   34,  -55,   54,   46,\\n          -15,  -72,  -42,  -89,   18,  -41,   23,   20,   22,   88,\\n           57,  -16,  -61,   -4,   35,   73,  -27,  -48,  -41,  -22,\\n           21,   51,   63,   90,  -42,    8,   58,   -8,   66,  -83,\\n          -17,   24,   37,   94,   83,   58,  -79,   47,  -86,  -93,\\n           62,   88,   50,  -17,   15,  -65,   44,  -68,  -66,   61,\\n           37,   35,   94,  -10,   51,   89,  -47,  -71,  -95,   91,\\n           67,  -46,  -43,  -50,  -93,   38,    9,  -38,   71,  -18,\\n          -22,  -32,   17,  -65,  -90,   -9,   67,   65,    5,   91,\\n           58, -100,  -48,  -33,  -32,  -30,  -84,   60,  -19,   25,\\n            5,   -6,  -21,   -3,  -15,   41,  -15,   47,  -52,   66,\\n          -40,   44,  -36,   79,   67,  -59,  -85,   -3,    1]]))",
    0.00132
  ]
}