{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_5.py::test_horizontal_matrix", "location": ["tests58_77_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001896330068120733, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021864799782633781, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000198428999283351, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00040568600525148213, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006976929871598259, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  89,    0,  -35,    5,    6,   94,  -24,  -83,  -74,  -80,\\n           64,   83,   89,   91,   -3,   87,   32,  -45,   52,  -32,\\n           46,  -28,   99,   15,   67,  -42,   47,   95,  -29,   -9,\\n          -30,   -4,  -55,   73,  -72,   82,   74,   59,   71,  -56,\\n          -87,   79,   45,  -72,  -61,    6,   58,  -80,  -76,  -35,\\n          -56,  -19,   69,  -52,   71,  -53,  -22,  -73,   47,  -53,\\n           66,  -32,   35,  -34,  -72,   85,   34,  -55,   54,   46,\\n          -15,  -72,  -42,  -89,   18,  -41,   23,   20,   22,   88,\\n           57,  -16,  -61,   -4,   35,   73,  -27,  -48,  -41,  -22,\\n           21,   51,   63,   90,  -42,    8,   58,   -8,   66,  -83,\\n          -17,   24,   37,   94,   83,   58,  -79,   47,  -86,  -93,\\n           62,   88,   50,  -17,   15,  -65,   44,  -68,  -66,   61,\\n           37,   35,   94,  -10,   51,   89,  -47,  -71,  -95,   91,\\n           67,  -46,  -43,  -50,  -93,   38,    9,  -38,   71,  -18,\\n          -22,  -32,   17,  -65,  -90,   -9,   67,   65,    5,   91,\\n           58, -100,  -48,  -33,  -32,  -30,  -84,   60,  -19,   25,\\n            5,   -6,  -21,   -3,  -15,   41,  -15,   47,  -52,   66,\\n          -40,   44,  -36,   79,   67,  -59,  -85,   -3,    1]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  89,    0,  -35,    5,    6,   94,  -24,  -83,  -74,  -80,\\n           64,   83,   89,   91,   -3,   87,   32,  -45,   52,  -32,\\n           46,  -28,   99,   15,   67,  -42,   47,   95,  -29,   -9,\\n          -30,   -4,  -55,   73,  -72,   82,   74,   59,   71,  -56,\\n          -87,   79,   45,  -72,  -61,    6,   58,  -80,  -76,  -35,\\n          -56,  -19,   69,  -52,   71,  -53,  -22,  -73,   47,  -53,\\n           66,  -32,   35,  -34,  -72,   85,   34,  -55,   54,   46,\\n          -15,  -72,  -42,  -89,   18,  -41,   23,   20,   22,   88,\\n           57,  -16,  -61,   -4,   35,   73,  -27,  -48,  -41,  -22,\\n           21,   51,   63,   90,  -42,    8,   58,   -8,   66,  -83,\\n          -17,   24,   37,   94,   83,   58,  -79,   47,  -86,  -93,\\n           62,   88,   50,  -17,   15,  -65,   44,  -68,  -66,   61,\\n           37,   35,   94,  -10,   51,   89,  -47,  -71,  -95,   91,\\n           67,  -46,  -43,  -50,  -93,   38,    9,  -38,   71,  -18,\\n          -22,  -32,   17,  -65,  -90,   -9,   67,   65,    5,   91,\\n           58, -100,  -48,  -33,  -32,  -30,  -84,   60,  -19,   25,\\n            5,   -6,  -21,   -3,  -15,   41,  -15,   47,  -52,   66,\\n          -40,   44,  -36,   79,   67,  -59,  -85,   -3,    1]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  89,    0,  -35,    5,    6,   94,  -24,  -83,  -74,  -80,\\n           64,   83,   89,   91,   -3,   87,   32,  -45,   52,  -32,\\n           46,  -28,   99,   15,   67,  -42,   47,   95,  -29,   -9,\\n          -30,   -4,  -55,   73,  -72,   82,   74,   59,   71,  -56,\\n          -87,   79,   45,  -72,  -61,    6,   58,  -80,  -76,  -35,\\n          -56,  -19,   69,  -52,   71,  -53,  -22,  -73,   47,  -53,\\n           66,  -32,   35,  -34,  -72,   85,   34,  -55,   54,   46,\\n          -15,  -72,  -42,  -89,   18,  -41,   23,   20,   22,   88,\\n           57,  -16,  -61,   -4,   35,   73,  -27,  -48,  -41,  -22,\\n           21,   51,   63,   90,  -42,    8,   58,   -8,   66,  -83,\\n          -17,   24,   37,   94,   83,   58,  -79,   47,  -86,  -93,\\n           62,   88,   50,  -17,   15,  -65,   44,  -68,  -66,   61,\\n           37,   35,   94,  -10,   51,   89,  -47,  -71,  -95,   91,\\n           67,  -46,  -43,  -50,  -93,   38,    9,  -38,   71,  -18,\\n          -22,  -32,   17,  -65,  -90,   -9,   67,   65,    5,   91,\\n           58, -100,  -48,  -33,  -32,  -30,  -84,   60,  -19,   25,\\n            5,   -6,  -21,   -3,  -15,   41,  -15,   47,  -52,   66,\\n          -40,   44,  -36,   79,   67,  -59,  -85,   -3,    1]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  89,    0,  -35,    5,    6,   94,  -24,  -83,  -74,  -80,\\n           64,   83,   89,   91,   -3,   87,   32,  -45,   52,  -32,\\n           46,  -28,   99,   15,   67,  -42,   47,   95,  -29,   -9,\\n          -30,   -4,  -55,   73,  -72,   82,   74,   59,   71,  -56,\\n          -87,   79,   45,  -72,  -61,    6,   58,  -80,  -76,  -35,\\n          -56,  -19,   69,  -52,   71,  -53,  -22,  -73,   47,  -53,\\n           66,  -32,   35,  -34,  -72,   85,   34,  -55,   54,   46,\\n          -15,  -72,  -42,  -89,   18,  -41,   23,   20,   22,   88,\\n           57,  -16,  -61,   -4,   35,   73,  -27,  -48,  -41,  -22,\\n           21,   51,   63,   90,  -42,    8,   58,   -8,   66,  -83,\\n          -17,   24,   37,   94,   83,   58,  -79,   47,  -86,  -93,\\n           62,   88,   50,  -17,   15,  -65,   44,  -68,  -66,   61,\\n           37,   35,   94,  -10,   51,   89,  -47,  -71,  -95,   91,\\n           67,  -46,  -43,  -50,  -93,   38,    9,  -38,   71,  -18,\\n          -22,  -32,   17,  -65,  -90,   -9,   67,   65,    5,   91,\\n           58, -100,  -48,  -33,  -32,  -30,  -84,   60,  -19,   25,\\n            5,   -6,  -21,   -3,  -15,   41,  -15,   47,  -52,   66,\\n          -40,   44,  -36,   79,   67,  -59,  -85,   -3,    1]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013190609897719696, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e1c578272024486faae0a813880c5087", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
