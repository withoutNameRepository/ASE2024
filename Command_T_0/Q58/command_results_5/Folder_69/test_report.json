{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_69_5.py::test_horizontal_matrix", "location": ["tests58_69_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016835200949572027, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_69_5.py::test_matrix_of_one_integer", "location": ["tests58_69_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019496300956234336, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_5.py::test_matrix_of_one_integer", "location": ["tests58_69_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001989209995372221, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_5.py::test_matrix_of_one_integer", "location": ["tests58_69_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011385799734853208, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_5.py::test_matrix_of_having_126_integers", "location": ["tests58_69_5.py", 28, "test_matrix_of_having_126_integers"], "keywords": {"test_matrix_of_having_126_integers": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012291499297134578, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_5.py::test_matrix_of_having_126_integers", "location": ["tests58_69_5.py", 28, "test_matrix_of_having_126_integers"], "keywords": {"test_matrix_of_having_126_integers": 1, "__wrapped__": 1, "tests58_69_5.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_69/tests58_69_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -78],\\n        [ -83,   68],\\n        [ -12,  -64],\\n        [  47,  -58],\\n        [  56,   48],\\n        [  79,    3],\\n        [  76,  -66],\\n        [ -79,  -34],\\n        [ -76,   31],\\n        [ -19,  -96],\\n        [  70,   27],\\n        [ -37,   33],\\n        [  -3,  -93],\\n        [  90,  -88],\\n        [  12,   95],\\n        [ -83,   92],\\n        [ -36,  -43],\\n        [-100,   66],\\n        [ -16,  -84],\\n        [   2,  -68],\\n        [  17,   42],\\n        [ -21,   80],\\n        [  44,   85],\\n        [  33,  -71],\\n        [ -15,  -71],\\n        [  12,   99],\\n        [ -65,  -90],\\n        [-100,  -61],\\n        [  87,  -61],\\n        [  61,  -41],\\n        [ -26,  -98],\\n        [ -30,   86],\\n        [  75,   51],\\n        [  15,  -90],\\n        [  30,   42],\\n        [ -35,   36],\\n        [  59,   88],\\n        [  58,   69],\\n        [ -21,   69],\\n        [ -21,   15],\\n        [  33,   48],\\n        [  60,  -93],\\n        [   4,  -26],\\n        [ -41,  -37],\\n        [  67,   22],\\n        [ -10,  -83],\\n        [ -25,  -26],\\n        [  53,   61],\\n        [ -28,   -6],\\n        [ -23,   48],\\n        [ -45,  -89],\\n        [   5,  -64],\\n        [  18,   91],\\n        [ 100,   20],\\n        [ -48,   -9],\\n        [  46,   46],\\n        [  64,  -37],\\n        [ -22,   31],\\n        [  12,  -28],\\n        [   2,   72],\\n        [ -91,   51],\\n        [ -69,   68],\\n        [  84,   22]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_126_integers():", "        if 126 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(126 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(126)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -78],\\n        [ -83,   68],\\n        [ -12,  -64],\\n        [  47,  -58],\\n        [  56,   48],\\n        [  79,    3],\\n        [  76,  -66],\\n        [ -79,  -34],\\n        [ -76,   31],\\n        [ -19,  -96],\\n        [  70,   27],\\n        [ -37,   33],\\n        [  -3,  -93],\\n        [  90,  -88],\\n        [  12,   95],\\n        [ -83,   92],\\n        [ -36,  -43],\\n        [-100,   66],\\n        [ -16,  -84],\\n        [   2,  -68],\\n        [  17,   42],\\n        [ -21,   80],\\n        [  44,   85],\\n        [  33,  -71],\\n        [ -15,  -71],\\n        [  12,   99],\\n        [ -65,  -90],\\n        [-100,  -61],\\n        [  87,  -61],\\n        [  61,  -41],\\n        [ -26,  -98],\\n        [ -30,   86],\\n        [  75,   51],\\n        [  15,  -90],\\n        [  30,   42],\\n        [ -35,   36],\\n        [  59,   88],\\n        [  58,   69],\\n        [ -21,   69],\\n        [ -21,   15],\\n        [  33,   48],\\n        [  60,  -93],\\n        [   4,  -26],\\n        [ -41,  -37],\\n        [  67,   22],\\n        [ -10,  -83],\\n        [ -25,  -26],\\n        [  53,   61],\\n        [ -28,   -6],\\n        [ -23,   48],\\n        [ -45,  -89],\\n        [   5,  -64],\\n        [  18,   91],\\n        [ 100,   20],\\n        [ -48,   -9],\\n        [  46,   46],\\n        [  64,  -37],\\n        [ -22,   31],\\n        [  12,  -28],\\n        [   2,   72],\\n        [ -91,   51],\\n        [ -69,   68],\\n        [  84,   22]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_69/tests58_69_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_126_integers():", "        if 126 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(126 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(126)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -78],\\n        [ -83,   68],\\n        [ -12,  -64],\\n        [  47,  -58],\\n        [  56,   48],\\n        [  79,    3],\\n        [  76,  -66],\\n        [ -79,  -34],\\n        [ -76,   31],\\n        [ -19,  -96],\\n        [  70,   27],\\n        [ -37,   33],\\n        [  -3,  -93],\\n        [  90,  -88],\\n        [  12,   95],\\n        [ -83,   92],\\n        [ -36,  -43],\\n        [-100,   66],\\n        [ -16,  -84],\\n        [   2,  -68],\\n        [  17,   42],\\n        [ -21,   80],\\n        [  44,   85],\\n        [  33,  -71],\\n        [ -15,  -71],\\n        [  12,   99],\\n        [ -65,  -90],\\n        [-100,  -61],\\n        [  87,  -61],\\n        [  61,  -41],\\n        [ -26,  -98],\\n        [ -30,   86],\\n        [  75,   51],\\n        [  15,  -90],\\n        [  30,   42],\\n        [ -35,   36],\\n        [  59,   88],\\n        [  58,   69],\\n        [ -21,   69],\\n        [ -21,   15],\\n        [  33,   48],\\n        [  60,  -93],\\n        [   4,  -26],\\n        [ -41,  -37],\\n        [  67,   22],\\n        [ -10,  -83],\\n        [ -25,  -26],\\n        [  53,   61],\\n        [ -28,   -6],\\n        [ -23,   48],\\n        [ -45,  -89],\\n        [   5,  -64],\\n        [  18,   91],\\n        [ 100,   20],\\n        [ -48,   -9],\\n        [  46,   46],\\n        [  64,  -37],\\n        [ -22,   31],\\n        [  12,  -28],\\n        [   2,   72],\\n        [ -91,   51],\\n        [ -69,   68],\\n        [  84,   22]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_69/tests58_69_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_69/tests58_69_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -1,  -78],\\n        [ -83,   68],\\n        [ -12,  -64],\\n        [  47,  -58],\\n        [  56,   48],\\n        [  79,    3],\\n        [  76,  -66],\\n        [ -79,  -34],\\n        [ -76,   31],\\n        [ -19,  -96],\\n        [  70,   27],\\n        [ -37,   33],\\n        [  -3,  -93],\\n        [  90,  -88],\\n        [  12,   95],\\n        [ -83,   92],\\n        [ -36,  -43],\\n        [-100,   66],\\n        [ -16,  -84],\\n        [   2,  -68],\\n        [  17,   42],\\n        [ -21,   80],\\n        [  44,   85],\\n        [  33,  -71],\\n        [ -15,  -71],\\n        [  12,   99],\\n        [ -65,  -90],\\n        [-100,  -61],\\n        [  87,  -61],\\n        [  61,  -41],\\n        [ -26,  -98],\\n        [ -30,   86],\\n        [  75,   51],\\n        [  15,  -90],\\n        [  30,   42],\\n        [ -35,   36],\\n        [  59,   88],\\n        [  58,   69],\\n        [ -21,   69],\\n        [ -21,   15],\\n        [  33,   48],\\n        [  60,  -93],\\n        [   4,  -26],\\n        [ -41,  -37],\\n        [  67,   22],\\n        [ -10,  -83],\\n        [ -25,  -26],\\n        [  53,   61],\\n        [ -28,   -6],\\n        [ -23,   48],\\n        [ -45,  -89],\\n        [   5,  -64],\\n        [  18,   91],\\n        [ 100,   20],\\n        [ -48,   -9],\\n        [  46,   46],\\n        [  64,  -37],\\n        [ -22,   31],\\n        [  12,  -28],\\n        [   2,   72],\\n        [ -91,   51],\\n        [ -69,   68],\\n        [  84,   22]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010477530013304204, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8e4955540c424926916f0da9043df283", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
