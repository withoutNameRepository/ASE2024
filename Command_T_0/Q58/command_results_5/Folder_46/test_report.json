{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022984899987932295, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_horizontal_matrix", "location": ["tests58_46_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001762369938660413, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024421600392088294, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015722100215498358, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001849429972935468, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-82,   3],\\n        [ 16, -65],\\n        [ 96,  78],\\n        [ 47,  10],\\n        [  7, -43],\\n        [ 87,  77],\\n        [-94,  56],\\n        [-32, -97],\\n        [ 99, -53],\\n        [-46,   9],\\n        [-42,  60],\\n        [-77,  25],\\n        [ 84, -31],\\n        [-35,  49],\\n        [ 27,  77],\\n        [ 59,  40],\\n        [-81,  95],\\n        [ 74, -25],\\n        [  1,  40],\\n        [ 98, -20],\\n        [  7, -27],\\n        [-73, -37],\\n        [ 45,  18],\\n        [ 87,  36],\\n        [-30,  63],\\n        [ 34, -25],\\n        [-22, -47],\\n        [ -9,  79],\\n        [-26,  90],\\n        [-83, -42],\\n        [ 13, -25],\\n        [-20, -15],\\n        [-44,  39],\\n        [-30,  88],\\n        [-90, -46],\\n        [-85,  82],\\n        [ 35,  87],\\n        [-57,  11],\\n        [-23, -54],\\n        [-95,  95],\\n        [-34,  68],\\n        [-69, -31],\\n        [-18, -69],\\n        [-11,  60],\\n        [-20,  17],\\n        [-22,  87],\\n        [ 40, -81],\\n        [-27,  40],\\n        [-67, -82],\\n        [-76, -91],\\n        [-48, -75],\\n        [-87, -81],\\n        [ 78,  34],\\n        [ 27,  63],\\n        [ 15,  97],\\n        [ 70,  18],\\n        [-24,  43],\\n        [ 71, 100],\\n        [-71,  85],\\n        [-72, -86],\\n        [ 21,  81],\\n        [ 10, -20],\\n        [ 70,  90],\\n        [ 97,  27],\\n        [ 83, -81],\\n        [ 49, -59],\\n        [-17,  -5],\\n        [-65, -18],\\n        [ 48,  -7],\\n        [  4,  15],\\n        [ 86,  44],\\n        [ 31, -86]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-82,   3],\\n        [ 16, -65],\\n        [ 96,  78],\\n        [ 47,  10],\\n        [  7, -43],\\n        [ 87,  77],\\n        [-94,  56],\\n        [-32, -97],\\n        [ 99, -53],\\n        [-46,   9],\\n        [-42,  60],\\n        [-77,  25],\\n        [ 84, -31],\\n        [-35,  49],\\n        [ 27,  77],\\n        [ 59,  40],\\n        [-81,  95],\\n        [ 74, -25],\\n        [  1,  40],\\n        [ 98, -20],\\n        [  7, -27],\\n        [-73, -37],\\n        [ 45,  18],\\n        [ 87,  36],\\n        [-30,  63],\\n        [ 34, -25],\\n        [-22, -47],\\n        [ -9,  79],\\n        [-26,  90],\\n        [-83, -42],\\n        [ 13, -25],\\n        [-20, -15],\\n        [-44,  39],\\n        [-30,  88],\\n        [-90, -46],\\n        [-85,  82],\\n        [ 35,  87],\\n        [-57,  11],\\n        [-23, -54],\\n        [-95,  95],\\n        [-34,  68],\\n        [-69, -31],\\n        [-18, -69],\\n        [-11,  60],\\n        [-20,  17],\\n        [-22,  87],\\n        [ 40, -81],\\n        [-27,  40],\\n        [-67, -82],\\n        [-76, -91],\\n        [-48, -75],\\n        [-87, -81],\\n        [ 78,  34],\\n        [ 27,  63],\\n        [ 15,  97],\\n        [ 70,  18],\\n        [-24,  43],\\n        [ 71, 100],\\n        [-71,  85],\\n        [-72, -86],\\n        [ 21,  81],\\n        [ 10, -20],\\n        [ 70,  90],\\n        [ 97,  27],\\n        [ 83, -81],\\n        [ 49, -59],\\n        [-17,  -5],\\n        [-65, -18],\\n        [ 48,  -7],\\n        [  4,  15],\\n        [ 86,  44],\\n        [ 31, -86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-82,   3],\\n        [ 16, -65],\\n        [ 96,  78],\\n        [ 47,  10],\\n        [  7, -43],\\n        [ 87,  77],\\n        [-94,  56],\\n        [-32, -97],\\n        [ 99, -53],\\n        [-46,   9],\\n        [-42,  60],\\n        [-77,  25],\\n        [ 84, -31],\\n        [-35,  49],\\n        [ 27,  77],\\n        [ 59,  40],\\n        [-81,  95],\\n        [ 74, -25],\\n        [  1,  40],\\n        [ 98, -20],\\n        [  7, -27],\\n        [-73, -37],\\n        [ 45,  18],\\n        [ 87,  36],\\n        [-30,  63],\\n        [ 34, -25],\\n        [-22, -47],\\n        [ -9,  79],\\n        [-26,  90],\\n        [-83, -42],\\n        [ 13, -25],\\n        [-20, -15],\\n        [-44,  39],\\n        [-30,  88],\\n        [-90, -46],\\n        [-85,  82],\\n        [ 35,  87],\\n        [-57,  11],\\n        [-23, -54],\\n        [-95,  95],\\n        [-34,  68],\\n        [-69, -31],\\n        [-18, -69],\\n        [-11,  60],\\n        [-20,  17],\\n        [-22,  87],\\n        [ 40, -81],\\n        [-27,  40],\\n        [-67, -82],\\n        [-76, -91],\\n        [-48, -75],\\n        [-87, -81],\\n        [ 78,  34],\\n        [ 27,  63],\\n        [ 15,  97],\\n        [ 70,  18],\\n        [-24,  43],\\n        [ 71, 100],\\n        [-71,  85],\\n        [-72, -86],\\n        [ 21,  81],\\n        [ 10, -20],\\n        [ 70,  90],\\n        [ 97,  27],\\n        [ 83, -81],\\n        [ 49, -59],\\n        [-17,  -5],\\n        [-65, -18],\\n        [ 48,  -7],\\n        [  4,  15],\\n        [ 86,  44],\\n        [ 31, -86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-82,   3],\\n        [ 16, -65],\\n        [ 96,  78],\\n        [ 47,  10],\\n        [  7, -43],\\n        [ 87,  77],\\n        [-94,  56],\\n        [-32, -97],\\n        [ 99, -53],\\n        [-46,   9],\\n        [-42,  60],\\n        [-77,  25],\\n        [ 84, -31],\\n        [-35,  49],\\n        [ 27,  77],\\n        [ 59,  40],\\n        [-81,  95],\\n        [ 74, -25],\\n        [  1,  40],\\n        [ 98, -20],\\n        [  7, -27],\\n        [-73, -37],\\n        [ 45,  18],\\n        [ 87,  36],\\n        [-30,  63],\\n        [ 34, -25],\\n        [-22, -47],\\n        [ -9,  79],\\n        [-26,  90],\\n        [-83, -42],\\n        [ 13, -25],\\n        [-20, -15],\\n        [-44,  39],\\n        [-30,  88],\\n        [-90, -46],\\n        [-85,  82],\\n        [ 35,  87],\\n        [-57,  11],\\n        [-23, -54],\\n        [-95,  95],\\n        [-34,  68],\\n        [-69, -31],\\n        [-18, -69],\\n        [-11,  60],\\n        [-20,  17],\\n        [-22,  87],\\n        [ 40, -81],\\n        [-27,  40],\\n        [-67, -82],\\n        [-76, -91],\\n        [-48, -75],\\n        [-87, -81],\\n        [ 78,  34],\\n        [ 27,  63],\\n        [ 15,  97],\\n        [ 70,  18],\\n        [-24,  43],\\n        [ 71, 100],\\n        [-71,  85],\\n        [-72, -86],\\n        [ 21,  81],\\n        [ 10, -20],\\n        [ 70,  90],\\n        [ 97,  27],\\n        [ 83, -81],\\n        [ 49, -59],\\n        [-17,  -5],\\n        [-65, -18],\\n        [ 48,  -7],\\n        [  4,  15],\\n        [ 86,  44],\\n        [ 31, -86]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009347559971502051, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5b0f25409b3f4842898dfa221eaf13a2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
