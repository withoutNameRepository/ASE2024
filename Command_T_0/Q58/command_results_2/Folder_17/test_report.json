{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_17_2.py::test_horizontal_matrix", "location": ["tests58_17_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001650749909458682, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_17_2.py::test_matrix_of_one_integer", "location": ["tests58_17_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002725709928199649, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_17_2.py::test_matrix_of_one_integer", "location": ["tests58_17_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021347800793591887, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_17_2.py::test_matrix_of_one_integer", "location": ["tests58_17_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00029526400612667203, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_17_2.py::test_matrix_of_having_166_integers", "location": ["tests58_17_2.py", 28, "test_matrix_of_having_166_integers"], "keywords": {"test_matrix_of_having_166_integers": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002679820026969537, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_17_2.py::test_matrix_of_having_166_integers", "location": ["tests58_17_2.py", 28, "test_matrix_of_having_166_integers"], "keywords": {"test_matrix_of_having_166_integers": 1, "__wrapped__": 1, "tests58_17_2.py": 1, "Folder_17": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_17/tests58_17_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -52],\\n        [ -18,   -8],\\n        [ -45,   62],\\n        [ -38,  -58],\\n        [ -41,  -30],\\n        [  49,   51],\\n        [  37,   27],\\n        [ -50,   69],\\n        [ -27,   49],\\n        [  29,  -25],\\n        [  43,  -58],\\n        [  74,  -53],\\n        [  39,  -28],\\n        [   6,  -52],\\n        [  60,  -51],\\n        [ -37,  -23],\\n        [  88,   19],\\n        [ -80,   16],\\n        [  51,   77],\\n        [  74,    0],\\n        [ -85,  -71],\\n        [ -65,   11],\\n        [  96,   28],\\n        [ -76,   -7],\\n        [   2,   66],\\n        [  45,   55],\\n        [-100,  -64],\\n        [  67,  -16],\\n        [  90,   36],\\n        [  61,  -59],\\n        [  71,   20],\\n        [  16,   62],\\n        [   4,  -36],\\n        [  22,  -11],\\n        [ -26,   83],\\n        [  37,   71],\\n        [  66,   69],\\n        [  12,  -98],\\n        [  69,  -39],\\n        [  39,  -25],\\n        [ -11,  -96],\\n        [ -94,   78],\\n        [ -54,   22],\\n        [  97,   85],\\n        [  17,   83],\\n        [  67,   52],\\n        [ -61,  -79],\\n        [  52,  -97],\\n        [ -94,  -47],\\n        [  85,  -68],\\n        [  19,   43],\\n        [ -82,    3],\\n        [ -99,  -73],\\n        [  24,  -41],\\n        [  82,  -78],\\n        [  15,   75],\\n        [  81,  -52],\\n        [  65,  -77],\\n        [ -98,  -65],\\n        [  11,  -43],\\n        [ -69,   71],\\n        [ -46,   -6],\\n        [  67,  -91],\\n        [ -77,  -54],\\n        [-100,  -74],\\n        [   2,   75],\\n        [  43,  -26],\\n        [  57,  -56],\\n        [  96,   55],\\n        [  71,   10],\\n        [ -68,   12],\\n        [ -77,   18],\\n        [  29,  -74],\\n        [  57,   -8],\\n        [ -82,  -35],\\n        [ -13,  -35],\\n        [  23,  -90],\\n        [ -32,  -76],\\n        [  14,   48],\\n        [  36,    8],\\n        [ -96,  -99],\\n        [  41,   53],\\n        [ -82,  -59]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_166_integers():", "        if 166 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(166 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(166)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -52],\\n        [ -18,   -8],\\n        [ -45,   62],\\n        [ -38,  -58],\\n        [ -41,  -30],\\n        [  49,   51],\\n        [  37,   27],\\n        [ -50,   69],\\n        [ -27,   49],\\n        [  29,  -25],\\n        [  43,  -58],\\n        [  74,  -53],\\n        [  39,  -28],\\n        [   6,  -52],\\n        [  60,  -51],\\n        [ -37,  -23],\\n        [  88,   19],\\n        [ -80,   16],\\n        [  51,   77],\\n        [  74,    0],\\n        [ -85,  -71],\\n        [ -65,   11],\\n        [  96,   28],\\n        [ -76,   -7],\\n        [   2,   66],\\n        [  45,   55],\\n        [-100,  -64],\\n        [  67,  -16],\\n        [  90,   36],\\n        [  61,  -59],\\n        [  71,   20],\\n        [  16,   62],\\n        [   4,  -36],\\n        [  22,  -11],\\n        [ -26,   83],\\n        [  37,   71],\\n        [  66,   69],\\n        [  12,  -98],\\n        [  69,  -39],\\n        [  39,  -25],\\n        [ -11,  -96],\\n        [ -94,   78],\\n        [ -54,   22],\\n        [  97,   85],\\n        [  17,   83],\\n        [  67,   52],\\n        [ -61,  -79],\\n        [  52,  -97],\\n        [ -94,  -47],\\n        [  85,  -68],\\n        [  19,   43],\\n        [ -82,    3],\\n        [ -99,  -73],\\n        [  24,  -41],\\n        [  82,  -78],\\n        [  15,   75],\\n        [  81,  -52],\\n        [  65,  -77],\\n        [ -98,  -65],\\n        [  11,  -43],\\n        [ -69,   71],\\n        [ -46,   -6],\\n        [  67,  -91],\\n        [ -77,  -54],\\n        [-100,  -74],\\n        [   2,   75],\\n        [  43,  -26],\\n        [  57,  -56],\\n        [  96,   55],\\n        [  71,   10],\\n        [ -68,   12],\\n        [ -77,   18],\\n        [  29,  -74],\\n        [  57,   -8],\\n        [ -82,  -35],\\n        [ -13,  -35],\\n        [  23,  -90],\\n        [ -32,  -76],\\n        [  14,   48],\\n        [  36,    8],\\n        [ -96,  -99],\\n        [  41,   53],\\n        [ -82,  -59]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_17/tests58_17_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_166_integers():", "        if 166 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(166 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(166)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -52],\\n        [ -18,   -8],\\n        [ -45,   62],\\n        [ -38,  -58],\\n        [ -41,  -30],\\n        [  49,   51],\\n        [  37,   27],\\n        [ -50,   69],\\n        [ -27,   49],\\n        [  29,  -25],\\n        [  43,  -58],\\n        [  74,  -53],\\n        [  39,  -28],\\n        [   6,  -52],\\n        [  60,  -51],\\n        [ -37,  -23],\\n        [  88,   19],\\n        [ -80,   16],\\n        [  51,   77],\\n        [  74,    0],\\n        [ -85,  -71],\\n        [ -65,   11],\\n        [  96,   28],\\n        [ -76,   -7],\\n        [   2,   66],\\n        [  45,   55],\\n        [-100,  -64],\\n        [  67,  -16],\\n        [  90,   36],\\n        [  61,  -59],\\n        [  71,   20],\\n        [  16,   62],\\n        [   4,  -36],\\n        [  22,  -11],\\n        [ -26,   83],\\n        [  37,   71],\\n        [  66,   69],\\n        [  12,  -98],\\n        [  69,  -39],\\n        [  39,  -25],\\n        [ -11,  -96],\\n        [ -94,   78],\\n        [ -54,   22],\\n        [  97,   85],\\n        [  17,   83],\\n        [  67,   52],\\n        [ -61,  -79],\\n        [  52,  -97],\\n        [ -94,  -47],\\n        [  85,  -68],\\n        [  19,   43],\\n        [ -82,    3],\\n        [ -99,  -73],\\n        [  24,  -41],\\n        [  82,  -78],\\n        [  15,   75],\\n        [  81,  -52],\\n        [  65,  -77],\\n        [ -98,  -65],\\n        [  11,  -43],\\n        [ -69,   71],\\n        [ -46,   -6],\\n        [  67,  -91],\\n        [ -77,  -54],\\n        [-100,  -74],\\n        [   2,   75],\\n        [  43,  -26],\\n        [  57,  -56],\\n        [  96,   55],\\n        [  71,   10],\\n        [ -68,   12],\\n        [ -77,   18],\\n        [  29,  -74],\\n        [  57,   -8],\\n        [ -82,  -35],\\n        [ -13,  -35],\\n        [  23,  -90],\\n        [ -32,  -76],\\n        [  14,   48],\\n        [  36,    8],\\n        [ -96,  -99],\\n        [  41,   53],\\n        [ -82,  -59]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_17/tests58_17_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_17/tests58_17_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -52],\\n        [ -18,   -8],\\n        [ -45,   62],\\n        [ -38,  -58],\\n        [ -41,  -30],\\n        [  49,   51],\\n        [  37,   27],\\n        [ -50,   69],\\n        [ -27,   49],\\n        [  29,  -25],\\n        [  43,  -58],\\n        [  74,  -53],\\n        [  39,  -28],\\n        [   6,  -52],\\n        [  60,  -51],\\n        [ -37,  -23],\\n        [  88,   19],\\n        [ -80,   16],\\n        [  51,   77],\\n        [  74,    0],\\n        [ -85,  -71],\\n        [ -65,   11],\\n        [  96,   28],\\n        [ -76,   -7],\\n        [   2,   66],\\n        [  45,   55],\\n        [-100,  -64],\\n        [  67,  -16],\\n        [  90,   36],\\n        [  61,  -59],\\n        [  71,   20],\\n        [  16,   62],\\n        [   4,  -36],\\n        [  22,  -11],\\n        [ -26,   83],\\n        [  37,   71],\\n        [  66,   69],\\n        [  12,  -98],\\n        [  69,  -39],\\n        [  39,  -25],\\n        [ -11,  -96],\\n        [ -94,   78],\\n        [ -54,   22],\\n        [  97,   85],\\n        [  17,   83],\\n        [  67,   52],\\n        [ -61,  -79],\\n        [  52,  -97],\\n        [ -94,  -47],\\n        [  85,  -68],\\n        [  19,   43],\\n        [ -82,    3],\\n        [ -99,  -73],\\n        [  24,  -41],\\n        [  82,  -78],\\n        [  15,   75],\\n        [  81,  -52],\\n        [  65,  -77],\\n        [ -98,  -65],\\n        [  11,  -43],\\n        [ -69,   71],\\n        [ -46,   -6],\\n        [  67,  -91],\\n        [ -77,  -54],\\n        [-100,  -74],\\n        [   2,   75],\\n        [  43,  -26],\\n        [  57,  -56],\\n        [  96,   55],\\n        [  71,   10],\\n        [ -68,   12],\\n        [ -77,   18],\\n        [  29,  -74],\\n        [  57,   -8],\\n        [ -82,  -35],\\n        [ -13,  -35],\\n        [  23,  -90],\\n        [ -32,  -76],\\n        [  14,   48],\\n        [  36,    8],\\n        [ -96,  -99],\\n        [  41,   53],\\n        [ -82,  -59]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002071209004498087, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e07013a4ec2d4dd3b91af4045753a5c6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
