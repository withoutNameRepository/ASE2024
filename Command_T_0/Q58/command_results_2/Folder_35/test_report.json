{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_2.py::test_matrix_of_one_integer", "location": ["tests58_35_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018414200167171657, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_2.py::test_horizontal_matrix", "location": ["tests58_35_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016342299932148308, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_35_2.py::test_matrix_of_one_integer", "location": ["tests58_35_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000332234994857572, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_2.py::test_matrix_of_one_integer", "location": ["tests58_35_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014861399540677667, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_2.py::test_matrix_of_having_111_integers", "location": ["tests58_35_2.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015690999862272292, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_2.py::test_matrix_of_having_111_integers", "location": ["tests58_35_2.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_2.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_35/tests58_35_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -7,   24,  -18,  -37,   22,   -2,  -80,  -60,   57,  -62,\\n           33,  -66,  -95,   14,   71,   77,   24,  -56,  -94,   19,\\n           54,  -28,   47,    3,  -75,  -38,   94,  -73,  -60,    5,\\n          -89,  -88,  -25,   99,   -2,  -45,   12,   61,  -98,   12,\\n          -16,   82,  -37,  -70,   65,  -69,   59,   34,  -68,  -62,\\n           72,  -95,  -87,  -16,    6,   90,   24,  -40,   25,   22,\\n           67,  -35,  -39,  -47,  -30,  -67,   39,  -72,   52,   63,\\n          -79,  -52,   69,   29,   27,   -7,   -9,  -37,    0,   -1,\\n           52,  -52,  -57,  -97,   98,   96,  -12,  -40,   87,   -9,\\n          -34,  -30,  -26,  -48,   37,  -40,  -36,    7,  -32,   16,\\n          -23,  -19,   16,   -5,  -41,   78,  -99,  -12,    8,  -13,\\n         -100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -7,   24,  -18,  -37,   22,   -2,  -80,  -60,   57,  -62,\\n           33,  -66,  -95,   14,   71,   77,   24,  -56,  -94,   19,\\n           54,  -28,   47,    3,  -75,  -38,   94,  -73,  -60,    5,\\n          -89,  -88,  -25,   99,   -2,  -45,   12,   61,  -98,   12,\\n          -16,   82,  -37,  -70,   65,  -69,   59,   34,  -68,  -62,\\n           72,  -95,  -87,  -16,    6,   90,   24,  -40,   25,   22,\\n           67,  -35,  -39,  -47,  -30,  -67,   39,  -72,   52,   63,\\n          -79,  -52,   69,   29,   27,   -7,   -9,  -37,    0,   -1,\\n           52,  -52,  -57,  -97,   98,   96,  -12,  -40,   87,   -9,\\n          -34,  -30,  -26,  -48,   37,  -40,  -36,    7,  -32,   16,\\n          -23,  -19,   16,   -5,  -41,   78,  -99,  -12,    8,  -13,\\n         -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_35/tests58_35_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -7,   24,  -18,  -37,   22,   -2,  -80,  -60,   57,  -62,\\n           33,  -66,  -95,   14,   71,   77,   24,  -56,  -94,   19,\\n           54,  -28,   47,    3,  -75,  -38,   94,  -73,  -60,    5,\\n          -89,  -88,  -25,   99,   -2,  -45,   12,   61,  -98,   12,\\n          -16,   82,  -37,  -70,   65,  -69,   59,   34,  -68,  -62,\\n           72,  -95,  -87,  -16,    6,   90,   24,  -40,   25,   22,\\n           67,  -35,  -39,  -47,  -30,  -67,   39,  -72,   52,   63,\\n          -79,  -52,   69,   29,   27,   -7,   -9,  -37,    0,   -1,\\n           52,  -52,  -57,  -97,   98,   96,  -12,  -40,   87,   -9,\\n          -34,  -30,  -26,  -48,   37,  -40,  -36,    7,  -32,   16,\\n          -23,  -19,   16,   -5,  -41,   78,  -99,  -12,    8,  -13,\\n         -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_35/tests58_35_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_35/tests58_35_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -7,   24,  -18,  -37,   22,   -2,  -80,  -60,   57,  -62,\\n           33,  -66,  -95,   14,   71,   77,   24,  -56,  -94,   19,\\n           54,  -28,   47,    3,  -75,  -38,   94,  -73,  -60,    5,\\n          -89,  -88,  -25,   99,   -2,  -45,   12,   61,  -98,   12,\\n          -16,   82,  -37,  -70,   65,  -69,   59,   34,  -68,  -62,\\n           72,  -95,  -87,  -16,    6,   90,   24,  -40,   25,   22,\\n           67,  -35,  -39,  -47,  -30,  -67,   39,  -72,   52,   63,\\n          -79,  -52,   69,   29,   27,   -7,   -9,  -37,    0,   -1,\\n           52,  -52,  -57,  -97,   98,   96,  -12,  -40,   87,   -9,\\n          -34,  -30,  -26,  -48,   37,  -40,  -36,    7,  -32,   16,\\n          -23,  -19,   16,   -5,  -41,   78,  -99,  -12,    8,  -13,\\n         -100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007871940033510327, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a2bc220995334b9a96674385263941c1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
