{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001796830038074404, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019905999943148345, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013394599955063313, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012442799925338477, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_horizontal_matrix", "location": ["tests58_48_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004375260032247752, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -43,   53],\\n        [ -26, -100],\\n        [  75,  -79],\\n        [  42,  -59],\\n        [ -89,  -40],\\n        [  54,  -22],\\n        [  33,  -25],\\n        [  37,  -53],\\n        [ -17,   99],\\n        [ -73,   75],\\n        [ -71,   65],\\n        [  61,  -96],\\n        [  28,   67],\\n        [ -97,   40],\\n        [ -40,   86],\\n        [ -59,   92],\\n        [  17,   92],\\n        [ -99,  -18],\\n        [ -72,  -18],\\n        [ -71,    0],\\n        [  76,  -79],\\n        [ -30,   75],\\n        [  20,   95],\\n        [ -59,   -6],\\n        [  -7,  -86],\\n        [ -55,  -15],\\n        [  -8,   11],\\n        [ -33,   34],\\n        [ -44,  -34],\\n        [ -59,   22],\\n        [ -12,  -76],\\n        [ -79,  -75],\\n        [  -7,    3],\\n        [ -21,  -36],\\n        [ -21,   76],\\n        [  60,   99],\\n        [  52,    0],\\n        [ -49,  -12],\\n        [  23,   54],\\n        [  81,  -44],\\n        [  97,   41],\\n        [  41,   75],\\n        [ -67,   48],\\n        [  86,   17],\\n        [  23,   54],\\n        [ -47,   75],\\n        [ -70,  -22],\\n        [  97,   49],\\n        [  19,  -53],\\n        [   4,  -61],\\n        [  20,   97],\\n        [ -59,  -93],\\n        [  82,  -49],\\n        [  25,  -86],\\n        [   0,   14],\\n        [ -97,  -21],\\n        [ -79,   -3],\\n        [  90,  -41],\\n        [ -46,   21],\\n        [  67,  -92],\\n        [ 100,  -19],\\n        [  52,  -59],\\n        [ -42,  -72],\\n        [  -9,   18],\\n        [ -86,   77]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -43,   53],\\n        [ -26, -100],\\n        [  75,  -79],\\n        [  42,  -59],\\n        [ -89,  -40],\\n        [  54,  -22],\\n        [  33,  -25],\\n        [  37,  -53],\\n        [ -17,   99],\\n        [ -73,   75],\\n        [ -71,   65],\\n        [  61,  -96],\\n        [  28,   67],\\n        [ -97,   40],\\n        [ -40,   86],\\n        [ -59,   92],\\n        [  17,   92],\\n        [ -99,  -18],\\n        [ -72,  -18],\\n        [ -71,    0],\\n        [  76,  -79],\\n        [ -30,   75],\\n        [  20,   95],\\n        [ -59,   -6],\\n        [  -7,  -86],\\n        [ -55,  -15],\\n        [  -8,   11],\\n        [ -33,   34],\\n        [ -44,  -34],\\n        [ -59,   22],\\n        [ -12,  -76],\\n        [ -79,  -75],\\n        [  -7,    3],\\n        [ -21,  -36],\\n        [ -21,   76],\\n        [  60,   99],\\n        [  52,    0],\\n        [ -49,  -12],\\n        [  23,   54],\\n        [  81,  -44],\\n        [  97,   41],\\n        [  41,   75],\\n        [ -67,   48],\\n        [  86,   17],\\n        [  23,   54],\\n        [ -47,   75],\\n        [ -70,  -22],\\n        [  97,   49],\\n        [  19,  -53],\\n        [   4,  -61],\\n        [  20,   97],\\n        [ -59,  -93],\\n        [  82,  -49],\\n        [  25,  -86],\\n        [   0,   14],\\n        [ -97,  -21],\\n        [ -79,   -3],\\n        [  90,  -41],\\n        [ -46,   21],\\n        [  67,  -92],\\n        [ 100,  -19],\\n        [  52,  -59],\\n        [ -42,  -72],\\n        [  -9,   18],\\n        [ -86,   77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -43,   53],\\n        [ -26, -100],\\n        [  75,  -79],\\n        [  42,  -59],\\n        [ -89,  -40],\\n        [  54,  -22],\\n        [  33,  -25],\\n        [  37,  -53],\\n        [ -17,   99],\\n        [ -73,   75],\\n        [ -71,   65],\\n        [  61,  -96],\\n        [  28,   67],\\n        [ -97,   40],\\n        [ -40,   86],\\n        [ -59,   92],\\n        [  17,   92],\\n        [ -99,  -18],\\n        [ -72,  -18],\\n        [ -71,    0],\\n        [  76,  -79],\\n        [ -30,   75],\\n        [  20,   95],\\n        [ -59,   -6],\\n        [  -7,  -86],\\n        [ -55,  -15],\\n        [  -8,   11],\\n        [ -33,   34],\\n        [ -44,  -34],\\n        [ -59,   22],\\n        [ -12,  -76],\\n        [ -79,  -75],\\n        [  -7,    3],\\n        [ -21,  -36],\\n        [ -21,   76],\\n        [  60,   99],\\n        [  52,    0],\\n        [ -49,  -12],\\n        [  23,   54],\\n        [  81,  -44],\\n        [  97,   41],\\n        [  41,   75],\\n        [ -67,   48],\\n        [  86,   17],\\n        [  23,   54],\\n        [ -47,   75],\\n        [ -70,  -22],\\n        [  97,   49],\\n        [  19,  -53],\\n        [   4,  -61],\\n        [  20,   97],\\n        [ -59,  -93],\\n        [  82,  -49],\\n        [  25,  -86],\\n        [   0,   14],\\n        [ -97,  -21],\\n        [ -79,   -3],\\n        [  90,  -41],\\n        [ -46,   21],\\n        [  67,  -92],\\n        [ 100,  -19],\\n        [  52,  -59],\\n        [ -42,  -72],\\n        [  -9,   18],\\n        [ -86,   77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -43,   53],\\n        [ -26, -100],\\n        [  75,  -79],\\n        [  42,  -59],\\n        [ -89,  -40],\\n        [  54,  -22],\\n        [  33,  -25],\\n        [  37,  -53],\\n        [ -17,   99],\\n        [ -73,   75],\\n        [ -71,   65],\\n        [  61,  -96],\\n        [  28,   67],\\n        [ -97,   40],\\n        [ -40,   86],\\n        [ -59,   92],\\n        [  17,   92],\\n        [ -99,  -18],\\n        [ -72,  -18],\\n        [ -71,    0],\\n        [  76,  -79],\\n        [ -30,   75],\\n        [  20,   95],\\n        [ -59,   -6],\\n        [  -7,  -86],\\n        [ -55,  -15],\\n        [  -8,   11],\\n        [ -33,   34],\\n        [ -44,  -34],\\n        [ -59,   22],\\n        [ -12,  -76],\\n        [ -79,  -75],\\n        [  -7,    3],\\n        [ -21,  -36],\\n        [ -21,   76],\\n        [  60,   99],\\n        [  52,    0],\\n        [ -49,  -12],\\n        [  23,   54],\\n        [  81,  -44],\\n        [  97,   41],\\n        [  41,   75],\\n        [ -67,   48],\\n        [  86,   17],\\n        [  23,   54],\\n        [ -47,   75],\\n        [ -70,  -22],\\n        [  97,   49],\\n        [  19,  -53],\\n        [   4,  -61],\\n        [  20,   97],\\n        [ -59,  -93],\\n        [  82,  -49],\\n        [  25,  -86],\\n        [   0,   14],\\n        [ -97,  -21],\\n        [ -79,   -3],\\n        [  90,  -41],\\n        [ -46,   21],\\n        [  67,  -92],\\n        [ 100,  -19],\\n        [  52,  -59],\\n        [ -42,  -72],\\n        [  -9,   18],\\n        [ -86,   77]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010479729971848428, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f279587d1a1d45bca503ee279320c36d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
