{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_2.py::test_matrix_of_one_integer", "location": ["tests58_46_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019777800480369478, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_2.py::test_horizontal_matrix", "location": ["tests58_46_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001889910054160282, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_2.py::test_matrix_of_one_integer", "location": ["tests58_46_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002004529960686341, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_2.py::test_matrix_of_one_integer", "location": ["tests58_46_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001256500108866021, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_2.py::test_matrix_of_having_144_integers", "location": ["tests58_46_2.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012813499779440463, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_2.py::test_matrix_of_having_144_integers", "location": ["tests58_46_2.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_2.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_46/tests58_46_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-24, -83],\\n        [ 63, -18],\\n        [-90,  -8],\\n        [ 11, -48],\\n        [ 58, -59],\\n        [-35,  20],\\n        [ -2, 100],\\n        [ 82, -39],\\n        [-90, -64],\\n        [ 88,  35],\\n        [ 94, -16],\\n        [-70,  40],\\n        [ 12,  -6],\\n        [-35,  49],\\n        [-34,  90],\\n        [-49,  22],\\n        [ 73, -59],\\n        [ 55,  76],\\n        [-72, -83],\\n        [ 48, -70],\\n        [-47, -17],\\n        [-33,  23],\\n        [-18, -42],\\n        [ 18,  63],\\n        [-60, -54],\\n        [ 78,  55],\\n        [ 26, -22],\\n        [-77,   1],\\n        [ 98,  78],\\n        [ 34, -63],\\n        [-90, -18],\\n        [ 73,  99],\\n        [-57, -33],\\n        [-84,  64],\\n        [-62,  -3],\\n        [-74, -35],\\n        [-51,   4],\\n        [-65, -14],\\n        [ 56, -98],\\n        [ 37,  98],\\n        [ 20,  96],\\n        [ 28, -76],\\n        [ 40, -75],\\n        [-23, -84],\\n        [  8,  44],\\n        [-43, -83],\\n        [ 43, -16],\\n        [-16,  29],\\n        [ 39, -58],\\n        [ 36,  24],\\n        [ 62, -26],\\n        [ 75, -76],\\n        [-63, -93],\\n        [-83, -18],\\n        [-42, -88],\\n        [ 54,  72],\\n        [-84, -44],\\n        [ 45, -42],\\n        [ 81, -54],\\n        [-17, -54],\\n        [-55,  26],\\n        [ 87,  -8],\\n        [-76, -18],\\n        [-25,  78],\\n        [-16, -46],\\n        [-35, -43],\\n        [ 40,  -3],\\n        [  8,  62],\\n        [-94,  48],\\n        [-77,  44],\\n        [-96,  90],\\n        [-50, -72]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-24, -83],\\n        [ 63, -18],\\n        [-90,  -8],\\n        [ 11, -48],\\n        [ 58, -59],\\n        [-35,  20],\\n        [ -2, 100],\\n        [ 82, -39],\\n        [-90, -64],\\n        [ 88,  35],\\n        [ 94, -16],\\n        [-70,  40],\\n        [ 12,  -6],\\n        [-35,  49],\\n        [-34,  90],\\n        [-49,  22],\\n        [ 73, -59],\\n        [ 55,  76],\\n        [-72, -83],\\n        [ 48, -70],\\n        [-47, -17],\\n        [-33,  23],\\n        [-18, -42],\\n        [ 18,  63],\\n        [-60, -54],\\n        [ 78,  55],\\n        [ 26, -22],\\n        [-77,   1],\\n        [ 98,  78],\\n        [ 34, -63],\\n        [-90, -18],\\n        [ 73,  99],\\n        [-57, -33],\\n        [-84,  64],\\n        [-62,  -3],\\n        [-74, -35],\\n        [-51,   4],\\n        [-65, -14],\\n        [ 56, -98],\\n        [ 37,  98],\\n        [ 20,  96],\\n        [ 28, -76],\\n        [ 40, -75],\\n        [-23, -84],\\n        [  8,  44],\\n        [-43, -83],\\n        [ 43, -16],\\n        [-16,  29],\\n        [ 39, -58],\\n        [ 36,  24],\\n        [ 62, -26],\\n        [ 75, -76],\\n        [-63, -93],\\n        [-83, -18],\\n        [-42, -88],\\n        [ 54,  72],\\n        [-84, -44],\\n        [ 45, -42],\\n        [ 81, -54],\\n        [-17, -54],\\n        [-55,  26],\\n        [ 87,  -8],\\n        [-76, -18],\\n        [-25,  78],\\n        [-16, -46],\\n        [-35, -43],\\n        [ 40,  -3],\\n        [  8,  62],\\n        [-94,  48],\\n        [-77,  44],\\n        [-96,  90],\\n        [-50, -72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_46/tests58_46_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-24, -83],\\n        [ 63, -18],\\n        [-90,  -8],\\n        [ 11, -48],\\n        [ 58, -59],\\n        [-35,  20],\\n        [ -2, 100],\\n        [ 82, -39],\\n        [-90, -64],\\n        [ 88,  35],\\n        [ 94, -16],\\n        [-70,  40],\\n        [ 12,  -6],\\n        [-35,  49],\\n        [-34,  90],\\n        [-49,  22],\\n        [ 73, -59],\\n        [ 55,  76],\\n        [-72, -83],\\n        [ 48, -70],\\n        [-47, -17],\\n        [-33,  23],\\n        [-18, -42],\\n        [ 18,  63],\\n        [-60, -54],\\n        [ 78,  55],\\n        [ 26, -22],\\n        [-77,   1],\\n        [ 98,  78],\\n        [ 34, -63],\\n        [-90, -18],\\n        [ 73,  99],\\n        [-57, -33],\\n        [-84,  64],\\n        [-62,  -3],\\n        [-74, -35],\\n        [-51,   4],\\n        [-65, -14],\\n        [ 56, -98],\\n        [ 37,  98],\\n        [ 20,  96],\\n        [ 28, -76],\\n        [ 40, -75],\\n        [-23, -84],\\n        [  8,  44],\\n        [-43, -83],\\n        [ 43, -16],\\n        [-16,  29],\\n        [ 39, -58],\\n        [ 36,  24],\\n        [ 62, -26],\\n        [ 75, -76],\\n        [-63, -93],\\n        [-83, -18],\\n        [-42, -88],\\n        [ 54,  72],\\n        [-84, -44],\\n        [ 45, -42],\\n        [ 81, -54],\\n        [-17, -54],\\n        [-55,  26],\\n        [ 87,  -8],\\n        [-76, -18],\\n        [-25,  78],\\n        [-16, -46],\\n        [-35, -43],\\n        [ 40,  -3],\\n        [  8,  62],\\n        [-94,  48],\\n        [-77,  44],\\n        [-96,  90],\\n        [-50, -72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_46/tests58_46_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_46/tests58_46_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-24, -83],\\n        [ 63, -18],\\n        [-90,  -8],\\n        [ 11, -48],\\n        [ 58, -59],\\n        [-35,  20],\\n        [ -2, 100],\\n        [ 82, -39],\\n        [-90, -64],\\n        [ 88,  35],\\n        [ 94, -16],\\n        [-70,  40],\\n        [ 12,  -6],\\n        [-35,  49],\\n        [-34,  90],\\n        [-49,  22],\\n        [ 73, -59],\\n        [ 55,  76],\\n        [-72, -83],\\n        [ 48, -70],\\n        [-47, -17],\\n        [-33,  23],\\n        [-18, -42],\\n        [ 18,  63],\\n        [-60, -54],\\n        [ 78,  55],\\n        [ 26, -22],\\n        [-77,   1],\\n        [ 98,  78],\\n        [ 34, -63],\\n        [-90, -18],\\n        [ 73,  99],\\n        [-57, -33],\\n        [-84,  64],\\n        [-62,  -3],\\n        [-74, -35],\\n        [-51,   4],\\n        [-65, -14],\\n        [ 56, -98],\\n        [ 37,  98],\\n        [ 20,  96],\\n        [ 28, -76],\\n        [ 40, -75],\\n        [-23, -84],\\n        [  8,  44],\\n        [-43, -83],\\n        [ 43, -16],\\n        [-16,  29],\\n        [ 39, -58],\\n        [ 36,  24],\\n        [ 62, -26],\\n        [ 75, -76],\\n        [-63, -93],\\n        [-83, -18],\\n        [-42, -88],\\n        [ 54,  72],\\n        [-84, -44],\\n        [ 45, -42],\\n        [ 81, -54],\\n        [-17, -54],\\n        [-55,  26],\\n        [ 87,  -8],\\n        [-76, -18],\\n        [-25,  78],\\n        [-16, -46],\\n        [-35, -43],\\n        [ 40,  -3],\\n        [  8,  62],\\n        [-94,  48],\\n        [-77,  44],\\n        [-96,  90],\\n        [-50, -72]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011068949970649555, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "361f0f90f21c4b3a9d52abec0d370a26", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
