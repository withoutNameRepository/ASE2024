{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -72,   78,  -19,   24,   18,  -10,  -21,   81,   83,\\n          -61,  -37,  -23,   83,  -23,    2,   16,   59,   43,  -67,\\n          -12,  -71,  -18,   54,    4,   15,  -13,  -41,   71,   19,\\n           36,  -72,  -43,   11,  -44,   16,  -73,   58,   76,   22,\\n           61,  -66,   68,   22,   44,   93,  -64,   61,   55,  -25,\\n          -95,   71,    5,   94,   91,   10,   71,  -62,  -98,   50,\\n           99,   45,   -2,  -59,   76,   49,  -57,   46,   90,   -5,\\n          -74,  -63,  -20,   48,   38,   24,   11,   48,   86,   57,\\n          -41,  -93,  -41,  -23,  -93,   34,   52,    3,    5,  -18,\\n          -84,   76,   68,  -29,   67,  -29,  -78,   98,   96,   43,\\n           67,  -48,  -18,   38,   11,   27,   56,   46,  -30,   85,\\n          -82,   93,    6,   91,  -98,  -54,  -58,  -58,   81,  -93,\\n           40,   66,   44,  -35,   15,   50,   21,   61,   37,  -93,\\n          -39,  -12,  -76,  -49,   42,  -97, -100,   41,   24, -100,\\n          -43,   68,  -78,  -74,   17,  -84,  -33,  -13,   95,  -80,\\n           23,  -42,    5,   69,   -1,  -46,   27,  -48,  -97]]))",
    0.00098
  ]
}