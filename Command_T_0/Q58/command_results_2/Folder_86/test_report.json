{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_86_2.py::test_horizontal_matrix", "location": ["tests58_86_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019214699568692595, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020026300626341254, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001897629990708083, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014139999984763563, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_having_138_integers", "location": ["tests58_86_2.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012256400077603757, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_having_138_integers", "location": ["tests58_86_2.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -79],\\n        [-91,  57],\\n        [-52,  44],\\n        [ -9,  50],\\n        [ 45,  50],\\n        [100, -95],\\n        [-90,  40],\\n        [ -1, -48],\\n        [-86,  79],\\n        [-34,  63],\\n        [ 94, -76],\\n        [-39, -66],\\n        [-39,  -6],\\n        [ 30, -54],\\n        [-27, -27],\\n        [ 71, -73],\\n        [ -7, -46],\\n        [ 67, -98],\\n        [-62,  44],\\n        [-44,  84],\\n        [-49,  48],\\n        [-37,  48],\\n        [ 18, -20],\\n        [  7,  37],\\n        [ 50, -63],\\n        [-57,   2],\\n        [ 91, -25],\\n        [ 92,  99],\\n        [-54,  61],\\n        [-36, -78],\\n        [ 70, -86],\\n        [-81, -29],\\n        [-81,  93],\\n        [ 95,  -4],\\n        [  4, -67],\\n        [-86, -97],\\n        [-42,  55],\\n        [-76,  98],\\n        [-25,  66],\\n        [ 45, -48],\\n        [-59, -33],\\n        [ 71,  84],\\n        [-53, -37],\\n        [ -3, -87],\\n        [ 33,  54],\\n        [ 57,  -7],\\n        [ 49, -88],\\n        [-81,  96],\\n        [-38,  64],\\n        [ 74, -90],\\n        [-91,  24],\\n        [-56,  41],\\n        [-10,  27],\\n        [-58,  -4],\\n        [-72,  16],\\n        [100,  49],\\n        [ 16, -65],\\n        [ 85,  35],\\n        [-94, 100],\\n        [ 45,  11],\\n        [-83, -76],\\n        [-48, -65],\\n        [-48, -16],\\n        [ -2, -31],\\n        [ 41,  63],\\n        [-72,  62],\\n        [ 48,  15],\\n        [ 77, -36],\\n        [ 50,  44]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -79],\\n        [-91,  57],\\n        [-52,  44],\\n        [ -9,  50],\\n        [ 45,  50],\\n        [100, -95],\\n        [-90,  40],\\n        [ -1, -48],\\n        [-86,  79],\\n        [-34,  63],\\n        [ 94, -76],\\n        [-39, -66],\\n        [-39,  -6],\\n        [ 30, -54],\\n        [-27, -27],\\n        [ 71, -73],\\n        [ -7, -46],\\n        [ 67, -98],\\n        [-62,  44],\\n        [-44,  84],\\n        [-49,  48],\\n        [-37,  48],\\n        [ 18, -20],\\n        [  7,  37],\\n        [ 50, -63],\\n        [-57,   2],\\n        [ 91, -25],\\n        [ 92,  99],\\n        [-54,  61],\\n        [-36, -78],\\n        [ 70, -86],\\n        [-81, -29],\\n        [-81,  93],\\n        [ 95,  -4],\\n        [  4, -67],\\n        [-86, -97],\\n        [-42,  55],\\n        [-76,  98],\\n        [-25,  66],\\n        [ 45, -48],\\n        [-59, -33],\\n        [ 71,  84],\\n        [-53, -37],\\n        [ -3, -87],\\n        [ 33,  54],\\n        [ 57,  -7],\\n        [ 49, -88],\\n        [-81,  96],\\n        [-38,  64],\\n        [ 74, -90],\\n        [-91,  24],\\n        [-56,  41],\\n        [-10,  27],\\n        [-58,  -4],\\n        [-72,  16],\\n        [100,  49],\\n        [ 16, -65],\\n        [ 85,  35],\\n        [-94, 100],\\n        [ 45,  11],\\n        [-83, -76],\\n        [-48, -65],\\n        [-48, -16],\\n        [ -2, -31],\\n        [ 41,  63],\\n        [-72,  62],\\n        [ 48,  15],\\n        [ 77, -36],\\n        [ 50,  44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -79],\\n        [-91,  57],\\n        [-52,  44],\\n        [ -9,  50],\\n        [ 45,  50],\\n        [100, -95],\\n        [-90,  40],\\n        [ -1, -48],\\n        [-86,  79],\\n        [-34,  63],\\n        [ 94, -76],\\n        [-39, -66],\\n        [-39,  -6],\\n        [ 30, -54],\\n        [-27, -27],\\n        [ 71, -73],\\n        [ -7, -46],\\n        [ 67, -98],\\n        [-62,  44],\\n        [-44,  84],\\n        [-49,  48],\\n        [-37,  48],\\n        [ 18, -20],\\n        [  7,  37],\\n        [ 50, -63],\\n        [-57,   2],\\n        [ 91, -25],\\n        [ 92,  99],\\n        [-54,  61],\\n        [-36, -78],\\n        [ 70, -86],\\n        [-81, -29],\\n        [-81,  93],\\n        [ 95,  -4],\\n        [  4, -67],\\n        [-86, -97],\\n        [-42,  55],\\n        [-76,  98],\\n        [-25,  66],\\n        [ 45, -48],\\n        [-59, -33],\\n        [ 71,  84],\\n        [-53, -37],\\n        [ -3, -87],\\n        [ 33,  54],\\n        [ 57,  -7],\\n        [ 49, -88],\\n        [-81,  96],\\n        [-38,  64],\\n        [ 74, -90],\\n        [-91,  24],\\n        [-56,  41],\\n        [-10,  27],\\n        [-58,  -4],\\n        [-72,  16],\\n        [100,  49],\\n        [ 16, -65],\\n        [ 85,  35],\\n        [-94, 100],\\n        [ 45,  11],\\n        [-83, -76],\\n        [-48, -65],\\n        [-48, -16],\\n        [ -2, -31],\\n        [ 41,  63],\\n        [-72,  62],\\n        [ 48,  15],\\n        [ 77, -36],\\n        [ 50,  44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -79],\\n        [-91,  57],\\n        [-52,  44],\\n        [ -9,  50],\\n        [ 45,  50],\\n        [100, -95],\\n        [-90,  40],\\n        [ -1, -48],\\n        [-86,  79],\\n        [-34,  63],\\n        [ 94, -76],\\n        [-39, -66],\\n        [-39,  -6],\\n        [ 30, -54],\\n        [-27, -27],\\n        [ 71, -73],\\n        [ -7, -46],\\n        [ 67, -98],\\n        [-62,  44],\\n        [-44,  84],\\n        [-49,  48],\\n        [-37,  48],\\n        [ 18, -20],\\n        [  7,  37],\\n        [ 50, -63],\\n        [-57,   2],\\n        [ 91, -25],\\n        [ 92,  99],\\n        [-54,  61],\\n        [-36, -78],\\n        [ 70, -86],\\n        [-81, -29],\\n        [-81,  93],\\n        [ 95,  -4],\\n        [  4, -67],\\n        [-86, -97],\\n        [-42,  55],\\n        [-76,  98],\\n        [-25,  66],\\n        [ 45, -48],\\n        [-59, -33],\\n        [ 71,  84],\\n        [-53, -37],\\n        [ -3, -87],\\n        [ 33,  54],\\n        [ 57,  -7],\\n        [ 49, -88],\\n        [-81,  96],\\n        [-38,  64],\\n        [ 74, -90],\\n        [-91,  24],\\n        [-56,  41],\\n        [-10,  27],\\n        [-58,  -4],\\n        [-72,  16],\\n        [100,  49],\\n        [ 16, -65],\\n        [ 85,  35],\\n        [-94, 100],\\n        [ 45,  11],\\n        [-83, -76],\\n        [-48, -65],\\n        [-48, -16],\\n        [ -2, -31],\\n        [ 41,  63],\\n        [-72,  62],\\n        [ 48,  15],\\n        [ 77, -36],\\n        [ 50,  44]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001059854999766685, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e0aa76d8146b4456b021528aa39c953a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
