{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_69_1.py::test_horizontal_matrix", "location": ["tests58_69_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017347100947517902, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_69_1.py::test_matrix_of_one_integer", "location": ["tests58_69_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005248329980531707, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_1.py::test_matrix_of_one_integer", "location": ["tests58_69_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004854380094911903, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_1.py::test_matrix_of_one_integer", "location": ["tests58_69_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016252099885605276, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_1.py::test_matrix_of_having_126_integers", "location": ["tests58_69_1.py", 28, "test_matrix_of_having_126_integers"], "keywords": {"test_matrix_of_having_126_integers": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017091698828153312, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_69_1.py::test_matrix_of_having_126_integers", "location": ["tests58_69_1.py", 28, "test_matrix_of_having_126_integers"], "keywords": {"test_matrix_of_having_126_integers": 1, "__wrapped__": 1, "tests58_69_1.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_69/tests58_69_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -85,   15],\\n        [ -66,   40],\\n        [ -92,    9],\\n        [ -70,  100],\\n        [   7,    8],\\n        [  97,   17],\\n        [ -31,   51],\\n        [ -79,   30],\\n        [ -14,  -61],\\n        [  45,   36],\\n        [ -58,  -67],\\n        [ -78,   57],\\n        [  63,    3],\\n        [ -69,   52],\\n        [ -86,  -51],\\n        [  82,    4],\\n        [  57,  -67],\\n        [ -16,   35],\\n        [ -28,  -33],\\n        [   4,  -18],\\n        [  98,   64],\\n        [  90,  -18],\\n        [ -55,  -64],\\n        [  -3,   12],\\n        [  14,    4],\\n        [ -15,   58],\\n        [  -9,   35],\\n        [ -24,   80],\\n        [   0,   59],\\n        [  -9,   21],\\n        [ -82,  -73],\\n        [  -9,  -27],\\n        [  92,  -50],\\n        [  64,   78],\\n        [  15,  -61],\\n        [   7,   17],\\n        [  62,  -85],\\n        [ -99,   79],\\n        [ -75,  -81],\\n        [  81,   47],\\n        [   9,   86],\\n        [  42,   99],\\n        [ -81,    7],\\n        [ -22,   15],\\n        [   2,   89],\\n        [  76,   43],\\n        [  17,   94],\\n        [ -91,   74],\\n        [  66,   58],\\n        [ -74,   59],\\n        [ -34,   70],\\n        [ -39,   76],\\n        [ -37,   48],\\n        [ -50,  -74],\\n        [  73,  -49],\\n        [  20,   60],\\n        [  -5,   -3],\\n        [  18,   79],\\n        [  86,  -13],\\n        [ -11,  -93],\\n        [  71,   92],\\n        [  39,   -6],\\n        [ -17, -100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_126_integers():", "        if 126 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(126 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(126)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -85,   15],\\n        [ -66,   40],\\n        [ -92,    9],\\n        [ -70,  100],\\n        [   7,    8],\\n        [  97,   17],\\n        [ -31,   51],\\n        [ -79,   30],\\n        [ -14,  -61],\\n        [  45,   36],\\n        [ -58,  -67],\\n        [ -78,   57],\\n        [  63,    3],\\n        [ -69,   52],\\n        [ -86,  -51],\\n        [  82,    4],\\n        [  57,  -67],\\n        [ -16,   35],\\n        [ -28,  -33],\\n        [   4,  -18],\\n        [  98,   64],\\n        [  90,  -18],\\n        [ -55,  -64],\\n        [  -3,   12],\\n        [  14,    4],\\n        [ -15,   58],\\n        [  -9,   35],\\n        [ -24,   80],\\n        [   0,   59],\\n        [  -9,   21],\\n        [ -82,  -73],\\n        [  -9,  -27],\\n        [  92,  -50],\\n        [  64,   78],\\n        [  15,  -61],\\n        [   7,   17],\\n        [  62,  -85],\\n        [ -99,   79],\\n        [ -75,  -81],\\n        [  81,   47],\\n        [   9,   86],\\n        [  42,   99],\\n        [ -81,    7],\\n        [ -22,   15],\\n        [   2,   89],\\n        [  76,   43],\\n        [  17,   94],\\n        [ -91,   74],\\n        [  66,   58],\\n        [ -74,   59],\\n        [ -34,   70],\\n        [ -39,   76],\\n        [ -37,   48],\\n        [ -50,  -74],\\n        [  73,  -49],\\n        [  20,   60],\\n        [  -5,   -3],\\n        [  18,   79],\\n        [  86,  -13],\\n        [ -11,  -93],\\n        [  71,   92],\\n        [  39,   -6],\\n        [ -17, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_69/tests58_69_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_126_integers():", "        if 126 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(126 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(126)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -85,   15],\\n        [ -66,   40],\\n        [ -92,    9],\\n        [ -70,  100],\\n        [   7,    8],\\n        [  97,   17],\\n        [ -31,   51],\\n        [ -79,   30],\\n        [ -14,  -61],\\n        [  45,   36],\\n        [ -58,  -67],\\n        [ -78,   57],\\n        [  63,    3],\\n        [ -69,   52],\\n        [ -86,  -51],\\n        [  82,    4],\\n        [  57,  -67],\\n        [ -16,   35],\\n        [ -28,  -33],\\n        [   4,  -18],\\n        [  98,   64],\\n        [  90,  -18],\\n        [ -55,  -64],\\n        [  -3,   12],\\n        [  14,    4],\\n        [ -15,   58],\\n        [  -9,   35],\\n        [ -24,   80],\\n        [   0,   59],\\n        [  -9,   21],\\n        [ -82,  -73],\\n        [  -9,  -27],\\n        [  92,  -50],\\n        [  64,   78],\\n        [  15,  -61],\\n        [   7,   17],\\n        [  62,  -85],\\n        [ -99,   79],\\n        [ -75,  -81],\\n        [  81,   47],\\n        [   9,   86],\\n        [  42,   99],\\n        [ -81,    7],\\n        [ -22,   15],\\n        [   2,   89],\\n        [  76,   43],\\n        [  17,   94],\\n        [ -91,   74],\\n        [  66,   58],\\n        [ -74,   59],\\n        [ -34,   70],\\n        [ -39,   76],\\n        [ -37,   48],\\n        [ -50,  -74],\\n        [  73,  -49],\\n        [  20,   60],\\n        [  -5,   -3],\\n        [  18,   79],\\n        [  86,  -13],\\n        [ -11,  -93],\\n        [  71,   92],\\n        [  39,   -6],\\n        [ -17, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_69/tests58_69_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_69/tests58_69_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -85,   15],\\n        [ -66,   40],\\n        [ -92,    9],\\n        [ -70,  100],\\n        [   7,    8],\\n        [  97,   17],\\n        [ -31,   51],\\n        [ -79,   30],\\n        [ -14,  -61],\\n        [  45,   36],\\n        [ -58,  -67],\\n        [ -78,   57],\\n        [  63,    3],\\n        [ -69,   52],\\n        [ -86,  -51],\\n        [  82,    4],\\n        [  57,  -67],\\n        [ -16,   35],\\n        [ -28,  -33],\\n        [   4,  -18],\\n        [  98,   64],\\n        [  90,  -18],\\n        [ -55,  -64],\\n        [  -3,   12],\\n        [  14,    4],\\n        [ -15,   58],\\n        [  -9,   35],\\n        [ -24,   80],\\n        [   0,   59],\\n        [  -9,   21],\\n        [ -82,  -73],\\n        [  -9,  -27],\\n        [  92,  -50],\\n        [  64,   78],\\n        [  15,  -61],\\n        [   7,   17],\\n        [  62,  -85],\\n        [ -99,   79],\\n        [ -75,  -81],\\n        [  81,   47],\\n        [   9,   86],\\n        [  42,   99],\\n        [ -81,    7],\\n        [ -22,   15],\\n        [   2,   89],\\n        [  76,   43],\\n        [  17,   94],\\n        [ -91,   74],\\n        [  66,   58],\\n        [ -74,   59],\\n        [ -34,   70],\\n        [ -39,   76],\\n        [ -37,   48],\\n        [ -50,  -74],\\n        [  73,  -49],\\n        [  20,   60],\\n        [  -5,   -3],\\n        [  18,   79],\\n        [  86,  -13],\\n        [ -11,  -93],\\n        [  71,   92],\\n        [  39,   -6],\\n        [ -17, -100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009427619952475652, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5cb5b487eca8435685bd308300385ea8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
