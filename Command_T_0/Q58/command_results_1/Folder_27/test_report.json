{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_27_1.py::test_horizontal_matrix", "location": ["tests58_27_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001918560010381043, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_27_1.py::test_matrix_of_one_integer", "location": ["tests58_27_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018041400471702218, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_27_1.py::test_matrix_of_one_integer", "location": ["tests58_27_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019218800298403949, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_27_1.py::test_matrix_of_one_integer", "location": ["tests58_27_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011370799620635808, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_27_1.py::test_matrix_of_having_77_integers", "location": ["tests58_27_1.py", 28, "test_matrix_of_having_77_integers"], "keywords": {"test_matrix_of_having_77_integers": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00042265799129381776, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_27_1.py::test_matrix_of_having_77_integers", "location": ["tests58_27_1.py", 28, "test_matrix_of_having_77_integers"], "keywords": {"test_matrix_of_having_77_integers": 1, "__wrapped__": 1, "tests58_27_1.py": 1, "Folder_27": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_27/tests58_27_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 82,  51,  58, -40,  -1, -33,  46,   4, -93, -99,  41, -11, -85,\\n          53, -54,  74,  47, -37,  10,  35, -68, 100, -29, -41,  11, -18,\\n           4, -72,  81,  88, -86,   1,  50,  29, -95, -82, -40,  34,  70,\\n         -10,  60, -15,  86, -84, -63,  93,  68,  85, -26, -44,  22, -95,\\n         -50, -85, -11,  13, -29,  72, -18,  62,   6,  -7, -18,  60,  22,\\n          -4,  31, -80, -51, -85, -94,  95,  51,  96, -65,  64, -44]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_77_integers():", "        if 77 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(77 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(77)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 82,  51,  58, -40,  -1, -33,  46,   4, -93, -99,  41, -11, -85,\\n          53, -54,  74,  47, -37,  10,  35, -68, 100, -29, -41,  11, -18,\\n           4, -72,  81,  88, -86,   1,  50,  29, -95, -82, -40,  34,  70,\\n         -10,  60, -15,  86, -84, -63,  93,  68,  85, -26, -44,  22, -95,\\n         -50, -85, -11,  13, -29,  72, -18,  62,   6,  -7, -18,  60,  22,\\n          -4,  31, -80, -51, -85, -94,  95,  51,  96, -65,  64, -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_27/tests58_27_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_77_integers():", "        if 77 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(77 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(77)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 82,  51,  58, -40,  -1, -33,  46,   4, -93, -99,  41, -11, -85,\\n          53, -54,  74,  47, -37,  10,  35, -68, 100, -29, -41,  11, -18,\\n           4, -72,  81,  88, -86,   1,  50,  29, -95, -82, -40,  34,  70,\\n         -10,  60, -15,  86, -84, -63,  93,  68,  85, -26, -44,  22, -95,\\n         -50, -85, -11,  13, -29,  72, -18,  62,   6,  -7, -18,  60,  22,\\n          -4,  31, -80, -51, -85, -94,  95,  51,  96, -65,  64, -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_27/tests58_27_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_27/tests58_27_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 82,  51,  58, -40,  -1, -33,  46,   4, -93, -99,  41, -11, -85,\\n          53, -54,  74,  47, -37,  10,  35, -68, 100, -29, -41,  11, -18,\\n           4, -72,  81,  88, -86,   1,  50,  29, -95, -82, -40,  34,  70,\\n         -10,  60, -15,  86, -84, -63,  93,  68,  85, -26, -44,  22, -95,\\n         -50, -85, -11,  13, -29,  72, -18,  62,   6,  -7, -18,  60,  22,\\n          -4,  31, -80, -51, -85, -94,  95,  51,  96, -65,  64, -44]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008934680081438273, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b91561adcf134d848bfbdf0cfd695178", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
