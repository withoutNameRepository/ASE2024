{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  61,   81],\\n        [  17,   71],\\n        [  41,    9],\\n        [  81,  -95],\\n        [  82,   47],\\n        [ -96,  -37],\\n        [  86,   -7],\\n        [  98,  -49],\\n        [  60,   46],\\n        [ -35,   78],\\n        [  10,   20],\\n        [  92,  -95],\\n        [  96,   55],\\n        [  95,   82],\\n        [ -52,   71],\\n        [ -84,   -8],\\n        [  21,   61],\\n        [  11,   72],\\n        [  16,   97],\\n        [  56,  -14],\\n        [ -67,  -92],\\n        [  -9,  -63],\\n        [ -39,   60],\\n        [  40,   -1],\\n        [  32,   60],\\n        [  92,   94],\\n        [ -91,   -7],\\n        [  61,   58],\\n        [ -63,  -19],\\n        [  93,   44],\\n        [  80,   -7],\\n        [ -79,  -31],\\n        [ -19,  -40],\\n        [-100,   14],\\n        [ -97,  -22],\\n        [  82,    5],\\n        [  -6,  -58],\\n        [  29,  -19],\\n        [  53,    8],\\n        [ -31,   -7],\\n        [  22,  -55],\\n        [ -34,   79],\\n        [  74,   32],\\n        [  92,  -90],\\n        [ -80,   -2],\\n        [ -35,  -36],\\n        [  86,   41],\\n        [ -63,  -80],\\n        [ -28,  -95],\\n        [  54,  -45],\\n        [  -3,  -59],\\n        [  55,   40]]))",
    0.00109
  ]
}