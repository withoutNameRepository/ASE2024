{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021499099966604263, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_horizontal_matrix", "location": ["tests58_35_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019134600006509572, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011025270068785176, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005008769949199632, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005807599955005571, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  13,  -22, -100,  -96,  -69,  -33,   69,   82,   24,   34,\\n          -72,  -26,   57,    7,   62,   55,  -13,   73,  -27,  -34,\\n           54,  -87,    4,  -57,   66,  -14,  -69,  -86,  -22,  -57,\\n          -98,   25,  -39,  -89,   95,   53,   86,  -66,   -6,  -52,\\n           22,  -54,   75,  -33,  -16,    5,   58,   66,  -68,  -42,\\n           21,  -76,  -10,  -33,   74,   67,   16,   89,  -55,   21,\\n           63,   72,  -34,  -42,  -12,  -42,   -5,   48,   18,  -38,\\n           53,   33,   22,   39,   73,   33,  -11,   70,  -95,  -41,\\n          -65,   99,   24,   13,   70,   71,    7,   43,   48,   69,\\n            2,  -28,  -28,   35,   38,  -51,  -95,   50,  -65,  -22,\\n           87,   63,   -8,  -47,   82,  -65,  -90,  -78,   94,   -1,\\n          -45]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  13,  -22, -100,  -96,  -69,  -33,   69,   82,   24,   34,\\n          -72,  -26,   57,    7,   62,   55,  -13,   73,  -27,  -34,\\n           54,  -87,    4,  -57,   66,  -14,  -69,  -86,  -22,  -57,\\n          -98,   25,  -39,  -89,   95,   53,   86,  -66,   -6,  -52,\\n           22,  -54,   75,  -33,  -16,    5,   58,   66,  -68,  -42,\\n           21,  -76,  -10,  -33,   74,   67,   16,   89,  -55,   21,\\n           63,   72,  -34,  -42,  -12,  -42,   -5,   48,   18,  -38,\\n           53,   33,   22,   39,   73,   33,  -11,   70,  -95,  -41,\\n          -65,   99,   24,   13,   70,   71,    7,   43,   48,   69,\\n            2,  -28,  -28,   35,   38,  -51,  -95,   50,  -65,  -22,\\n           87,   63,   -8,  -47,   82,  -65,  -90,  -78,   94,   -1,\\n          -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  13,  -22, -100,  -96,  -69,  -33,   69,   82,   24,   34,\\n          -72,  -26,   57,    7,   62,   55,  -13,   73,  -27,  -34,\\n           54,  -87,    4,  -57,   66,  -14,  -69,  -86,  -22,  -57,\\n          -98,   25,  -39,  -89,   95,   53,   86,  -66,   -6,  -52,\\n           22,  -54,   75,  -33,  -16,    5,   58,   66,  -68,  -42,\\n           21,  -76,  -10,  -33,   74,   67,   16,   89,  -55,   21,\\n           63,   72,  -34,  -42,  -12,  -42,   -5,   48,   18,  -38,\\n           53,   33,   22,   39,   73,   33,  -11,   70,  -95,  -41,\\n          -65,   99,   24,   13,   70,   71,    7,   43,   48,   69,\\n            2,  -28,  -28,   35,   38,  -51,  -95,   50,  -65,  -22,\\n           87,   63,   -8,  -47,   82,  -65,  -90,  -78,   94,   -1,\\n          -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  13,  -22, -100,  -96,  -69,  -33,   69,   82,   24,   34,\\n          -72,  -26,   57,    7,   62,   55,  -13,   73,  -27,  -34,\\n           54,  -87,    4,  -57,   66,  -14,  -69,  -86,  -22,  -57,\\n          -98,   25,  -39,  -89,   95,   53,   86,  -66,   -6,  -52,\\n           22,  -54,   75,  -33,  -16,    5,   58,   66,  -68,  -42,\\n           21,  -76,  -10,  -33,   74,   67,   16,   89,  -55,   21,\\n           63,   72,  -34,  -42,  -12,  -42,   -5,   48,   18,  -38,\\n           53,   33,   22,   39,   73,   33,  -11,   70,  -95,  -41,\\n          -65,   99,   24,   13,   70,   71,    7,   43,   48,   69,\\n            2,  -28,  -28,   35,   38,  -51,  -95,   50,  -65,  -22,\\n           87,   63,   -8,  -47,   82,  -65,  -90,  -78,   94,   -1,\\n          -45]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011313420109217986, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "201257be853a4bb683678dfba70a1007", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
