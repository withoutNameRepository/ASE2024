{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 80, -29, -90,  46, -56, -50,  34, -48, -37, -31,  92, -86, -87,\\n         -14,  -7, -30, -19,  -8,  86, -69, -71,  24, -55,  99, -76, -34,\\n          68, -86,  37, -55, -65, -79,  16, -12, -45,  17, -95,  29,  99,\\n         -21, -50, -56,  -4, -80,  -2, -84,  95,  13,  20,  54,  44, -77,\\n          51, -36,  67,  71, -91, -50, -75,   1, -61,  59,  68, -64,  95,\\n          54, -10,  91, -76,  25,  35,  22,  11,  25,  77, -25,   8,  19,\\n         -94, -16,  36,  24,  87,   8,  12, -13, -56, -52,  55, -62,  46,\\n         -28,  56, -38,  55,  -9,  24, -47,  20,  11, -55,  53, -18, -68,\\n         -42, -86, -67,  76, -12, -24,   2,   0,  92,  49, -98, -11, -14,\\n          83, -24,  81,  74, -10, -99,  85,  90, -27,  15,  -1,  39,  -7,\\n         -91,  77,  54,  -7, -18, -99, -63,  11,  40,  39,  82, -23,  27,\\n          81,  -4, -72, -12,  80, -29, -89,  57,  32,   8, -23, -24, -93,\\n           0,   6, -30]]))",
    0.00098
  ]
}