{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_25_1.py::test_matrix_of_one_integer", "location": ["tests58_25_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019517300825100392, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_1.py::test_horizontal_matrix", "location": ["tests58_25_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020750699331983924, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_25_1.py::test_matrix_of_one_integer", "location": ["tests58_25_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003778420068556443, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_1.py::test_matrix_of_one_integer", "location": ["tests58_25_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00021066299814265221, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_1.py::test_matrix_of_having_66_integers", "location": ["tests58_25_1.py", 28, "test_matrix_of_having_66_integers"], "keywords": {"test_matrix_of_having_66_integers": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026888400316238403, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_1.py::test_matrix_of_having_66_integers", "location": ["tests58_25_1.py", 28, "test_matrix_of_having_66_integers"], "keywords": {"test_matrix_of_having_66_integers": 1, "__wrapped__": 1, "tests58_25_1.py": 1, "Folder_25": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_25/tests58_25_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16,  70],\\n        [ 19,  90],\\n        [-47,  11],\\n        [ 98, -89],\\n        [-30,  82],\\n        [-36, -57],\\n        [-26, -76],\\n        [ 82,  87],\\n        [ 43, -55],\\n        [ 75,  32],\\n        [-23,  85],\\n        [  3,  56],\\n        [  3,   4],\\n        [-82, -53],\\n        [ 40, -70],\\n        [ 69, 100],\\n        [ -4, -18],\\n        [-28,  86],\\n        [-33,   2],\\n        [ 99,  41],\\n        [-64,  78],\\n        [ 23, -20],\\n        [ 79, -48],\\n        [ 52,  59],\\n        [-13,   9],\\n        [-36, -72],\\n        [-38, -63],\\n        [ 43,  52],\\n        [ 50, -85],\\n        [-36,  48],\\n        [-49,   5],\\n        [ 39, -29],\\n        [ 35, -53]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_66_integers():", "        if 66 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(66 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(66)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-16,  70],\\n        [ 19,  90],\\n        [-47,  11],\\n        [ 98, -89],\\n        [-30,  82],\\n        [-36, -57],\\n        [-26, -76],\\n        [ 82,  87],\\n        [ 43, -55],\\n        [ 75,  32],\\n        [-23,  85],\\n        [  3,  56],\\n        [  3,   4],\\n        [-82, -53],\\n        [ 40, -70],\\n        [ 69, 100],\\n        [ -4, -18],\\n        [-28,  86],\\n        [-33,   2],\\n        [ 99,  41],\\n        [-64,  78],\\n        [ 23, -20],\\n        [ 79, -48],\\n        [ 52,  59],\\n        [-13,   9],\\n        [-36, -72],\\n        [-38, -63],\\n        [ 43,  52],\\n        [ 50, -85],\\n        [-36,  48],\\n        [-49,   5],\\n        [ 39, -29],\\n        [ 35, -53]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_25/tests58_25_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_66_integers():", "        if 66 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(66 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(66)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-16,  70],\\n        [ 19,  90],\\n        [-47,  11],\\n        [ 98, -89],\\n        [-30,  82],\\n        [-36, -57],\\n        [-26, -76],\\n        [ 82,  87],\\n        [ 43, -55],\\n        [ 75,  32],\\n        [-23,  85],\\n        [  3,  56],\\n        [  3,   4],\\n        [-82, -53],\\n        [ 40, -70],\\n        [ 69, 100],\\n        [ -4, -18],\\n        [-28,  86],\\n        [-33,   2],\\n        [ 99,  41],\\n        [-64,  78],\\n        [ 23, -20],\\n        [ 79, -48],\\n        [ 52,  59],\\n        [-13,   9],\\n        [-36, -72],\\n        [-38, -63],\\n        [ 43,  52],\\n        [ 50, -85],\\n        [-36,  48],\\n        [-49,   5],\\n        [ 39, -29],\\n        [ 35, -53]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_25/tests58_25_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_25/tests58_25_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16,  70],\\n        [ 19,  90],\\n        [-47,  11],\\n        [ 98, -89],\\n        [-30,  82],\\n        [-36, -57],\\n        [-26, -76],\\n        [ 82,  87],\\n        [ 43, -55],\\n        [ 75,  32],\\n        [-23,  85],\\n        [  3,  56],\\n        [  3,   4],\\n        [-82, -53],\\n        [ 40, -70],\\n        [ 69, 100],\\n        [ -4, -18],\\n        [-28,  86],\\n        [-33,   2],\\n        [ 99,  41],\\n        [-64,  78],\\n        [ 23, -20],\\n        [ 79, -48],\\n        [ 52,  59],\\n        [-13,   9],\\n        [-36, -72],\\n        [-38, -63],\\n        [ 43,  52],\\n        [ 50, -85],\\n        [-36,  48],\\n        [-49,   5],\\n        [ 39, -29],\\n        [ 35, -53]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007356159912887961, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2a76e431342c4269ae24b73c8abe9b96", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
