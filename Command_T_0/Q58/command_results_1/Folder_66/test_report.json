{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_66_1.py::test_horizontal_matrix", "location": ["tests58_66_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006169089901959524, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_66_1.py::test_matrix_of_one_integer", "location": ["tests58_66_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005496899975696579, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_66_1.py::test_matrix_of_one_integer", "location": ["tests58_66_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007033439906081185, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_66_1.py::test_matrix_of_one_integer", "location": ["tests58_66_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.002817464992403984, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_66_1.py::test_matrix_of_having_42_integers", "location": ["tests58_66_1.py", 28, "test_matrix_of_having_42_integers"], "keywords": {"test_matrix_of_having_42_integers": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000966025996604003, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_66_1.py::test_matrix_of_having_42_integers", "location": ["tests58_66_1.py", 28, "test_matrix_of_having_42_integers"], "keywords": {"test_matrix_of_having_42_integers": 1, "__wrapped__": 1, "tests58_66_1.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_66/tests58_66_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  37],\\n        [ 34,  97],\\n        [ 43,  14],\\n        [ -7, -59],\\n        [-53,  73],\\n        [-32, -96],\\n        [ -2,  26],\\n        [-60,   1],\\n        [-33, -13],\\n        [-19,  87],\\n        [ 32, -50],\\n        [ 54, -41],\\n        [-35,  10],\\n        [-47,  96],\\n        [ 76, -58],\\n        [-58,  38],\\n        [ 17, -91],\\n        [ 60, -65],\\n        [-26, -39],\\n        [ 80,   9],\\n        [  3,  84]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_42_integers():", "        if 42 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(42 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(42)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  37],\\n        [ 34,  97],\\n        [ 43,  14],\\n        [ -7, -59],\\n        [-53,  73],\\n        [-32, -96],\\n        [ -2,  26],\\n        [-60,   1],\\n        [-33, -13],\\n        [-19,  87],\\n        [ 32, -50],\\n        [ 54, -41],\\n        [-35,  10],\\n        [-47,  96],\\n        [ 76, -58],\\n        [-58,  38],\\n        [ 17, -91],\\n        [ 60, -65],\\n        [-26, -39],\\n        [ 80,   9],\\n        [  3,  84]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_66/tests58_66_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_42_integers():", "        if 42 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(42 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(42)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  37],\\n        [ 34,  97],\\n        [ 43,  14],\\n        [ -7, -59],\\n        [-53,  73],\\n        [-32, -96],\\n        [ -2,  26],\\n        [-60,   1],\\n        [-33, -13],\\n        [-19,  87],\\n        [ 32, -50],\\n        [ 54, -41],\\n        [-35,  10],\\n        [-47,  96],\\n        [ 76, -58],\\n        [-58,  38],\\n        [ 17, -91],\\n        [ 60, -65],\\n        [-26, -39],\\n        [ 80,   9],\\n        [  3,  84]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_66/tests58_66_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_66/tests58_66_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  37],\\n        [ 34,  97],\\n        [ 43,  14],\\n        [ -7, -59],\\n        [-53,  73],\\n        [-32, -96],\\n        [ -2,  26],\\n        [-60,   1],\\n        [-33, -13],\\n        [-19,  87],\\n        [ 32, -50],\\n        [ 54, -41],\\n        [-35,  10],\\n        [-47,  96],\\n        [ 76, -58],\\n        [-58,  38],\\n        [ 17, -91],\\n        [ 60, -65],\\n        [-26, -39],\\n        [ 80,   9],\\n        [  3,  84]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010486739920452237, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "31ecdd41f7d8402abc4882b830df0571", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
