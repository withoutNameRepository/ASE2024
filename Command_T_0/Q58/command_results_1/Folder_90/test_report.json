{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005105059972265735, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005726649978896603, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005569439963437617, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000644683008431457, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_horizontal_matrix", "location": ["tests58_90_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017630698857828975, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   -1],\\n        [ -45,  -63],\\n        [  18,   94],\\n        [   5,   66],\\n        [ -33,  -68],\\n        [ -23,   99],\\n        [ -67,  -23],\\n        [ -99,   80],\\n        [  50,  -51],\\n        [  63,  -50],\\n        [  26,   -1],\\n        [ -58,  -65],\\n        [  57,  -48],\\n        [ -68,  -30],\\n        [  -3,   93],\\n        [ -27,  -30],\\n        [ -42,   98],\\n        [  69,  -71],\\n        [   0,   69],\\n        [  72,    5],\\n        [  79,  -81],\\n        [  10,   55],\\n        [ -35,   98],\\n        [  13,  -10],\\n        [ -26,  -67],\\n        [  31,  -38],\\n        [ -96,   44],\\n        [ -82,  -78],\\n        [   0,   95],\\n        [ -74,   53],\\n        [  28,  -10],\\n        [ -18,  -38],\\n        [ -84,   12],\\n        [  38,  -51],\\n        [ -13,  -24],\\n        [ -72,   64],\\n        [  41,  -92],\\n        [ -62,  -37],\\n        [ -39,  -32],\\n        [  22,  -38],\\n        [ -36,   40],\\n        [  -3,   98],\\n        [ -64,   -6],\\n        [  64,  -99],\\n        [ -33,   36],\\n        [ -30,  -73],\\n        [  45,   -5],\\n        [ -64,  -24],\\n        [  -1,   78],\\n        [ -21,   97],\\n        [ -82,  -28],\\n        [ -50,  -26],\\n        [ -33,   62],\\n        [ -14,  -25],\\n        [ -72,   40],\\n        [ -62,   11],\\n        [ -25,  -40],\\n        [-100,   50],\\n        [  48,  -86],\\n        [ -46,   49],\\n        [  39,   49],\\n        [ -79,  -77],\\n        [ -44,   52],\\n        [  49,  -75],\\n        [  65,   -6],\\n        [ -16,   87],\\n        [  88,   37],\\n        [  29,   61],\\n        [  46,  -26],\\n        [  61,   89],\\n        [ -83,   50],\\n        [ -56,  -12],\\n        [ -99,   77],\\n        [  46,   42],\\n        [  94,    8],\\n        [ -92,  -93],\\n        [ -92,   88],\\n        [  92,   84],\\n        [  65,   49],\\n        [  37,    3],\\n        [  45,   21],\\n        [ -25,  -82],\\n        [  51,  -84],\\n        [ -79,   91],\\n        [ -84,  -10],\\n        [ -54,   26],\\n        [  15,  -32],\\n        [  41,  -44]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   -1],\\n        [ -45,  -63],\\n        [  18,   94],\\n        [   5,   66],\\n        [ -33,  -68],\\n        [ -23,   99],\\n        [ -67,  -23],\\n        [ -99,   80],\\n        [  50,  -51],\\n        [  63,  -50],\\n        [  26,   -1],\\n        [ -58,  -65],\\n        [  57,  -48],\\n        [ -68,  -30],\\n        [  -3,   93],\\n        [ -27,  -30],\\n        [ -42,   98],\\n        [  69,  -71],\\n        [   0,   69],\\n        [  72,    5],\\n        [  79,  -81],\\n        [  10,   55],\\n        [ -35,   98],\\n        [  13,  -10],\\n        [ -26,  -67],\\n        [  31,  -38],\\n        [ -96,   44],\\n        [ -82,  -78],\\n        [   0,   95],\\n        [ -74,   53],\\n        [  28,  -10],\\n        [ -18,  -38],\\n        [ -84,   12],\\n        [  38,  -51],\\n        [ -13,  -24],\\n        [ -72,   64],\\n        [  41,  -92],\\n        [ -62,  -37],\\n        [ -39,  -32],\\n        [  22,  -38],\\n        [ -36,   40],\\n        [  -3,   98],\\n        [ -64,   -6],\\n        [  64,  -99],\\n        [ -33,   36],\\n        [ -30,  -73],\\n        [  45,   -5],\\n        [ -64,  -24],\\n        [  -1,   78],\\n        [ -21,   97],\\n        [ -82,  -28],\\n        [ -50,  -26],\\n        [ -33,   62],\\n        [ -14,  -25],\\n        [ -72,   40],\\n        [ -62,   11],\\n        [ -25,  -40],\\n        [-100,   50],\\n        [  48,  -86],\\n        [ -46,   49],\\n        [  39,   49],\\n        [ -79,  -77],\\n        [ -44,   52],\\n        [  49,  -75],\\n        [  65,   -6],\\n        [ -16,   87],\\n        [  88,   37],\\n        [  29,   61],\\n        [  46,  -26],\\n        [  61,   89],\\n        [ -83,   50],\\n        [ -56,  -12],\\n        [ -99,   77],\\n        [  46,   42],\\n        [  94,    8],\\n        [ -92,  -93],\\n        [ -92,   88],\\n        [  92,   84],\\n        [  65,   49],\\n        [  37,    3],\\n        [  45,   21],\\n        [ -25,  -82],\\n        [  51,  -84],\\n        [ -79,   91],\\n        [ -84,  -10],\\n        [ -54,   26],\\n        [  15,  -32],\\n        [  41,  -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   -1],\\n        [ -45,  -63],\\n        [  18,   94],\\n        [   5,   66],\\n        [ -33,  -68],\\n        [ -23,   99],\\n        [ -67,  -23],\\n        [ -99,   80],\\n        [  50,  -51],\\n        [  63,  -50],\\n        [  26,   -1],\\n        [ -58,  -65],\\n        [  57,  -48],\\n        [ -68,  -30],\\n        [  -3,   93],\\n        [ -27,  -30],\\n        [ -42,   98],\\n        [  69,  -71],\\n        [   0,   69],\\n        [  72,    5],\\n        [  79,  -81],\\n        [  10,   55],\\n        [ -35,   98],\\n        [  13,  -10],\\n        [ -26,  -67],\\n        [  31,  -38],\\n        [ -96,   44],\\n        [ -82,  -78],\\n        [   0,   95],\\n        [ -74,   53],\\n        [  28,  -10],\\n        [ -18,  -38],\\n        [ -84,   12],\\n        [  38,  -51],\\n        [ -13,  -24],\\n        [ -72,   64],\\n        [  41,  -92],\\n        [ -62,  -37],\\n        [ -39,  -32],\\n        [  22,  -38],\\n        [ -36,   40],\\n        [  -3,   98],\\n        [ -64,   -6],\\n        [  64,  -99],\\n        [ -33,   36],\\n        [ -30,  -73],\\n        [  45,   -5],\\n        [ -64,  -24],\\n        [  -1,   78],\\n        [ -21,   97],\\n        [ -82,  -28],\\n        [ -50,  -26],\\n        [ -33,   62],\\n        [ -14,  -25],\\n        [ -72,   40],\\n        [ -62,   11],\\n        [ -25,  -40],\\n        [-100,   50],\\n        [  48,  -86],\\n        [ -46,   49],\\n        [  39,   49],\\n        [ -79,  -77],\\n        [ -44,   52],\\n        [  49,  -75],\\n        [  65,   -6],\\n        [ -16,   87],\\n        [  88,   37],\\n        [  29,   61],\\n        [  46,  -26],\\n        [  61,   89],\\n        [ -83,   50],\\n        [ -56,  -12],\\n        [ -99,   77],\\n        [  46,   42],\\n        [  94,    8],\\n        [ -92,  -93],\\n        [ -92,   88],\\n        [  92,   84],\\n        [  65,   49],\\n        [  37,    3],\\n        [  45,   21],\\n        [ -25,  -82],\\n        [  51,  -84],\\n        [ -79,   91],\\n        [ -84,  -10],\\n        [ -54,   26],\\n        [  15,  -32],\\n        [  41,  -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   -1],\\n        [ -45,  -63],\\n        [  18,   94],\\n        [   5,   66],\\n        [ -33,  -68],\\n        [ -23,   99],\\n        [ -67,  -23],\\n        [ -99,   80],\\n        [  50,  -51],\\n        [  63,  -50],\\n        [  26,   -1],\\n        [ -58,  -65],\\n        [  57,  -48],\\n        [ -68,  -30],\\n        [  -3,   93],\\n        [ -27,  -30],\\n        [ -42,   98],\\n        [  69,  -71],\\n        [   0,   69],\\n        [  72,    5],\\n        [  79,  -81],\\n        [  10,   55],\\n        [ -35,   98],\\n        [  13,  -10],\\n        [ -26,  -67],\\n        [  31,  -38],\\n        [ -96,   44],\\n        [ -82,  -78],\\n        [   0,   95],\\n        [ -74,   53],\\n        [  28,  -10],\\n        [ -18,  -38],\\n        [ -84,   12],\\n        [  38,  -51],\\n        [ -13,  -24],\\n        [ -72,   64],\\n        [  41,  -92],\\n        [ -62,  -37],\\n        [ -39,  -32],\\n        [  22,  -38],\\n        [ -36,   40],\\n        [  -3,   98],\\n        [ -64,   -6],\\n        [  64,  -99],\\n        [ -33,   36],\\n        [ -30,  -73],\\n        [  45,   -5],\\n        [ -64,  -24],\\n        [  -1,   78],\\n        [ -21,   97],\\n        [ -82,  -28],\\n        [ -50,  -26],\\n        [ -33,   62],\\n        [ -14,  -25],\\n        [ -72,   40],\\n        [ -62,   11],\\n        [ -25,  -40],\\n        [-100,   50],\\n        [  48,  -86],\\n        [ -46,   49],\\n        [  39,   49],\\n        [ -79,  -77],\\n        [ -44,   52],\\n        [  49,  -75],\\n        [  65,   -6],\\n        [ -16,   87],\\n        [  88,   37],\\n        [  29,   61],\\n        [  46,  -26],\\n        [  61,   89],\\n        [ -83,   50],\\n        [ -56,  -12],\\n        [ -99,   77],\\n        [  46,   42],\\n        [  94,    8],\\n        [ -92,  -93],\\n        [ -92,   88],\\n        [  92,   84],\\n        [  65,   49],\\n        [  37,    3],\\n        [  45,   21],\\n        [ -25,  -82],\\n        [  51,  -84],\\n        [ -79,   91],\\n        [ -84,  -10],\\n        [ -54,   26],\\n        [  15,  -32],\\n        [  41,  -44]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013582459941972047, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "737d767e46924ad0a9c079a3a45e4408", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
