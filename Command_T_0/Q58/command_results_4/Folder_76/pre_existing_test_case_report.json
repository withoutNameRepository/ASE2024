{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00052
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-39,  28,  90, -77, -24, -96, -13, -82, -77, -10, -73, -43,  26,\\n          60,  69, -68, -77,  17, -92,  73, -46, -27,  11,  46,  -7,  13,\\n          85, -61,  36, -63,  64,  61,  59, -26, -99,  75,  -8, -97, -26,\\n          60,  46, -11, -18, -82, -50,  18, -48,  50, -93,   7,  -1, -75,\\n          52,  34,  11,  77,  55,  64,   2, -68,   8,  65, -72,  77,  13,\\n         -79,   6, -97, -59,   8, -17,  63, -17,  63, -15,  51, -12,  38,\\n         -53,  83, -81,  -1,  19, -88,  37, -61,  -1, -86, -79, -62, -91,\\n         -92, -76, -42,  77,  23, -34,  77, -27,  46, -19,   2,  15, -75,\\n          56,  18, -87, -50, -15,  23, -46,  78, -38, -23,   6, -33, -24,\\n          69,  12,  24, -45,  69, -98,  34,  40, -14,  14,  85,  22,  -6,\\n         -15,  -9, -87,   0,  25,  32,  13,  83,  88, -12, -58, -38,   7,\\n          96,  36,  83,  71,  12, -86,  23,  29, -11, -60, -91, -64, -51,\\n         -37,  17, -76]]))",
    0.00125
  ]
}