{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_25_4.py::test_horizontal_matrix", "location": ["tests58_25_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002009739982895553, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_25_4.py::test_matrix_of_one_integer", "location": ["tests58_25_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001813970011426136, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_4.py::test_matrix_of_one_integer", "location": ["tests58_25_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022576200717594475, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_4.py::test_matrix_of_one_integer", "location": ["tests58_25_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011397800699342042, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_4.py::test_matrix_of_having_66_integers", "location": ["tests58_25_4.py", 28, "test_matrix_of_having_66_integers"], "keywords": {"test_matrix_of_having_66_integers": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012075000267941505, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_25_4.py::test_matrix_of_having_66_integers", "location": ["tests58_25_4.py", 28, "test_matrix_of_having_66_integers"], "keywords": {"test_matrix_of_having_66_integers": 1, "__wrapped__": 1, "tests58_25_4.py": 1, "Folder_25": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_4/Folder_25/tests58_25_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 61,  -3],\\n        [-98,  -7],\\n        [ 55, -41],\\n        [-41, -63],\\n        [-50,   0],\\n        [-77,  73],\\n        [ 59,  63],\\n        [-29, -24],\\n        [ 13, -37],\\n        [ 79, -77],\\n        [-48, -65],\\n        [-94, -22],\\n        [-67,  84],\\n        [ -4, -46],\\n        [ 31,  53],\\n        [-90,  13],\\n        [-12,   0],\\n        [-20, -99],\\n        [-93,   0],\\n        [-92,  35],\\n        [ 23, -73],\\n        [ 83,  -9],\\n        [ 24, -94],\\n        [ 65,  71],\\n        [ 90,  95],\\n        [ -2,  50],\\n        [ 95,  35],\\n        [-29, -21],\\n        [-75,  24],\\n        [-45,  -2],\\n        [ 72, -43],\\n        [ 60, -90],\\n        [ 10, -48]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_66_integers():", "        if 66 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(66 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(66)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 61,  -3],\\n        [-98,  -7],\\n        [ 55, -41],\\n        [-41, -63],\\n        [-50,   0],\\n        [-77,  73],\\n        [ 59,  63],\\n        [-29, -24],\\n        [ 13, -37],\\n        [ 79, -77],\\n        [-48, -65],\\n        [-94, -22],\\n        [-67,  84],\\n        [ -4, -46],\\n        [ 31,  53],\\n        [-90,  13],\\n        [-12,   0],\\n        [-20, -99],\\n        [-93,   0],\\n        [-92,  35],\\n        [ 23, -73],\\n        [ 83,  -9],\\n        [ 24, -94],\\n        [ 65,  71],\\n        [ 90,  95],\\n        [ -2,  50],\\n        [ 95,  35],\\n        [-29, -21],\\n        [-75,  24],\\n        [-45,  -2],\\n        [ 72, -43],\\n        [ 60, -90],\\n        [ 10, -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_25/tests58_25_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_66_integers():", "        if 66 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(66 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(66)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 61,  -3],\\n        [-98,  -7],\\n        [ 55, -41],\\n        [-41, -63],\\n        [-50,   0],\\n        [-77,  73],\\n        [ 59,  63],\\n        [-29, -24],\\n        [ 13, -37],\\n        [ 79, -77],\\n        [-48, -65],\\n        [-94, -22],\\n        [-67,  84],\\n        [ -4, -46],\\n        [ 31,  53],\\n        [-90,  13],\\n        [-12,   0],\\n        [-20, -99],\\n        [-93,   0],\\n        [-92,  35],\\n        [ 23, -73],\\n        [ 83,  -9],\\n        [ 24, -94],\\n        [ 65,  71],\\n        [ 90,  95],\\n        [ -2,  50],\\n        [ 95,  35],\\n        [-29, -21],\\n        [-75,  24],\\n        [-45,  -2],\\n        [ 72, -43],\\n        [ 60, -90],\\n        [ 10, -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_25/tests58_25_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_4/Folder_25/tests58_25_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 61,  -3],\\n        [-98,  -7],\\n        [ 55, -41],\\n        [-41, -63],\\n        [-50,   0],\\n        [-77,  73],\\n        [ 59,  63],\\n        [-29, -24],\\n        [ 13, -37],\\n        [ 79, -77],\\n        [-48, -65],\\n        [-94, -22],\\n        [-67,  84],\\n        [ -4, -46],\\n        [ 31,  53],\\n        [-90,  13],\\n        [-12,   0],\\n        [-20, -99],\\n        [-93,   0],\\n        [-92,  35],\\n        [ 23, -73],\\n        [ 83,  -9],\\n        [ 24, -94],\\n        [ 65,  71],\\n        [ 90,  95],\\n        [ -2,  50],\\n        [ 95,  35],\\n        [-29, -21],\\n        [-75,  24],\\n        [-45,  -2],\\n        [ 72, -43],\\n        [ 60, -90],\\n        [ 10, -48]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000775762993725948, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b5f3ecebb53a4383b946f0b34f1d5fec", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
