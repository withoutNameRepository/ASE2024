{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00061
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -3,  -96,  -18,   95,  -86,  -47,   79,   80,   65,  -31,\\n          -18,   15,   31,    5,  -12,   80,  -76,    5,  -58,   50,\\n           60,   27,   -2,   64,   47,    5,   99,   16,  -58,  -17,\\n          -15,   53,   50,   61,   92,   33,   77,  -22,    3,   17,\\n          -29,  -46,   48,  -87,  -15,  -14,    2,  -79,   19,  -35,\\n           -9,   46,    3,  -76,   26,  -93,  -65,   94,   -4,   -5,\\n          -62,   96,   44,   23,  -17,  -77,   44,   82,  -93,   31,\\n          -91,   87,    7,   71,  -29,   49,  100,   27,   37,  -26,\\n          -75,   91,   46,  -19,   55,  -69,  -76,  -63,   44,  -90,\\n           96,   16, -100,   51,   14,   80,  -10,  -36,   38,   67,\\n          -25,  -75,  -28,    2,   23,   91,  -13,   57,    4,   88,\\n           86,  -82,  -41,   92,   31,   24,    6,  -29,   67,   74,\\n           67,  -40,   18,   20,  -76,  -34,   98,  -18,   -3,  -51,\\n          -69,   38,   84,   48,   -7,   90,   22,   94,   31,  -19,\\n          -15,   36,    6,    8,    8,   -7,   21,  -45,   56,  -71,\\n           11,   57,   -2,  -51,  -86,  -27,  -10,   59,  -26,  -95,\\n           42,   66,  -49,  -45,  -63,   -5,   -2,   35,  -98,  -35,\\n           93,   15,  -25,   75,   46,  -11,   30,  -79,   30,  -55,\\n          -55,  -96,  -29,   31,  -27]]))",
    0.00109
  ]
}