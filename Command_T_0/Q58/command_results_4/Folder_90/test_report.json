{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_4.py::test_horizontal_matrix", "location": ["tests58_90_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021735600603278726, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021964000188745558, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007097259949659929, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004957780038239434, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005844670085934922, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,  -45],\\n        [  87,   93],\\n        [ -74,  -66],\\n        [ -88,  -95],\\n        [  78,   31],\\n        [  37,  -24],\\n        [  96,  -58],\\n        [  30,   58],\\n        [  12,   -8],\\n        [  -2,   28],\\n        [  -3,  -70],\\n        [  47,  -63],\\n        [ -99,  -61],\\n        [ -78,   12],\\n        [  94,   50],\\n        [ -88,  -91],\\n        [  51,  -55],\\n        [  68,  -28],\\n        [  40,  -78],\\n        [  45,   96],\\n        [ -69,   25],\\n        [ -61,  -51],\\n        [  28,   12],\\n        [  91,   89],\\n        [ -23,  -20],\\n        [  91,  -85],\\n        [  58,   67],\\n        [ -60,  -81],\\n        [ -22,   55],\\n        [ -41,   53],\\n        [ -51,  -50],\\n        [  81,  -96],\\n        [  67,  -58],\\n        [ -47,   69],\\n        [ -93,   27],\\n        [  93,   94],\\n        [  32,   78],\\n        [  32,   -6],\\n        [  88,  -56],\\n        [  74,  -37],\\n        [  48,    3],\\n        [  25,   59],\\n        [ -48,  -68],\\n        [  82,  -57],\\n        [ -41,  -63],\\n        [ -63,   64],\\n        [  85,   20],\\n        [ -48,   37],\\n        [ -63,   88],\\n        [ -82,   47],\\n        [  92,   70],\\n        [  60,   37],\\n        [ -41,   -6],\\n        [  66,   -7],\\n        [ -35,   -9],\\n        [ 100,   33],\\n        [ -40,  -24],\\n        [ -23,  -35],\\n        [ -75,    6],\\n        [ -52,   22],\\n        [ -60,   62],\\n        [ -41,  -71],\\n        [ -42,  -22],\\n        [   8,  -44],\\n        [  40,    9],\\n        [ -95,   90],\\n        [ -45,  -77],\\n        [  11,  -88],\\n        [ -71,  -38],\\n        [  75,   71],\\n        [  -8,  -41],\\n        [  22,   77],\\n        [  71,   72],\\n        [ -52,  -57],\\n        [ -97,  -76],\\n        [ -96,   22],\\n        [  28,    5],\\n        [  84,   47],\\n        [ -36, -100],\\n        [  39,   55],\\n        [  14,    2],\\n        [  55,   29],\\n        [  20,   31],\\n        [  65,  -93],\\n        [  35,  -76],\\n        [ -86,   19],\\n        [ -71,   33],\\n        [  92,   92]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -50,  -45],\\n        [  87,   93],\\n        [ -74,  -66],\\n        [ -88,  -95],\\n        [  78,   31],\\n        [  37,  -24],\\n        [  96,  -58],\\n        [  30,   58],\\n        [  12,   -8],\\n        [  -2,   28],\\n        [  -3,  -70],\\n        [  47,  -63],\\n        [ -99,  -61],\\n        [ -78,   12],\\n        [  94,   50],\\n        [ -88,  -91],\\n        [  51,  -55],\\n        [  68,  -28],\\n        [  40,  -78],\\n        [  45,   96],\\n        [ -69,   25],\\n        [ -61,  -51],\\n        [  28,   12],\\n        [  91,   89],\\n        [ -23,  -20],\\n        [  91,  -85],\\n        [  58,   67],\\n        [ -60,  -81],\\n        [ -22,   55],\\n        [ -41,   53],\\n        [ -51,  -50],\\n        [  81,  -96],\\n        [  67,  -58],\\n        [ -47,   69],\\n        [ -93,   27],\\n        [  93,   94],\\n        [  32,   78],\\n        [  32,   -6],\\n        [  88,  -56],\\n        [  74,  -37],\\n        [  48,    3],\\n        [  25,   59],\\n        [ -48,  -68],\\n        [  82,  -57],\\n        [ -41,  -63],\\n        [ -63,   64],\\n        [  85,   20],\\n        [ -48,   37],\\n        [ -63,   88],\\n        [ -82,   47],\\n        [  92,   70],\\n        [  60,   37],\\n        [ -41,   -6],\\n        [  66,   -7],\\n        [ -35,   -9],\\n        [ 100,   33],\\n        [ -40,  -24],\\n        [ -23,  -35],\\n        [ -75,    6],\\n        [ -52,   22],\\n        [ -60,   62],\\n        [ -41,  -71],\\n        [ -42,  -22],\\n        [   8,  -44],\\n        [  40,    9],\\n        [ -95,   90],\\n        [ -45,  -77],\\n        [  11,  -88],\\n        [ -71,  -38],\\n        [  75,   71],\\n        [  -8,  -41],\\n        [  22,   77],\\n        [  71,   72],\\n        [ -52,  -57],\\n        [ -97,  -76],\\n        [ -96,   22],\\n        [  28,    5],\\n        [  84,   47],\\n        [ -36, -100],\\n        [  39,   55],\\n        [  14,    2],\\n        [  55,   29],\\n        [  20,   31],\\n        [  65,  -93],\\n        [  35,  -76],\\n        [ -86,   19],\\n        [ -71,   33],\\n        [  92,   92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -50,  -45],\\n        [  87,   93],\\n        [ -74,  -66],\\n        [ -88,  -95],\\n        [  78,   31],\\n        [  37,  -24],\\n        [  96,  -58],\\n        [  30,   58],\\n        [  12,   -8],\\n        [  -2,   28],\\n        [  -3,  -70],\\n        [  47,  -63],\\n        [ -99,  -61],\\n        [ -78,   12],\\n        [  94,   50],\\n        [ -88,  -91],\\n        [  51,  -55],\\n        [  68,  -28],\\n        [  40,  -78],\\n        [  45,   96],\\n        [ -69,   25],\\n        [ -61,  -51],\\n        [  28,   12],\\n        [  91,   89],\\n        [ -23,  -20],\\n        [  91,  -85],\\n        [  58,   67],\\n        [ -60,  -81],\\n        [ -22,   55],\\n        [ -41,   53],\\n        [ -51,  -50],\\n        [  81,  -96],\\n        [  67,  -58],\\n        [ -47,   69],\\n        [ -93,   27],\\n        [  93,   94],\\n        [  32,   78],\\n        [  32,   -6],\\n        [  88,  -56],\\n        [  74,  -37],\\n        [  48,    3],\\n        [  25,   59],\\n        [ -48,  -68],\\n        [  82,  -57],\\n        [ -41,  -63],\\n        [ -63,   64],\\n        [  85,   20],\\n        [ -48,   37],\\n        [ -63,   88],\\n        [ -82,   47],\\n        [  92,   70],\\n        [  60,   37],\\n        [ -41,   -6],\\n        [  66,   -7],\\n        [ -35,   -9],\\n        [ 100,   33],\\n        [ -40,  -24],\\n        [ -23,  -35],\\n        [ -75,    6],\\n        [ -52,   22],\\n        [ -60,   62],\\n        [ -41,  -71],\\n        [ -42,  -22],\\n        [   8,  -44],\\n        [  40,    9],\\n        [ -95,   90],\\n        [ -45,  -77],\\n        [  11,  -88],\\n        [ -71,  -38],\\n        [  75,   71],\\n        [  -8,  -41],\\n        [  22,   77],\\n        [  71,   72],\\n        [ -52,  -57],\\n        [ -97,  -76],\\n        [ -96,   22],\\n        [  28,    5],\\n        [  84,   47],\\n        [ -36, -100],\\n        [  39,   55],\\n        [  14,    2],\\n        [  55,   29],\\n        [  20,   31],\\n        [  65,  -93],\\n        [  35,  -76],\\n        [ -86,   19],\\n        [ -71,   33],\\n        [  92,   92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,  -45],\\n        [  87,   93],\\n        [ -74,  -66],\\n        [ -88,  -95],\\n        [  78,   31],\\n        [  37,  -24],\\n        [  96,  -58],\\n        [  30,   58],\\n        [  12,   -8],\\n        [  -2,   28],\\n        [  -3,  -70],\\n        [  47,  -63],\\n        [ -99,  -61],\\n        [ -78,   12],\\n        [  94,   50],\\n        [ -88,  -91],\\n        [  51,  -55],\\n        [  68,  -28],\\n        [  40,  -78],\\n        [  45,   96],\\n        [ -69,   25],\\n        [ -61,  -51],\\n        [  28,   12],\\n        [  91,   89],\\n        [ -23,  -20],\\n        [  91,  -85],\\n        [  58,   67],\\n        [ -60,  -81],\\n        [ -22,   55],\\n        [ -41,   53],\\n        [ -51,  -50],\\n        [  81,  -96],\\n        [  67,  -58],\\n        [ -47,   69],\\n        [ -93,   27],\\n        [  93,   94],\\n        [  32,   78],\\n        [  32,   -6],\\n        [  88,  -56],\\n        [  74,  -37],\\n        [  48,    3],\\n        [  25,   59],\\n        [ -48,  -68],\\n        [  82,  -57],\\n        [ -41,  -63],\\n        [ -63,   64],\\n        [  85,   20],\\n        [ -48,   37],\\n        [ -63,   88],\\n        [ -82,   47],\\n        [  92,   70],\\n        [  60,   37],\\n        [ -41,   -6],\\n        [  66,   -7],\\n        [ -35,   -9],\\n        [ 100,   33],\\n        [ -40,  -24],\\n        [ -23,  -35],\\n        [ -75,    6],\\n        [ -52,   22],\\n        [ -60,   62],\\n        [ -41,  -71],\\n        [ -42,  -22],\\n        [   8,  -44],\\n        [  40,    9],\\n        [ -95,   90],\\n        [ -45,  -77],\\n        [  11,  -88],\\n        [ -71,  -38],\\n        [  75,   71],\\n        [  -8,  -41],\\n        [  22,   77],\\n        [  71,   72],\\n        [ -52,  -57],\\n        [ -97,  -76],\\n        [ -96,   22],\\n        [  28,    5],\\n        [  84,   47],\\n        [ -36, -100],\\n        [  39,   55],\\n        [  14,    2],\\n        [  55,   29],\\n        [  20,   31],\\n        [  65,  -93],\\n        [  35,  -76],\\n        [ -86,   19],\\n        [ -71,   33],\\n        [  92,   92]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010986400011461228, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d4d9ef1a361346e1a642cdce0cba653a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
