{
  "parameter(s)": [
    146
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_146_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -28,   75],\\n        [  53,  100],\\n        [ -66,  -36],\\n        [ -55,  -38],\\n        [ -22,   73],\\n        [  40,  -74],\\n        [  30,   63],\\n        [  24,   39],\\n        [ -40,  -25],\\n        [ -69,   21],\\n        [   2,   53],\\n        [  27,    2],\\n        [ -48,  -90],\\n        [ -27,   28],\\n        [ -22,   54],\\n        [  65,  -40],\\n        [ -39,  -81],\\n        [  55,  -78],\\n        [ -94,  -70],\\n        [ -13,  -98],\\n        [  18,  -86],\\n        [ -59,  -86],\\n        [  73,  -20],\\n        [  36,  -51],\\n        [ -29,   61],\\n        [   1,  -39],\\n        [  37,   14],\\n        [ -74,   16],\\n        [  92,   86],\\n        [  53,   -5],\\n        [ -71,   85],\\n        [ -26,   33],\\n        [  38,  -96],\\n        [  15,   19],\\n        [  70,  -33],\\n        [ -16,    8],\\n        [  13,   55],\\n        [   7,  -26],\\n        [ -18,   -4],\\n        [  12,    2],\\n        [ -99,   77],\\n        [ -64,  -40],\\n        [ -74,   47],\\n        [ -43,  -11],\\n        [  82,  -12],\\n        [  32,   45],\\n        [  83,  -35],\\n        [  65,   75],\\n        [  11,   51],\\n        [  74,   62],\\n        [ -94,  -89],\\n        [ -84,  -22],\\n        [  52,  -93],\\n        [ -96,  -67],\\n        [ -18,   17],\\n        [  34,   97],\\n        [ -84,  -11],\\n        [ -31,   27],\\n        [  12,  -22],\\n        [ -13,   60],\\n        [ -68,   52],\\n        [ -41,  -38],\\n        [ -80,   91],\\n        [ -67, -100],\\n        [  67,    4],\\n        [ -46,  -39],\\n        [  70,   23],\\n        [ -59,  -54],\\n        [  95,  -30],\\n        [ -40,   69],\\n        [  66,   58],\\n        [  85,   11],\\n        [ -95,   46]]))",
    0.00096
  ]
}