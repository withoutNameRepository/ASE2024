{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_99_3.py::test_horizontal_matrix", "location": ["tests58_99_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016753999807406217, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_99_3.py::test_matrix_of_one_integer", "location": ["tests58_99_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023859599605202675, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_3.py::test_matrix_of_one_integer", "location": ["tests58_99_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002085779997287318, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_3.py::test_matrix_of_one_integer", "location": ["tests58_99_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015573699783999473, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_3.py::test_matrix_of_having_146_integers", "location": ["tests58_99_3.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016744999447837472, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_3.py::test_matrix_of_having_146_integers", "location": ["tests58_99_3.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_3.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_3/Folder_99/tests58_99_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -28,   75],\\n        [  53,  100],\\n        [ -66,  -36],\\n        [ -55,  -38],\\n        [ -22,   73],\\n        [  40,  -74],\\n        [  30,   63],\\n        [  24,   39],\\n        [ -40,  -25],\\n        [ -69,   21],\\n        [   2,   53],\\n        [  27,    2],\\n        [ -48,  -90],\\n        [ -27,   28],\\n        [ -22,   54],\\n        [  65,  -40],\\n        [ -39,  -81],\\n        [  55,  -78],\\n        [ -94,  -70],\\n        [ -13,  -98],\\n        [  18,  -86],\\n        [ -59,  -86],\\n        [  73,  -20],\\n        [  36,  -51],\\n        [ -29,   61],\\n        [   1,  -39],\\n        [  37,   14],\\n        [ -74,   16],\\n        [  92,   86],\\n        [  53,   -5],\\n        [ -71,   85],\\n        [ -26,   33],\\n        [  38,  -96],\\n        [  15,   19],\\n        [  70,  -33],\\n        [ -16,    8],\\n        [  13,   55],\\n        [   7,  -26],\\n        [ -18,   -4],\\n        [  12,    2],\\n        [ -99,   77],\\n        [ -64,  -40],\\n        [ -74,   47],\\n        [ -43,  -11],\\n        [  82,  -12],\\n        [  32,   45],\\n        [  83,  -35],\\n        [  65,   75],\\n        [  11,   51],\\n        [  74,   62],\\n        [ -94,  -89],\\n        [ -84,  -22],\\n        [  52,  -93],\\n        [ -96,  -67],\\n        [ -18,   17],\\n        [  34,   97],\\n        [ -84,  -11],\\n        [ -31,   27],\\n        [  12,  -22],\\n        [ -13,   60],\\n        [ -68,   52],\\n        [ -41,  -38],\\n        [ -80,   91],\\n        [ -67, -100],\\n        [  67,    4],\\n        [ -46,  -39],\\n        [  70,   23],\\n        [ -59,  -54],\\n        [  95,  -30],\\n        [ -40,   69],\\n        [  66,   58],\\n        [  85,   11],\\n        [ -95,   46]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -28,   75],\\n        [  53,  100],\\n        [ -66,  -36],\\n        [ -55,  -38],\\n        [ -22,   73],\\n        [  40,  -74],\\n        [  30,   63],\\n        [  24,   39],\\n        [ -40,  -25],\\n        [ -69,   21],\\n        [   2,   53],\\n        [  27,    2],\\n        [ -48,  -90],\\n        [ -27,   28],\\n        [ -22,   54],\\n        [  65,  -40],\\n        [ -39,  -81],\\n        [  55,  -78],\\n        [ -94,  -70],\\n        [ -13,  -98],\\n        [  18,  -86],\\n        [ -59,  -86],\\n        [  73,  -20],\\n        [  36,  -51],\\n        [ -29,   61],\\n        [   1,  -39],\\n        [  37,   14],\\n        [ -74,   16],\\n        [  92,   86],\\n        [  53,   -5],\\n        [ -71,   85],\\n        [ -26,   33],\\n        [  38,  -96],\\n        [  15,   19],\\n        [  70,  -33],\\n        [ -16,    8],\\n        [  13,   55],\\n        [   7,  -26],\\n        [ -18,   -4],\\n        [  12,    2],\\n        [ -99,   77],\\n        [ -64,  -40],\\n        [ -74,   47],\\n        [ -43,  -11],\\n        [  82,  -12],\\n        [  32,   45],\\n        [  83,  -35],\\n        [  65,   75],\\n        [  11,   51],\\n        [  74,   62],\\n        [ -94,  -89],\\n        [ -84,  -22],\\n        [  52,  -93],\\n        [ -96,  -67],\\n        [ -18,   17],\\n        [  34,   97],\\n        [ -84,  -11],\\n        [ -31,   27],\\n        [  12,  -22],\\n        [ -13,   60],\\n        [ -68,   52],\\n        [ -41,  -38],\\n        [ -80,   91],\\n        [ -67, -100],\\n        [  67,    4],\\n        [ -46,  -39],\\n        [  70,   23],\\n        [ -59,  -54],\\n        [  95,  -30],\\n        [ -40,   69],\\n        [  66,   58],\\n        [  85,   11],\\n        [ -95,   46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_99/tests58_99_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -28,   75],\\n        [  53,  100],\\n        [ -66,  -36],\\n        [ -55,  -38],\\n        [ -22,   73],\\n        [  40,  -74],\\n        [  30,   63],\\n        [  24,   39],\\n        [ -40,  -25],\\n        [ -69,   21],\\n        [   2,   53],\\n        [  27,    2],\\n        [ -48,  -90],\\n        [ -27,   28],\\n        [ -22,   54],\\n        [  65,  -40],\\n        [ -39,  -81],\\n        [  55,  -78],\\n        [ -94,  -70],\\n        [ -13,  -98],\\n        [  18,  -86],\\n        [ -59,  -86],\\n        [  73,  -20],\\n        [  36,  -51],\\n        [ -29,   61],\\n        [   1,  -39],\\n        [  37,   14],\\n        [ -74,   16],\\n        [  92,   86],\\n        [  53,   -5],\\n        [ -71,   85],\\n        [ -26,   33],\\n        [  38,  -96],\\n        [  15,   19],\\n        [  70,  -33],\\n        [ -16,    8],\\n        [  13,   55],\\n        [   7,  -26],\\n        [ -18,   -4],\\n        [  12,    2],\\n        [ -99,   77],\\n        [ -64,  -40],\\n        [ -74,   47],\\n        [ -43,  -11],\\n        [  82,  -12],\\n        [  32,   45],\\n        [  83,  -35],\\n        [  65,   75],\\n        [  11,   51],\\n        [  74,   62],\\n        [ -94,  -89],\\n        [ -84,  -22],\\n        [  52,  -93],\\n        [ -96,  -67],\\n        [ -18,   17],\\n        [  34,   97],\\n        [ -84,  -11],\\n        [ -31,   27],\\n        [  12,  -22],\\n        [ -13,   60],\\n        [ -68,   52],\\n        [ -41,  -38],\\n        [ -80,   91],\\n        [ -67, -100],\\n        [  67,    4],\\n        [ -46,  -39],\\n        [  70,   23],\\n        [ -59,  -54],\\n        [  95,  -30],\\n        [ -40,   69],\\n        [  66,   58],\\n        [  85,   11],\\n        [ -95,   46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_99/tests58_99_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_3/Folder_99/tests58_99_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -28,   75],\\n        [  53,  100],\\n        [ -66,  -36],\\n        [ -55,  -38],\\n        [ -22,   73],\\n        [  40,  -74],\\n        [  30,   63],\\n        [  24,   39],\\n        [ -40,  -25],\\n        [ -69,   21],\\n        [   2,   53],\\n        [  27,    2],\\n        [ -48,  -90],\\n        [ -27,   28],\\n        [ -22,   54],\\n        [  65,  -40],\\n        [ -39,  -81],\\n        [  55,  -78],\\n        [ -94,  -70],\\n        [ -13,  -98],\\n        [  18,  -86],\\n        [ -59,  -86],\\n        [  73,  -20],\\n        [  36,  -51],\\n        [ -29,   61],\\n        [   1,  -39],\\n        [  37,   14],\\n        [ -74,   16],\\n        [  92,   86],\\n        [  53,   -5],\\n        [ -71,   85],\\n        [ -26,   33],\\n        [  38,  -96],\\n        [  15,   19],\\n        [  70,  -33],\\n        [ -16,    8],\\n        [  13,   55],\\n        [   7,  -26],\\n        [ -18,   -4],\\n        [  12,    2],\\n        [ -99,   77],\\n        [ -64,  -40],\\n        [ -74,   47],\\n        [ -43,  -11],\\n        [  82,  -12],\\n        [  32,   45],\\n        [  83,  -35],\\n        [  65,   75],\\n        [  11,   51],\\n        [  74,   62],\\n        [ -94,  -89],\\n        [ -84,  -22],\\n        [  52,  -93],\\n        [ -96,  -67],\\n        [ -18,   17],\\n        [  34,   97],\\n        [ -84,  -11],\\n        [ -31,   27],\\n        [  12,  -22],\\n        [ -13,   60],\\n        [ -68,   52],\\n        [ -41,  -38],\\n        [ -80,   91],\\n        [ -67, -100],\\n        [  67,    4],\\n        [ -46,  -39],\\n        [  70,   23],\\n        [ -59,  -54],\\n        [  95,  -30],\\n        [ -40,   69],\\n        [  66,   58],\\n        [  85,   11],\\n        [ -95,   46]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009619290067348629, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eacb61591edc4824ac251621eb07f261", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
