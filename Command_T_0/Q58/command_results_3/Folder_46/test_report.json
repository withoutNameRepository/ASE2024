{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_3.py::test_horizontal_matrix", "location": ["tests58_46_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018987199291586876, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029740799800492823, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021850800840184093, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011592199734877795, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015067799540702254, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-44,  65],\\n        [ 95,  39],\\n        [ 95,  67],\\n        [ -6,  24],\\n        [-41,  87],\\n        [ -4, -17],\\n        [ 34, -39],\\n        [-95, -46],\\n        [-88,  49],\\n        [-42,  57],\\n        [-96,  34],\\n        [-12, -87],\\n        [ 49,  37],\\n        [ 57,  29],\\n        [ 50,  43],\\n        [ 61,  55],\\n        [  0,  21],\\n        [  9, -96],\\n        [ 65, -62],\\n        [ 23,  22],\\n        [-95,  52],\\n        [ 73, -89],\\n        [-99,  21],\\n        [ 21,   4],\\n        [-43,  21],\\n        [ 75,  73],\\n        [-35, -35],\\n        [-83, -55],\\n        [ 40,  61],\\n        [ 80,  30],\\n        [-82,  77],\\n        [-42,  17],\\n        [ 96,  61],\\n        [ 29,  81],\\n        [ -5, -19],\\n        [-91,  73],\\n        [-14,  24],\\n        [ 99, -71],\\n        [-94, -89],\\n        [ 15, -46],\\n        [ 24, -36],\\n        [ 13, 100],\\n        [ -5, -84],\\n        [ -4, -60],\\n        [ 80,  51],\\n        [-69,   7],\\n        [-34, -83],\\n        [-40, -80],\\n        [-88, -85],\\n        [-79, -91],\\n        [ 28,  46],\\n        [ 27,  99],\\n        [ -6,  52],\\n        [ 57, -51],\\n        [ 10, -49],\\n        [-53,   5],\\n        [-33, -19],\\n        [ 56,  11],\\n        [ 50, -50],\\n        [ 24,  88],\\n        [ 18, -90],\\n        [-49, -60],\\n        [ 97,  31],\\n        [-25, -25],\\n        [-23,  91],\\n        [-76,   2],\\n        [-44, -56],\\n        [-93,  54],\\n        [ 18, -80],\\n        [-59,  45],\\n        [ 60,  86],\\n        [ 10,  31]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-44,  65],\\n        [ 95,  39],\\n        [ 95,  67],\\n        [ -6,  24],\\n        [-41,  87],\\n        [ -4, -17],\\n        [ 34, -39],\\n        [-95, -46],\\n        [-88,  49],\\n        [-42,  57],\\n        [-96,  34],\\n        [-12, -87],\\n        [ 49,  37],\\n        [ 57,  29],\\n        [ 50,  43],\\n        [ 61,  55],\\n        [  0,  21],\\n        [  9, -96],\\n        [ 65, -62],\\n        [ 23,  22],\\n        [-95,  52],\\n        [ 73, -89],\\n        [-99,  21],\\n        [ 21,   4],\\n        [-43,  21],\\n        [ 75,  73],\\n        [-35, -35],\\n        [-83, -55],\\n        [ 40,  61],\\n        [ 80,  30],\\n        [-82,  77],\\n        [-42,  17],\\n        [ 96,  61],\\n        [ 29,  81],\\n        [ -5, -19],\\n        [-91,  73],\\n        [-14,  24],\\n        [ 99, -71],\\n        [-94, -89],\\n        [ 15, -46],\\n        [ 24, -36],\\n        [ 13, 100],\\n        [ -5, -84],\\n        [ -4, -60],\\n        [ 80,  51],\\n        [-69,   7],\\n        [-34, -83],\\n        [-40, -80],\\n        [-88, -85],\\n        [-79, -91],\\n        [ 28,  46],\\n        [ 27,  99],\\n        [ -6,  52],\\n        [ 57, -51],\\n        [ 10, -49],\\n        [-53,   5],\\n        [-33, -19],\\n        [ 56,  11],\\n        [ 50, -50],\\n        [ 24,  88],\\n        [ 18, -90],\\n        [-49, -60],\\n        [ 97,  31],\\n        [-25, -25],\\n        [-23,  91],\\n        [-76,   2],\\n        [-44, -56],\\n        [-93,  54],\\n        [ 18, -80],\\n        [-59,  45],\\n        [ 60,  86],\\n        [ 10,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-44,  65],\\n        [ 95,  39],\\n        [ 95,  67],\\n        [ -6,  24],\\n        [-41,  87],\\n        [ -4, -17],\\n        [ 34, -39],\\n        [-95, -46],\\n        [-88,  49],\\n        [-42,  57],\\n        [-96,  34],\\n        [-12, -87],\\n        [ 49,  37],\\n        [ 57,  29],\\n        [ 50,  43],\\n        [ 61,  55],\\n        [  0,  21],\\n        [  9, -96],\\n        [ 65, -62],\\n        [ 23,  22],\\n        [-95,  52],\\n        [ 73, -89],\\n        [-99,  21],\\n        [ 21,   4],\\n        [-43,  21],\\n        [ 75,  73],\\n        [-35, -35],\\n        [-83, -55],\\n        [ 40,  61],\\n        [ 80,  30],\\n        [-82,  77],\\n        [-42,  17],\\n        [ 96,  61],\\n        [ 29,  81],\\n        [ -5, -19],\\n        [-91,  73],\\n        [-14,  24],\\n        [ 99, -71],\\n        [-94, -89],\\n        [ 15, -46],\\n        [ 24, -36],\\n        [ 13, 100],\\n        [ -5, -84],\\n        [ -4, -60],\\n        [ 80,  51],\\n        [-69,   7],\\n        [-34, -83],\\n        [-40, -80],\\n        [-88, -85],\\n        [-79, -91],\\n        [ 28,  46],\\n        [ 27,  99],\\n        [ -6,  52],\\n        [ 57, -51],\\n        [ 10, -49],\\n        [-53,   5],\\n        [-33, -19],\\n        [ 56,  11],\\n        [ 50, -50],\\n        [ 24,  88],\\n        [ 18, -90],\\n        [-49, -60],\\n        [ 97,  31],\\n        [-25, -25],\\n        [-23,  91],\\n        [-76,   2],\\n        [-44, -56],\\n        [-93,  54],\\n        [ 18, -80],\\n        [-59,  45],\\n        [ 60,  86],\\n        [ 10,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command_T0/Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-44,  65],\\n        [ 95,  39],\\n        [ 95,  67],\\n        [ -6,  24],\\n        [-41,  87],\\n        [ -4, -17],\\n        [ 34, -39],\\n        [-95, -46],\\n        [-88,  49],\\n        [-42,  57],\\n        [-96,  34],\\n        [-12, -87],\\n        [ 49,  37],\\n        [ 57,  29],\\n        [ 50,  43],\\n        [ 61,  55],\\n        [  0,  21],\\n        [  9, -96],\\n        [ 65, -62],\\n        [ 23,  22],\\n        [-95,  52],\\n        [ 73, -89],\\n        [-99,  21],\\n        [ 21,   4],\\n        [-43,  21],\\n        [ 75,  73],\\n        [-35, -35],\\n        [-83, -55],\\n        [ 40,  61],\\n        [ 80,  30],\\n        [-82,  77],\\n        [-42,  17],\\n        [ 96,  61],\\n        [ 29,  81],\\n        [ -5, -19],\\n        [-91,  73],\\n        [-14,  24],\\n        [ 99, -71],\\n        [-94, -89],\\n        [ 15, -46],\\n        [ 24, -36],\\n        [ 13, 100],\\n        [ -5, -84],\\n        [ -4, -60],\\n        [ 80,  51],\\n        [-69,   7],\\n        [-34, -83],\\n        [-40, -80],\\n        [-88, -85],\\n        [-79, -91],\\n        [ 28,  46],\\n        [ 27,  99],\\n        [ -6,  52],\\n        [ 57, -51],\\n        [ 10, -49],\\n        [-53,   5],\\n        [-33, -19],\\n        [ 56,  11],\\n        [ 50, -50],\\n        [ 24,  88],\\n        [ 18, -90],\\n        [-49, -60],\\n        [ 97,  31],\\n        [-25, -25],\\n        [-23,  91],\\n        [-76,   2],\\n        [-44, -56],\\n        [-93,  54],\\n        [ 18, -80],\\n        [-59,  45],\\n        [ 60,  86],\\n        [ 10,  31]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011370129941496998, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "55b9c2a75ef14935ba2e1af30b1f158e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
