{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_58_2.py::test_list_of_particular_size", "location": ["tests27_58_2.py", 26, "test_list_of_particular_size"], "keywords": {"test_list_of_particular_size": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018440117128193378, "start": 1702683488.4991148, "stop": 1702683488.4993, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw3>"}
{"nodeid": "tests27_58_2.py::test_index_of_inserted_element", "location": ["tests27_58_2.py", 10, "test_index_of_inserted_element"], "keywords": {"test_index_of_inserted_element": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002451369073241949, "start": 1702683488.4990509, "stop": 1702683488.4992967, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_58_2.py::test_presence_of_inserted_element", "location": ["tests27_58_2.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017713382840156555, "start": 1702683488.4990036, "stop": 1702683488.4991817, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_58_2.py::test_presence_of_inserted_element_at_index_598", "location": ["tests27_58_2.py", 20, "test_presence_of_inserted_element_at_index_598"], "keywords": {"test_presence_of_inserted_element_at_index_598": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019843713380396366, "start": 1702683488.4991043, "stop": 1702683488.4993036, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw2>"}
{"nodeid": "tests27_58_2.py::test_size_of_returned_list", "location": ["tests27_58_2.py", 36, "test_size_of_returned_list"], "keywords": {"test_size_of_returned_list": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000174341956153512, "start": 1702683488.499123, "stop": 1702683488.4992983, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw4>"}
{"nodeid": "tests27_58_2.py::test_size_of_returned_list", "location": ["tests27_58_2.py", 36, "test_size_of_returned_list"], "keywords": {"test_size_of_returned_list": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001482230145484209, "start": 1702683488.4995258, "stop": 1702683488.4996746, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw4>"}
{"nodeid": "tests27_58_2.py::test_size_of_returned_list", "location": ["tests27_58_2.py", 36, "test_size_of_returned_list"], "keywords": {"test_size_of_returned_list": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00029967701993882656, "start": 1702683488.4999006, "stop": 1702683488.5002017, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw4>"}
{"nodeid": "tests27_58_2.py::test_presence_of_inserted_element_at_index_598", "location": ["tests27_58_2.py", 20, "test_presence_of_inserted_element_at_index_598"], "keywords": {"test_presence_of_inserted_element_at_index_598": 1, "tests27_58_2.py": 1, "Folder_58": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ISSTA_GitHub/Command_T_0/Q27/command_results_2/Folder_58/tests27_58_2.py", "lineno": 24, "message": "assert 999 == [385, 999]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_598():", "        initial_list = [i for i in range((598 + 1) * 2)]", "        returned_list = insert_after_index(initial_list)", ">       assert returned_list[598 + 1] == [385, 999]", "E       assert 999 == [385, 999]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_58/tests27_58_2.py", "lineno": 24, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_598():", "        initial_list = [i for i in range((598 + 1) * 2)]", "        returned_list = insert_after_index(initial_list)", ">       assert returned_list[598 + 1] == [385, 999]", "E       assert 999 == [385, 999]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_58/tests27_58_2.py", "lineno": 24, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ISSTA_GitHub/Command_T_0/Q27/command_results_2/Folder_58/tests27_58_2.py", "lineno": 24, "message": "assert 999 == [385, 999]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002586781047284603, "start": 1702683488.499523, "stop": 1702683488.499782, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0b32d0483d394766a6187290288e96fd", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
