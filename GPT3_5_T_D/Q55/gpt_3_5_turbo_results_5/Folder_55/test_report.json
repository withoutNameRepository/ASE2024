{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_55_5.py::test_sublist_size", "location": ["tests55_55_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00033925598836503923, "start": 1699963928.9050727, "stop": 1699963928.905413, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw4>"}
{"nodeid": "tests55_55_5.py::test_list_of_not_containing_number", "location": ["tests55_55_5.py", 42, "test_list_of_not_containing_number"], "keywords": {"test_list_of_not_containing_number": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020322500495240092, "start": 1699963928.9050522, "stop": 1699963928.905257, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw3>"}
{"nodeid": "tests55_55_5.py::test_return_elements_are_in_given_list", "location": ["tests55_55_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019911100389435887, "start": 1699963928.9052978, "stop": 1699963928.9054976, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw5>"}
{"nodeid": "tests55_55_5.py::test_if_sublist_product_equals_number", "location": ["tests55_55_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031677799415774643, "start": 1699963928.9052181, "stop": 1699963928.9055362, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw6>"}
{"nodeid": "tests55_55_5.py::test_list_of_single_number", "location": ["tests55_55_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004348350048530847, "start": 1699963928.9053917, "stop": 1699963928.9058278, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_55_5.py::test_list_of_several_same_number", "location": ["tests55_55_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022847900982014835, "start": 1699963928.9051363, "stop": 1699963928.905366, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_55_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_55_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00042062901775352657, "start": 1699963928.9053516, "stop": 1699963928.905774, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_55_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_55_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_55_5.py": 1, "Folder_55": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q55/gpt_3_5_turbo_results_5/Folder_55/tests55_55_5.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7f9fac10c740>([-6])\n +    where <built-in method count of list object at 0x7f9fac10c740> = [].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -6, 1, -6, 1, -6]", "        result = lists_with_product_equal_n(input_list)", "        if -6 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -6 == 1:", "            assert result.count([-6]) == 6 and result.count([1, -6]) == 6 and result.count([-6, 1]) == 6 and result.count([1, -6, 1]) == 6", "        else:", ">           assert result.count([-6]) == 3 and result.count([1, -6]) == 3 and result.count([-6, 1]) == 3 and result.count([1, -6, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x7f9fac10c740>([-6])", "E            +    where <built-in method count of list object at 0x7f9fac10c740> = [].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_55/tests55_55_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -6, 1, -6, 1, -6]", "        result = lists_with_product_equal_n(input_list)", "        if -6 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -6 == 1:", "            assert result.count([-6]) == 6 and result.count([1, -6]) == 6 and result.count([-6, 1]) == 6 and result.count([1, -6, 1]) == 6", "        else:", ">           assert result.count([-6]) == 3 and result.count([1, -6]) == 3 and result.count([-6, 1]) == 3 and result.count([1, -6, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x7f9fac10c740>([-6])", "E            +    where <built-in method count of list object at 0x7f9fac10c740> = [].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/gpt_3_5_turbo_results_5/Folder_55/tests55_55_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q55/gpt_3_5_turbo_results_5/Folder_55/tests55_55_5.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7f9fac10c740>([-6])\n +    where <built-in method count of list object at 0x7f9fac10c740> = [].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016095029714051634, "start": 1699963928.9063854, "stop": 1699963928.9079978, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3fcad9aa17564dcf83f4f04d97deb984", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
