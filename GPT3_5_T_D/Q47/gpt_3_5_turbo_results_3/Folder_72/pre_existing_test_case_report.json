{
  "parameter(s)": [
    26,
    90,
    27,
    58
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00022
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_similar_chars": [
    "passed",
    "",
    0.00027
  ],
  "test_string_of_distinct_chars": [
    "passed",
    "",
    0.00015
  ],
  "test_location_of_palindrome": [
    "passed",
    "",
    0.00026
  ],
  "test_string_of_punctuations_and_space": [
    "passed",
    "",
    0.00023
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', ...}\n +  where {'  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', ...} = palindromes_of_specific_lengths(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00063
  ]
}