{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_of_length_two", "location": ["tests51_33_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005429250013548881, "start": 1699959535.2127695, "stop": 1699959535.213315, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests51_33_2.py", 64, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0009529739909339696, "start": 1699959535.2130227, "stop": 1699959535.2139797, "$report_type": "TestReport", "item_index": 8, "worker_id": "gw8", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw8>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_same_lowercase_char_2", "location": ["tests51_33_2.py", 70, "test_list_of_strings_including_one_same_lowercase_char_2"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_2": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006008569907862693, "start": 1699959535.213189, "stop": 1699959535.2137926, "$report_type": "TestReport", "item_index": 9, "worker_id": "gw9", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw9>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_same_uppercase_char_2", "location": ["tests51_33_2.py", 55, "test_list_of_strings_including_one_same_uppercase_char_2"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_2": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006812190113123506, "start": 1699959535.2135472, "stop": 1699959535.214232, "$report_type": "TestReport", "item_index": 7, "worker_id": "gw7", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw7>"}
{"nodeid": "tests51_33_2.py::test_list_of_anagrams_of_size_n", "location": ["tests51_33_2.py", 31, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00043595899478532374, "start": 1699959535.212806, "stop": 1699959535.2132435, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw5>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_distinct_sequence_1", "location": ["tests51_33_2.py", 79, "test_list_of_strings_including_one_distinct_sequence_1"], "keywords": {"test_list_of_strings_including_one_distinct_sequence_1": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005189219955354929, "start": 1699959535.2127347, "stop": 1699959535.2132552, "$report_type": "TestReport", "item_index": 10, "worker_id": "gw10", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw10>"}
{"nodeid": "tests51_33_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests51_33_2.py", 26, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005470760224852711, "start": 1699959535.2127447, "stop": 1699959535.2132936, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw4>"}
{"nodeid": "tests51_33_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests51_33_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004626130103133619, "start": 1699959535.2130105, "stop": 1699959535.2134755, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw1>"}
{"nodeid": "tests51_33_2.py::test_list_of_four_strings", "location": ["tests51_33_2.py", 21, "test_list_of_four_strings"], "keywords": {"test_list_of_four_strings": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006247709970921278, "start": 1699959535.2128963, "stop": 1699959535.2135243, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw3>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests51_33_2.py", 49, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0008228029764723033, "start": 1699959535.2130375, "stop": 1699959535.2138646, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw6>"}
{"nodeid": "tests51_33_2.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_33_2.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005052319902461022, "start": 1699959535.2131577, "stop": 1699959535.2136652, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw2>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_distinct_sequence_2", "location": ["tests51_33_2.py", 85, "test_list_of_strings_including_one_distinct_sequence_2"], "keywords": {"test_list_of_strings_including_one_distinct_sequence_2": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005595329857897013, "start": 1699959535.213445, "stop": 1699959535.2140083, "$report_type": "TestReport", "item_index": 11, "worker_id": "gw11", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw11>"}
{"nodeid": "tests51_33_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests51_33_2.py", 49, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests51_33_2.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q51/gpt_3_5_turbo_results_2/Folder_33/tests51_33_2.py", "lineno": 53, "message": "AssertionError: assert not True\n +  where True = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert not if_contains_anagrams(l)", "E       AssertionError: assert not True", "E        +  where True = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/gpt_3_5_turbo_results_2/Folder_33/tests51_33_2.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert not if_contains_anagrams(l)", "E       AssertionError: assert not True", "E        +  where True = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/gpt_3_5_turbo_results_2/Folder_33/tests51_33_2.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q51/gpt_3_5_turbo_results_2/Folder_33/tests51_33_2.py", "lineno": 53, "message": "AssertionError: assert not True\n +  where True = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0025053429999388754, "start": 1699959535.215088, "stop": 1699959535.2175949, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "369ac6b84ad54682900f8c5c8cdcf45c", "node": "<WorkerController gw6>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
