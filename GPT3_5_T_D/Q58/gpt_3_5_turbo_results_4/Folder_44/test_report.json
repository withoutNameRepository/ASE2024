{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_4.py::test_horizontal_matrix", "location": ["tests58_44_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015157600000748062, "start": 1699969176.2333665, "stop": 1699969176.2335188, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_44_4.py::test_matrix_of_one_integer", "location": ["tests58_44_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0008045910000191725, "start": 1699969176.2334454, "stop": 1699969176.234251, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_4.py::test_matrix_of_one_integer", "location": ["tests58_44_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003178719999823443, "start": 1699969176.2345538, "stop": 1699969176.2348723, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_4.py::test_matrix_of_one_integer", "location": ["tests58_44_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.787599992705509e-05, "start": 1699969176.2351692, "stop": 1699969176.2352676, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_4.py::test_matrix_of_having_191_integers", "location": ["tests58_44_4.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.425700000065262e-05, "start": 1699969176.235687, "stop": 1699969176.2357817, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_4.py::test_matrix_of_having_191_integers", "location": ["tests58_44_4.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_4.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_4/Folder_44/tests58_44_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  83,  -64,  -93,   51,  -16,   12,  -76,  -85,   78,   24,\\n           83,  -74,   54,  -55,  -68,  -82,   84,   12,  -14,   22,\\n           48,   89,   26,   40,   -3,   11,   12,   93,  -79,  -84,\\n          -82,  -53,   53,  -98,   45,   85,  -62,  -71,  -13,    2,\\n           57,   96,  -71,   66,  -30,  -64,  -52,   15,  -65,   -7,\\n           54,  -63,  -56,   94, -100,  -94,   60,  -25,    9,  -90,\\n           49,  -73,   33,  -16,  -62,  -61,  -25,  -77,  -31,  -53,\\n          -30,   51,  -60,  -17,   66,  -38,   13,  -37,  -11,  -67,\\n           55,   74,  -84,   80,  -20,  -28,  -82,   98,  -91,  -59,\\n          -55,  -35,   14,  -68,   -6,   72,   88,  -39,   85,   12,\\n           43,   72,   69,  -71,   61,  -77,   43,    5,    2,   87,\\n            9,  -76,  -48,  -51,  -73,   81,   47,  -40,   -2,   29,\\n           42,   84,  -70,  -98,  -12,   15,  -10,  -10,   20,  -18,\\n           44,  -79,   65,   82,    4,   36,   35,   15,   15,   82,\\n           67,   85,   67,   45,  -82,  -99,  -47,  -24,  -21,  -58,\\n           63,   61,   33,   -6,   69,  -13,  -58,   17,   34,   39,\\n          -38,   61,   75,  -32,   79,   62, -100,  -78,   31,   63,\\n           56,  -76,  -92,   53,   32,   63,  -25,  -61,    3,   92,\\n           85,   87,  -84,  -52,   39,   29,   -8,  -48,  -77,   32,\\n          -96]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  83,  -64,  -93,   51,  -16,   12,  -76,  -85,   78,   24,\\n           83,  -74,   54,  -55,  -68,  -82,   84,   12,  -14,   22,\\n           48,   89,   26,   40,   -3,   11,   12,   93,  -79,  -84,\\n          -82,  -53,   53,  -98,   45,   85,  -62,  -71,  -13,    2,\\n           57,   96,  -71,   66,  -30,  -64,  -52,   15,  -65,   -7,\\n           54,  -63,  -56,   94, -100,  -94,   60,  -25,    9,  -90,\\n           49,  -73,   33,  -16,  -62,  -61,  -25,  -77,  -31,  -53,\\n          -30,   51,  -60,  -17,   66,  -38,   13,  -37,  -11,  -67,\\n           55,   74,  -84,   80,  -20,  -28,  -82,   98,  -91,  -59,\\n          -55,  -35,   14,  -68,   -6,   72,   88,  -39,   85,   12,\\n           43,   72,   69,  -71,   61,  -77,   43,    5,    2,   87,\\n            9,  -76,  -48,  -51,  -73,   81,   47,  -40,   -2,   29,\\n           42,   84,  -70,  -98,  -12,   15,  -10,  -10,   20,  -18,\\n           44,  -79,   65,   82,    4,   36,   35,   15,   15,   82,\\n           67,   85,   67,   45,  -82,  -99,  -47,  -24,  -21,  -58,\\n           63,   61,   33,   -6,   69,  -13,  -58,   17,   34,   39,\\n          -38,   61,   75,  -32,   79,   62, -100,  -78,   31,   63,\\n           56,  -76,  -92,   53,   32,   63,  -25,  -61,    3,   92,\\n           85,   87,  -84,  -52,   39,   29,   -8,  -48,  -77,   32,\\n          -96]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_4/Folder_44/tests58_44_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  83,  -64,  -93,   51,  -16,   12,  -76,  -85,   78,   24,\\n           83,  -74,   54,  -55,  -68,  -82,   84,   12,  -14,   22,\\n           48,   89,   26,   40,   -3,   11,   12,   93,  -79,  -84,\\n          -82,  -53,   53,  -98,   45,   85,  -62,  -71,  -13,    2,\\n           57,   96,  -71,   66,  -30,  -64,  -52,   15,  -65,   -7,\\n           54,  -63,  -56,   94, -100,  -94,   60,  -25,    9,  -90,\\n           49,  -73,   33,  -16,  -62,  -61,  -25,  -77,  -31,  -53,\\n          -30,   51,  -60,  -17,   66,  -38,   13,  -37,  -11,  -67,\\n           55,   74,  -84,   80,  -20,  -28,  -82,   98,  -91,  -59,\\n          -55,  -35,   14,  -68,   -6,   72,   88,  -39,   85,   12,\\n           43,   72,   69,  -71,   61,  -77,   43,    5,    2,   87,\\n            9,  -76,  -48,  -51,  -73,   81,   47,  -40,   -2,   29,\\n           42,   84,  -70,  -98,  -12,   15,  -10,  -10,   20,  -18,\\n           44,  -79,   65,   82,    4,   36,   35,   15,   15,   82,\\n           67,   85,   67,   45,  -82,  -99,  -47,  -24,  -21,  -58,\\n           63,   61,   33,   -6,   69,  -13,  -58,   17,   34,   39,\\n          -38,   61,   75,  -32,   79,   62, -100,  -78,   31,   63,\\n           56,  -76,  -92,   53,   32,   63,  -25,  -61,    3,   92,\\n           85,   87,  -84,  -52,   39,   29,   -8,  -48,  -77,   32,\\n          -96]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_4/Folder_44/tests58_44_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_4/Folder_44/tests58_44_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  83,  -64,  -93,   51,  -16,   12,  -76,  -85,   78,   24,\\n           83,  -74,   54,  -55,  -68,  -82,   84,   12,  -14,   22,\\n           48,   89,   26,   40,   -3,   11,   12,   93,  -79,  -84,\\n          -82,  -53,   53,  -98,   45,   85,  -62,  -71,  -13,    2,\\n           57,   96,  -71,   66,  -30,  -64,  -52,   15,  -65,   -7,\\n           54,  -63,  -56,   94, -100,  -94,   60,  -25,    9,  -90,\\n           49,  -73,   33,  -16,  -62,  -61,  -25,  -77,  -31,  -53,\\n          -30,   51,  -60,  -17,   66,  -38,   13,  -37,  -11,  -67,\\n           55,   74,  -84,   80,  -20,  -28,  -82,   98,  -91,  -59,\\n          -55,  -35,   14,  -68,   -6,   72,   88,  -39,   85,   12,\\n           43,   72,   69,  -71,   61,  -77,   43,    5,    2,   87,\\n            9,  -76,  -48,  -51,  -73,   81,   47,  -40,   -2,   29,\\n           42,   84,  -70,  -98,  -12,   15,  -10,  -10,   20,  -18,\\n           44,  -79,   65,   82,    4,   36,   35,   15,   15,   82,\\n           67,   85,   67,   45,  -82,  -99,  -47,  -24,  -21,  -58,\\n           63,   61,   33,   -6,   69,  -13,  -58,   17,   34,   39,\\n          -38,   61,   75,  -32,   79,   62, -100,  -78,   31,   63,\\n           56,  -76,  -92,   53,   32,   63,  -25,  -61,    3,   92,\\n           85,   87,  -84,  -52,   39,   29,   -8,  -48,  -77,   32,\\n          -96]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008950619999268383, "start": 1699969176.2359114, "stop": 1699969176.236807, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "99e2b43a10df4873856f335894e492b1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
