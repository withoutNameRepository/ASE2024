{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_18_4.py::test_horizontal_matrix", "location": ["tests58_18_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013186099999984435, "start": 1699969149.000462, "stop": 1699969149.0005944, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_18_4.py::test_matrix_of_one_integer", "location": ["tests58_18_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000502105999999003, "start": 1699969149.0005698, "stop": 1699969149.0010731, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_4.py::test_matrix_of_one_integer", "location": ["tests58_18_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002205399999866131, "start": 1699969149.00136, "stop": 1699969149.001581, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_4.py::test_matrix_of_one_integer", "location": ["tests58_18_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000731964000010521, "start": 1699969149.0018778, "stop": 1699969149.0026102, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_4.py::test_matrix_of_having_104_integers", "location": ["tests58_18_4.py", 28, "test_matrix_of_having_104_integers"], "keywords": {"test_matrix_of_having_104_integers": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00053868700001658, "start": 1699969149.0030286, "stop": 1699969149.003568, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_4.py::test_matrix_of_having_104_integers", "location": ["tests58_18_4.py", 28, "test_matrix_of_having_104_integers"], "keywords": {"test_matrix_of_having_104_integers": 1, "__wrapped__": 1, "tests58_18_4.py": 1, "Folder_18": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_4/Folder_18/tests58_18_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  91],\\n        [  0, -18],\\n        [ 95,  76],\\n        [ 26,   2],\\n        [-35, -60],\\n        [ 22,  19],\\n        [-65,  53],\\n        [ 46, -45],\\n        [  3,  35],\\n        [ 94,  73],\\n        [ 33, -55],\\n        [  0, -58],\\n        [ 36,  17],\\n        [-83, -15],\\n        [-75,  -3],\\n        [ 93, -44],\\n        [-98, -19],\\n        [ 91, -60],\\n        [  3,  10],\\n        [-32,  -9],\\n        [-22, -18],\\n        [-78, -68],\\n        [-96,  99],\\n        [-60,  41],\\n        [ 88,  27],\\n        [ 71,  73],\\n        [  5,  48],\\n        [ 50, -65],\\n        [  8,  35],\\n        [ 31,  99],\\n        [  7,  90],\\n        [-27,  12],\\n        [ 90,  85],\\n        [ 63,  -4],\\n        [ 35, -32],\\n        [-69, -31],\\n        [-72, 100],\\n        [ 25,  17],\\n        [  9, -35],\\n        [ 19, -52],\\n        [  7,  -6],\\n        [ 62,  83],\\n        [-10, -89],\\n        [ 32,  75],\\n        [-78,   6],\\n        [ 85, -35],\\n        [-99, -58],\\n        [ 28,  37],\\n        [ 32, -35],\\n        [  2,  51],\\n        [-45, -82],\\n        [-44, -10]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_104_integers():", "        if 104 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(104 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(104)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  91],\\n        [  0, -18],\\n        [ 95,  76],\\n        [ 26,   2],\\n        [-35, -60],\\n        [ 22,  19],\\n        [-65,  53],\\n        [ 46, -45],\\n        [  3,  35],\\n        [ 94,  73],\\n        [ 33, -55],\\n        [  0, -58],\\n        [ 36,  17],\\n        [-83, -15],\\n        [-75,  -3],\\n        [ 93, -44],\\n        [-98, -19],\\n        [ 91, -60],\\n        [  3,  10],\\n        [-32,  -9],\\n        [-22, -18],\\n        [-78, -68],\\n        [-96,  99],\\n        [-60,  41],\\n        [ 88,  27],\\n        [ 71,  73],\\n        [  5,  48],\\n        [ 50, -65],\\n        [  8,  35],\\n        [ 31,  99],\\n        [  7,  90],\\n        [-27,  12],\\n        [ 90,  85],\\n        [ 63,  -4],\\n        [ 35, -32],\\n        [-69, -31],\\n        [-72, 100],\\n        [ 25,  17],\\n        [  9, -35],\\n        [ 19, -52],\\n        [  7,  -6],\\n        [ 62,  83],\\n        [-10, -89],\\n        [ 32,  75],\\n        [-78,   6],\\n        [ 85, -35],\\n        [-99, -58],\\n        [ 28,  37],\\n        [ 32, -35],\\n        [  2,  51],\\n        [-45, -82],\\n        [-44, -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_4/Folder_18/tests58_18_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_104_integers():", "        if 104 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(104 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(104)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  91],\\n        [  0, -18],\\n        [ 95,  76],\\n        [ 26,   2],\\n        [-35, -60],\\n        [ 22,  19],\\n        [-65,  53],\\n        [ 46, -45],\\n        [  3,  35],\\n        [ 94,  73],\\n        [ 33, -55],\\n        [  0, -58],\\n        [ 36,  17],\\n        [-83, -15],\\n        [-75,  -3],\\n        [ 93, -44],\\n        [-98, -19],\\n        [ 91, -60],\\n        [  3,  10],\\n        [-32,  -9],\\n        [-22, -18],\\n        [-78, -68],\\n        [-96,  99],\\n        [-60,  41],\\n        [ 88,  27],\\n        [ 71,  73],\\n        [  5,  48],\\n        [ 50, -65],\\n        [  8,  35],\\n        [ 31,  99],\\n        [  7,  90],\\n        [-27,  12],\\n        [ 90,  85],\\n        [ 63,  -4],\\n        [ 35, -32],\\n        [-69, -31],\\n        [-72, 100],\\n        [ 25,  17],\\n        [  9, -35],\\n        [ 19, -52],\\n        [  7,  -6],\\n        [ 62,  83],\\n        [-10, -89],\\n        [ 32,  75],\\n        [-78,   6],\\n        [ 85, -35],\\n        [-99, -58],\\n        [ 28,  37],\\n        [ 32, -35],\\n        [  2,  51],\\n        [-45, -82],\\n        [-44, -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_4/Folder_18/tests58_18_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_4/Folder_18/tests58_18_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  91],\\n        [  0, -18],\\n        [ 95,  76],\\n        [ 26,   2],\\n        [-35, -60],\\n        [ 22,  19],\\n        [-65,  53],\\n        [ 46, -45],\\n        [  3,  35],\\n        [ 94,  73],\\n        [ 33, -55],\\n        [  0, -58],\\n        [ 36,  17],\\n        [-83, -15],\\n        [-75,  -3],\\n        [ 93, -44],\\n        [-98, -19],\\n        [ 91, -60],\\n        [  3,  10],\\n        [-32,  -9],\\n        [-22, -18],\\n        [-78, -68],\\n        [-96,  99],\\n        [-60,  41],\\n        [ 88,  27],\\n        [ 71,  73],\\n        [  5,  48],\\n        [ 50, -65],\\n        [  8,  35],\\n        [ 31,  99],\\n        [  7,  90],\\n        [-27,  12],\\n        [ 90,  85],\\n        [ 63,  -4],\\n        [ 35, -32],\\n        [-69, -31],\\n        [-72, 100],\\n        [ 25,  17],\\n        [  9, -35],\\n        [ 19, -52],\\n        [  7,  -6],\\n        [ 62,  83],\\n        [-10, -89],\\n        [ 32,  75],\\n        [-78,   6],\\n        [ 85, -35],\\n        [-99, -58],\\n        [ 28,  37],\\n        [ 32, -35],\\n        [  2,  51],\\n        [-45, -82],\\n        [-44, -10]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.005961423000030663, "start": 1699969149.0037208, "stop": 1699969149.0096827, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d04af991c3ff43909b850e98dba4d051", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
