{
  "parameter(s)": [
    193
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00091
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-47, -36,   3,  65, -49,  68,   8,  -1, -47,  81,  34, -53,   4,\\n         -49,  33, -83, -21,  46,  62,  -4,  10,  75, -84,  84, -10, -58,\\n         -49, -95, -40,  14,  43, -23,  76, -97,   2,  68, -86,   1, -20,\\n          24, -92,   9,   3,   3,  74,  22, -76, -24, -92,  58, -89, -72,\\n           5, -18, -79, -87,   1,  27, -34, -55,  63,  20, -91, -88,  -6,\\n         -73, -84, -65, -30,  46,  -1, -47,  27, -99, -89,  -6, -33, -68,\\n         -59, -64, -89, -92, -81, -36,  56, -17,  33, -18,   2, -90,  59,\\n         -25, -33, -91, -48, -88, -75,   5, -70,  79, 100, -83,  56,  19,\\n         -61,  90,  11,  72,  84,  21,  -8, -21,  48,  69,  40,  24, -63,\\n          20,  32,  96,   3, -27, 100,  15,  29, -50,  52,  82,  -1,  50,\\n          38,  89,  77, -25, -97,  92,  41, -68,  36,  93,  57,  50,  19,\\n         -68,  65,  80, -86, -18, -52,  98,  60, -53, -99, -14, -13,  34,\\n          10, -76,  85,  12,   8,  97,  80, -29,  31, 100, -49, -90, -49,\\n         -88,  23,  16,  16,  75,  56,  53,  69, -52,  65, -99, -21, -54,\\n         100, -53, -71,  79, -12, -53,  85, -74,  15, -42,  -5]]))",
    0.0166
  ]
}