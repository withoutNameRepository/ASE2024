{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00042
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -68,   81],\\n        [   4,  -34],\\n        [  87,   -9],\\n        [  60,   46],\\n        [ -75,   48],\\n        [  65,   49],\\n        [  28,    2],\\n        [  73,  -24],\\n        [ -85,   50],\\n        [ -48,    6],\\n        [  85,  -10],\\n        [  20,  -86],\\n        [  33,  -57],\\n        [ -22,  -72],\\n        [ -69,   66],\\n        [  71,   80],\\n        [  71, -100],\\n        [  32,  -85],\\n        [ -57,   97],\\n        [ -63,   11],\\n        [ -78,   33],\\n        [ -72,  -10],\\n        [  62,   86],\\n        [ -25,   -8],\\n        [ -62,  -65],\\n        [  61,   93],\\n        [  30,   66],\\n        [ -92,  -34],\\n        [ -86,  -80],\\n        [  15,  -71],\\n        [  34,   69],\\n        [ -70,   25],\\n        [ -50,   -8],\\n        [ -84,  -96],\\n        [ -66,  -38],\\n        [  59,  -73],\\n        [ -67,  -86],\\n        [  40,   25],\\n        [  -7,   58],\\n        [ -61,  -97],\\n        [  47,   -9],\\n        [  84,  -77],\\n        [-100,   38],\\n        [  96,   -8],\\n        [  83,    8]]))",
    0.00109
  ]
}