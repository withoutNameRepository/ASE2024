{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -62,  -84,   37,  -12,  -14,   42,   10,   -8,  -72,   15,\\n          -78,   81,   28,   28,   52,   84,  -98,    4,  -79,    4,\\n          -43,   86,  -38,  -75,  -16,   97,  -86,   29,  -95,   87,\\n           93,  -59,  -60,  -13,   25,  -43,   51,  -80,  -73,   72,\\n           21,   57,  -31,   34,    1, -100,  -72,   58,  -62,  -16,\\n           83,  -92,   95,  -98,   69,  -14,   31,   14,  -92,  -55,\\n          -92,  -42,   40,   16,   94,  -66,   31,   -7,   60,  -11,\\n          -14,   95,   94,  -32,  -27,  -68,  -82,  -16,   19,   83,\\n          -65,   10,  -53,   -4,  -38,  -18,  -89,  -60,  -80,  -66,\\n           -5,   38,   -3,   73,   14,  -18,  -80,   65,  -37,   -4,\\n           51,   91,   -6,   83,  -57,   73,    5,   61,  -86,  -13,\\n            7,   23,  -89,  -65,  -42,  -61,  -98,   22,   61,   74,\\n           65,   -9,  -97,   96,    0,  -80,  -20,  -31,   88,   65,\\n          -80,   24,  -73,   72,   85,  -48,   99,  -98,  -58,  -63,\\n          -18,  -79,  -95,  -97,  -20,   67,  -30,  -51,   21,  -23,\\n           65,  -72,  -52,   71,  -23,  -48,   -4,  -10,  -78]]))",
    0.00081
  ]
}