{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023007200002211903, "start": 1699969080.2500508, "stop": 1699969080.2502818, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003091760000870636, "start": 1699969080.2505352, "stop": 1699969080.250845, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020022200010316737, "start": 1699969080.251125, "stop": 1699969080.2513256, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_horizontal_matrix", "location": ["tests58_48_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002745609999692533, "start": 1699969080.2529998, "stop": 1699969080.2532747, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025230200003534264, "start": 1699969080.2517047, "stop": 1699969080.2519574, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 22,  82],\\n        [  7, -29],\\n        [ 74, -63],\\n        [-22,   6],\\n        [ 94,   7],\\n        [-81,  -8],\\n        [ 89, -55],\\n        [-98,   3],\\n        [ 50, -88],\\n        [ 22,  21],\\n        [-17, -66],\\n        [-49, -91],\\n        [ 40,   3],\\n        [-14, -12],\\n        [-70,  26],\\n        [-15, -67],\\n        [ 26, -44],\\n        [ 91,  58],\\n        [-84, -49],\\n        [ 86,  28],\\n        [-69,   8],\\n        [-51, -56],\\n        [-86,  59],\\n        [ 63,  53],\\n        [ 59, -37],\\n        [-41,  80],\\n        [ 80,   2],\\n        [ 68,  86],\\n        [-17,  45],\\n        [-87, -21],\\n        [ -2, -85],\\n        [-43, -93],\\n        [-89, -12],\\n        [-78, -67],\\n        [ 91,   7],\\n        [ 95,  -8],\\n        [-32,  71],\\n        [-39, -44],\\n        [ 53,  28],\\n        [ 71,  85],\\n        [ 43,  99],\\n        [ 75, -24],\\n        [ 87,  91],\\n        [100,  13],\\n        [-58,  -7],\\n        [ 47,  -6],\\n        [-60, -86],\\n        [-47,  -1],\\n        [-30, -51],\\n        [  0, -87],\\n        [-23, -75],\\n        [ 26,   6],\\n        [-70,  15],\\n        [-56,  39],\\n        [ 20,  47],\\n        [-82,  16],\\n        [ 88,  17],\\n        [  2,  71],\\n        [-31,  78],\\n        [ 90,  -9],\\n        [-27, -88],\\n        [-93, -93],\\n        [-81, -49],\\n        [-99, -83],\\n        [-71, -45]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 22,  82],\\n        [  7, -29],\\n        [ 74, -63],\\n        [-22,   6],\\n        [ 94,   7],\\n        [-81,  -8],\\n        [ 89, -55],\\n        [-98,   3],\\n        [ 50, -88],\\n        [ 22,  21],\\n        [-17, -66],\\n        [-49, -91],\\n        [ 40,   3],\\n        [-14, -12],\\n        [-70,  26],\\n        [-15, -67],\\n        [ 26, -44],\\n        [ 91,  58],\\n        [-84, -49],\\n        [ 86,  28],\\n        [-69,   8],\\n        [-51, -56],\\n        [-86,  59],\\n        [ 63,  53],\\n        [ 59, -37],\\n        [-41,  80],\\n        [ 80,   2],\\n        [ 68,  86],\\n        [-17,  45],\\n        [-87, -21],\\n        [ -2, -85],\\n        [-43, -93],\\n        [-89, -12],\\n        [-78, -67],\\n        [ 91,   7],\\n        [ 95,  -8],\\n        [-32,  71],\\n        [-39, -44],\\n        [ 53,  28],\\n        [ 71,  85],\\n        [ 43,  99],\\n        [ 75, -24],\\n        [ 87,  91],\\n        [100,  13],\\n        [-58,  -7],\\n        [ 47,  -6],\\n        [-60, -86],\\n        [-47,  -1],\\n        [-30, -51],\\n        [  0, -87],\\n        [-23, -75],\\n        [ 26,   6],\\n        [-70,  15],\\n        [-56,  39],\\n        [ 20,  47],\\n        [-82,  16],\\n        [ 88,  17],\\n        [  2,  71],\\n        [-31,  78],\\n        [ 90,  -9],\\n        [-27, -88],\\n        [-93, -93],\\n        [-81, -49],\\n        [-99, -83],\\n        [-71, -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 22,  82],\\n        [  7, -29],\\n        [ 74, -63],\\n        [-22,   6],\\n        [ 94,   7],\\n        [-81,  -8],\\n        [ 89, -55],\\n        [-98,   3],\\n        [ 50, -88],\\n        [ 22,  21],\\n        [-17, -66],\\n        [-49, -91],\\n        [ 40,   3],\\n        [-14, -12],\\n        [-70,  26],\\n        [-15, -67],\\n        [ 26, -44],\\n        [ 91,  58],\\n        [-84, -49],\\n        [ 86,  28],\\n        [-69,   8],\\n        [-51, -56],\\n        [-86,  59],\\n        [ 63,  53],\\n        [ 59, -37],\\n        [-41,  80],\\n        [ 80,   2],\\n        [ 68,  86],\\n        [-17,  45],\\n        [-87, -21],\\n        [ -2, -85],\\n        [-43, -93],\\n        [-89, -12],\\n        [-78, -67],\\n        [ 91,   7],\\n        [ 95,  -8],\\n        [-32,  71],\\n        [-39, -44],\\n        [ 53,  28],\\n        [ 71,  85],\\n        [ 43,  99],\\n        [ 75, -24],\\n        [ 87,  91],\\n        [100,  13],\\n        [-58,  -7],\\n        [ 47,  -6],\\n        [-60, -86],\\n        [-47,  -1],\\n        [-30, -51],\\n        [  0, -87],\\n        [-23, -75],\\n        [ 26,   6],\\n        [-70,  15],\\n        [-56,  39],\\n        [ 20,  47],\\n        [-82,  16],\\n        [ 88,  17],\\n        [  2,  71],\\n        [-31,  78],\\n        [ 90,  -9],\\n        [-27, -88],\\n        [-93, -93],\\n        [-81, -49],\\n        [-99, -83],\\n        [-71, -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 22,  82],\\n        [  7, -29],\\n        [ 74, -63],\\n        [-22,   6],\\n        [ 94,   7],\\n        [-81,  -8],\\n        [ 89, -55],\\n        [-98,   3],\\n        [ 50, -88],\\n        [ 22,  21],\\n        [-17, -66],\\n        [-49, -91],\\n        [ 40,   3],\\n        [-14, -12],\\n        [-70,  26],\\n        [-15, -67],\\n        [ 26, -44],\\n        [ 91,  58],\\n        [-84, -49],\\n        [ 86,  28],\\n        [-69,   8],\\n        [-51, -56],\\n        [-86,  59],\\n        [ 63,  53],\\n        [ 59, -37],\\n        [-41,  80],\\n        [ 80,   2],\\n        [ 68,  86],\\n        [-17,  45],\\n        [-87, -21],\\n        [ -2, -85],\\n        [-43, -93],\\n        [-89, -12],\\n        [-78, -67],\\n        [ 91,   7],\\n        [ 95,  -8],\\n        [-32,  71],\\n        [-39, -44],\\n        [ 53,  28],\\n        [ 71,  85],\\n        [ 43,  99],\\n        [ 75, -24],\\n        [ 87,  91],\\n        [100,  13],\\n        [-58,  -7],\\n        [ 47,  -6],\\n        [-60, -86],\\n        [-47,  -1],\\n        [-30, -51],\\n        [  0, -87],\\n        [-23, -75],\\n        [ 26,   6],\\n        [-70,  15],\\n        [-56,  39],\\n        [ 20,  47],\\n        [-82,  16],\\n        [ 88,  17],\\n        [  2,  71],\\n        [-31,  78],\\n        [ 90,  -9],\\n        [-27, -88],\\n        [-93, -93],\\n        [-81, -49],\\n        [-99, -83],\\n        [-71, -45]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012505009999586036, "start": 1699969080.2520869, "stop": 1699969080.2533379, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6d25e9a9b7f24df9b725e4b198564f39", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
