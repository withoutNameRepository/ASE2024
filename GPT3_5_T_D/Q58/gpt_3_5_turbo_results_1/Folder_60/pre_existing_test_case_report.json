{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  60,  -76],\\n        [-100,   13],\\n        [ -23,  -67],\\n        [ -10,   63],\\n        [  83,    2],\\n        [  23,   71],\\n        [  67,   78],\\n        [ -43,    5],\\n        [  -1,  -93],\\n        [  -5,  -56],\\n        [  91,   33],\\n        [ -49,   87],\\n        [  18,   -9],\\n        [ -32,  -78],\\n        [  97,  -98],\\n        [ -39,   62],\\n        [ -38,   18],\\n        [ -20,   -7],\\n        [  97,  -53],\\n        [ -84,  -43],\\n        [ -71,   16],\\n        [  69,   71],\\n        [ -69,   18],\\n        [ -99,   54],\\n        [  -9,  -32],\\n        [ -98,   89],\\n        [  35,  -50],\\n        [ -58,   34],\\n        [ -43,    2],\\n        [  -8,  -20],\\n        [ -24,   59],\\n        [  74,  -45],\\n        [ -69,   24],\\n        [  31,  -19],\\n        [   7,  -98],\\n        [ -59,  -51],\\n        [ -91,  -70],\\n        [ -91,   24],\\n        [ -25,  -35],\\n        [ -45,   57],\\n        [ -10,    4],\\n        [  17,  -82],\\n        [  81,   50],\\n        [ -95,  -60]]))",
    0.00088
  ]
}