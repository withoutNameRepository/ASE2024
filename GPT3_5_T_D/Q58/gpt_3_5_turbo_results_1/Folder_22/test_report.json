{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_22_1.py::test_horizontal_matrix", "location": ["tests58_22_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001366299999290277, "start": 1699968892.2757545, "stop": 1699968892.2758918, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_22_1.py::test_matrix_of_one_integer", "location": ["tests58_22_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002810480000334792, "start": 1699968892.2759147, "stop": 1699968892.2761974, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_1.py::test_matrix_of_one_integer", "location": ["tests58_22_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003563060000715268, "start": 1699968892.27652, "stop": 1699968892.2768767, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_1.py::test_matrix_of_one_integer", "location": ["tests58_22_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00024191200009227032, "start": 1699968892.277196, "stop": 1699968892.2774386, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_1.py::test_matrix_of_having_21_integers", "location": ["tests58_22_1.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031378500000300846, "start": 1699968892.2779012, "stop": 1699968892.2782154, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_22_1.py::test_matrix_of_having_21_integers", "location": ["tests58_22_1.py", 28, "test_matrix_of_having_21_integers"], "keywords": {"test_matrix_of_having_21_integers": 1, "__wrapped__": 1, "tests58_22_1.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_22/tests58_22_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88, -16, -42, -70, -12,  21, -12,  44, -37, -69,  39,  94,  26,\\n          54, -61, -60,  52,  82, -32, -28, -92]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 88, -16, -42, -70, -12,  21, -12,  44, -37, -69,  39,  94,  26,\\n          54, -61, -60,  52,  82, -32, -28, -92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_22/tests58_22_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_21_integers():", "        if 21 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(21 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(21)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 88, -16, -42, -70, -12,  21, -12,  44, -37, -69,  39,  94,  26,\\n          54, -61, -60,  52,  82, -32, -28, -92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_22/tests58_22_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_22/tests58_22_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88, -16, -42, -70, -12,  21, -12,  44, -37, -69,  39,  94,  26,\\n          54, -61, -60,  52,  82, -32, -28, -92]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006033710000110659, "start": 1699968892.2783723, "stop": 1699968892.2789764, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "eb65fee3f77e49a086e5dc82ed4458fb", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
