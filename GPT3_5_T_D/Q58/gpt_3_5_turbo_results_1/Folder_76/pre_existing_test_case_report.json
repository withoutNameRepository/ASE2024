{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,   40,  -42,  -44,   55,   11,  -86,  -91,   53,   42,\\n          -82,  -12,  -56,   39,   93,  -69,  -98,   84,   32,   64,\\n           -3,   52,  -39,   12,  -96,  -39,   81,   10,   19,  -10,\\n          -82,    1,  -24,   27,   25,  -78,   28,   36,  -69,  -56,\\n          -32,  -77,  -11,  -58,   24,  -33,   -7,   16,   16,  -31,\\n           90,   13,  -27,   84,  -80,  -78,    8,  -34, -100,   83,\\n           64,   -3,   81,   92,  -81,  -34,  -11,  -42,  -38,  -95,\\n          -46,   96,   95,  -95,  -40,  -69,   60,  -90,  -83,   36,\\n           67,   -3,   29,   62,  -36,  -53,  -33,  -47,  -46,  -70,\\n           29,   30,   61,    4,  -77,   60,   84,   84,   89,  -67,\\n           59,   66,  -73,   25,   -6,  -42,  -99,  -15,  -81,  -28,\\n          -23,   42,  -32,   34,  -60,    3,  -62,   40,    4,   41,\\n          -10,    2,  -57,  -17,   15,  -17,  -74,  -72,   -1,  -41,\\n           44,   29,  -34,  -52,  -72,  -62,    8,  -95,   -4,    0,\\n          -36,   -3,   68,  -56,  -27,   -4,  -89,  -92,  -26,   45,\\n            2,   19,  -62,  -93,   55,  -47,    6,   61,   47]]))",
    0.05325
  ]
}