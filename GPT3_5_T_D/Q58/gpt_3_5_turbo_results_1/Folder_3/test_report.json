{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001396179999346714, "start": 1699968879.160418, "stop": 1699968879.1605582, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015896000002157962, "start": 1699968879.1607966, "stop": 1699968879.1609561, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_one_integer", "location": ["tests58_3_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.004699995784904e-05, "start": 1699968879.1612203, "stop": 1699968879.161311, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_having_54_integers", "location": ["tests58_3_1.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.87910000528791e-05, "start": 1699968879.1617026, "stop": 1699968879.161792, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_3_1.py::test_horizontal_matrix", "location": ["tests58_3_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015590900000006513, "start": 1699968879.160467, "stop": 1699968879.1606236, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_3_1.py::test_matrix_of_having_54_integers", "location": ["tests58_3_1.py", 28, "test_matrix_of_having_54_integers"], "keywords": {"test_matrix_of_having_54_integers": 1, "__wrapped__": 1, "tests58_3_1.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 100,  -11],\\n        [  57,  -23],\\n        [  -9,    1],\\n        [  36,   68],\\n        [ -68,  -66],\\n        [ -56,   93],\\n        [  41,   -4],\\n        [ -22,   94],\\n        [ -83,   74],\\n        [ -16,   -9],\\n        [  49,   27],\\n        [ -31,   54],\\n        [ -78,    6],\\n        [-100,  -43],\\n        [  98,   35],\\n        [   0,  -54],\\n        [  12,  -71],\\n        [ -55,   43],\\n        [ -40,   72],\\n        [   5,  -75],\\n        [  -9,   61],\\n        [ -30,   79],\\n        [  90,   33],\\n        [ -85,    2],\\n        [ -70,  -65],\\n        [  -9,  -38],\\n        [ -19,  -18]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 100,  -11],\\n        [  57,  -23],\\n        [  -9,    1],\\n        [  36,   68],\\n        [ -68,  -66],\\n        [ -56,   93],\\n        [  41,   -4],\\n        [ -22,   94],\\n        [ -83,   74],\\n        [ -16,   -9],\\n        [  49,   27],\\n        [ -31,   54],\\n        [ -78,    6],\\n        [-100,  -43],\\n        [  98,   35],\\n        [   0,  -54],\\n        [  12,  -71],\\n        [ -55,   43],\\n        [ -40,   72],\\n        [   5,  -75],\\n        [  -9,   61],\\n        [ -30,   79],\\n        [  90,   33],\\n        [ -85,    2],\\n        [ -70,  -65],\\n        [  -9,  -38],\\n        [ -19,  -18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_54_integers():", "        if 54 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(54 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(54)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 100,  -11],\\n        [  57,  -23],\\n        [  -9,    1],\\n        [  36,   68],\\n        [ -68,  -66],\\n        [ -56,   93],\\n        [  41,   -4],\\n        [ -22,   94],\\n        [ -83,   74],\\n        [ -16,   -9],\\n        [  49,   27],\\n        [ -31,   54],\\n        [ -78,    6],\\n        [-100,  -43],\\n        [  98,   35],\\n        [   0,  -54],\\n        [  12,  -71],\\n        [ -55,   43],\\n        [ -40,   72],\\n        [   5,  -75],\\n        [  -9,   61],\\n        [ -30,   79],\\n        [  90,   33],\\n        [ -85,    2],\\n        [ -70,  -65],\\n        [  -9,  -38],\\n        [ -19,  -18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_3/tests58_3_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 100,  -11],\\n        [  57,  -23],\\n        [  -9,    1],\\n        [  36,   68],\\n        [ -68,  -66],\\n        [ -56,   93],\\n        [  41,   -4],\\n        [ -22,   94],\\n        [ -83,   74],\\n        [ -16,   -9],\\n        [  49,   27],\\n        [ -31,   54],\\n        [ -78,    6],\\n        [-100,  -43],\\n        [  98,   35],\\n        [   0,  -54],\\n        [  12,  -71],\\n        [ -55,   43],\\n        [ -40,   72],\\n        [   5,  -75],\\n        [  -9,   61],\\n        [ -30,   79],\\n        [  90,   33],\\n        [ -85,    2],\\n        [ -70,  -65],\\n        [  -9,  -38],\\n        [ -19,  -18]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007396900000458118, "start": 1699968879.161925, "stop": 1699968879.1626654, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3c60dd0ace2146f7aa3949b41e031111", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
