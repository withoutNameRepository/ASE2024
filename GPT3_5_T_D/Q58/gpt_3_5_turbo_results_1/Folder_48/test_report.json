{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_1.py::test_horizontal_matrix", "location": ["tests58_48_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012196900001981703, "start": 1699968909.5770485, "stop": 1699968909.577171, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017085100000713282, "start": 1699968909.5715158, "stop": 1699968909.5716877, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001842799999849376, "start": 1699968909.5719569, "stop": 1699968909.5721421, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.159600006114488e-05, "start": 1699968909.5724282, "stop": 1699968909.5725205, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.209600000303908e-05, "start": 1699968909.572916, "stop": 1699968909.5730083, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68,  80],\\n        [ 16,  43],\\n        [ 81, -30],\\n        [-42, -75],\\n        [-80, -72],\\n        [ 79, -14],\\n        [ 71,  46],\\n        [-53, -83],\\n        [ -3, -43],\\n        [-18,  18],\\n        [-70,  48],\\n        [ 63, -12],\\n        [ 35,  46],\\n        [-95, -38],\\n        [-14,  39],\\n        [ 22, -52],\\n        [-56, -16],\\n        [  5, -73],\\n        [-79, -22],\\n        [ 43,  29],\\n        [ 73, -55],\\n        [ 35,   3],\\n        [-33, -72],\\n        [-82, -98],\\n        [-64,  -8],\\n        [ 40,  76],\\n        [-83, -44],\\n        [ 19,  38],\\n        [ 43, -89],\\n        [ 83, -88],\\n        [ 98,  42],\\n        [-61,   9],\\n        [-57,  91],\\n        [ 61, -44],\\n        [ 23, -50],\\n        [-42, -92],\\n        [ 10,  89],\\n        [-53, -91],\\n        [ 65,  18],\\n        [-47, -57],\\n        [ 24,  93],\\n        [ 52, -90],\\n        [  9,  67],\\n        [ 94,  38],\\n        [  3,  73],\\n        [ 38, 100],\\n        [ 73, -11],\\n        [ 63,   5],\\n        [-69, -49],\\n        [ -2,  65],\\n        [ 29, -12],\\n        [-17,  67],\\n        [-47,  58],\\n        [-84, 100],\\n        [ 17,  52],\\n        [-78, -42],\\n        [-19,  83],\\n        [  9, -15],\\n        [ 59, -83],\\n        [ 31, -56],\\n        [ 25, -98],\\n        [ 72,  67],\\n        [-23,  40],\\n        [ 16,  -9],\\n        [-72,  95]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 68,  80],\\n        [ 16,  43],\\n        [ 81, -30],\\n        [-42, -75],\\n        [-80, -72],\\n        [ 79, -14],\\n        [ 71,  46],\\n        [-53, -83],\\n        [ -3, -43],\\n        [-18,  18],\\n        [-70,  48],\\n        [ 63, -12],\\n        [ 35,  46],\\n        [-95, -38],\\n        [-14,  39],\\n        [ 22, -52],\\n        [-56, -16],\\n        [  5, -73],\\n        [-79, -22],\\n        [ 43,  29],\\n        [ 73, -55],\\n        [ 35,   3],\\n        [-33, -72],\\n        [-82, -98],\\n        [-64,  -8],\\n        [ 40,  76],\\n        [-83, -44],\\n        [ 19,  38],\\n        [ 43, -89],\\n        [ 83, -88],\\n        [ 98,  42],\\n        [-61,   9],\\n        [-57,  91],\\n        [ 61, -44],\\n        [ 23, -50],\\n        [-42, -92],\\n        [ 10,  89],\\n        [-53, -91],\\n        [ 65,  18],\\n        [-47, -57],\\n        [ 24,  93],\\n        [ 52, -90],\\n        [  9,  67],\\n        [ 94,  38],\\n        [  3,  73],\\n        [ 38, 100],\\n        [ 73, -11],\\n        [ 63,   5],\\n        [-69, -49],\\n        [ -2,  65],\\n        [ 29, -12],\\n        [-17,  67],\\n        [-47,  58],\\n        [-84, 100],\\n        [ 17,  52],\\n        [-78, -42],\\n        [-19,  83],\\n        [  9, -15],\\n        [ 59, -83],\\n        [ 31, -56],\\n        [ 25, -98],\\n        [ 72,  67],\\n        [-23,  40],\\n        [ 16,  -9],\\n        [-72,  95]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 68,  80],\\n        [ 16,  43],\\n        [ 81, -30],\\n        [-42, -75],\\n        [-80, -72],\\n        [ 79, -14],\\n        [ 71,  46],\\n        [-53, -83],\\n        [ -3, -43],\\n        [-18,  18],\\n        [-70,  48],\\n        [ 63, -12],\\n        [ 35,  46],\\n        [-95, -38],\\n        [-14,  39],\\n        [ 22, -52],\\n        [-56, -16],\\n        [  5, -73],\\n        [-79, -22],\\n        [ 43,  29],\\n        [ 73, -55],\\n        [ 35,   3],\\n        [-33, -72],\\n        [-82, -98],\\n        [-64,  -8],\\n        [ 40,  76],\\n        [-83, -44],\\n        [ 19,  38],\\n        [ 43, -89],\\n        [ 83, -88],\\n        [ 98,  42],\\n        [-61,   9],\\n        [-57,  91],\\n        [ 61, -44],\\n        [ 23, -50],\\n        [-42, -92],\\n        [ 10,  89],\\n        [-53, -91],\\n        [ 65,  18],\\n        [-47, -57],\\n        [ 24,  93],\\n        [ 52, -90],\\n        [  9,  67],\\n        [ 94,  38],\\n        [  3,  73],\\n        [ 38, 100],\\n        [ 73, -11],\\n        [ 63,   5],\\n        [-69, -49],\\n        [ -2,  65],\\n        [ 29, -12],\\n        [-17,  67],\\n        [-47,  58],\\n        [-84, 100],\\n        [ 17,  52],\\n        [-78, -42],\\n        [-19,  83],\\n        [  9, -15],\\n        [ 59, -83],\\n        [ 31, -56],\\n        [ 25, -98],\\n        [ 72,  67],\\n        [-23,  40],\\n        [ 16,  -9],\\n        [-72,  95]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68,  80],\\n        [ 16,  43],\\n        [ 81, -30],\\n        [-42, -75],\\n        [-80, -72],\\n        [ 79, -14],\\n        [ 71,  46],\\n        [-53, -83],\\n        [ -3, -43],\\n        [-18,  18],\\n        [-70,  48],\\n        [ 63, -12],\\n        [ 35,  46],\\n        [-95, -38],\\n        [-14,  39],\\n        [ 22, -52],\\n        [-56, -16],\\n        [  5, -73],\\n        [-79, -22],\\n        [ 43,  29],\\n        [ 73, -55],\\n        [ 35,   3],\\n        [-33, -72],\\n        [-82, -98],\\n        [-64,  -8],\\n        [ 40,  76],\\n        [-83, -44],\\n        [ 19,  38],\\n        [ 43, -89],\\n        [ 83, -88],\\n        [ 98,  42],\\n        [-61,   9],\\n        [-57,  91],\\n        [ 61, -44],\\n        [ 23, -50],\\n        [-42, -92],\\n        [ 10,  89],\\n        [-53, -91],\\n        [ 65,  18],\\n        [-47, -57],\\n        [ 24,  93],\\n        [ 52, -90],\\n        [  9,  67],\\n        [ 94,  38],\\n        [  3,  73],\\n        [ 38, 100],\\n        [ 73, -11],\\n        [ 63,   5],\\n        [-69, -49],\\n        [ -2,  65],\\n        [ 29, -12],\\n        [-17,  67],\\n        [-47,  58],\\n        [-84, 100],\\n        [ 17,  52],\\n        [-78, -42],\\n        [-19,  83],\\n        [  9, -15],\\n        [ 59, -83],\\n        [ 31, -56],\\n        [ 25, -98],\\n        [ 72,  67],\\n        [-23,  40],\\n        [ 16,  -9],\\n        [-72,  95]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010017650000690992, "start": 1699968909.573136, "stop": 1699968909.5741386, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9ac8452da51f4568ae89162e171dcfd8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
