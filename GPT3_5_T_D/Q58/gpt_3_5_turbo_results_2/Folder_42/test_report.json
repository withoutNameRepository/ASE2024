{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_42_2.py::test_horizontal_matrix", "location": ["tests58_42_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013425100007680157, "start": 1699968983.63753, "stop": 1699968983.637665, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_42_2.py::test_matrix_of_one_integer", "location": ["tests58_42_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00041628500002843793, "start": 1699968983.6375058, "stop": 1699968983.637923, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_2.py::test_matrix_of_one_integer", "location": ["tests58_42_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006266619999450995, "start": 1699968983.638216, "stop": 1699968983.6388433, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_2.py::test_matrix_of_one_integer", "location": ["tests58_42_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004986220000091635, "start": 1699968983.6391613, "stop": 1699968983.6396606, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_2.py::test_matrix_of_having_193_integers", "location": ["tests58_42_2.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005647340000223267, "start": 1699968983.640091, "stop": 1699968983.6406565, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_2.py::test_matrix_of_having_193_integers", "location": ["tests58_42_2.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_2.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_42/tests58_42_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   64,  -62,  -88,   56,   -5,  -73,   75,  -53,   59,\\n           60,  -49,  -26,   48,   25,  -87,   51,   13,  -41,  -31,\\n          -94,  -28,  -37,   61,  -50,  -68,   51,  -28,   75,   22,\\n           10,   14,   83,   31,   93,   81,  -76,   62,  -92,  -68,\\n          -19,   60,    7,   81,   -8,   63,  -12,  -33,   64,   45,\\n          -89,    0,    0,  -19,   17,  -69,   64,  -64,  -82,  -85,\\n           32,   32,  -27,  -58,   64,   56,  -27,   66,  -78,   74,\\n           96,  -57,   46,  -87,  -54,   94,  -72,  -36,  -45,  -37,\\n           -4,   73,   99,   99,   69,  -37,  -35,    5,   -3,   63,\\n           95,  -75,   25,   51,  -29,  -71,  -50,   82,  -63,   -2,\\n           47,   39,   88,  -37,   83,    0,   13,  -49,   88,    1,\\n          -12,  -99,  -26,  -98,  -72,  -41,  -33,  -52,   11,  -84,\\n           -1,   48,  -11,  -33,  -73,  -50,   -6,  -84,  -40,   26,\\n            4,  -68,  -56,    9,  -22,   21, -100,  -14,   68,  -57,\\n          -46,  -24,   54,  -33,   81,   83,  -67,  -78,   27,   84,\\n           78,   74,  -15,  -38,   73,  -15,   58,   90,  -41,   21,\\n           84,   28,   29,   56,   39,   75,   91,   35,   -7,  -72,\\n          -16,   17,  -20,  -55,   -2,   -8,    2,   40,    7,  -44,\\n           90,   64,    1,   14,  -36,  -72,   -1,   71,  -10,   64,\\n          -63,  -46,   11]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   64,  -62,  -88,   56,   -5,  -73,   75,  -53,   59,\\n           60,  -49,  -26,   48,   25,  -87,   51,   13,  -41,  -31,\\n          -94,  -28,  -37,   61,  -50,  -68,   51,  -28,   75,   22,\\n           10,   14,   83,   31,   93,   81,  -76,   62,  -92,  -68,\\n          -19,   60,    7,   81,   -8,   63,  -12,  -33,   64,   45,\\n          -89,    0,    0,  -19,   17,  -69,   64,  -64,  -82,  -85,\\n           32,   32,  -27,  -58,   64,   56,  -27,   66,  -78,   74,\\n           96,  -57,   46,  -87,  -54,   94,  -72,  -36,  -45,  -37,\\n           -4,   73,   99,   99,   69,  -37,  -35,    5,   -3,   63,\\n           95,  -75,   25,   51,  -29,  -71,  -50,   82,  -63,   -2,\\n           47,   39,   88,  -37,   83,    0,   13,  -49,   88,    1,\\n          -12,  -99,  -26,  -98,  -72,  -41,  -33,  -52,   11,  -84,\\n           -1,   48,  -11,  -33,  -73,  -50,   -6,  -84,  -40,   26,\\n            4,  -68,  -56,    9,  -22,   21, -100,  -14,   68,  -57,\\n          -46,  -24,   54,  -33,   81,   83,  -67,  -78,   27,   84,\\n           78,   74,  -15,  -38,   73,  -15,   58,   90,  -41,   21,\\n           84,   28,   29,   56,   39,   75,   91,   35,   -7,  -72,\\n          -16,   17,  -20,  -55,   -2,   -8,    2,   40,    7,  -44,\\n           90,   64,    1,   14,  -36,  -72,   -1,   71,  -10,   64,\\n          -63,  -46,   11]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_42/tests58_42_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   64,  -62,  -88,   56,   -5,  -73,   75,  -53,   59,\\n           60,  -49,  -26,   48,   25,  -87,   51,   13,  -41,  -31,\\n          -94,  -28,  -37,   61,  -50,  -68,   51,  -28,   75,   22,\\n           10,   14,   83,   31,   93,   81,  -76,   62,  -92,  -68,\\n          -19,   60,    7,   81,   -8,   63,  -12,  -33,   64,   45,\\n          -89,    0,    0,  -19,   17,  -69,   64,  -64,  -82,  -85,\\n           32,   32,  -27,  -58,   64,   56,  -27,   66,  -78,   74,\\n           96,  -57,   46,  -87,  -54,   94,  -72,  -36,  -45,  -37,\\n           -4,   73,   99,   99,   69,  -37,  -35,    5,   -3,   63,\\n           95,  -75,   25,   51,  -29,  -71,  -50,   82,  -63,   -2,\\n           47,   39,   88,  -37,   83,    0,   13,  -49,   88,    1,\\n          -12,  -99,  -26,  -98,  -72,  -41,  -33,  -52,   11,  -84,\\n           -1,   48,  -11,  -33,  -73,  -50,   -6,  -84,  -40,   26,\\n            4,  -68,  -56,    9,  -22,   21, -100,  -14,   68,  -57,\\n          -46,  -24,   54,  -33,   81,   83,  -67,  -78,   27,   84,\\n           78,   74,  -15,  -38,   73,  -15,   58,   90,  -41,   21,\\n           84,   28,   29,   56,   39,   75,   91,   35,   -7,  -72,\\n          -16,   17,  -20,  -55,   -2,   -8,    2,   40,    7,  -44,\\n           90,   64,    1,   14,  -36,  -72,   -1,   71,  -10,   64,\\n          -63,  -46,   11]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_42/tests58_42_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_42/tests58_42_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   64,  -62,  -88,   56,   -5,  -73,   75,  -53,   59,\\n           60,  -49,  -26,   48,   25,  -87,   51,   13,  -41,  -31,\\n          -94,  -28,  -37,   61,  -50,  -68,   51,  -28,   75,   22,\\n           10,   14,   83,   31,   93,   81,  -76,   62,  -92,  -68,\\n          -19,   60,    7,   81,   -8,   63,  -12,  -33,   64,   45,\\n          -89,    0,    0,  -19,   17,  -69,   64,  -64,  -82,  -85,\\n           32,   32,  -27,  -58,   64,   56,  -27,   66,  -78,   74,\\n           96,  -57,   46,  -87,  -54,   94,  -72,  -36,  -45,  -37,\\n           -4,   73,   99,   99,   69,  -37,  -35,    5,   -3,   63,\\n           95,  -75,   25,   51,  -29,  -71,  -50,   82,  -63,   -2,\\n           47,   39,   88,  -37,   83,    0,   13,  -49,   88,    1,\\n          -12,  -99,  -26,  -98,  -72,  -41,  -33,  -52,   11,  -84,\\n           -1,   48,  -11,  -33,  -73,  -50,   -6,  -84,  -40,   26,\\n            4,  -68,  -56,    9,  -22,   21, -100,  -14,   68,  -57,\\n          -46,  -24,   54,  -33,   81,   83,  -67,  -78,   27,   84,\\n           78,   74,  -15,  -38,   73,  -15,   58,   90,  -41,   21,\\n           84,   28,   29,   56,   39,   75,   91,   35,   -7,  -72,\\n          -16,   17,  -20,  -55,   -2,   -8,    2,   40,    7,  -44,\\n           90,   64,    1,   14,  -36,  -72,   -1,   71,  -10,   64,\\n          -63,  -46,   11]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.021570232999920336, "start": 1699968983.6408002, "stop": 1699968983.6623712, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f82f72b8e1954ae3bc95d3f103e85065", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
