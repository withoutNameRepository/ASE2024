{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003885180000224864, "start": 1699969024.0454085, "stop": 1699969024.045798, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005363510000506722, "start": 1699969024.0460796, "stop": 1699969024.0466166, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_one_integer", "location": ["tests58_86_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004814060000626341, "start": 1699969024.0469327, "stop": 1699969024.0474148, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_horizontal_matrix", "location": ["tests58_86_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012130499999329913, "start": 1699969024.0478358, "stop": 1699969024.0479577, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_having_138_integers", "location": ["tests58_86_2.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0007916000000705026, "start": 1699969024.0478253, "stop": 1699969024.0486178, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_2.py::test_matrix_of_having_138_integers", "location": ["tests58_86_2.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_2.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -28,  -18],\\n        [   5,   30],\\n        [ -79,   25],\\n        [   3,   27],\\n        [  66,  -72],\\n        [ -13,  -57],\\n        [  56,   73],\\n        [ -26,    3],\\n        [ -33,   20],\\n        [  65,   97],\\n        [  21,   72],\\n        [  33,  -38],\\n        [ -85,    4],\\n        [ -51,  -77],\\n        [  43,  -67],\\n        [  98,   94],\\n        [ -61,  -24],\\n        [ -44,  -44],\\n        [  -8,   11],\\n        [ -31,   -7],\\n        [ -53,  -78],\\n        [  28,   81],\\n        [ -54,   37],\\n        [ -51,   50],\\n        [   6,  -46],\\n        [  47,   -2],\\n        [  50,  -66],\\n        [  42,  -72],\\n        [ -16,  -90],\\n        [  58,   43],\\n        [ -80,   29],\\n        [  -8,  -82],\\n        [  39,   58],\\n        [  37,  -79],\\n        [ -44,  -18],\\n        [  79,  -35],\\n        [ -55,   77],\\n        [ -83,  -56],\\n        [ -95,  -66],\\n        [ -76,    4],\\n        [ -65,  -48],\\n        [  73,   45],\\n        [  39,  -89],\\n        [ -29,   67],\\n        [  88,   91],\\n        [  11,  -83],\\n        [ -50,  -82],\\n        [ -28,  -82],\\n        [ -84,   48],\\n        [ -44,   83],\\n        [ -29,  -60],\\n        [  78,   70],\\n        [  40,   91],\\n        [ -38,  -20],\\n        [  95,  -96],\\n        [-100,  -90],\\n        [  89,   85],\\n        [  20,   59],\\n        [ -43,  -25],\\n        [  50,   65],\\n        [  15,  -82],\\n        [ -62,  -17],\\n        [  93,  -82],\\n        [ -39,   86],\\n        [  60,   -9],\\n        [  81,  -54],\\n        [ -31,   34],\\n        [  34,  -71],\\n        [  90,   18]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -28,  -18],\\n        [   5,   30],\\n        [ -79,   25],\\n        [   3,   27],\\n        [  66,  -72],\\n        [ -13,  -57],\\n        [  56,   73],\\n        [ -26,    3],\\n        [ -33,   20],\\n        [  65,   97],\\n        [  21,   72],\\n        [  33,  -38],\\n        [ -85,    4],\\n        [ -51,  -77],\\n        [  43,  -67],\\n        [  98,   94],\\n        [ -61,  -24],\\n        [ -44,  -44],\\n        [  -8,   11],\\n        [ -31,   -7],\\n        [ -53,  -78],\\n        [  28,   81],\\n        [ -54,   37],\\n        [ -51,   50],\\n        [   6,  -46],\\n        [  47,   -2],\\n        [  50,  -66],\\n        [  42,  -72],\\n        [ -16,  -90],\\n        [  58,   43],\\n        [ -80,   29],\\n        [  -8,  -82],\\n        [  39,   58],\\n        [  37,  -79],\\n        [ -44,  -18],\\n        [  79,  -35],\\n        [ -55,   77],\\n        [ -83,  -56],\\n        [ -95,  -66],\\n        [ -76,    4],\\n        [ -65,  -48],\\n        [  73,   45],\\n        [  39,  -89],\\n        [ -29,   67],\\n        [  88,   91],\\n        [  11,  -83],\\n        [ -50,  -82],\\n        [ -28,  -82],\\n        [ -84,   48],\\n        [ -44,   83],\\n        [ -29,  -60],\\n        [  78,   70],\\n        [  40,   91],\\n        [ -38,  -20],\\n        [  95,  -96],\\n        [-100,  -90],\\n        [  89,   85],\\n        [  20,   59],\\n        [ -43,  -25],\\n        [  50,   65],\\n        [  15,  -82],\\n        [ -62,  -17],\\n        [  93,  -82],\\n        [ -39,   86],\\n        [  60,   -9],\\n        [  81,  -54],\\n        [ -31,   34],\\n        [  34,  -71],\\n        [  90,   18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -28,  -18],\\n        [   5,   30],\\n        [ -79,   25],\\n        [   3,   27],\\n        [  66,  -72],\\n        [ -13,  -57],\\n        [  56,   73],\\n        [ -26,    3],\\n        [ -33,   20],\\n        [  65,   97],\\n        [  21,   72],\\n        [  33,  -38],\\n        [ -85,    4],\\n        [ -51,  -77],\\n        [  43,  -67],\\n        [  98,   94],\\n        [ -61,  -24],\\n        [ -44,  -44],\\n        [  -8,   11],\\n        [ -31,   -7],\\n        [ -53,  -78],\\n        [  28,   81],\\n        [ -54,   37],\\n        [ -51,   50],\\n        [   6,  -46],\\n        [  47,   -2],\\n        [  50,  -66],\\n        [  42,  -72],\\n        [ -16,  -90],\\n        [  58,   43],\\n        [ -80,   29],\\n        [  -8,  -82],\\n        [  39,   58],\\n        [  37,  -79],\\n        [ -44,  -18],\\n        [  79,  -35],\\n        [ -55,   77],\\n        [ -83,  -56],\\n        [ -95,  -66],\\n        [ -76,    4],\\n        [ -65,  -48],\\n        [  73,   45],\\n        [  39,  -89],\\n        [ -29,   67],\\n        [  88,   91],\\n        [  11,  -83],\\n        [ -50,  -82],\\n        [ -28,  -82],\\n        [ -84,   48],\\n        [ -44,   83],\\n        [ -29,  -60],\\n        [  78,   70],\\n        [  40,   91],\\n        [ -38,  -20],\\n        [  95,  -96],\\n        [-100,  -90],\\n        [  89,   85],\\n        [  20,   59],\\n        [ -43,  -25],\\n        [  50,   65],\\n        [  15,  -82],\\n        [ -62,  -17],\\n        [  93,  -82],\\n        [ -39,   86],\\n        [  60,   -9],\\n        [  81,  -54],\\n        [ -31,   34],\\n        [  34,  -71],\\n        [  90,   18]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_86/tests58_86_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -28,  -18],\\n        [   5,   30],\\n        [ -79,   25],\\n        [   3,   27],\\n        [  66,  -72],\\n        [ -13,  -57],\\n        [  56,   73],\\n        [ -26,    3],\\n        [ -33,   20],\\n        [  65,   97],\\n        [  21,   72],\\n        [  33,  -38],\\n        [ -85,    4],\\n        [ -51,  -77],\\n        [  43,  -67],\\n        [  98,   94],\\n        [ -61,  -24],\\n        [ -44,  -44],\\n        [  -8,   11],\\n        [ -31,   -7],\\n        [ -53,  -78],\\n        [  28,   81],\\n        [ -54,   37],\\n        [ -51,   50],\\n        [   6,  -46],\\n        [  47,   -2],\\n        [  50,  -66],\\n        [  42,  -72],\\n        [ -16,  -90],\\n        [  58,   43],\\n        [ -80,   29],\\n        [  -8,  -82],\\n        [  39,   58],\\n        [  37,  -79],\\n        [ -44,  -18],\\n        [  79,  -35],\\n        [ -55,   77],\\n        [ -83,  -56],\\n        [ -95,  -66],\\n        [ -76,    4],\\n        [ -65,  -48],\\n        [  73,   45],\\n        [  39,  -89],\\n        [ -29,   67],\\n        [  88,   91],\\n        [  11,  -83],\\n        [ -50,  -82],\\n        [ -28,  -82],\\n        [ -84,   48],\\n        [ -44,   83],\\n        [ -29,  -60],\\n        [  78,   70],\\n        [  40,   91],\\n        [ -38,  -20],\\n        [  95,  -96],\\n        [-100,  -90],\\n        [  89,   85],\\n        [  20,   59],\\n        [ -43,  -25],\\n        [  50,   65],\\n        [  15,  -82],\\n        [ -62,  -17],\\n        [  93,  -82],\\n        [ -39,   86],\\n        [  60,   -9],\\n        [  81,  -54],\\n        [ -31,   34],\\n        [  34,  -71],\\n        [  90,   18]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.009717761000047176, "start": 1699969024.0487604, "stop": 1699969024.0584786, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f289a89173f641748be0c7775c68c8a9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
