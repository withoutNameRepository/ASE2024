{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002447250000159329, "start": 1699968952.9194503, "stop": 1699968952.9196959, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033505600003991276, "start": 1699968952.919971, "stop": 1699968952.9203067, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002128280000306404, "start": 1699968952.9206038, "stop": 1699968952.9208171, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027751000004627713, "start": 1699968952.921237, "stop": 1699968952.9215152, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_horizontal_matrix", "location": ["tests58_6_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011503600001105951, "start": 1699968952.9254014, "stop": 1699968952.925517, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 95,  17],\\n        [-97,  49],\\n        [-19, -41],\\n        [-24, -93],\\n        [-20,   9],\\n        [-78, -35],\\n        [ 90, -73],\\n        [ 48, -22],\\n        [ 50,   4],\\n        [ 86, -55],\\n        [-83, -51],\\n        [ 85,  77],\\n        [ 88, -79],\\n        [ 97, -29],\\n        [-83, -61],\\n        [ 42, -77],\\n        [-98,  25],\\n        [ 90, -60],\\n        [-41, -63],\\n        [ 17,  17],\\n        [-97, -63],\\n        [ 77, -49],\\n        [-77,  27],\\n        [ 34,  87],\\n        [-76, -25],\\n        [ -2, -57],\\n        [-20,  -9],\\n        [ -2,  -9],\\n        [-82, -99],\\n        [-54, -89],\\n        [-25, -29],\\n        [ 94, -88],\\n        [-65, -36],\\n        [ 33,  32],\\n        [ 88, -79],\\n        [-79,  26],\\n        [ -8, -27],\\n        [ 25, -39],\\n        [ 35, -29],\\n        [-85,  31],\\n        [-78, -29],\\n        [-75, -74],\\n        [-29, -94],\\n        [-46, -63],\\n        [ 23,  -4],\\n        [ 98,  -5],\\n        [-36,  31],\\n        [-33, -77],\\n        [-97,  73],\\n        [-61,  56],\\n        [-21, -12],\\n        [-29,  41],\\n        [ 12,  16],\\n        [-71, -78],\\n        [-20, -30],\\n        [ 23,  98],\\n        [-69,  96],\\n        [-25, -46],\\n        [-80,  22],\\n        [-39,  -7],\\n        [-85,  86]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 95,  17],\\n        [-97,  49],\\n        [-19, -41],\\n        [-24, -93],\\n        [-20,   9],\\n        [-78, -35],\\n        [ 90, -73],\\n        [ 48, -22],\\n        [ 50,   4],\\n        [ 86, -55],\\n        [-83, -51],\\n        [ 85,  77],\\n        [ 88, -79],\\n        [ 97, -29],\\n        [-83, -61],\\n        [ 42, -77],\\n        [-98,  25],\\n        [ 90, -60],\\n        [-41, -63],\\n        [ 17,  17],\\n        [-97, -63],\\n        [ 77, -49],\\n        [-77,  27],\\n        [ 34,  87],\\n        [-76, -25],\\n        [ -2, -57],\\n        [-20,  -9],\\n        [ -2,  -9],\\n        [-82, -99],\\n        [-54, -89],\\n        [-25, -29],\\n        [ 94, -88],\\n        [-65, -36],\\n        [ 33,  32],\\n        [ 88, -79],\\n        [-79,  26],\\n        [ -8, -27],\\n        [ 25, -39],\\n        [ 35, -29],\\n        [-85,  31],\\n        [-78, -29],\\n        [-75, -74],\\n        [-29, -94],\\n        [-46, -63],\\n        [ 23,  -4],\\n        [ 98,  -5],\\n        [-36,  31],\\n        [-33, -77],\\n        [-97,  73],\\n        [-61,  56],\\n        [-21, -12],\\n        [-29,  41],\\n        [ 12,  16],\\n        [-71, -78],\\n        [-20, -30],\\n        [ 23,  98],\\n        [-69,  96],\\n        [-25, -46],\\n        [-80,  22],\\n        [-39,  -7],\\n        [-85,  86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 95,  17],\\n        [-97,  49],\\n        [-19, -41],\\n        [-24, -93],\\n        [-20,   9],\\n        [-78, -35],\\n        [ 90, -73],\\n        [ 48, -22],\\n        [ 50,   4],\\n        [ 86, -55],\\n        [-83, -51],\\n        [ 85,  77],\\n        [ 88, -79],\\n        [ 97, -29],\\n        [-83, -61],\\n        [ 42, -77],\\n        [-98,  25],\\n        [ 90, -60],\\n        [-41, -63],\\n        [ 17,  17],\\n        [-97, -63],\\n        [ 77, -49],\\n        [-77,  27],\\n        [ 34,  87],\\n        [-76, -25],\\n        [ -2, -57],\\n        [-20,  -9],\\n        [ -2,  -9],\\n        [-82, -99],\\n        [-54, -89],\\n        [-25, -29],\\n        [ 94, -88],\\n        [-65, -36],\\n        [ 33,  32],\\n        [ 88, -79],\\n        [-79,  26],\\n        [ -8, -27],\\n        [ 25, -39],\\n        [ 35, -29],\\n        [-85,  31],\\n        [-78, -29],\\n        [-75, -74],\\n        [-29, -94],\\n        [-46, -63],\\n        [ 23,  -4],\\n        [ 98,  -5],\\n        [-36,  31],\\n        [-33, -77],\\n        [-97,  73],\\n        [-61,  56],\\n        [-21, -12],\\n        [-29,  41],\\n        [ 12,  16],\\n        [-71, -78],\\n        [-20, -30],\\n        [ 23,  98],\\n        [-69,  96],\\n        [-25, -46],\\n        [-80,  22],\\n        [-39,  -7],\\n        [-85,  86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 95,  17],\\n        [-97,  49],\\n        [-19, -41],\\n        [-24, -93],\\n        [-20,   9],\\n        [-78, -35],\\n        [ 90, -73],\\n        [ 48, -22],\\n        [ 50,   4],\\n        [ 86, -55],\\n        [-83, -51],\\n        [ 85,  77],\\n        [ 88, -79],\\n        [ 97, -29],\\n        [-83, -61],\\n        [ 42, -77],\\n        [-98,  25],\\n        [ 90, -60],\\n        [-41, -63],\\n        [ 17,  17],\\n        [-97, -63],\\n        [ 77, -49],\\n        [-77,  27],\\n        [ 34,  87],\\n        [-76, -25],\\n        [ -2, -57],\\n        [-20,  -9],\\n        [ -2,  -9],\\n        [-82, -99],\\n        [-54, -89],\\n        [-25, -29],\\n        [ 94, -88],\\n        [-65, -36],\\n        [ 33,  32],\\n        [ 88, -79],\\n        [-79,  26],\\n        [ -8, -27],\\n        [ 25, -39],\\n        [ 35, -29],\\n        [-85,  31],\\n        [-78, -29],\\n        [-75, -74],\\n        [-29, -94],\\n        [-46, -63],\\n        [ 23,  -4],\\n        [ 98,  -5],\\n        [-36,  31],\\n        [-33, -77],\\n        [-97,  73],\\n        [-61,  56],\\n        [-21, -12],\\n        [-29,  41],\\n        [ 12,  16],\\n        [-71, -78],\\n        [-20, -30],\\n        [ 23,  98],\\n        [-69,  96],\\n        [-25, -46],\\n        [-80,  22],\\n        [-39,  -7],\\n        [-85,  86]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011393319999797313, "start": 1699968952.921658, "stop": 1699968952.9227982, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9732db5e00be4f579b305ae6057be2f3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
