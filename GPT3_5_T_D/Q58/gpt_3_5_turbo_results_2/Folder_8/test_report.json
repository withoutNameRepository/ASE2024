{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_8_2.py::test_horizontal_matrix", "location": ["tests58_8_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002649819999760439, "start": 1699968954.814243, "stop": 1699968954.814509, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_one_integer", "location": ["tests58_8_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002565510000067661, "start": 1699968954.8141057, "stop": 1699968954.8143635, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_one_integer", "location": ["tests58_8_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021420299992769287, "start": 1699968954.814663, "stop": 1699968954.8148777, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_one_integer", "location": ["tests58_8_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003023049999910654, "start": 1699968954.8151796, "stop": 1699968954.8154824, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_having_29_integers", "location": ["tests58_8_2.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.445800003504701e-05, "start": 1699968954.815896, "stop": 1699968954.815991, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_having_29_integers", "location": ["tests58_8_2.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_8/tests58_8_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-14, -57,  11,  22, -95,  94,  98,   1,  72,  57,  65,  71, -59,\\n         -93, -29,  72,  58,  41,  45, -32,  59,  42, -46,  76,  69,  73,\\n         -90, -54, -35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-14, -57,  11,  22, -95,  94,  98,   1,  72,  57,  65,  71, -59,\\n         -93, -29,  72,  58,  41,  45, -32,  59,  42, -46,  76,  69,  73,\\n         -90, -54, -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_8/tests58_8_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-14, -57,  11,  22, -95,  94,  98,   1,  72,  57,  65,  71, -59,\\n         -93, -29,  72,  58,  41,  45, -32,  59,  42, -46,  76,  69,  73,\\n         -90, -54, -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_2/Folder_8/tests58_8_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_2/Folder_8/tests58_8_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-14, -57,  11,  22, -95,  94,  98,   1,  72,  57,  65,  71, -59,\\n         -93, -29,  72,  58,  41,  45, -32,  59,  42, -46,  76,  69,  73,\\n         -90, -54, -35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004678980000107913, "start": 1699968954.8161147, "stop": 1699968954.816583, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4bd76b408ef74863b1690fe2f6423258", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
