{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_99_5.py::test_horizontal_matrix", "location": ["tests58_99_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012658500008910778, "start": 1699969349.4030871, "stop": 1699969349.4032145, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_99_5.py::test_matrix_of_one_integer", "location": ["tests58_99_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0008736070001305052, "start": 1699969349.4031608, "stop": 1699969349.4040356, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_5.py::test_matrix_of_one_integer", "location": ["tests58_99_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000449710000111736, "start": 1699969349.4043171, "stop": 1699969349.4047673, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_5.py::test_matrix_of_one_integer", "location": ["tests58_99_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004815459999463201, "start": 1699969349.405062, "stop": 1699969349.405544, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_5.py::test_matrix_of_having_146_integers", "location": ["tests58_99_5.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0007963030000155413, "start": 1699969349.4059553, "stop": 1699969349.4067523, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_5.py::test_matrix_of_having_146_integers", "location": ["tests58_99_5.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_5.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_5/Folder_99/tests58_99_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -59],\\n        [  51,  -53],\\n        [  -8,  -41],\\n        [  29,  -10],\\n        [ -57,   35],\\n        [  89,  -85],\\n        [  42,   41],\\n        [  52,  -91],\\n        [ -56,   92],\\n        [  -3,  -85],\\n        [ -69,  -76],\\n        [  68,   33],\\n        [ -27,  -32],\\n        [ -88,   92],\\n        [ -59,   42],\\n        [  -8,   13],\\n        [ -96,  -49],\\n        [ -25,   85],\\n        [ -12,  -35],\\n        [  -9,  -35],\\n        [ -46,   54],\\n        [ -34,   81],\\n        [ -81,  -76],\\n        [ -73,    4],\\n        [ -20,  -13],\\n        [ -23,  -27],\\n        [   7,   24],\\n        [  38,   86],\\n        [  53,   20],\\n        [  20,   -6],\\n        [  84,    0],\\n        [  53,   68],\\n        [  39,   59],\\n        [  98,    3],\\n        [  93,   51],\\n        [ -15,   13],\\n        [  26,   68],\\n        [ -34,  -35],\\n        [  -3,   13],\\n        [  -1,   38],\\n        [ -96,    5],\\n        [-100,   71],\\n        [  15,   98],\\n        [ -79,   41],\\n        [  25,   57],\\n        [  39,  -44],\\n        [ -68,  -43],\\n        [  59,   35],\\n        [  67,  -37],\\n        [ -19,  -63],\\n        [ -99,  -88],\\n        [  52,   80],\\n        [  81,   42],\\n        [   3,   69],\\n        [ -18,   47],\\n        [  59,   91],\\n        [ 100,   -3],\\n        [ -53,  -58],\\n        [   0,   85],\\n        [  12,  -46],\\n        [  21,   30],\\n        [   1,   29],\\n        [  80,   79],\\n        [ -55,  -43],\\n        [ -91,  -95],\\n        [ -16,  -27],\\n        [  58,  100],\\n        [  41,   58],\\n        [ -20,  -83],\\n        [ -12,  -51],\\n        [ -61,  -83],\\n        [  34,   93],\\n        [ -54,    5]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -59],\\n        [  51,  -53],\\n        [  -8,  -41],\\n        [  29,  -10],\\n        [ -57,   35],\\n        [  89,  -85],\\n        [  42,   41],\\n        [  52,  -91],\\n        [ -56,   92],\\n        [  -3,  -85],\\n        [ -69,  -76],\\n        [  68,   33],\\n        [ -27,  -32],\\n        [ -88,   92],\\n        [ -59,   42],\\n        [  -8,   13],\\n        [ -96,  -49],\\n        [ -25,   85],\\n        [ -12,  -35],\\n        [  -9,  -35],\\n        [ -46,   54],\\n        [ -34,   81],\\n        [ -81,  -76],\\n        [ -73,    4],\\n        [ -20,  -13],\\n        [ -23,  -27],\\n        [   7,   24],\\n        [  38,   86],\\n        [  53,   20],\\n        [  20,   -6],\\n        [  84,    0],\\n        [  53,   68],\\n        [  39,   59],\\n        [  98,    3],\\n        [  93,   51],\\n        [ -15,   13],\\n        [  26,   68],\\n        [ -34,  -35],\\n        [  -3,   13],\\n        [  -1,   38],\\n        [ -96,    5],\\n        [-100,   71],\\n        [  15,   98],\\n        [ -79,   41],\\n        [  25,   57],\\n        [  39,  -44],\\n        [ -68,  -43],\\n        [  59,   35],\\n        [  67,  -37],\\n        [ -19,  -63],\\n        [ -99,  -88],\\n        [  52,   80],\\n        [  81,   42],\\n        [   3,   69],\\n        [ -18,   47],\\n        [  59,   91],\\n        [ 100,   -3],\\n        [ -53,  -58],\\n        [   0,   85],\\n        [  12,  -46],\\n        [  21,   30],\\n        [   1,   29],\\n        [  80,   79],\\n        [ -55,  -43],\\n        [ -91,  -95],\\n        [ -16,  -27],\\n        [  58,  100],\\n        [  41,   58],\\n        [ -20,  -83],\\n        [ -12,  -51],\\n        [ -61,  -83],\\n        [  34,   93],\\n        [ -54,    5]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_5/Folder_99/tests58_99_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -59],\\n        [  51,  -53],\\n        [  -8,  -41],\\n        [  29,  -10],\\n        [ -57,   35],\\n        [  89,  -85],\\n        [  42,   41],\\n        [  52,  -91],\\n        [ -56,   92],\\n        [  -3,  -85],\\n        [ -69,  -76],\\n        [  68,   33],\\n        [ -27,  -32],\\n        [ -88,   92],\\n        [ -59,   42],\\n        [  -8,   13],\\n        [ -96,  -49],\\n        [ -25,   85],\\n        [ -12,  -35],\\n        [  -9,  -35],\\n        [ -46,   54],\\n        [ -34,   81],\\n        [ -81,  -76],\\n        [ -73,    4],\\n        [ -20,  -13],\\n        [ -23,  -27],\\n        [   7,   24],\\n        [  38,   86],\\n        [  53,   20],\\n        [  20,   -6],\\n        [  84,    0],\\n        [  53,   68],\\n        [  39,   59],\\n        [  98,    3],\\n        [  93,   51],\\n        [ -15,   13],\\n        [  26,   68],\\n        [ -34,  -35],\\n        [  -3,   13],\\n        [  -1,   38],\\n        [ -96,    5],\\n        [-100,   71],\\n        [  15,   98],\\n        [ -79,   41],\\n        [  25,   57],\\n        [  39,  -44],\\n        [ -68,  -43],\\n        [  59,   35],\\n        [  67,  -37],\\n        [ -19,  -63],\\n        [ -99,  -88],\\n        [  52,   80],\\n        [  81,   42],\\n        [   3,   69],\\n        [ -18,   47],\\n        [  59,   91],\\n        [ 100,   -3],\\n        [ -53,  -58],\\n        [   0,   85],\\n        [  12,  -46],\\n        [  21,   30],\\n        [   1,   29],\\n        [  80,   79],\\n        [ -55,  -43],\\n        [ -91,  -95],\\n        [ -16,  -27],\\n        [  58,  100],\\n        [  41,   58],\\n        [ -20,  -83],\\n        [ -12,  -51],\\n        [ -61,  -83],\\n        [  34,   93],\\n        [ -54,    5]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_3_5_turbo_results_5/Folder_99/tests58_99_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q58/gpt_3_5_turbo_results_5/Folder_99/tests58_99_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -59],\\n        [  51,  -53],\\n        [  -8,  -41],\\n        [  29,  -10],\\n        [ -57,   35],\\n        [  89,  -85],\\n        [  42,   41],\\n        [  52,  -91],\\n        [ -56,   92],\\n        [  -3,  -85],\\n        [ -69,  -76],\\n        [  68,   33],\\n        [ -27,  -32],\\n        [ -88,   92],\\n        [ -59,   42],\\n        [  -8,   13],\\n        [ -96,  -49],\\n        [ -25,   85],\\n        [ -12,  -35],\\n        [  -9,  -35],\\n        [ -46,   54],\\n        [ -34,   81],\\n        [ -81,  -76],\\n        [ -73,    4],\\n        [ -20,  -13],\\n        [ -23,  -27],\\n        [   7,   24],\\n        [  38,   86],\\n        [  53,   20],\\n        [  20,   -6],\\n        [  84,    0],\\n        [  53,   68],\\n        [  39,   59],\\n        [  98,    3],\\n        [  93,   51],\\n        [ -15,   13],\\n        [  26,   68],\\n        [ -34,  -35],\\n        [  -3,   13],\\n        [  -1,   38],\\n        [ -96,    5],\\n        [-100,   71],\\n        [  15,   98],\\n        [ -79,   41],\\n        [  25,   57],\\n        [  39,  -44],\\n        [ -68,  -43],\\n        [  59,   35],\\n        [  67,  -37],\\n        [ -19,  -63],\\n        [ -99,  -88],\\n        [  52,   80],\\n        [  81,   42],\\n        [   3,   69],\\n        [ -18,   47],\\n        [  59,   91],\\n        [ 100,   -3],\\n        [ -53,  -58],\\n        [   0,   85],\\n        [  12,  -46],\\n        [  21,   30],\\n        [   1,   29],\\n        [  80,   79],\\n        [ -55,  -43],\\n        [ -91,  -95],\\n        [ -16,  -27],\\n        [  58,  100],\\n        [  41,   58],\\n        [ -20,  -83],\\n        [ -12,  -51],\\n        [ -61,  -83],\\n        [  34,   93],\\n        [ -54,    5]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013222929999301414, "start": 1699969349.4069052, "stop": 1699969349.4082282, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "030010c2928a461fbe90eb3056dc0cc5", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
