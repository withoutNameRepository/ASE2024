{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -28,  56,  20,  73,  18,  98, -55, -42, -56, -29, -21, -32,\\n          33, -28,  97,  31, -16,  15,  76, -50,  22,  22,  95,   3, -92,\\n          58,  54,  -8,  17,   7, -71, -27, -87, -39, -59,  92,  35,   3,\\n         -16,  71, -27, -13, -96, -86,  94, -56, -20, -93,   8, -12, -55,\\n           0, -80, -84, -40, -73,  54, -70, -22, -11,   0,  -1, -89,  10,\\n          99,  16, -49, -46,  72, -95,  72,  36, -33, -72,   8, -11,  84,\\n         -71, -90,  37,  43,  62,  -2,  93, -61, -87,  29, -28, -10, -53,\\n          59,  -1, -19,  59,  25, -34,  19, -61, -86, -43,  30,  87,  52,\\n         -65,  76,  74, -96,  38, -83,  -7,  66,  73, -33,  -2, -67,  86,\\n          13,  22,  47,  27,  42, -90,  55,  68, -21, -12, -15,  91,  63,\\n          99, -57, -84,  52, -55, -11,  31, -94,  55, -50, -66,  36, -30,\\n          10,  27, -88,  27,  54, -37,  98, -70, -80, -72,  41, -30,  93,\\n          18, -69,   5]]))",
    0.05513
  ]
}