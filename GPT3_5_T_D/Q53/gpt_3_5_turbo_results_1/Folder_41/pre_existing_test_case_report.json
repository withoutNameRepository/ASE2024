{
  "parameter(s)": [
    28
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00049
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    0.00046
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00048
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.0007
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00048
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00047
  ],
  "test_string_of_similar_chars_of_length_28": [
    "passed",
    "",
    0.00069
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00067
  ],
  "test_string_of_similar_chars_of_length_greater_than_28": [
    "passed",
    "",
    0.00045
  ],
  "test_numeric_string": [
    "passed",
    "",
    0.00013
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00043
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00048
  ],
  "test_string_of_many_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.00129
  ]
}