{
  "parameter(s)": [
    31
  ],
  "test_string_of_similar_chars_of_length_greater_than_31": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_similar_chars_of_length_31": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.00021
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00021
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00023
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00021
  ],
  "test_numeric_string": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00023
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_many_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.00156
  ]
}