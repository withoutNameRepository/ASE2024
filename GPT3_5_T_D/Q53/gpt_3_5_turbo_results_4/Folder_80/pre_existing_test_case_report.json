{
  "parameter(s)": [
    30
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00029
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.0004
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00041
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00028
  ],
  "test_string_of_similar_chars_of_length_30": [
    "passed",
    "",
    0.00016
  ],
  "test_numeric_string": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.00062
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00063
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    0.00061
  ],
  "test_string_of_similar_chars_of_length_greater_than_30": [
    "passed",
    "",
    0.00043
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00101
  ]
}