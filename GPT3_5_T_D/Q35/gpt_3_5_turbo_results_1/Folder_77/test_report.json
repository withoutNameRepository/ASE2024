{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests35_77_1.py::test_absence_of_duplicates", "location": ["tests35_77_1.py", 31, "test_absence_of_duplicates"], "keywords": {"test_absence_of_duplicates": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018373801140114665, "start": 1699921741.5322316, "stop": 1699921741.5324168, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw4>"}
{"nodeid": "tests35_77_1.py::test_no_duplicate_string", "location": ["tests35_77_1.py", 13, "test_no_duplicate_string"], "keywords": {"test_no_duplicate_string": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024864100851118565, "start": 1699921741.5324702, "stop": 1699921741.5327203, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests35_77_1.py::test_presence_of_non_duplicates", "location": ["tests35_77_1.py", 40, "test_presence_of_non_duplicates"], "keywords": {"test_presence_of_non_duplicates": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021161799668334424, "start": 1699921741.5322578, "stop": 1699921741.5324705, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw5>"}
{"nodeid": "tests35_77_1.py::test_repeat_char", "location": ["tests35_77_1.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002861429820768535, "start": 1699921741.5321753, "stop": 1699921741.5324626, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw0>"}
{"nodeid": "tests35_77_1.py::test_presence_of_duplicates_not_in_range", "location": ["tests35_77_1.py", 48, "test_presence_of_duplicates_not_in_range"], "keywords": {"test_presence_of_duplicates_not_in_range": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021577900042757392, "start": 1699921741.532271, "stop": 1699921741.5324876, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw6>"}
{"nodeid": "tests35_77_1.py::test_compare_lengths_with_large_string", "location": ["tests35_77_1.py", 26, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003556620213203132, "start": 1699921741.5323508, "stop": 1699921741.532708, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw3>"}
{"nodeid": "tests35_77_1.py::test_merged_strings", "location": ["tests35_77_1.py", 18, "test_merged_strings"], "keywords": {"test_merged_strings": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000220007001189515, "start": 1699921741.5322382, "stop": 1699921741.5324595, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw2>"}
{"nodeid": "tests35_77_1.py::test_no_duplicate_string", "location": ["tests35_77_1.py", 13, "test_no_duplicate_string"], "keywords": {"test_no_duplicate_string": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005303040088620037, "start": 1699921741.533185, "stop": 1699921741.533718, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests35_77_1.py::test_no_duplicate_string", "location": ["tests35_77_1.py", 13, "test_no_duplicate_string"], "keywords": {"test_no_duplicate_string": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00031647601281292737, "start": 1699921741.5348995, "stop": 1699921741.5352182, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests35_77_1.py::test_presence_of_duplicates_not_in_range", "location": ["tests35_77_1.py", 48, "test_presence_of_duplicates_not_in_range"], "keywords": {"test_presence_of_duplicates_not_in_range": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0064974569831974804, "start": 1699921741.5327504, "stop": 1699921741.5392482, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw6>"}
{"nodeid": "tests35_77_1.py::test_presence_of_non_duplicates", "location": ["tests35_77_1.py", 40, "test_presence_of_non_duplicates"], "keywords": {"test_presence_of_non_duplicates": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006598022999241948, "start": 1699921741.53273, "stop": 1699921741.539329, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw5>"}
{"nodeid": "tests35_77_1.py::test_presence_of_duplicates_not_in_range", "location": ["tests35_77_1.py", 48, "test_presence_of_duplicates_not_in_range"], "keywords": {"test_presence_of_duplicates_not_in_range": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.59859976824373e-05, "start": 1699921741.5395486, "stop": 1699921741.539625, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw6", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw6>"}
{"nodeid": "tests35_77_1.py::test_presence_of_non_duplicates", "location": ["tests35_77_1.py", 40, "test_presence_of_non_duplicates"], "keywords": {"test_presence_of_non_duplicates": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.808598456904292e-05, "start": 1699921741.5396595, "stop": 1699921741.5397382, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw5>"}
{"nodeid": "tests35_77_1.py::test_repeat_char", "location": ["tests35_77_1.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests35_77_1.py": 1, "Folder_77": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT3_5/Q35/gpt_3_5_turbo_results_1/Folder_77/tests35_77_1.py", "lineno": 11, "message": "AssertionError: assert not 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n +  where 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' = remove_repeat_chars('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'a' * (988 + 2)", "        if 988 - 355 - 1 == 1:", "            assert remove_repeat_chars(s) == s", "        else:", ">           assert not remove_repeat_chars(s)", "E           AssertionError: assert not 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'", "E            +  where 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' = remove_repeat_chars('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q35/gpt_3_5_turbo_results_1/Folder_77/tests35_77_1.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'a' * (988 + 2)", "        if 988 - 355 - 1 == 1:", "            assert remove_repeat_chars(s) == s", "        else:", ">           assert not remove_repeat_chars(s)", "E           AssertionError: assert not 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'", "E            +  where 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' = remove_repeat_chars('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q35/gpt_3_5_turbo_results_1/Folder_77/tests35_77_1.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT3_5/Q35/gpt_3_5_turbo_results_1/Folder_77/tests35_77_1.py", "lineno": 11, "message": "AssertionError: assert not 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n +  where 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' = remove_repeat_chars('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020319299947004765, "start": 1699921741.5328033, "stop": 1699921741.5348372, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "32941cfa7c1046d294113babb614d4e3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
