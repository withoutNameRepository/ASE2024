{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00038
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-50, -25, -67,  80,   8,  27,  22,   0,  26, -54, -34,   2, -71,\\n         -37, -42, -67,  99, -87,  75,   0, -43,  16,  20,  26, -86, -64,\\n         -93, -53, -46,  28,  94, -26, -12,  26,  -9, -87, -69, -36,  -6,\\n         -59, -74, 100,  81, -60,  -5,  30, -19, -42,  22,  -9,  58, -18,\\n          12,  32,  53, -62,  31,  71,  14,  -5,  54, -10,  62, -35,  10,\\n          96, -55, -10, -79,  62, -27,  35, -51, -13, -31, -80, -45, -15,\\n          63,  80,  31, -31, -13,  12,  22, -77,  84,  91,  98, -33,  92,\\n         -94, -35, -59,  58, -93, -44, -97,  64, -35,  44, -57, -89,  53,\\n         -29, -36, -19,  76, -42,  13,   6, -83, -30,  79, -46,  52,  68,\\n         -98,  -4,  90,  65, -49,  39,  19, -98, -36, -45,   2,  93,  45,\\n          38, -32,  96, -91,  89,  62,  53,  13,  29,  61, -34,   8,  -1,\\n          46, -10,  81, -90,  15,  49, -37,   5,  62, -77, -49,  49, -16,\\n         -58, -97,  74]]))",
    0.00151
  ]
}