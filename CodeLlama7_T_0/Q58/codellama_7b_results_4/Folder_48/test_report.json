{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_4.py::test_matrix_of_one_integer", "location": ["tests58_48_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022993297898210585, "start": 1700303597.112737, "stop": 1700303597.1129677, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_4.py::test_matrix_of_one_integer", "location": ["tests58_48_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003334290231578052, "start": 1700303597.113227, "stop": 1700303597.1135612, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_4.py::test_horizontal_matrix", "location": ["tests58_48_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011349099804647267, "start": 1700303597.11504, "stop": 1700303597.1151543, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_4.py::test_matrix_of_one_integer", "location": ["tests58_48_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019392900867387652, "start": 1700303597.1138456, "stop": 1700303597.11404, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_4.py::test_matrix_of_having_130_integers", "location": ["tests58_48_4.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.766300743445754e-05, "start": 1700303597.1144328, "stop": 1700303597.1145208, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_4.py::test_matrix_of_having_130_integers", "location": ["tests58_48_4.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_4.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_4/Folder_48/tests58_48_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94, -99],\\n        [ 32, -25],\\n        [ 47,   5],\\n        [  0, -74],\\n        [  6, -23],\\n        [-89,  28],\\n        [ 83, -21],\\n        [ 10,  99],\\n        [  1, -70],\\n        [-79,   5],\\n        [ 86,  40],\\n        [ 76,  69],\\n        [ 34, -79],\\n        [  9, -17],\\n        [ 64, -43],\\n        [ 80,  66],\\n        [-48,  17],\\n        [-16,  60],\\n        [ -4, -59],\\n        [ 89,  92],\\n        [-34, -80],\\n        [-20, -88],\\n        [ 27, -36],\\n        [ 33, -38],\\n        [ 29, -53],\\n        [-17,  -4],\\n        [ 63, -60],\\n        [ 31,  68],\\n        [-78, -30],\\n        [ -1,  64],\\n        [-83, -49],\\n        [-59, -54],\\n        [ 12,  84],\\n        [-44, -60],\\n        [-18,  23],\\n        [-45, -89],\\n        [-57,  94],\\n        [ 90, -55],\\n        [ 60,  10],\\n        [-29,   0],\\n        [-87,  91],\\n        [ 35,  97],\\n        [ 15, -50],\\n        [-75, -23],\\n        [ 48,  68],\\n        [ 29,  -7],\\n        [-99,  23],\\n        [ 72, -45],\\n        [ 68,  80],\\n        [ 31, -22],\\n        [  6, -51],\\n        [-13, -54],\\n        [ 70, -38],\\n        [  2,  36],\\n        [-95,  84],\\n        [ 37, -26],\\n        [ 97,  44],\\n        [-40, -47],\\n        [ 23, -58],\\n        [ 27,  70],\\n        [-67,  33],\\n        [-62, -86],\\n        [ 78, -52],\\n        [-34, -97],\\n        [ 48, -78]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-94, -99],\\n        [ 32, -25],\\n        [ 47,   5],\\n        [  0, -74],\\n        [  6, -23],\\n        [-89,  28],\\n        [ 83, -21],\\n        [ 10,  99],\\n        [  1, -70],\\n        [-79,   5],\\n        [ 86,  40],\\n        [ 76,  69],\\n        [ 34, -79],\\n        [  9, -17],\\n        [ 64, -43],\\n        [ 80,  66],\\n        [-48,  17],\\n        [-16,  60],\\n        [ -4, -59],\\n        [ 89,  92],\\n        [-34, -80],\\n        [-20, -88],\\n        [ 27, -36],\\n        [ 33, -38],\\n        [ 29, -53],\\n        [-17,  -4],\\n        [ 63, -60],\\n        [ 31,  68],\\n        [-78, -30],\\n        [ -1,  64],\\n        [-83, -49],\\n        [-59, -54],\\n        [ 12,  84],\\n        [-44, -60],\\n        [-18,  23],\\n        [-45, -89],\\n        [-57,  94],\\n        [ 90, -55],\\n        [ 60,  10],\\n        [-29,   0],\\n        [-87,  91],\\n        [ 35,  97],\\n        [ 15, -50],\\n        [-75, -23],\\n        [ 48,  68],\\n        [ 29,  -7],\\n        [-99,  23],\\n        [ 72, -45],\\n        [ 68,  80],\\n        [ 31, -22],\\n        [  6, -51],\\n        [-13, -54],\\n        [ 70, -38],\\n        [  2,  36],\\n        [-95,  84],\\n        [ 37, -26],\\n        [ 97,  44],\\n        [-40, -47],\\n        [ 23, -58],\\n        [ 27,  70],\\n        [-67,  33],\\n        [-62, -86],\\n        [ 78, -52],\\n        [-34, -97],\\n        [ 48, -78]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_48/tests58_48_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-94, -99],\\n        [ 32, -25],\\n        [ 47,   5],\\n        [  0, -74],\\n        [  6, -23],\\n        [-89,  28],\\n        [ 83, -21],\\n        [ 10,  99],\\n        [  1, -70],\\n        [-79,   5],\\n        [ 86,  40],\\n        [ 76,  69],\\n        [ 34, -79],\\n        [  9, -17],\\n        [ 64, -43],\\n        [ 80,  66],\\n        [-48,  17],\\n        [-16,  60],\\n        [ -4, -59],\\n        [ 89,  92],\\n        [-34, -80],\\n        [-20, -88],\\n        [ 27, -36],\\n        [ 33, -38],\\n        [ 29, -53],\\n        [-17,  -4],\\n        [ 63, -60],\\n        [ 31,  68],\\n        [-78, -30],\\n        [ -1,  64],\\n        [-83, -49],\\n        [-59, -54],\\n        [ 12,  84],\\n        [-44, -60],\\n        [-18,  23],\\n        [-45, -89],\\n        [-57,  94],\\n        [ 90, -55],\\n        [ 60,  10],\\n        [-29,   0],\\n        [-87,  91],\\n        [ 35,  97],\\n        [ 15, -50],\\n        [-75, -23],\\n        [ 48,  68],\\n        [ 29,  -7],\\n        [-99,  23],\\n        [ 72, -45],\\n        [ 68,  80],\\n        [ 31, -22],\\n        [  6, -51],\\n        [-13, -54],\\n        [ 70, -38],\\n        [  2,  36],\\n        [-95,  84],\\n        [ 37, -26],\\n        [ 97,  44],\\n        [-40, -47],\\n        [ 23, -58],\\n        [ 27,  70],\\n        [-67,  33],\\n        [-62, -86],\\n        [ 78, -52],\\n        [-34, -97],\\n        [ 48, -78]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_48/tests58_48_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_4/Folder_48/tests58_48_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94, -99],\\n        [ 32, -25],\\n        [ 47,   5],\\n        [  0, -74],\\n        [  6, -23],\\n        [-89,  28],\\n        [ 83, -21],\\n        [ 10,  99],\\n        [  1, -70],\\n        [-79,   5],\\n        [ 86,  40],\\n        [ 76,  69],\\n        [ 34, -79],\\n        [  9, -17],\\n        [ 64, -43],\\n        [ 80,  66],\\n        [-48,  17],\\n        [-16,  60],\\n        [ -4, -59],\\n        [ 89,  92],\\n        [-34, -80],\\n        [-20, -88],\\n        [ 27, -36],\\n        [ 33, -38],\\n        [ 29, -53],\\n        [-17,  -4],\\n        [ 63, -60],\\n        [ 31,  68],\\n        [-78, -30],\\n        [ -1,  64],\\n        [-83, -49],\\n        [-59, -54],\\n        [ 12,  84],\\n        [-44, -60],\\n        [-18,  23],\\n        [-45, -89],\\n        [-57,  94],\\n        [ 90, -55],\\n        [ 60,  10],\\n        [-29,   0],\\n        [-87,  91],\\n        [ 35,  97],\\n        [ 15, -50],\\n        [-75, -23],\\n        [ 48,  68],\\n        [ 29,  -7],\\n        [-99,  23],\\n        [ 72, -45],\\n        [ 68,  80],\\n        [ 31, -22],\\n        [  6, -51],\\n        [-13, -54],\\n        [ 70, -38],\\n        [  2,  36],\\n        [-95,  84],\\n        [ 37, -26],\\n        [ 97,  44],\\n        [-40, -47],\\n        [ 23, -58],\\n        [ 27,  70],\\n        [-67,  33],\\n        [-62, -86],\\n        [ 78, -52],\\n        [-34, -97],\\n        [ 48, -78]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014582540025003254, "start": 1700303597.1146476, "stop": 1700303597.1161065, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "87f562436fcd4c0a9dda098201c7c63e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
