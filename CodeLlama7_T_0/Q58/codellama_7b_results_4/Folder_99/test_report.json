{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_99_4.py::test_matrix_of_one_integer", "location": ["tests58_99_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003774799988605082, "start": 1700303643.6892848, "stop": 1700303643.6896632, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_4.py::test_matrix_of_one_integer", "location": ["tests58_99_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000537279003765434, "start": 1700303643.6899297, "stop": 1700303643.6904676, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_4.py::test_matrix_of_one_integer", "location": ["tests58_99_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004741429875139147, "start": 1700303643.69077, "stop": 1700303643.6912446, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_4.py::test_matrix_of_having_146_integers", "location": ["tests58_99_4.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000515638996148482, "start": 1700303643.6916535, "stop": 1700303643.6921694, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_99_4.py::test_horizontal_matrix", "location": ["tests58_99_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000251464982284233, "start": 1700303643.6950703, "stop": 1700303643.6953223, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_99_4.py::test_matrix_of_having_146_integers", "location": ["tests58_99_4.py", 28, "test_matrix_of_having_146_integers"], "keywords": {"test_matrix_of_having_146_integers": 1, "__wrapped__": 1, "tests58_99_4.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_4/Folder_99/tests58_99_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -54,  -48],\\n        [  44,    7],\\n        [  78,   66],\\n        [  75,   87],\\n        [ -24,  -62],\\n        [  97,   10],\\n        [-100,  -79],\\n        [ -85,  -81],\\n        [ -35,  -47],\\n        [ -69,  -10],\\n        [ -13,   83],\\n        [  59,   82],\\n        [ -14,   43],\\n        [   9,  -46],\\n        [ -60,   18],\\n        [ -60,  -45],\\n        [  81,   20],\\n        [  58,   83],\\n        [ -78,  -90],\\n        [ -27,  -75],\\n        [  95,  -89],\\n        [  21,   72],\\n        [  17,   56],\\n        [  -1,  -59],\\n        [   2,   24],\\n        [  25,  -70],\\n        [ -43,   43],\\n        [ -24,  100],\\n        [   0,   -8],\\n        [  12,  -46],\\n        [ -22,   -3],\\n        [ -13,  -93],\\n        [  55,   88],\\n        [ -81,   91],\\n        [ -39,  -64],\\n        [ -56,   64],\\n        [-100,   64],\\n        [ -43,  -82],\\n        [ -18,   64],\\n        [  79,   38],\\n        [ -33,  -25],\\n        [ -99,   20],\\n        [  -8,   39],\\n        [  99,   79],\\n        [ -26,  -88],\\n        [  49,  -73],\\n        [  84,   45],\\n        [ -57,  -46],\\n        [  87,  -29],\\n        [  94,   65],\\n        [ -35,   95],\\n        [  79,  -13],\\n        [ -41,   46],\\n        [  20,   81],\\n        [  50,  -78],\\n        [ -30,  -75],\\n        [ -69,   66],\\n        [  -4,   12],\\n        [  29,  -89],\\n        [ -26,   77],\\n        [  47,   41],\\n        [ -91,  -15],\\n        [ -42,   71],\\n        [ -53,  -90],\\n        [ -16,   40],\\n        [  96,  -92],\\n        [ -35,  -22],\\n        [  62,   -2],\\n        [  68,   45],\\n        [  29,    5],\\n        [ -67,   75],\\n        [ -93,   10],\\n        [  -9,   70]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -54,  -48],\\n        [  44,    7],\\n        [  78,   66],\\n        [  75,   87],\\n        [ -24,  -62],\\n        [  97,   10],\\n        [-100,  -79],\\n        [ -85,  -81],\\n        [ -35,  -47],\\n        [ -69,  -10],\\n        [ -13,   83],\\n        [  59,   82],\\n        [ -14,   43],\\n        [   9,  -46],\\n        [ -60,   18],\\n        [ -60,  -45],\\n        [  81,   20],\\n        [  58,   83],\\n        [ -78,  -90],\\n        [ -27,  -75],\\n        [  95,  -89],\\n        [  21,   72],\\n        [  17,   56],\\n        [  -1,  -59],\\n        [   2,   24],\\n        [  25,  -70],\\n        [ -43,   43],\\n        [ -24,  100],\\n        [   0,   -8],\\n        [  12,  -46],\\n        [ -22,   -3],\\n        [ -13,  -93],\\n        [  55,   88],\\n        [ -81,   91],\\n        [ -39,  -64],\\n        [ -56,   64],\\n        [-100,   64],\\n        [ -43,  -82],\\n        [ -18,   64],\\n        [  79,   38],\\n        [ -33,  -25],\\n        [ -99,   20],\\n        [  -8,   39],\\n        [  99,   79],\\n        [ -26,  -88],\\n        [  49,  -73],\\n        [  84,   45],\\n        [ -57,  -46],\\n        [  87,  -29],\\n        [  94,   65],\\n        [ -35,   95],\\n        [  79,  -13],\\n        [ -41,   46],\\n        [  20,   81],\\n        [  50,  -78],\\n        [ -30,  -75],\\n        [ -69,   66],\\n        [  -4,   12],\\n        [  29,  -89],\\n        [ -26,   77],\\n        [  47,   41],\\n        [ -91,  -15],\\n        [ -42,   71],\\n        [ -53,  -90],\\n        [ -16,   40],\\n        [  96,  -92],\\n        [ -35,  -22],\\n        [  62,   -2],\\n        [  68,   45],\\n        [  29,    5],\\n        [ -67,   75],\\n        [ -93,   10],\\n        [  -9,   70]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_99/tests58_99_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_146_integers():", "        if 146 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(146 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(146)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -54,  -48],\\n        [  44,    7],\\n        [  78,   66],\\n        [  75,   87],\\n        [ -24,  -62],\\n        [  97,   10],\\n        [-100,  -79],\\n        [ -85,  -81],\\n        [ -35,  -47],\\n        [ -69,  -10],\\n        [ -13,   83],\\n        [  59,   82],\\n        [ -14,   43],\\n        [   9,  -46],\\n        [ -60,   18],\\n        [ -60,  -45],\\n        [  81,   20],\\n        [  58,   83],\\n        [ -78,  -90],\\n        [ -27,  -75],\\n        [  95,  -89],\\n        [  21,   72],\\n        [  17,   56],\\n        [  -1,  -59],\\n        [   2,   24],\\n        [  25,  -70],\\n        [ -43,   43],\\n        [ -24,  100],\\n        [   0,   -8],\\n        [  12,  -46],\\n        [ -22,   -3],\\n        [ -13,  -93],\\n        [  55,   88],\\n        [ -81,   91],\\n        [ -39,  -64],\\n        [ -56,   64],\\n        [-100,   64],\\n        [ -43,  -82],\\n        [ -18,   64],\\n        [  79,   38],\\n        [ -33,  -25],\\n        [ -99,   20],\\n        [  -8,   39],\\n        [  99,   79],\\n        [ -26,  -88],\\n        [  49,  -73],\\n        [  84,   45],\\n        [ -57,  -46],\\n        [  87,  -29],\\n        [  94,   65],\\n        [ -35,   95],\\n        [  79,  -13],\\n        [ -41,   46],\\n        [  20,   81],\\n        [  50,  -78],\\n        [ -30,  -75],\\n        [ -69,   66],\\n        [  -4,   12],\\n        [  29,  -89],\\n        [ -26,   77],\\n        [  47,   41],\\n        [ -91,  -15],\\n        [ -42,   71],\\n        [ -53,  -90],\\n        [ -16,   40],\\n        [  96,  -92],\\n        [ -35,  -22],\\n        [  62,   -2],\\n        [  68,   45],\\n        [  29,    5],\\n        [ -67,   75],\\n        [ -93,   10],\\n        [  -9,   70]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_4/Folder_99/tests58_99_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_4/Folder_99/tests58_99_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -54,  -48],\\n        [  44,    7],\\n        [  78,   66],\\n        [  75,   87],\\n        [ -24,  -62],\\n        [  97,   10],\\n        [-100,  -79],\\n        [ -85,  -81],\\n        [ -35,  -47],\\n        [ -69,  -10],\\n        [ -13,   83],\\n        [  59,   82],\\n        [ -14,   43],\\n        [   9,  -46],\\n        [ -60,   18],\\n        [ -60,  -45],\\n        [  81,   20],\\n        [  58,   83],\\n        [ -78,  -90],\\n        [ -27,  -75],\\n        [  95,  -89],\\n        [  21,   72],\\n        [  17,   56],\\n        [  -1,  -59],\\n        [   2,   24],\\n        [  25,  -70],\\n        [ -43,   43],\\n        [ -24,  100],\\n        [   0,   -8],\\n        [  12,  -46],\\n        [ -22,   -3],\\n        [ -13,  -93],\\n        [  55,   88],\\n        [ -81,   91],\\n        [ -39,  -64],\\n        [ -56,   64],\\n        [-100,   64],\\n        [ -43,  -82],\\n        [ -18,   64],\\n        [  79,   38],\\n        [ -33,  -25],\\n        [ -99,   20],\\n        [  -8,   39],\\n        [  99,   79],\\n        [ -26,  -88],\\n        [  49,  -73],\\n        [  84,   45],\\n        [ -57,  -46],\\n        [  87,  -29],\\n        [  94,   65],\\n        [ -35,   95],\\n        [  79,  -13],\\n        [ -41,   46],\\n        [  20,   81],\\n        [  50,  -78],\\n        [ -30,  -75],\\n        [ -69,   66],\\n        [  -4,   12],\\n        [  29,  -89],\\n        [ -26,   77],\\n        [  47,   41],\\n        [ -91,  -15],\\n        [ -42,   71],\\n        [ -53,  -90],\\n        [ -16,   40],\\n        [  96,  -92],\\n        [ -35,  -22],\\n        [  62,   -2],\\n        [  68,   45],\\n        [  29,    5],\\n        [ -67,   75],\\n        [ -93,   10],\\n        [  -9,   70]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001869579020421952, "start": 1700303643.6923132, "stop": 1700303643.694183, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e358e859484d4771b6329e78489d854b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
