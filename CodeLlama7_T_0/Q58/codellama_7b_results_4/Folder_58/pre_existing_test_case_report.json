{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-77, -92, -52, -61,  47,  63, -78,  42,  93, 100, -78,  94,  62,\\n         -96,  22, -17,   5,  14, -20,  69,  13,  26,  85, -29, -38, -43,\\n         -26, -72,  20,  87, -23,  70, 100,  78,  -1, -55,  94, -55, -45,\\n          62, -42, -36, -77,  60,  20,  38,  76, -83,  95,  81,  79, -21,\\n         -87, -70,   6,  53, -65,  56, -19,  59,  53,  84, -96,  94, -32,\\n         -78,  71, -94,   8, -45, -36,  30, -79, -77, -72,  16,  85, -54,\\n          45,  39, -40,   0, -35,  87, -40,  31, -73, -53, -87,  31, -26,\\n           0, -81, -11,  80, -98, -33,  90,  77, -35, -14, -18,  36, -26,\\n          91, -91,  92,  54, -82, -33,  13,  16,  10,  -2, -10,  58, -63,\\n         -72,  81, -75, -67,  73,  72,  -8, -48,  14, -45,  85,  27, -78,\\n          -5, -76, -62,  17,  35,   0,  38, -71, -35,  37,   8, -79,   1,\\n          -4, -66, -89, -45,  27,  78, -88, -95, -84,   3, -56,  65, -50,\\n          15,  23, -77,  46, -84, -54,  48, -74, -58,  18, -82, -53,  59,\\n         -83, -13,  -2,  60,  67,  40,  47, -23,  93, -52,  41,   6, -75,\\n          91, -91,  44]]))",
    0.00074
  ]
}