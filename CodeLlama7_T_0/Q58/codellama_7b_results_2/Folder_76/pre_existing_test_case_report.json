{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00027
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -52,   52,  -23,   24,  -38,   17,   68,  -56,   33,   85,\\n           98,  -89,   66,   75,  -53,   36,   -2,   43,   24,   29,\\n          -62,  -87,  -57,   15,   39,  -18,  -57,  -64,  100,   18,\\n          -97,    3,   51,    5,  -97,   99,  -87,  -65,  -78,  -56,\\n           23,  -10,   87,  -79,  -43,   45,   75,   58,  -52,   57,\\n          -48,  -10,  -50,   82,    5,   -5,  -34,   96,   68,  -45,\\n           20,  -87,  -42,   21,  -35,  -97,  -81,   86,   -9,   77,\\n          -88,   24, -100,  -26,   36,  -72,    7,   -9,  -65,   98,\\n           11,  -88,  -43,   40,  -19,  -71,   15,   75,   99,   23,\\n          -47,   72,  -47,  -87,    0,   77,   40,  -58,  -10,   -7,\\n          -15,  -21,   87,   32,   16,  -62,  -41,   20,   60,   47,\\n          -89,   44,  -56,  100,  -34,   95,  -62,   71,  -67,   20,\\n          -67,  -96,  -22,  -22,   65,  -47,   90,  -98,    9,    7,\\n          -38,   82,  -23,  -78,   10,   83,   40,  -36, -100,  -22,\\n           31,   68,  -62,   47,   93,   19,  -98,   86,   -1,  -96,\\n           49,  -23,   15,  -42,   28,   97,   43,   41,  -32]]))",
    0.00125
  ]
}