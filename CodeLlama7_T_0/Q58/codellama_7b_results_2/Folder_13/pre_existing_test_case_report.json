{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00187
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -9, -52, -44, -68, -42,   1,  14, -55,  73,  56,  -4,  86, -93,\\n          63,  38, -86, -93,  33,  59, -13,  83,  45,  -6, -39, -21, -53,\\n         -86,  72,  67,  70,  25,  -1,  26,  86, -50,  -1, -49,  61, -81,\\n         -27,  88,  64,  79, -35, -36,   4, -63,  14, -85,  41, -24, -30,\\n          69,  49,   9, -97, -99,  91, -19,  23,  79, -64, -16, -85, -47,\\n         -57, -97,  22,  92, 100,  25, -71, -91, -46,  28, -59, -88, -68,\\n         -20, -72,  96, -36,  78, -35,   9, -73, -88,  84,  38, -99, -36,\\n          31,   0,  81,  11,  27,  68,   7, -31,  65,  -7, -41,  -9,  61,\\n          20,  55,  21,  16, -84, -37, -15,  66, -51,  40,  91, -32, -86,\\n         -15,  85, -10,  11,  72,  -8,  38, -96, -93, -14, -61,  92,  13,\\n         -65,  79,  58,  40, -65,  90,  11,  -1, -12,  82, -91,  24,   8,\\n          61,  87,  26, -32,  33,  -4, -64,  49,  68, -78, -55, -18, -21,\\n         -46,  93,  23,  61, -86, -90, -87,   6, -95,  71,  17, -95,  54,\\n          44,  54, -23, -80,  20,  79]]))",
    0.00136
  ]
}