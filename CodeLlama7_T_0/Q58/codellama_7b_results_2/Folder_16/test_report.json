{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_16_2.py::test_matrix_of_one_integer", "location": ["tests58_16_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001468519913032651, "start": 1700303392.3532243, "stop": 1700303392.3533716, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_2.py::test_horizontal_matrix", "location": ["tests58_16_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013430099352262914, "start": 1700303392.3532276, "stop": 1700303392.3533623, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_2.py::test_matrix_of_one_integer", "location": ["tests58_16_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016995499026961625, "start": 1700303392.3536282, "stop": 1700303392.3537986, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_2.py::test_matrix_of_one_integer", "location": ["tests58_16_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010100699728354812, "start": 1700303392.3540957, "stop": 1700303392.354197, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_2.py::test_matrix_of_having_154_integers", "location": ["tests58_16_2.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.537999772466719e-05, "start": 1700303392.3546147, "stop": 1700303392.3546906, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_2.py::test_matrix_of_having_154_integers", "location": ["tests58_16_2.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_2.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_2/Folder_16/tests58_16_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 75, -12],\\n        [ 45,   8],\\n        [ 23,  47],\\n        [ 74,  78],\\n        [-35,  73],\\n        [ 12,  24],\\n        [-92, -46],\\n        [ 58, -38],\\n        [-23, -88],\\n        [ 63, -33],\\n        [-34,   7],\\n        [ 66, -38],\\n        [-95,  97],\\n        [-81,  88],\\n        [ 11,   3],\\n        [ 73, -96],\\n        [-35,  93],\\n        [ 29,  80],\\n        [ 48, -81],\\n        [-25, -55],\\n        [-71, -47],\\n        [ 14, -47],\\n        [-67,  74],\\n        [ -8,  52],\\n        [-36, -65],\\n        [ 47, -62],\\n        [-19, -72],\\n        [-18,  49],\\n        [ -4,  78],\\n        [ 21,  -8],\\n        [ -1, -69],\\n        [-58,  67],\\n        [ 41, -94],\\n        [-61, -92],\\n        [-54,  54],\\n        [-31,   4],\\n        [-96,  41],\\n        [  2, -12],\\n        [-64,  -2],\\n        [-25,  34],\\n        [-60, -76],\\n        [-13, -23],\\n        [ 27,  36],\\n        [-32, -96],\\n        [-72, -75],\\n        [ 96, -42],\\n        [-28, -10],\\n        [ 57, -90],\\n        [ 91,  97],\\n        [-70,  64],\\n        [ 62, -75],\\n        [  8,  78],\\n        [ 46,  95],\\n        [ 73, -95],\\n        [  5, -23],\\n        [ 96,  34],\\n        [-11,  65],\\n        [ 81,  41],\\n        [-51, -78],\\n        [ 85,  45],\\n        [-45, -16],\\n        [ 97,  91],\\n        [ 28,  94],\\n        [ 71, -22],\\n        [-76, -52],\\n        [ 11,  97],\\n        [ -7,  92],\\n        [-50, -35],\\n        [ 21,  53],\\n        [ 30, -22],\\n        [-41,  38],\\n        [  5, -48],\\n        [-98, -88],\\n        [ 38, -79],\\n        [ 54, -51],\\n        [ 28,  49],\\n        [ 41, -35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 75, -12],\\n        [ 45,   8],\\n        [ 23,  47],\\n        [ 74,  78],\\n        [-35,  73],\\n        [ 12,  24],\\n        [-92, -46],\\n        [ 58, -38],\\n        [-23, -88],\\n        [ 63, -33],\\n        [-34,   7],\\n        [ 66, -38],\\n        [-95,  97],\\n        [-81,  88],\\n        [ 11,   3],\\n        [ 73, -96],\\n        [-35,  93],\\n        [ 29,  80],\\n        [ 48, -81],\\n        [-25, -55],\\n        [-71, -47],\\n        [ 14, -47],\\n        [-67,  74],\\n        [ -8,  52],\\n        [-36, -65],\\n        [ 47, -62],\\n        [-19, -72],\\n        [-18,  49],\\n        [ -4,  78],\\n        [ 21,  -8],\\n        [ -1, -69],\\n        [-58,  67],\\n        [ 41, -94],\\n        [-61, -92],\\n        [-54,  54],\\n        [-31,   4],\\n        [-96,  41],\\n        [  2, -12],\\n        [-64,  -2],\\n        [-25,  34],\\n        [-60, -76],\\n        [-13, -23],\\n        [ 27,  36],\\n        [-32, -96],\\n        [-72, -75],\\n        [ 96, -42],\\n        [-28, -10],\\n        [ 57, -90],\\n        [ 91,  97],\\n        [-70,  64],\\n        [ 62, -75],\\n        [  8,  78],\\n        [ 46,  95],\\n        [ 73, -95],\\n        [  5, -23],\\n        [ 96,  34],\\n        [-11,  65],\\n        [ 81,  41],\\n        [-51, -78],\\n        [ 85,  45],\\n        [-45, -16],\\n        [ 97,  91],\\n        [ 28,  94],\\n        [ 71, -22],\\n        [-76, -52],\\n        [ 11,  97],\\n        [ -7,  92],\\n        [-50, -35],\\n        [ 21,  53],\\n        [ 30, -22],\\n        [-41,  38],\\n        [  5, -48],\\n        [-98, -88],\\n        [ 38, -79],\\n        [ 54, -51],\\n        [ 28,  49],\\n        [ 41, -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_16/tests58_16_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 75, -12],\\n        [ 45,   8],\\n        [ 23,  47],\\n        [ 74,  78],\\n        [-35,  73],\\n        [ 12,  24],\\n        [-92, -46],\\n        [ 58, -38],\\n        [-23, -88],\\n        [ 63, -33],\\n        [-34,   7],\\n        [ 66, -38],\\n        [-95,  97],\\n        [-81,  88],\\n        [ 11,   3],\\n        [ 73, -96],\\n        [-35,  93],\\n        [ 29,  80],\\n        [ 48, -81],\\n        [-25, -55],\\n        [-71, -47],\\n        [ 14, -47],\\n        [-67,  74],\\n        [ -8,  52],\\n        [-36, -65],\\n        [ 47, -62],\\n        [-19, -72],\\n        [-18,  49],\\n        [ -4,  78],\\n        [ 21,  -8],\\n        [ -1, -69],\\n        [-58,  67],\\n        [ 41, -94],\\n        [-61, -92],\\n        [-54,  54],\\n        [-31,   4],\\n        [-96,  41],\\n        [  2, -12],\\n        [-64,  -2],\\n        [-25,  34],\\n        [-60, -76],\\n        [-13, -23],\\n        [ 27,  36],\\n        [-32, -96],\\n        [-72, -75],\\n        [ 96, -42],\\n        [-28, -10],\\n        [ 57, -90],\\n        [ 91,  97],\\n        [-70,  64],\\n        [ 62, -75],\\n        [  8,  78],\\n        [ 46,  95],\\n        [ 73, -95],\\n        [  5, -23],\\n        [ 96,  34],\\n        [-11,  65],\\n        [ 81,  41],\\n        [-51, -78],\\n        [ 85,  45],\\n        [-45, -16],\\n        [ 97,  91],\\n        [ 28,  94],\\n        [ 71, -22],\\n        [-76, -52],\\n        [ 11,  97],\\n        [ -7,  92],\\n        [-50, -35],\\n        [ 21,  53],\\n        [ 30, -22],\\n        [-41,  38],\\n        [  5, -48],\\n        [-98, -88],\\n        [ 38, -79],\\n        [ 54, -51],\\n        [ 28,  49],\\n        [ 41, -35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_16/tests58_16_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_2/Folder_16/tests58_16_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 75, -12],\\n        [ 45,   8],\\n        [ 23,  47],\\n        [ 74,  78],\\n        [-35,  73],\\n        [ 12,  24],\\n        [-92, -46],\\n        [ 58, -38],\\n        [-23, -88],\\n        [ 63, -33],\\n        [-34,   7],\\n        [ 66, -38],\\n        [-95,  97],\\n        [-81,  88],\\n        [ 11,   3],\\n        [ 73, -96],\\n        [-35,  93],\\n        [ 29,  80],\\n        [ 48, -81],\\n        [-25, -55],\\n        [-71, -47],\\n        [ 14, -47],\\n        [-67,  74],\\n        [ -8,  52],\\n        [-36, -65],\\n        [ 47, -62],\\n        [-19, -72],\\n        [-18,  49],\\n        [ -4,  78],\\n        [ 21,  -8],\\n        [ -1, -69],\\n        [-58,  67],\\n        [ 41, -94],\\n        [-61, -92],\\n        [-54,  54],\\n        [-31,   4],\\n        [-96,  41],\\n        [  2, -12],\\n        [-64,  -2],\\n        [-25,  34],\\n        [-60, -76],\\n        [-13, -23],\\n        [ 27,  36],\\n        [-32, -96],\\n        [-72, -75],\\n        [ 96, -42],\\n        [-28, -10],\\n        [ 57, -90],\\n        [ 91,  97],\\n        [-70,  64],\\n        [ 62, -75],\\n        [  8,  78],\\n        [ 46,  95],\\n        [ 73, -95],\\n        [  5, -23],\\n        [ 96,  34],\\n        [-11,  65],\\n        [ 81,  41],\\n        [-51, -78],\\n        [ 85,  45],\\n        [-45, -16],\\n        [ 97,  91],\\n        [ 28,  94],\\n        [ 71, -22],\\n        [-76, -52],\\n        [ 11,  97],\\n        [ -7,  92],\\n        [-50, -35],\\n        [ 21,  53],\\n        [ 30, -22],\\n        [-41,  38],\\n        [  5, -48],\\n        [-98, -88],\\n        [ 38, -79],\\n        [ 54, -51],\\n        [ 28,  49],\\n        [ 41, -35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008991860086098313, "start": 1700303392.3548052, "stop": 1700303392.355705, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1cfe10d4de6e4e9db19847d15e4d5013", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
