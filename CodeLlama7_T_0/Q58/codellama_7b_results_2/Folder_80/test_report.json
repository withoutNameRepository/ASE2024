{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022744000307284296, "start": 1700303445.2754855, "stop": 1700303445.2757137, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032449900754727423, "start": 1700303445.2759671, "stop": 1700303445.2762923, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019790302030742168, "start": 1700303445.2765856, "stop": 1700303445.2767837, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024675700115039945, "start": 1700303445.277159, "stop": 1700303445.2774062, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_horizontal_matrix", "location": ["tests58_80_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001277010014746338, "start": 1700303445.2788544, "stop": 1700303445.2789826, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 32, -79],\\n        [ 88,  99],\\n        [-29,  61],\\n        [-12, -54],\\n        [  6,  79],\\n        [ 51, -91],\\n        [ 90, -59],\\n        [-16,  64],\\n        [-79, -88],\\n        [-81, -53],\\n        [-17, -13],\\n        [-23, -78],\\n        [-32, -36],\\n        [ 16, -92],\\n        [ 33,  54],\\n        [ 96, -33],\\n        [ 67,  25],\\n        [ 29,  98],\\n        [-66,  66],\\n        [  9, -79],\\n        [-88,  13],\\n        [-78,  28],\\n        [  0,  49],\\n        [-17, -81],\\n        [  4,  42],\\n        [  0, -31],\\n        [ 95,  52],\\n        [-16,  97],\\n        [ 79, -20],\\n        [ 70,  57],\\n        [  8, -99],\\n        [-13, -21],\\n        [ 88,  34],\\n        [-24,  59],\\n        [-30,  55],\\n        [ 51,  89],\\n        [ 93,  71],\\n        [ 58,  90],\\n        [-80, -23],\\n        [-77, -56],\\n        [ 52, -71],\\n        [ 30, -96],\\n        [-59,  87],\\n        [ 62, -89],\\n        [ 35, -59],\\n        [ 18,  18],\\n        [ 62,  45],\\n        [ 42,  60],\\n        [-91, -85],\\n        [  8, -83],\\n        [-19,  96],\\n        [ -3, -23],\\n        [-78, -54],\\n        [  9,   7],\\n        [-67,  33],\\n        [ 41,  19],\\n        [ -4, -75],\\n        [ 50, -41],\\n        [-24, -92],\\n        [-34,  71],\\n        [ -9,  47],\\n        [-26,  69],\\n        [-87, -64],\\n        [  6,  -4],\\n        [-32,  90],\\n        [ 20,  42],\\n        [-40,  15],\\n        [  7, -76],\\n        [-20,  74],\\n        [ 21, -10],\\n        [-14, 100],\\n        [ 67,  26],\\n        [-94,  38],\\n        [ 32,  19],\\n        [ 91,  -3],\\n        [ 61,  14],\\n        [ 47,  20],\\n        [ 40,   2],\\n        [ 60, -98],\\n        [-23, -72],\\n        [ -1,  85],\\n        [  1,  27],\\n        [ 86,  42],\\n        [  1, -80],\\n        [-30,  11],\\n        [ 48,  65],\\n        [-29, -21],\\n        [ 88, -88],\\n        [ 92,  -6],\\n        [ 63, -42]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 32, -79],\\n        [ 88,  99],\\n        [-29,  61],\\n        [-12, -54],\\n        [  6,  79],\\n        [ 51, -91],\\n        [ 90, -59],\\n        [-16,  64],\\n        [-79, -88],\\n        [-81, -53],\\n        [-17, -13],\\n        [-23, -78],\\n        [-32, -36],\\n        [ 16, -92],\\n        [ 33,  54],\\n        [ 96, -33],\\n        [ 67,  25],\\n        [ 29,  98],\\n        [-66,  66],\\n        [  9, -79],\\n        [-88,  13],\\n        [-78,  28],\\n        [  0,  49],\\n        [-17, -81],\\n        [  4,  42],\\n        [  0, -31],\\n        [ 95,  52],\\n        [-16,  97],\\n        [ 79, -20],\\n        [ 70,  57],\\n        [  8, -99],\\n        [-13, -21],\\n        [ 88,  34],\\n        [-24,  59],\\n        [-30,  55],\\n        [ 51,  89],\\n        [ 93,  71],\\n        [ 58,  90],\\n        [-80, -23],\\n        [-77, -56],\\n        [ 52, -71],\\n        [ 30, -96],\\n        [-59,  87],\\n        [ 62, -89],\\n        [ 35, -59],\\n        [ 18,  18],\\n        [ 62,  45],\\n        [ 42,  60],\\n        [-91, -85],\\n        [  8, -83],\\n        [-19,  96],\\n        [ -3, -23],\\n        [-78, -54],\\n        [  9,   7],\\n        [-67,  33],\\n        [ 41,  19],\\n        [ -4, -75],\\n        [ 50, -41],\\n        [-24, -92],\\n        [-34,  71],\\n        [ -9,  47],\\n        [-26,  69],\\n        [-87, -64],\\n        [  6,  -4],\\n        [-32,  90],\\n        [ 20,  42],\\n        [-40,  15],\\n        [  7, -76],\\n        [-20,  74],\\n        [ 21, -10],\\n        [-14, 100],\\n        [ 67,  26],\\n        [-94,  38],\\n        [ 32,  19],\\n        [ 91,  -3],\\n        [ 61,  14],\\n        [ 47,  20],\\n        [ 40,   2],\\n        [ 60, -98],\\n        [-23, -72],\\n        [ -1,  85],\\n        [  1,  27],\\n        [ 86,  42],\\n        [  1, -80],\\n        [-30,  11],\\n        [ 48,  65],\\n        [-29, -21],\\n        [ 88, -88],\\n        [ 92,  -6],\\n        [ 63, -42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 32, -79],\\n        [ 88,  99],\\n        [-29,  61],\\n        [-12, -54],\\n        [  6,  79],\\n        [ 51, -91],\\n        [ 90, -59],\\n        [-16,  64],\\n        [-79, -88],\\n        [-81, -53],\\n        [-17, -13],\\n        [-23, -78],\\n        [-32, -36],\\n        [ 16, -92],\\n        [ 33,  54],\\n        [ 96, -33],\\n        [ 67,  25],\\n        [ 29,  98],\\n        [-66,  66],\\n        [  9, -79],\\n        [-88,  13],\\n        [-78,  28],\\n        [  0,  49],\\n        [-17, -81],\\n        [  4,  42],\\n        [  0, -31],\\n        [ 95,  52],\\n        [-16,  97],\\n        [ 79, -20],\\n        [ 70,  57],\\n        [  8, -99],\\n        [-13, -21],\\n        [ 88,  34],\\n        [-24,  59],\\n        [-30,  55],\\n        [ 51,  89],\\n        [ 93,  71],\\n        [ 58,  90],\\n        [-80, -23],\\n        [-77, -56],\\n        [ 52, -71],\\n        [ 30, -96],\\n        [-59,  87],\\n        [ 62, -89],\\n        [ 35, -59],\\n        [ 18,  18],\\n        [ 62,  45],\\n        [ 42,  60],\\n        [-91, -85],\\n        [  8, -83],\\n        [-19,  96],\\n        [ -3, -23],\\n        [-78, -54],\\n        [  9,   7],\\n        [-67,  33],\\n        [ 41,  19],\\n        [ -4, -75],\\n        [ 50, -41],\\n        [-24, -92],\\n        [-34,  71],\\n        [ -9,  47],\\n        [-26,  69],\\n        [-87, -64],\\n        [  6,  -4],\\n        [-32,  90],\\n        [ 20,  42],\\n        [-40,  15],\\n        [  7, -76],\\n        [-20,  74],\\n        [ 21, -10],\\n        [-14, 100],\\n        [ 67,  26],\\n        [-94,  38],\\n        [ 32,  19],\\n        [ 91,  -3],\\n        [ 61,  14],\\n        [ 47,  20],\\n        [ 40,   2],\\n        [ 60, -98],\\n        [-23, -72],\\n        [ -1,  85],\\n        [  1,  27],\\n        [ 86,  42],\\n        [  1, -80],\\n        [-30,  11],\\n        [ 48,  65],\\n        [-29, -21],\\n        [ 88, -88],\\n        [ 92,  -6],\\n        [ 63, -42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 32, -79],\\n        [ 88,  99],\\n        [-29,  61],\\n        [-12, -54],\\n        [  6,  79],\\n        [ 51, -91],\\n        [ 90, -59],\\n        [-16,  64],\\n        [-79, -88],\\n        [-81, -53],\\n        [-17, -13],\\n        [-23, -78],\\n        [-32, -36],\\n        [ 16, -92],\\n        [ 33,  54],\\n        [ 96, -33],\\n        [ 67,  25],\\n        [ 29,  98],\\n        [-66,  66],\\n        [  9, -79],\\n        [-88,  13],\\n        [-78,  28],\\n        [  0,  49],\\n        [-17, -81],\\n        [  4,  42],\\n        [  0, -31],\\n        [ 95,  52],\\n        [-16,  97],\\n        [ 79, -20],\\n        [ 70,  57],\\n        [  8, -99],\\n        [-13, -21],\\n        [ 88,  34],\\n        [-24,  59],\\n        [-30,  55],\\n        [ 51,  89],\\n        [ 93,  71],\\n        [ 58,  90],\\n        [-80, -23],\\n        [-77, -56],\\n        [ 52, -71],\\n        [ 30, -96],\\n        [-59,  87],\\n        [ 62, -89],\\n        [ 35, -59],\\n        [ 18,  18],\\n        [ 62,  45],\\n        [ 42,  60],\\n        [-91, -85],\\n        [  8, -83],\\n        [-19,  96],\\n        [ -3, -23],\\n        [-78, -54],\\n        [  9,   7],\\n        [-67,  33],\\n        [ 41,  19],\\n        [ -4, -75],\\n        [ 50, -41],\\n        [-24, -92],\\n        [-34,  71],\\n        [ -9,  47],\\n        [-26,  69],\\n        [-87, -64],\\n        [  6,  -4],\\n        [-32,  90],\\n        [ 20,  42],\\n        [-40,  15],\\n        [  7, -76],\\n        [-20,  74],\\n        [ 21, -10],\\n        [-14, 100],\\n        [ 67,  26],\\n        [-94,  38],\\n        [ 32,  19],\\n        [ 91,  -3],\\n        [ 61,  14],\\n        [ 47,  20],\\n        [ 40,   2],\\n        [ 60, -98],\\n        [-23, -72],\\n        [ -1,  85],\\n        [  1,  27],\\n        [ 86,  42],\\n        [  1, -80],\\n        [-30,  11],\\n        [ 48,  65],\\n        [-29, -21],\\n        [ 88, -88],\\n        [ 92,  -6],\\n        [ 63, -42]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018321520183235407, "start": 1700303445.27753, "stop": 1700303445.2793627, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "82266f92109f4d6a81ca3ddbffac6cc9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
