{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_18_5.py::test_matrix_of_one_integer", "location": ["tests58_18_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017432001186534762, "start": 1700303662.284514, "stop": 1700303662.2846892, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_5.py::test_matrix_of_one_integer", "location": ["tests58_18_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018248101696372032, "start": 1700303662.2849426, "stop": 1700303662.2851257, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_5.py::test_matrix_of_one_integer", "location": ["tests58_18_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.64580215420574e-05, "start": 1700303662.2853937, "stop": 1700303662.2854805, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_5.py::test_matrix_of_having_104_integers", "location": ["tests58_18_5.py", 28, "test_matrix_of_having_104_integers"], "keywords": {"test_matrix_of_having_104_integers": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026700098533183336, "start": 1700303662.2858467, "stop": 1700303662.2861145, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_18_5.py::test_horizontal_matrix", "location": ["tests58_18_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002555880055297166, "start": 1700303662.2916858, "stop": 1700303662.2919421, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_18_5.py::test_matrix_of_having_104_integers", "location": ["tests58_18_5.py", 28, "test_matrix_of_having_104_integers"], "keywords": {"test_matrix_of_having_104_integers": 1, "__wrapped__": 1, "tests58_18_5.py": 1, "Folder_18": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_18/tests58_18_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-86,  76],\\n        [ 62,  63],\\n        [ 83,  46],\\n        [ 19,  92],\\n        [ 96, -64],\\n        [ -5,  30],\\n        [ 28, -63],\\n        [ 62,  20],\\n        [ 16,  75],\\n        [ 69, -24],\\n        [ 35,   6],\\n        [-84,  23],\\n        [-14,  83],\\n        [ 83,  -7],\\n        [ 98, -30],\\n        [-86,   8],\\n        [-81,  79],\\n        [-89,  76],\\n        [ 57,  26],\\n        [ 36,  74],\\n        [ 33,  29],\\n        [-22, -33],\\n        [-38, -76],\\n        [ 17, -98],\\n        [ 65,  19],\\n        [-95,  93],\\n        [ -3, -58],\\n        [-30,  47],\\n        [-11,  -5],\\n        [-14,  -4],\\n        [  2, -42],\\n        [-27, -59],\\n        [ -6,  33],\\n        [ 79,   0],\\n        [ 60, -96],\\n        [ 46,  11],\\n        [ 97, -37],\\n        [  5,  50],\\n        [ 58,  41],\\n        [-90,  40],\\n        [-88,  47],\\n        [-57, -69],\\n        [-95, -66],\\n        [  7,  44],\\n        [ 10,  11],\\n        [ 22, -70],\\n        [  5,  20],\\n        [-41,  12],\\n        [-24,   1],\\n        [ 66,  89],\\n        [ 62,  89],\\n        [-20,  16]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_104_integers():", "        if 104 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(104 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(104)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-86,  76],\\n        [ 62,  63],\\n        [ 83,  46],\\n        [ 19,  92],\\n        [ 96, -64],\\n        [ -5,  30],\\n        [ 28, -63],\\n        [ 62,  20],\\n        [ 16,  75],\\n        [ 69, -24],\\n        [ 35,   6],\\n        [-84,  23],\\n        [-14,  83],\\n        [ 83,  -7],\\n        [ 98, -30],\\n        [-86,   8],\\n        [-81,  79],\\n        [-89,  76],\\n        [ 57,  26],\\n        [ 36,  74],\\n        [ 33,  29],\\n        [-22, -33],\\n        [-38, -76],\\n        [ 17, -98],\\n        [ 65,  19],\\n        [-95,  93],\\n        [ -3, -58],\\n        [-30,  47],\\n        [-11,  -5],\\n        [-14,  -4],\\n        [  2, -42],\\n        [-27, -59],\\n        [ -6,  33],\\n        [ 79,   0],\\n        [ 60, -96],\\n        [ 46,  11],\\n        [ 97, -37],\\n        [  5,  50],\\n        [ 58,  41],\\n        [-90,  40],\\n        [-88,  47],\\n        [-57, -69],\\n        [-95, -66],\\n        [  7,  44],\\n        [ 10,  11],\\n        [ 22, -70],\\n        [  5,  20],\\n        [-41,  12],\\n        [-24,   1],\\n        [ 66,  89],\\n        [ 62,  89],\\n        [-20,  16]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_18/tests58_18_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_104_integers():", "        if 104 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(104 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(104)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-86,  76],\\n        [ 62,  63],\\n        [ 83,  46],\\n        [ 19,  92],\\n        [ 96, -64],\\n        [ -5,  30],\\n        [ 28, -63],\\n        [ 62,  20],\\n        [ 16,  75],\\n        [ 69, -24],\\n        [ 35,   6],\\n        [-84,  23],\\n        [-14,  83],\\n        [ 83,  -7],\\n        [ 98, -30],\\n        [-86,   8],\\n        [-81,  79],\\n        [-89,  76],\\n        [ 57,  26],\\n        [ 36,  74],\\n        [ 33,  29],\\n        [-22, -33],\\n        [-38, -76],\\n        [ 17, -98],\\n        [ 65,  19],\\n        [-95,  93],\\n        [ -3, -58],\\n        [-30,  47],\\n        [-11,  -5],\\n        [-14,  -4],\\n        [  2, -42],\\n        [-27, -59],\\n        [ -6,  33],\\n        [ 79,   0],\\n        [ 60, -96],\\n        [ 46,  11],\\n        [ 97, -37],\\n        [  5,  50],\\n        [ 58,  41],\\n        [-90,  40],\\n        [-88,  47],\\n        [-57, -69],\\n        [-95, -66],\\n        [  7,  44],\\n        [ 10,  11],\\n        [ 22, -70],\\n        [  5,  20],\\n        [-41,  12],\\n        [-24,   1],\\n        [ 66,  89],\\n        [ 62,  89],\\n        [-20,  16]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_18/tests58_18_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_18/tests58_18_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-86,  76],\\n        [ 62,  63],\\n        [ 83,  46],\\n        [ 19,  92],\\n        [ 96, -64],\\n        [ -5,  30],\\n        [ 28, -63],\\n        [ 62,  20],\\n        [ 16,  75],\\n        [ 69, -24],\\n        [ 35,   6],\\n        [-84,  23],\\n        [-14,  83],\\n        [ 83,  -7],\\n        [ 98, -30],\\n        [-86,   8],\\n        [-81,  79],\\n        [-89,  76],\\n        [ 57,  26],\\n        [ 36,  74],\\n        [ 33,  29],\\n        [-22, -33],\\n        [-38, -76],\\n        [ 17, -98],\\n        [ 65,  19],\\n        [-95,  93],\\n        [ -3, -58],\\n        [-30,  47],\\n        [-11,  -5],\\n        [-14,  -4],\\n        [  2, -42],\\n        [-27, -59],\\n        [ -6,  33],\\n        [ 79,   0],\\n        [ 60, -96],\\n        [ 46,  11],\\n        [ 97, -37],\\n        [  5,  50],\\n        [ 58,  41],\\n        [-90,  40],\\n        [-88,  47],\\n        [-57, -69],\\n        [-95, -66],\\n        [  7,  44],\\n        [ 10,  11],\\n        [ 22, -70],\\n        [  5,  20],\\n        [-41,  12],\\n        [-24,   1],\\n        [ 66,  89],\\n        [ 62,  89],\\n        [-20,  16]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008286449883598834, "start": 1700303662.2862463, "stop": 1700303662.2870755, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2cfd91feabdd496285855023bf527ab8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
