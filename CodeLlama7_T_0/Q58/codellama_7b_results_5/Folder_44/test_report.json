{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000373463990399614, "start": 1700303690.375173, "stop": 1700303690.3755476, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005240179889369756, "start": 1700303690.375805, "stop": 1700303690.3763294, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00045733299339190125, "start": 1700303690.3766193, "stop": 1700303690.3770773, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004858069878537208, "start": 1700303690.3774652, "stop": 1700303690.377952, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_horizontal_matrix", "location": ["tests58_44_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005272109992802143, "start": 1700303690.3826544, "stop": 1700303690.383182, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,   73,    6,  -39,   51,    1,   39,   31,  -89,  -40,\\n           80,   21,   36,  -61,  -89,   33,  -40,  -96,   -1,  -48,\\n           14, -100,  -56,  -49,  -11,   59,    5,  -17,  -99,    8,\\n          -15,  -80,  -37,   47,  -12,   11,   13,  -32,   51,  -31,\\n           39,  -34,   56,  -32,   58,  -35,  -83,   -8,  -30,   31,\\n          -43,  -48,  -74,  -84,  -49,   68,   50,   22,  -16,  -57,\\n          -54,  -52,    3,   85,  -41,   65,  -27,   42,  -10,  -11,\\n           80,   12,   90,   35,   41,   86,   67,  -76,  -24,   71,\\n          -78,   34,   29,  -34,  -34,   63,   77,  -89,  -84,  -80,\\n          -40,  -98,  -73,   13,   58,  -61,  -36,   77,   55,  -75,\\n           79,  -95,    2,    8,  -58,  -81,  -64,   83,   20,   36,\\n          -97,   60,   73,  -47,   -1,  -85,  -34,   42,   65,   17,\\n          -57,   25,  -68,  -21,   50,   34,  -49,   64,  -62,   49,\\n          -46,  -55,   36,  -78,  -49,    7,   49,  -43,   94,  -34,\\n          -23,  -88,   -5,   59,   38,    1,  -29,  -37,   19,  -25,\\n           71,   60,   30,   49,   28,  -78,    9,   57,  100,  -30,\\n          -22,   33,   31,  -84,  -72,  -19,  -77,  -21,   34,   59,\\n           26,   13,   83,   54,   64,   -1,  -35,   22,  -93,  -87,\\n          -37,   41,   88,   15,   49,  -54,   45,  -38,  -95,  -91,\\n          -17]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,   73,    6,  -39,   51,    1,   39,   31,  -89,  -40,\\n           80,   21,   36,  -61,  -89,   33,  -40,  -96,   -1,  -48,\\n           14, -100,  -56,  -49,  -11,   59,    5,  -17,  -99,    8,\\n          -15,  -80,  -37,   47,  -12,   11,   13,  -32,   51,  -31,\\n           39,  -34,   56,  -32,   58,  -35,  -83,   -8,  -30,   31,\\n          -43,  -48,  -74,  -84,  -49,   68,   50,   22,  -16,  -57,\\n          -54,  -52,    3,   85,  -41,   65,  -27,   42,  -10,  -11,\\n           80,   12,   90,   35,   41,   86,   67,  -76,  -24,   71,\\n          -78,   34,   29,  -34,  -34,   63,   77,  -89,  -84,  -80,\\n          -40,  -98,  -73,   13,   58,  -61,  -36,   77,   55,  -75,\\n           79,  -95,    2,    8,  -58,  -81,  -64,   83,   20,   36,\\n          -97,   60,   73,  -47,   -1,  -85,  -34,   42,   65,   17,\\n          -57,   25,  -68,  -21,   50,   34,  -49,   64,  -62,   49,\\n          -46,  -55,   36,  -78,  -49,    7,   49,  -43,   94,  -34,\\n          -23,  -88,   -5,   59,   38,    1,  -29,  -37,   19,  -25,\\n           71,   60,   30,   49,   28,  -78,    9,   57,  100,  -30,\\n          -22,   33,   31,  -84,  -72,  -19,  -77,  -21,   34,   59,\\n           26,   13,   83,   54,   64,   -1,  -35,   22,  -93,  -87,\\n          -37,   41,   88,   15,   49,  -54,   45,  -38,  -95,  -91,\\n          -17]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,   73,    6,  -39,   51,    1,   39,   31,  -89,  -40,\\n           80,   21,   36,  -61,  -89,   33,  -40,  -96,   -1,  -48,\\n           14, -100,  -56,  -49,  -11,   59,    5,  -17,  -99,    8,\\n          -15,  -80,  -37,   47,  -12,   11,   13,  -32,   51,  -31,\\n           39,  -34,   56,  -32,   58,  -35,  -83,   -8,  -30,   31,\\n          -43,  -48,  -74,  -84,  -49,   68,   50,   22,  -16,  -57,\\n          -54,  -52,    3,   85,  -41,   65,  -27,   42,  -10,  -11,\\n           80,   12,   90,   35,   41,   86,   67,  -76,  -24,   71,\\n          -78,   34,   29,  -34,  -34,   63,   77,  -89,  -84,  -80,\\n          -40,  -98,  -73,   13,   58,  -61,  -36,   77,   55,  -75,\\n           79,  -95,    2,    8,  -58,  -81,  -64,   83,   20,   36,\\n          -97,   60,   73,  -47,   -1,  -85,  -34,   42,   65,   17,\\n          -57,   25,  -68,  -21,   50,   34,  -49,   64,  -62,   49,\\n          -46,  -55,   36,  -78,  -49,    7,   49,  -43,   94,  -34,\\n          -23,  -88,   -5,   59,   38,    1,  -29,  -37,   19,  -25,\\n           71,   60,   30,   49,   28,  -78,    9,   57,  100,  -30,\\n          -22,   33,   31,  -84,  -72,  -19,  -77,  -21,   34,   59,\\n           26,   13,   83,   54,   64,   -1,  -35,   22,  -93,  -87,\\n          -37,   41,   88,   15,   49,  -54,   45,  -38,  -95,  -91,\\n          -17]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,   73,    6,  -39,   51,    1,   39,   31,  -89,  -40,\\n           80,   21,   36,  -61,  -89,   33,  -40,  -96,   -1,  -48,\\n           14, -100,  -56,  -49,  -11,   59,    5,  -17,  -99,    8,\\n          -15,  -80,  -37,   47,  -12,   11,   13,  -32,   51,  -31,\\n           39,  -34,   56,  -32,   58,  -35,  -83,   -8,  -30,   31,\\n          -43,  -48,  -74,  -84,  -49,   68,   50,   22,  -16,  -57,\\n          -54,  -52,    3,   85,  -41,   65,  -27,   42,  -10,  -11,\\n           80,   12,   90,   35,   41,   86,   67,  -76,  -24,   71,\\n          -78,   34,   29,  -34,  -34,   63,   77,  -89,  -84,  -80,\\n          -40,  -98,  -73,   13,   58,  -61,  -36,   77,   55,  -75,\\n           79,  -95,    2,    8,  -58,  -81,  -64,   83,   20,   36,\\n          -97,   60,   73,  -47,   -1,  -85,  -34,   42,   65,   17,\\n          -57,   25,  -68,  -21,   50,   34,  -49,   64,  -62,   49,\\n          -46,  -55,   36,  -78,  -49,    7,   49,  -43,   94,  -34,\\n          -23,  -88,   -5,   59,   38,    1,  -29,  -37,   19,  -25,\\n           71,   60,   30,   49,   28,  -78,    9,   57,  100,  -30,\\n          -22,   33,   31,  -84,  -72,  -19,  -77,  -21,   34,   59,\\n           26,   13,   83,   54,   64,   -1,  -35,   22,  -93,  -87,\\n          -37,   41,   88,   15,   49,  -54,   45,  -38,  -95,  -91,\\n          -17]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001688162999926135, "start": 1700303690.3780878, "stop": 1700303690.3797765, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5f141914d0f04686aef8301802152741", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
