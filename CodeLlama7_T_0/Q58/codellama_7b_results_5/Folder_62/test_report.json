{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022550698486156762, "start": 1700303708.2736013, "stop": 1700303708.2738273, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033159699523821473, "start": 1700303708.2740815, "stop": 1700303708.2744136, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020105199655517936, "start": 1700303708.2746964, "stop": 1700303708.2748978, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_having_186_integers", "location": ["tests58_62_5.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025164498947560787, "start": 1700303708.2752829, "stop": 1700303708.275535, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_horizontal_matrix", "location": ["tests58_62_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002492200001142919, "start": 1700303708.2816224, "stop": 1700303708.2818723, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_having_186_integers", "location": ["tests58_62_5.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  42,  -35],\\n        [  47,  -73],\\n        [ -23,  -29],\\n        [  63,  -91],\\n        [  25,  -83],\\n        [  39,   81],\\n        [   5,   43],\\n        [ -87,   20],\\n        [ -24,   11],\\n        [ -75,   27],\\n        [  36,   55],\\n        [ -44,  -49],\\n        [  90,  -29],\\n        [ -81,   31],\\n        [   0,  -65],\\n        [  46,    0],\\n        [ -92,  -86],\\n        [ -37,   73],\\n        [  60,  -82],\\n        [  57,   19],\\n        [  62,  -96],\\n        [  65,  -87],\\n        [  53,   40],\\n        [ -31,   65],\\n        [  67,    4],\\n        [ -97,  -32],\\n        [ -52,    6],\\n        [  14,   79],\\n        [ -96,  -57],\\n        [   4,    2],\\n        [  40,  -30],\\n        [  48,  -58],\\n        [  24,   57],\\n        [ -81,   57],\\n        [  76,   60],\\n        [ -53,  -34],\\n        [  62,   74],\\n        [  79,  -53],\\n        [ -55,   43],\\n        [  26,   29],\\n        [ -39,   18],\\n        [ -51,   52],\\n        [  12,  -91],\\n        [  79,  -54],\\n        [  29,   82],\\n        [ -76,   19],\\n        [ -65,   96],\\n        [ -54,  -44],\\n        [   8,  -60],\\n        [ 100,  -16],\\n        [ -77,   41],\\n        [  23,   33],\\n        [  46,   25],\\n        [ -75,  -27],\\n        [ -41,  -60],\\n        [  90,   65],\\n        [ -67,   87],\\n        [ -53,   15],\\n        [  52,   93],\\n        [  53,  -20],\\n        [ -71,  -62],\\n        [  90,  -81],\\n        [  75,  -12],\\n        [ -36,   99],\\n        [  81,  -10],\\n        [  31,  -56],\\n        [ -74,   86],\\n        [  17,   12],\\n        [ -69,   68],\\n        [ -41, -100],\\n        [  14,  -76],\\n        [  23,  -35],\\n        [ -77,   52],\\n        [  86,  -67],\\n        [ -17,  -39],\\n        [  22,  -42],\\n        [   6,   47],\\n        [  44,   21],\\n        [ -77,   32],\\n        [ 100,   59],\\n        [   1,  -33],\\n        [  82,   12],\\n        [ -29,   37],\\n        [  25,   75],\\n        [ -59,  -12],\\n        [ -17,   18],\\n        [ -94,   46],\\n        [  83,  -20],\\n        [ -35,  -65],\\n        [ -78,  -15],\\n        [ -35,  -62],\\n        [  84,   24],\\n        [ -47,  -50]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  42,  -35],\\n        [  47,  -73],\\n        [ -23,  -29],\\n        [  63,  -91],\\n        [  25,  -83],\\n        [  39,   81],\\n        [   5,   43],\\n        [ -87,   20],\\n        [ -24,   11],\\n        [ -75,   27],\\n        [  36,   55],\\n        [ -44,  -49],\\n        [  90,  -29],\\n        [ -81,   31],\\n        [   0,  -65],\\n        [  46,    0],\\n        [ -92,  -86],\\n        [ -37,   73],\\n        [  60,  -82],\\n        [  57,   19],\\n        [  62,  -96],\\n        [  65,  -87],\\n        [  53,   40],\\n        [ -31,   65],\\n        [  67,    4],\\n        [ -97,  -32],\\n        [ -52,    6],\\n        [  14,   79],\\n        [ -96,  -57],\\n        [   4,    2],\\n        [  40,  -30],\\n        [  48,  -58],\\n        [  24,   57],\\n        [ -81,   57],\\n        [  76,   60],\\n        [ -53,  -34],\\n        [  62,   74],\\n        [  79,  -53],\\n        [ -55,   43],\\n        [  26,   29],\\n        [ -39,   18],\\n        [ -51,   52],\\n        [  12,  -91],\\n        [  79,  -54],\\n        [  29,   82],\\n        [ -76,   19],\\n        [ -65,   96],\\n        [ -54,  -44],\\n        [   8,  -60],\\n        [ 100,  -16],\\n        [ -77,   41],\\n        [  23,   33],\\n        [  46,   25],\\n        [ -75,  -27],\\n        [ -41,  -60],\\n        [  90,   65],\\n        [ -67,   87],\\n        [ -53,   15],\\n        [  52,   93],\\n        [  53,  -20],\\n        [ -71,  -62],\\n        [  90,  -81],\\n        [  75,  -12],\\n        [ -36,   99],\\n        [  81,  -10],\\n        [  31,  -56],\\n        [ -74,   86],\\n        [  17,   12],\\n        [ -69,   68],\\n        [ -41, -100],\\n        [  14,  -76],\\n        [  23,  -35],\\n        [ -77,   52],\\n        [  86,  -67],\\n        [ -17,  -39],\\n        [  22,  -42],\\n        [   6,   47],\\n        [  44,   21],\\n        [ -77,   32],\\n        [ 100,   59],\\n        [   1,  -33],\\n        [  82,   12],\\n        [ -29,   37],\\n        [  25,   75],\\n        [ -59,  -12],\\n        [ -17,   18],\\n        [ -94,   46],\\n        [  83,  -20],\\n        [ -35,  -65],\\n        [ -78,  -15],\\n        [ -35,  -62],\\n        [  84,   24],\\n        [ -47,  -50]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  42,  -35],\\n        [  47,  -73],\\n        [ -23,  -29],\\n        [  63,  -91],\\n        [  25,  -83],\\n        [  39,   81],\\n        [   5,   43],\\n        [ -87,   20],\\n        [ -24,   11],\\n        [ -75,   27],\\n        [  36,   55],\\n        [ -44,  -49],\\n        [  90,  -29],\\n        [ -81,   31],\\n        [   0,  -65],\\n        [  46,    0],\\n        [ -92,  -86],\\n        [ -37,   73],\\n        [  60,  -82],\\n        [  57,   19],\\n        [  62,  -96],\\n        [  65,  -87],\\n        [  53,   40],\\n        [ -31,   65],\\n        [  67,    4],\\n        [ -97,  -32],\\n        [ -52,    6],\\n        [  14,   79],\\n        [ -96,  -57],\\n        [   4,    2],\\n        [  40,  -30],\\n        [  48,  -58],\\n        [  24,   57],\\n        [ -81,   57],\\n        [  76,   60],\\n        [ -53,  -34],\\n        [  62,   74],\\n        [  79,  -53],\\n        [ -55,   43],\\n        [  26,   29],\\n        [ -39,   18],\\n        [ -51,   52],\\n        [  12,  -91],\\n        [  79,  -54],\\n        [  29,   82],\\n        [ -76,   19],\\n        [ -65,   96],\\n        [ -54,  -44],\\n        [   8,  -60],\\n        [ 100,  -16],\\n        [ -77,   41],\\n        [  23,   33],\\n        [  46,   25],\\n        [ -75,  -27],\\n        [ -41,  -60],\\n        [  90,   65],\\n        [ -67,   87],\\n        [ -53,   15],\\n        [  52,   93],\\n        [  53,  -20],\\n        [ -71,  -62],\\n        [  90,  -81],\\n        [  75,  -12],\\n        [ -36,   99],\\n        [  81,  -10],\\n        [  31,  -56],\\n        [ -74,   86],\\n        [  17,   12],\\n        [ -69,   68],\\n        [ -41, -100],\\n        [  14,  -76],\\n        [  23,  -35],\\n        [ -77,   52],\\n        [  86,  -67],\\n        [ -17,  -39],\\n        [  22,  -42],\\n        [   6,   47],\\n        [  44,   21],\\n        [ -77,   32],\\n        [ 100,   59],\\n        [   1,  -33],\\n        [  82,   12],\\n        [ -29,   37],\\n        [  25,   75],\\n        [ -59,  -12],\\n        [ -17,   18],\\n        [ -94,   46],\\n        [  83,  -20],\\n        [ -35,  -65],\\n        [ -78,  -15],\\n        [ -35,  -62],\\n        [  84,   24],\\n        [ -47,  -50]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  42,  -35],\\n        [  47,  -73],\\n        [ -23,  -29],\\n        [  63,  -91],\\n        [  25,  -83],\\n        [  39,   81],\\n        [   5,   43],\\n        [ -87,   20],\\n        [ -24,   11],\\n        [ -75,   27],\\n        [  36,   55],\\n        [ -44,  -49],\\n        [  90,  -29],\\n        [ -81,   31],\\n        [   0,  -65],\\n        [  46,    0],\\n        [ -92,  -86],\\n        [ -37,   73],\\n        [  60,  -82],\\n        [  57,   19],\\n        [  62,  -96],\\n        [  65,  -87],\\n        [  53,   40],\\n        [ -31,   65],\\n        [  67,    4],\\n        [ -97,  -32],\\n        [ -52,    6],\\n        [  14,   79],\\n        [ -96,  -57],\\n        [   4,    2],\\n        [  40,  -30],\\n        [  48,  -58],\\n        [  24,   57],\\n        [ -81,   57],\\n        [  76,   60],\\n        [ -53,  -34],\\n        [  62,   74],\\n        [  79,  -53],\\n        [ -55,   43],\\n        [  26,   29],\\n        [ -39,   18],\\n        [ -51,   52],\\n        [  12,  -91],\\n        [  79,  -54],\\n        [  29,   82],\\n        [ -76,   19],\\n        [ -65,   96],\\n        [ -54,  -44],\\n        [   8,  -60],\\n        [ 100,  -16],\\n        [ -77,   41],\\n        [  23,   33],\\n        [  46,   25],\\n        [ -75,  -27],\\n        [ -41,  -60],\\n        [  90,   65],\\n        [ -67,   87],\\n        [ -53,   15],\\n        [  52,   93],\\n        [  53,  -20],\\n        [ -71,  -62],\\n        [  90,  -81],\\n        [  75,  -12],\\n        [ -36,   99],\\n        [  81,  -10],\\n        [  31,  -56],\\n        [ -74,   86],\\n        [  17,   12],\\n        [ -69,   68],\\n        [ -41, -100],\\n        [  14,  -76],\\n        [  23,  -35],\\n        [ -77,   52],\\n        [  86,  -67],\\n        [ -17,  -39],\\n        [  22,  -42],\\n        [   6,   47],\\n        [  44,   21],\\n        [ -77,   32],\\n        [ 100,   59],\\n        [   1,  -33],\\n        [  82,   12],\\n        [ -29,   37],\\n        [  25,   75],\\n        [ -59,  -12],\\n        [ -17,   18],\\n        [ -94,   46],\\n        [  83,  -20],\\n        [ -35,  -65],\\n        [ -78,  -15],\\n        [ -35,  -62],\\n        [  84,   24],\\n        [ -47,  -50]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018309259903617203, "start": 1700303708.2756586, "stop": 1700303708.27749, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b5dfee20df5a4d639d30f063927b946b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
