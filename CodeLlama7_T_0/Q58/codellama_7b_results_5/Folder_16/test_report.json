{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_16_5.py::test_horizontal_matrix", "location": ["tests58_16_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014027999714016914, "start": 1700303659.9924219, "stop": 1700303659.9925628, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017272098921239376, "start": 1700303659.9922526, "stop": 1700303659.992426, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017861899686977267, "start": 1700303659.992707, "stop": 1700303659.9928863, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.937501115724444e-05, "start": 1700303659.9931688, "stop": 1700303659.9932587, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.235000470653176e-05, "start": 1700303659.9936476, "stop": 1700303659.9937406, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-61,  29],\\n        [-92,   2],\\n        [  3,  33],\\n        [-38, -27],\\n        [-97, -96],\\n        [ 11, -80],\\n        [ 81,  96],\\n        [  8, -26],\\n        [ 59, -15],\\n        [-44, -93],\\n        [ 87,  34],\\n        [ -6,  57],\\n        [ -3,  -3],\\n        [-34, -31],\\n        [ 51,   7],\\n        [ 91, -57],\\n        [-18,   2],\\n        [-94,  92],\\n        [ 64, -28],\\n        [-56,  54],\\n        [ 44,  63],\\n        [-49, -60],\\n        [-32,  24],\\n        [-78,  87],\\n        [ 65,  66],\\n        [ 82,  32],\\n        [ 37,  32],\\n        [ 40,  35],\\n        [  4,  90],\\n        [  4,  29],\\n        [ 47,  30],\\n        [-25,  56],\\n        [ 67,  67],\\n        [-13,   3],\\n        [-99,  56],\\n        [ 16, -60],\\n        [ 41,  17],\\n        [-43, -16],\\n        [-75,  63],\\n        [ 11,  89],\\n        [ -1,  65],\\n        [ 94,  43],\\n        [-27,  -9],\\n        [ 57, -33],\\n        [-56, -31],\\n        [ 98, -10],\\n        [-70,  20],\\n        [ 79,  77],\\n        [-22,  66],\\n        [-24,  17],\\n        [ 90, -85],\\n        [-57, -38],\\n        [-86,  18],\\n        [ 28, -55],\\n        [ 13,  46],\\n        [ -2,  82],\\n        [ 17,  43],\\n        [ 38,  74],\\n        [-46, -50],\\n        [-62, -47],\\n        [ 35, -17],\\n        [ 85,  63],\\n        [-34,  10],\\n        [ 81,  16],\\n        [ 35, -28],\\n        [ 95, -75],\\n        [-80,  47],\\n        [-67,  32],\\n        [-61, -74],\\n        [ 88,  61],\\n        [ 23, -35],\\n        [-40,  26],\\n        [-54,  91],\\n        [-39,  74],\\n        [ -1, -15],\\n        [ 49,   2],\\n        [ 38,  32]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-61,  29],\\n        [-92,   2],\\n        [  3,  33],\\n        [-38, -27],\\n        [-97, -96],\\n        [ 11, -80],\\n        [ 81,  96],\\n        [  8, -26],\\n        [ 59, -15],\\n        [-44, -93],\\n        [ 87,  34],\\n        [ -6,  57],\\n        [ -3,  -3],\\n        [-34, -31],\\n        [ 51,   7],\\n        [ 91, -57],\\n        [-18,   2],\\n        [-94,  92],\\n        [ 64, -28],\\n        [-56,  54],\\n        [ 44,  63],\\n        [-49, -60],\\n        [-32,  24],\\n        [-78,  87],\\n        [ 65,  66],\\n        [ 82,  32],\\n        [ 37,  32],\\n        [ 40,  35],\\n        [  4,  90],\\n        [  4,  29],\\n        [ 47,  30],\\n        [-25,  56],\\n        [ 67,  67],\\n        [-13,   3],\\n        [-99,  56],\\n        [ 16, -60],\\n        [ 41,  17],\\n        [-43, -16],\\n        [-75,  63],\\n        [ 11,  89],\\n        [ -1,  65],\\n        [ 94,  43],\\n        [-27,  -9],\\n        [ 57, -33],\\n        [-56, -31],\\n        [ 98, -10],\\n        [-70,  20],\\n        [ 79,  77],\\n        [-22,  66],\\n        [-24,  17],\\n        [ 90, -85],\\n        [-57, -38],\\n        [-86,  18],\\n        [ 28, -55],\\n        [ 13,  46],\\n        [ -2,  82],\\n        [ 17,  43],\\n        [ 38,  74],\\n        [-46, -50],\\n        [-62, -47],\\n        [ 35, -17],\\n        [ 85,  63],\\n        [-34,  10],\\n        [ 81,  16],\\n        [ 35, -28],\\n        [ 95, -75],\\n        [-80,  47],\\n        [-67,  32],\\n        [-61, -74],\\n        [ 88,  61],\\n        [ 23, -35],\\n        [-40,  26],\\n        [-54,  91],\\n        [-39,  74],\\n        [ -1, -15],\\n        [ 49,   2],\\n        [ 38,  32]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-61,  29],\\n        [-92,   2],\\n        [  3,  33],\\n        [-38, -27],\\n        [-97, -96],\\n        [ 11, -80],\\n        [ 81,  96],\\n        [  8, -26],\\n        [ 59, -15],\\n        [-44, -93],\\n        [ 87,  34],\\n        [ -6,  57],\\n        [ -3,  -3],\\n        [-34, -31],\\n        [ 51,   7],\\n        [ 91, -57],\\n        [-18,   2],\\n        [-94,  92],\\n        [ 64, -28],\\n        [-56,  54],\\n        [ 44,  63],\\n        [-49, -60],\\n        [-32,  24],\\n        [-78,  87],\\n        [ 65,  66],\\n        [ 82,  32],\\n        [ 37,  32],\\n        [ 40,  35],\\n        [  4,  90],\\n        [  4,  29],\\n        [ 47,  30],\\n        [-25,  56],\\n        [ 67,  67],\\n        [-13,   3],\\n        [-99,  56],\\n        [ 16, -60],\\n        [ 41,  17],\\n        [-43, -16],\\n        [-75,  63],\\n        [ 11,  89],\\n        [ -1,  65],\\n        [ 94,  43],\\n        [-27,  -9],\\n        [ 57, -33],\\n        [-56, -31],\\n        [ 98, -10],\\n        [-70,  20],\\n        [ 79,  77],\\n        [-22,  66],\\n        [-24,  17],\\n        [ 90, -85],\\n        [-57, -38],\\n        [-86,  18],\\n        [ 28, -55],\\n        [ 13,  46],\\n        [ -2,  82],\\n        [ 17,  43],\\n        [ 38,  74],\\n        [-46, -50],\\n        [-62, -47],\\n        [ 35, -17],\\n        [ 85,  63],\\n        [-34,  10],\\n        [ 81,  16],\\n        [ 35, -28],\\n        [ 95, -75],\\n        [-80,  47],\\n        [-67,  32],\\n        [-61, -74],\\n        [ 88,  61],\\n        [ 23, -35],\\n        [-40,  26],\\n        [-54,  91],\\n        [-39,  74],\\n        [ -1, -15],\\n        [ 49,   2],\\n        [ 38,  32]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-61,  29],\\n        [-92,   2],\\n        [  3,  33],\\n        [-38, -27],\\n        [-97, -96],\\n        [ 11, -80],\\n        [ 81,  96],\\n        [  8, -26],\\n        [ 59, -15],\\n        [-44, -93],\\n        [ 87,  34],\\n        [ -6,  57],\\n        [ -3,  -3],\\n        [-34, -31],\\n        [ 51,   7],\\n        [ 91, -57],\\n        [-18,   2],\\n        [-94,  92],\\n        [ 64, -28],\\n        [-56,  54],\\n        [ 44,  63],\\n        [-49, -60],\\n        [-32,  24],\\n        [-78,  87],\\n        [ 65,  66],\\n        [ 82,  32],\\n        [ 37,  32],\\n        [ 40,  35],\\n        [  4,  90],\\n        [  4,  29],\\n        [ 47,  30],\\n        [-25,  56],\\n        [ 67,  67],\\n        [-13,   3],\\n        [-99,  56],\\n        [ 16, -60],\\n        [ 41,  17],\\n        [-43, -16],\\n        [-75,  63],\\n        [ 11,  89],\\n        [ -1,  65],\\n        [ 94,  43],\\n        [-27,  -9],\\n        [ 57, -33],\\n        [-56, -31],\\n        [ 98, -10],\\n        [-70,  20],\\n        [ 79,  77],\\n        [-22,  66],\\n        [-24,  17],\\n        [ 90, -85],\\n        [-57, -38],\\n        [-86,  18],\\n        [ 28, -55],\\n        [ 13,  46],\\n        [ -2,  82],\\n        [ 17,  43],\\n        [ 38,  74],\\n        [-46, -50],\\n        [-62, -47],\\n        [ 35, -17],\\n        [ 85,  63],\\n        [-34,  10],\\n        [ 81,  16],\\n        [ 35, -28],\\n        [ 95, -75],\\n        [-80,  47],\\n        [-67,  32],\\n        [-61, -74],\\n        [ 88,  61],\\n        [ 23, -35],\\n        [-40,  26],\\n        [-54,  91],\\n        [-39,  74],\\n        [ -1, -15],\\n        [ 49,   2],\\n        [ 38,  32]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001390808989526704, "start": 1700303659.9938693, "stop": 1700303659.9952607, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6b7e1b2ccef94512b87fad1a621ee113", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
