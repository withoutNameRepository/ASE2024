{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022705300943925977, "start": 1700303741.8881419, "stop": 1700303741.8883693, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003347979800309986, "start": 1700303741.8886445, "stop": 1700303741.8889797, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019795302068814635, "start": 1700303741.8892605, "stop": 1700303741.8894591, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002530509955249727, "start": 1700303741.889839, "stop": 1700303741.8900926, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_horizontal_matrix", "location": ["tests58_97_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011836900375783443, "start": 1700303741.898872, "stop": 1700303741.8989909, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   47],\\n        [ -93,   -8],\\n        [  26,  -48],\\n        [ -77,   44],\\n        [ -98,   19],\\n        [  19,   39],\\n        [ -73,   -3],\\n        [ -43,  -85],\\n        [ -15,  -60],\\n        [ -56,   30],\\n        [  92,  -82],\\n        [ -78,  -23],\\n        [ -64,   29],\\n        [  -9,   18],\\n        [  46,   63],\\n        [  22,   43],\\n        [ -56,  -25],\\n        [  30,  -84],\\n        [  49,   20],\\n        [  14,  -34],\\n        [  65,   96],\\n        [  20,   71],\\n        [  16,   46],\\n        [   7,   47],\\n        [ -99,  -67],\\n        [  53,    9],\\n        [ -82,  -58],\\n        [ -87,  -27],\\n        [  43,   22],\\n        [ -73,  -34],\\n        [ -97,   11],\\n        [  72,  -73],\\n        [ -13,  -18],\\n        [ -92,   39],\\n        [  11,   98],\\n        [ -46,  -60],\\n        [ -45,  -69],\\n        [ -76,  100],\\n        [  92,   18],\\n        [   4,   -4],\\n        [ -68,    4],\\n        [ -30,   52],\\n        [  26,  -17],\\n        [ -80,  -90],\\n        [  87,   77],\\n        [ -18,  -68],\\n        [ -32,   48],\\n        [  89,   54],\\n        [ -13,  -86],\\n        [  76,   92],\\n        [ -52,   50],\\n        [ -69,   53],\\n        [  18, -100],\\n        [  33,   16],\\n        [ -10,  -20],\\n        [  14,  -16],\\n        [ -20,   31],\\n        [ -77,  -12],\\n        [  52,   -4],\\n        [ -12,  100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   47],\\n        [ -93,   -8],\\n        [  26,  -48],\\n        [ -77,   44],\\n        [ -98,   19],\\n        [  19,   39],\\n        [ -73,   -3],\\n        [ -43,  -85],\\n        [ -15,  -60],\\n        [ -56,   30],\\n        [  92,  -82],\\n        [ -78,  -23],\\n        [ -64,   29],\\n        [  -9,   18],\\n        [  46,   63],\\n        [  22,   43],\\n        [ -56,  -25],\\n        [  30,  -84],\\n        [  49,   20],\\n        [  14,  -34],\\n        [  65,   96],\\n        [  20,   71],\\n        [  16,   46],\\n        [   7,   47],\\n        [ -99,  -67],\\n        [  53,    9],\\n        [ -82,  -58],\\n        [ -87,  -27],\\n        [  43,   22],\\n        [ -73,  -34],\\n        [ -97,   11],\\n        [  72,  -73],\\n        [ -13,  -18],\\n        [ -92,   39],\\n        [  11,   98],\\n        [ -46,  -60],\\n        [ -45,  -69],\\n        [ -76,  100],\\n        [  92,   18],\\n        [   4,   -4],\\n        [ -68,    4],\\n        [ -30,   52],\\n        [  26,  -17],\\n        [ -80,  -90],\\n        [  87,   77],\\n        [ -18,  -68],\\n        [ -32,   48],\\n        [  89,   54],\\n        [ -13,  -86],\\n        [  76,   92],\\n        [ -52,   50],\\n        [ -69,   53],\\n        [  18, -100],\\n        [  33,   16],\\n        [ -10,  -20],\\n        [  14,  -16],\\n        [ -20,   31],\\n        [ -77,  -12],\\n        [  52,   -4],\\n        [ -12,  100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   47],\\n        [ -93,   -8],\\n        [  26,  -48],\\n        [ -77,   44],\\n        [ -98,   19],\\n        [  19,   39],\\n        [ -73,   -3],\\n        [ -43,  -85],\\n        [ -15,  -60],\\n        [ -56,   30],\\n        [  92,  -82],\\n        [ -78,  -23],\\n        [ -64,   29],\\n        [  -9,   18],\\n        [  46,   63],\\n        [  22,   43],\\n        [ -56,  -25],\\n        [  30,  -84],\\n        [  49,   20],\\n        [  14,  -34],\\n        [  65,   96],\\n        [  20,   71],\\n        [  16,   46],\\n        [   7,   47],\\n        [ -99,  -67],\\n        [  53,    9],\\n        [ -82,  -58],\\n        [ -87,  -27],\\n        [  43,   22],\\n        [ -73,  -34],\\n        [ -97,   11],\\n        [  72,  -73],\\n        [ -13,  -18],\\n        [ -92,   39],\\n        [  11,   98],\\n        [ -46,  -60],\\n        [ -45,  -69],\\n        [ -76,  100],\\n        [  92,   18],\\n        [   4,   -4],\\n        [ -68,    4],\\n        [ -30,   52],\\n        [  26,  -17],\\n        [ -80,  -90],\\n        [  87,   77],\\n        [ -18,  -68],\\n        [ -32,   48],\\n        [  89,   54],\\n        [ -13,  -86],\\n        [  76,   92],\\n        [ -52,   50],\\n        [ -69,   53],\\n        [  18, -100],\\n        [  33,   16],\\n        [ -10,  -20],\\n        [  14,  -16],\\n        [ -20,   31],\\n        [ -77,  -12],\\n        [  52,   -4],\\n        [ -12,  100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   47],\\n        [ -93,   -8],\\n        [  26,  -48],\\n        [ -77,   44],\\n        [ -98,   19],\\n        [  19,   39],\\n        [ -73,   -3],\\n        [ -43,  -85],\\n        [ -15,  -60],\\n        [ -56,   30],\\n        [  92,  -82],\\n        [ -78,  -23],\\n        [ -64,   29],\\n        [  -9,   18],\\n        [  46,   63],\\n        [  22,   43],\\n        [ -56,  -25],\\n        [  30,  -84],\\n        [  49,   20],\\n        [  14,  -34],\\n        [  65,   96],\\n        [  20,   71],\\n        [  16,   46],\\n        [   7,   47],\\n        [ -99,  -67],\\n        [  53,    9],\\n        [ -82,  -58],\\n        [ -87,  -27],\\n        [  43,   22],\\n        [ -73,  -34],\\n        [ -97,   11],\\n        [  72,  -73],\\n        [ -13,  -18],\\n        [ -92,   39],\\n        [  11,   98],\\n        [ -46,  -60],\\n        [ -45,  -69],\\n        [ -76,  100],\\n        [  92,   18],\\n        [   4,   -4],\\n        [ -68,    4],\\n        [ -30,   52],\\n        [  26,  -17],\\n        [ -80,  -90],\\n        [  87,   77],\\n        [ -18,  -68],\\n        [ -32,   48],\\n        [  89,   54],\\n        [ -13,  -86],\\n        [  76,   92],\\n        [ -52,   50],\\n        [ -69,   53],\\n        [  18, -100],\\n        [  33,   16],\\n        [ -10,  -20],\\n        [  14,  -16],\\n        [ -20,   31],\\n        [ -77,  -12],\\n        [  52,   -4],\\n        [ -12,  100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012921770103275776, "start": 1700303741.8902194, "stop": 1700303741.8915126, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6bad120a724248b8b1e97a19c3b54b67", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
