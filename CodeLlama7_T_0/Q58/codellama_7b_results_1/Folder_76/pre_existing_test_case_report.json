{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-67,  60, -80,  -9, -23, -91, -23,  32,  55,  27,   6, -87,  37,\\n          57, -23, -74,   9, -25,  92, -76,  51, -31,  92,  36,  62, -45,\\n         -38, -41,  72,  19,  10, -96, -70, 100, -87,  44, -87, -51,  28,\\n          25,  27,  72, -20,  73,  64, -63,  23, -30,  62, -25,  65,  11,\\n          65, -47, -11, -18, -35,  13, -16,  56,  63, -88,  58, -84,  46,\\n         -84,  31,  49, -79,  45, -60, -56,  94, -89, -73,  96,  37, -17,\\n         -53,  25,  83,  25,  21,  62, -28,  -1, -86, -10,  10,  28,  93,\\n          31,  89,  41, -89,  27, -20, -55,  94, -21, -96, -35, -87,  -6,\\n          25,  99,  25,  -6, -37, -75, -82,  46,  69,  92,  74, -24, -89,\\n          -1,  -5, -64,  91,  21, -73,  -6, -40,  28,  66,  68,  38,  13,\\n         -15, -75, -80,  18, -32,  41,  88, -65, -28,  69,  80,  34,  95,\\n         -95, -80, -75,  68, -19, -81, -36,   2,  27, -32, -69,  23, -61,\\n         -69,  31,  51]]))",
    0.00123
  ]
}