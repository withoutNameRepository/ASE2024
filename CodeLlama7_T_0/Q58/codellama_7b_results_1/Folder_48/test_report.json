{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_1.py::test_horizontal_matrix", "location": ["tests58_48_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001776970166247338, "start": 1700303341.0571356, "stop": 1700303341.0573142, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019432799308560789, "start": 1700303341.0568805, "stop": 1700303341.057076, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022746800095774233, "start": 1700303341.0576038, "stop": 1700303341.0578322, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_one_integer", "location": ["tests58_48_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.229098213836551e-05, "start": 1700303341.058133, "stop": 1700303341.0582259, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.449099889025092e-05, "start": 1700303341.0586247, "stop": 1700303341.0587196, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_1.py::test_matrix_of_having_130_integers", "location": ["tests58_48_1.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_1.py": 1, "Folder_48": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74, -88],\\n        [ -7,  17],\\n        [  4,  71],\\n        [-11, -58],\\n        [ 67, -71],\\n        [  8,  68],\\n        [ 38, -67],\\n        [ -1,  49],\\n        [ 73, -76],\\n        [ 88,   0],\\n        [ 74,  59],\\n        [-86,  73],\\n        [-19,  75],\\n        [ -7, -15],\\n        [-31, -81],\\n        [ 28,  72],\\n        [ -7, -26],\\n        [-60,  61],\\n        [-30,  69],\\n        [-58, -62],\\n        [-98, -32],\\n        [ 17,  93],\\n        [-10, -93],\\n        [ 66,  71],\\n        [ 65,  11],\\n        [ 10,  51],\\n        [ 89,  93],\\n        [-18,  80],\\n        [ 25,  85],\\n        [ 18,   3],\\n        [ 61, -81],\\n        [-20,  53],\\n        [ 25, -55],\\n        [-71,  35],\\n        [-19,  32],\\n        [-22,  82],\\n        [ 69,   7],\\n        [-48,   9],\\n        [-96,  82],\\n        [ 22,  42],\\n        [-20,  24],\\n        [ 26,  33],\\n        [  6, -84],\\n        [ 57,  -5],\\n        [ 95, -96],\\n        [-80, -87],\\n        [ 68,  95],\\n        [-54,  35],\\n        [ 95,  95],\\n        [ 62,  15],\\n        [ 56,  44],\\n        [-30, -61],\\n        [ 36, -18],\\n        [ 38,  86],\\n        [-12,  68],\\n        [ -2,  56],\\n        [-80, -32],\\n        [-16,  12],\\n        [ 94,  85],\\n        [ 11,  89],\\n        [-23, -96],\\n        [ 50, -26],\\n        [ 10,   6],\\n        [-55,  17],\\n        [ 20,  91]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74, -88],\\n        [ -7,  17],\\n        [  4,  71],\\n        [-11, -58],\\n        [ 67, -71],\\n        [  8,  68],\\n        [ 38, -67],\\n        [ -1,  49],\\n        [ 73, -76],\\n        [ 88,   0],\\n        [ 74,  59],\\n        [-86,  73],\\n        [-19,  75],\\n        [ -7, -15],\\n        [-31, -81],\\n        [ 28,  72],\\n        [ -7, -26],\\n        [-60,  61],\\n        [-30,  69],\\n        [-58, -62],\\n        [-98, -32],\\n        [ 17,  93],\\n        [-10, -93],\\n        [ 66,  71],\\n        [ 65,  11],\\n        [ 10,  51],\\n        [ 89,  93],\\n        [-18,  80],\\n        [ 25,  85],\\n        [ 18,   3],\\n        [ 61, -81],\\n        [-20,  53],\\n        [ 25, -55],\\n        [-71,  35],\\n        [-19,  32],\\n        [-22,  82],\\n        [ 69,   7],\\n        [-48,   9],\\n        [-96,  82],\\n        [ 22,  42],\\n        [-20,  24],\\n        [ 26,  33],\\n        [  6, -84],\\n        [ 57,  -5],\\n        [ 95, -96],\\n        [-80, -87],\\n        [ 68,  95],\\n        [-54,  35],\\n        [ 95,  95],\\n        [ 62,  15],\\n        [ 56,  44],\\n        [-30, -61],\\n        [ 36, -18],\\n        [ 38,  86],\\n        [-12,  68],\\n        [ -2,  56],\\n        [-80, -32],\\n        [-16,  12],\\n        [ 94,  85],\\n        [ 11,  89],\\n        [-23, -96],\\n        [ 50, -26],\\n        [ 10,   6],\\n        [-55,  17],\\n        [ 20,  91]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74, -88],\\n        [ -7,  17],\\n        [  4,  71],\\n        [-11, -58],\\n        [ 67, -71],\\n        [  8,  68],\\n        [ 38, -67],\\n        [ -1,  49],\\n        [ 73, -76],\\n        [ 88,   0],\\n        [ 74,  59],\\n        [-86,  73],\\n        [-19,  75],\\n        [ -7, -15],\\n        [-31, -81],\\n        [ 28,  72],\\n        [ -7, -26],\\n        [-60,  61],\\n        [-30,  69],\\n        [-58, -62],\\n        [-98, -32],\\n        [ 17,  93],\\n        [-10, -93],\\n        [ 66,  71],\\n        [ 65,  11],\\n        [ 10,  51],\\n        [ 89,  93],\\n        [-18,  80],\\n        [ 25,  85],\\n        [ 18,   3],\\n        [ 61, -81],\\n        [-20,  53],\\n        [ 25, -55],\\n        [-71,  35],\\n        [-19,  32],\\n        [-22,  82],\\n        [ 69,   7],\\n        [-48,   9],\\n        [-96,  82],\\n        [ 22,  42],\\n        [-20,  24],\\n        [ 26,  33],\\n        [  6, -84],\\n        [ 57,  -5],\\n        [ 95, -96],\\n        [-80, -87],\\n        [ 68,  95],\\n        [-54,  35],\\n        [ 95,  95],\\n        [ 62,  15],\\n        [ 56,  44],\\n        [-30, -61],\\n        [ 36, -18],\\n        [ 38,  86],\\n        [-12,  68],\\n        [ -2,  56],\\n        [-80, -32],\\n        [-16,  12],\\n        [ 94,  85],\\n        [ 11,  89],\\n        [-23, -96],\\n        [ 50, -26],\\n        [ 10,   6],\\n        [-55,  17],\\n        [ 20,  91]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_48/tests58_48_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74, -88],\\n        [ -7,  17],\\n        [  4,  71],\\n        [-11, -58],\\n        [ 67, -71],\\n        [  8,  68],\\n        [ 38, -67],\\n        [ -1,  49],\\n        [ 73, -76],\\n        [ 88,   0],\\n        [ 74,  59],\\n        [-86,  73],\\n        [-19,  75],\\n        [ -7, -15],\\n        [-31, -81],\\n        [ 28,  72],\\n        [ -7, -26],\\n        [-60,  61],\\n        [-30,  69],\\n        [-58, -62],\\n        [-98, -32],\\n        [ 17,  93],\\n        [-10, -93],\\n        [ 66,  71],\\n        [ 65,  11],\\n        [ 10,  51],\\n        [ 89,  93],\\n        [-18,  80],\\n        [ 25,  85],\\n        [ 18,   3],\\n        [ 61, -81],\\n        [-20,  53],\\n        [ 25, -55],\\n        [-71,  35],\\n        [-19,  32],\\n        [-22,  82],\\n        [ 69,   7],\\n        [-48,   9],\\n        [-96,  82],\\n        [ 22,  42],\\n        [-20,  24],\\n        [ 26,  33],\\n        [  6, -84],\\n        [ 57,  -5],\\n        [ 95, -96],\\n        [-80, -87],\\n        [ 68,  95],\\n        [-54,  35],\\n        [ 95,  95],\\n        [ 62,  15],\\n        [ 56,  44],\\n        [-30, -61],\\n        [ 36, -18],\\n        [ 38,  86],\\n        [-12,  68],\\n        [ -2,  56],\\n        [-80, -32],\\n        [-16,  12],\\n        [ 94,  85],\\n        [ 11,  89],\\n        [-23, -96],\\n        [ 50, -26],\\n        [ 10,   6],\\n        [-55,  17],\\n        [ 20,  91]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014628650096710771, "start": 1700303341.0588446, "stop": 1700303341.0603082, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "18bd75600afb4ffbbf402f5b1706d262", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
