{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013869997928850353, "start": 1700303364.5853791, "stop": 1700303364.5855184, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_horizontal_matrix", "location": ["tests58_80_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002621389867272228, "start": 1700303364.5858285, "stop": 1700303364.5860913, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018618398462422192, "start": 1700303364.5858867, "stop": 1700303364.5860734, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018933400860987604, "start": 1700303364.5863454, "stop": 1700303364.5865352, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_having_180_integers", "location": ["tests58_80_1.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014602800365537405, "start": 1700303364.5870657, "stop": 1700303364.5872123, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_having_180_integers", "location": ["tests58_80_1.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83,  76],\\n        [ -2,  92],\\n        [-16, -38],\\n        [ 69, -46],\\n        [ -8, -32],\\n        [ 88,  -5],\\n        [ 57,  11],\\n        [-58, -41],\\n        [ 75,   3],\\n        [ 88, -85],\\n        [-66,  24],\\n        [ 54,  99],\\n        [-46,   3],\\n        [ 35, -41],\\n        [-12, -73],\\n        [ 68,  97],\\n        [ 97,  94],\\n        [ 72,  77],\\n        [-10,  76],\\n        [ 16,  -9],\\n        [-41,   2],\\n        [ 97, -19],\\n        [-53, -99],\\n        [-57, -67],\\n        [-91,  90],\\n        [ 80, -78],\\n        [-30, -22],\\n        [-29, -56],\\n        [-54, -76],\\n        [ 88, -63],\\n        [ 90,  18],\\n        [ 91, -45],\\n        [ 95, -11],\\n        [ 87,   5],\\n        [ 81,  98],\\n        [ 44,  81],\\n        [-21, -78],\\n        [-52,  -1],\\n        [-10,  67],\\n        [-47, -21],\\n        [-71,   9],\\n        [-25,   7],\\n        [-66, -76],\\n        [ 94, -44],\\n        [-34, -39],\\n        [ 31,  75],\\n        [  9,  58],\\n        [-72, -48],\\n        [-23,  30],\\n        [ 53,  37],\\n        [-30, -84],\\n        [ 37,  -5],\\n        [-39,  94],\\n        [  6,  87],\\n        [  5, -76],\\n        [ 63, -84],\\n        [-10,  -7],\\n        [ 39, -15],\\n        [-47,  -1],\\n        [ 78,  45],\\n        [ 64,  38],\\n        [-11, -81],\\n        [ 94, -92],\\n        [-12, -87],\\n        [-42,  27],\\n        [  9,  -7],\\n        [ 77, -18],\\n        [ 29, -71],\\n        [ 91,   2],\\n        [-65,  20],\\n        [-38,   3],\\n        [ 12,  33],\\n        [-83,  25],\\n        [ 78, -71],\\n        [ 38, -89],\\n        [-11,  -2],\\n        [-27,  22],\\n        [ 36,  58],\\n        [ 36, -93],\\n        [ -3, -29],\\n        [-72, -73],\\n        [ 24,  15],\\n        [ 56,   7],\\n        [ 35, -74],\\n        [ 74,  94],\\n        [ 71, -21],\\n        [-92, -31],\\n        [ 45,   4],\\n        [  4, -48],\\n        [-57, -41]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 83,  76],\\n        [ -2,  92],\\n        [-16, -38],\\n        [ 69, -46],\\n        [ -8, -32],\\n        [ 88,  -5],\\n        [ 57,  11],\\n        [-58, -41],\\n        [ 75,   3],\\n        [ 88, -85],\\n        [-66,  24],\\n        [ 54,  99],\\n        [-46,   3],\\n        [ 35, -41],\\n        [-12, -73],\\n        [ 68,  97],\\n        [ 97,  94],\\n        [ 72,  77],\\n        [-10,  76],\\n        [ 16,  -9],\\n        [-41,   2],\\n        [ 97, -19],\\n        [-53, -99],\\n        [-57, -67],\\n        [-91,  90],\\n        [ 80, -78],\\n        [-30, -22],\\n        [-29, -56],\\n        [-54, -76],\\n        [ 88, -63],\\n        [ 90,  18],\\n        [ 91, -45],\\n        [ 95, -11],\\n        [ 87,   5],\\n        [ 81,  98],\\n        [ 44,  81],\\n        [-21, -78],\\n        [-52,  -1],\\n        [-10,  67],\\n        [-47, -21],\\n        [-71,   9],\\n        [-25,   7],\\n        [-66, -76],\\n        [ 94, -44],\\n        [-34, -39],\\n        [ 31,  75],\\n        [  9,  58],\\n        [-72, -48],\\n        [-23,  30],\\n        [ 53,  37],\\n        [-30, -84],\\n        [ 37,  -5],\\n        [-39,  94],\\n        [  6,  87],\\n        [  5, -76],\\n        [ 63, -84],\\n        [-10,  -7],\\n        [ 39, -15],\\n        [-47,  -1],\\n        [ 78,  45],\\n        [ 64,  38],\\n        [-11, -81],\\n        [ 94, -92],\\n        [-12, -87],\\n        [-42,  27],\\n        [  9,  -7],\\n        [ 77, -18],\\n        [ 29, -71],\\n        [ 91,   2],\\n        [-65,  20],\\n        [-38,   3],\\n        [ 12,  33],\\n        [-83,  25],\\n        [ 78, -71],\\n        [ 38, -89],\\n        [-11,  -2],\\n        [-27,  22],\\n        [ 36,  58],\\n        [ 36, -93],\\n        [ -3, -29],\\n        [-72, -73],\\n        [ 24,  15],\\n        [ 56,   7],\\n        [ 35, -74],\\n        [ 74,  94],\\n        [ 71, -21],\\n        [-92, -31],\\n        [ 45,   4],\\n        [  4, -48],\\n        [-57, -41]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 83,  76],\\n        [ -2,  92],\\n        [-16, -38],\\n        [ 69, -46],\\n        [ -8, -32],\\n        [ 88,  -5],\\n        [ 57,  11],\\n        [-58, -41],\\n        [ 75,   3],\\n        [ 88, -85],\\n        [-66,  24],\\n        [ 54,  99],\\n        [-46,   3],\\n        [ 35, -41],\\n        [-12, -73],\\n        [ 68,  97],\\n        [ 97,  94],\\n        [ 72,  77],\\n        [-10,  76],\\n        [ 16,  -9],\\n        [-41,   2],\\n        [ 97, -19],\\n        [-53, -99],\\n        [-57, -67],\\n        [-91,  90],\\n        [ 80, -78],\\n        [-30, -22],\\n        [-29, -56],\\n        [-54, -76],\\n        [ 88, -63],\\n        [ 90,  18],\\n        [ 91, -45],\\n        [ 95, -11],\\n        [ 87,   5],\\n        [ 81,  98],\\n        [ 44,  81],\\n        [-21, -78],\\n        [-52,  -1],\\n        [-10,  67],\\n        [-47, -21],\\n        [-71,   9],\\n        [-25,   7],\\n        [-66, -76],\\n        [ 94, -44],\\n        [-34, -39],\\n        [ 31,  75],\\n        [  9,  58],\\n        [-72, -48],\\n        [-23,  30],\\n        [ 53,  37],\\n        [-30, -84],\\n        [ 37,  -5],\\n        [-39,  94],\\n        [  6,  87],\\n        [  5, -76],\\n        [ 63, -84],\\n        [-10,  -7],\\n        [ 39, -15],\\n        [-47,  -1],\\n        [ 78,  45],\\n        [ 64,  38],\\n        [-11, -81],\\n        [ 94, -92],\\n        [-12, -87],\\n        [-42,  27],\\n        [  9,  -7],\\n        [ 77, -18],\\n        [ 29, -71],\\n        [ 91,   2],\\n        [-65,  20],\\n        [-38,   3],\\n        [ 12,  33],\\n        [-83,  25],\\n        [ 78, -71],\\n        [ 38, -89],\\n        [-11,  -2],\\n        [-27,  22],\\n        [ 36,  58],\\n        [ 36, -93],\\n        [ -3, -29],\\n        [-72, -73],\\n        [ 24,  15],\\n        [ 56,   7],\\n        [ 35, -74],\\n        [ 74,  94],\\n        [ 71, -21],\\n        [-92, -31],\\n        [ 45,   4],\\n        [  4, -48],\\n        [-57, -41]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83,  76],\\n        [ -2,  92],\\n        [-16, -38],\\n        [ 69, -46],\\n        [ -8, -32],\\n        [ 88,  -5],\\n        [ 57,  11],\\n        [-58, -41],\\n        [ 75,   3],\\n        [ 88, -85],\\n        [-66,  24],\\n        [ 54,  99],\\n        [-46,   3],\\n        [ 35, -41],\\n        [-12, -73],\\n        [ 68,  97],\\n        [ 97,  94],\\n        [ 72,  77],\\n        [-10,  76],\\n        [ 16,  -9],\\n        [-41,   2],\\n        [ 97, -19],\\n        [-53, -99],\\n        [-57, -67],\\n        [-91,  90],\\n        [ 80, -78],\\n        [-30, -22],\\n        [-29, -56],\\n        [-54, -76],\\n        [ 88, -63],\\n        [ 90,  18],\\n        [ 91, -45],\\n        [ 95, -11],\\n        [ 87,   5],\\n        [ 81,  98],\\n        [ 44,  81],\\n        [-21, -78],\\n        [-52,  -1],\\n        [-10,  67],\\n        [-47, -21],\\n        [-71,   9],\\n        [-25,   7],\\n        [-66, -76],\\n        [ 94, -44],\\n        [-34, -39],\\n        [ 31,  75],\\n        [  9,  58],\\n        [-72, -48],\\n        [-23,  30],\\n        [ 53,  37],\\n        [-30, -84],\\n        [ 37,  -5],\\n        [-39,  94],\\n        [  6,  87],\\n        [  5, -76],\\n        [ 63, -84],\\n        [-10,  -7],\\n        [ 39, -15],\\n        [-47,  -1],\\n        [ 78,  45],\\n        [ 64,  38],\\n        [-11, -81],\\n        [ 94, -92],\\n        [-12, -87],\\n        [-42,  27],\\n        [  9,  -7],\\n        [ 77, -18],\\n        [ 29, -71],\\n        [ 91,   2],\\n        [-65,  20],\\n        [-38,   3],\\n        [ 12,  33],\\n        [-83,  25],\\n        [ 78, -71],\\n        [ 38, -89],\\n        [-11,  -2],\\n        [-27,  22],\\n        [ 36,  58],\\n        [ 36, -93],\\n        [ -3, -29],\\n        [-72, -73],\\n        [ 24,  15],\\n        [ 56,   7],\\n        [ 35, -74],\\n        [ 74,  94],\\n        [ 71, -21],\\n        [-92, -31],\\n        [ 45,   4],\\n        [  4, -48],\\n        [-57, -41]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018265059916302562, "start": 1700303364.5874293, "stop": 1700303364.5892565, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "fe8ce92dd00546849a47a1bc25504dfe", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
