{
  "parameter(s)": [
    191
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_191_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 43,  14,  81,  19, -41, -78, -92,  49,  38, -95, -59, -22,   0,\\n          86,  59, -37, -25, -70, -60, -25,   9, -10,  64, -46, -92, -11,\\n          75,  28,  53, -70,  40,  20,  54,  89,  -9, -76,  11,   2,  29,\\n         -53,  -6, -92,  65, 100,  -7,  75, -15,  36, -63, -85,  51, -39,\\n         -10,  36,  49,  30,  76,  76,  48, -59,  23,  47,  52,  49,  74,\\n         -67, -29,  -6,  18, -26,  -2,  62,  46, -10, -10,  -4, -24, -47,\\n         -22,  51,  -4,  10,  75, -37, -17, -16,  -8,  49,  48, -55, -86,\\n          68,  70,  81,  76, 100, -10, -66,  10,  40,  -4,   5,  63, -85,\\n          84, -52,  24,  28,   8,  -8,  98,   7, -66,  47, -69, -53, -65,\\n          72, -74, -68,  59, -18, -53, -13, -68, -18,  19,  32,  60,  50,\\n          92, -90, -93,  84, 100,   4,  50,   5,  -9,  23, -20, -63,  47,\\n         -73, -91,  80,  62,  29,  70,  77, -87, -11,  -1, -33, -30,  20,\\n         -11,  34,  19,  82,  86, -25,  94,  91,   1,  62,  80,  52, -35,\\n         -43, -87,  41,  34,  51, -22,  50, -46,  43,  18,  68,  92, -39,\\n         -56, -75, -13, -36, 100, -14,  82,  50, -79]]))",
    0.00138
  ]
}