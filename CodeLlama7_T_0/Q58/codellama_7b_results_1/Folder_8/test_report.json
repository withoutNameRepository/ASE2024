{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_8_1.py::test_horizontal_matrix", "location": ["tests58_8_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011896999785676599, "start": 1700303311.3574734, "stop": 1700303311.3575928, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_8_1.py::test_matrix_of_one_integer", "location": ["tests58_8_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018140400061383843, "start": 1700303311.3571749, "stop": 1700303311.357357, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_1.py::test_matrix_of_one_integer", "location": ["tests58_8_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006293289770837873, "start": 1700303311.3578331, "stop": 1700303311.3584635, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_1.py::test_matrix_of_one_integer", "location": ["tests58_8_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00046721298713237047, "start": 1700303311.3587742, "stop": 1700303311.359242, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_1.py::test_matrix_of_having_29_integers", "location": ["tests58_8_1.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005158259882591665, "start": 1700303311.3596785, "stop": 1700303311.360195, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_1.py::test_matrix_of_having_29_integers", "location": ["tests58_8_1.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_1.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_8/tests58_8_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-20,  46,  65,  38,  55,  86,  81,  95,  97,  76, -25, -82,  20,\\n          47, -53,  76,  72, -84,  40, -29, -74,  84, -87,  94,  48,  36,\\n          69, -64, -67]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-20,  46,  65,  38,  55,  86,  81,  95,  97,  76, -25, -82,  20,\\n          47, -53,  76,  72, -84,  40, -29, -74,  84, -87,  94,  48,  36,\\n          69, -64, -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_8/tests58_8_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_29_integers():", "        if 29 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(29 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(29)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-20,  46,  65,  38,  55,  86,  81,  95,  97,  76, -25, -82,  20,\\n          47, -53,  76,  72, -84,  40, -29, -74,  84, -87,  94,  48,  36,\\n          69, -64, -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_8/tests58_8_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_8/tests58_8_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-20,  46,  65,  38,  55,  86,  81,  95,  97,  76, -25, -82,  20,\\n          47, -53,  76,  72, -84,  40, -29, -74,  84, -87,  94,  48,  36,\\n          69, -64, -67]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000730453000869602, "start": 1700303311.360336, "stop": 1700303311.361067, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "68d3bccb18ba4dbab2a0c273503e2b38", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
