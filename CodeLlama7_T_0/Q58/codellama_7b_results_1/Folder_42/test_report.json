{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_42_1.py::test_matrix_of_one_integer", "location": ["tests58_42_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005304600053932518, "start": 1700303337.051799, "stop": 1700303337.0523307, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_1.py::test_matrix_of_one_integer", "location": ["tests58_42_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006376609962899238, "start": 1700303337.0526662, "stop": 1700303337.0533047, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_1.py::test_matrix_of_one_integer", "location": ["tests58_42_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006308629817795008, "start": 1700303337.0536518, "stop": 1700303337.0542834, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_1.py::test_matrix_of_having_193_integers", "location": ["tests58_42_1.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0007201539992820472, "start": 1700303337.0547802, "stop": 1700303337.055501, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_42_1.py::test_horizontal_matrix", "location": ["tests58_42_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019438701565377414, "start": 1700303337.0772073, "stop": 1700303337.0774026, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_42_1.py::test_matrix_of_having_193_integers", "location": ["tests58_42_1.py", 28, "test_matrix_of_having_193_integers"], "keywords": {"test_matrix_of_having_193_integers": 1, "__wrapped__": 1, "tests58_42_1.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_42/tests58_42_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,   -5,  -84,   41,   -1,  -84,    7,  -45,  -78,  -22,\\n          -81,   90,  -74,  -41,   70,  -20,  -87,  -75,   60,  -11,\\n           65,   73,   -2,   36,  -39,   61,   87,   24,  -51,   61,\\n           65,   98,   75,   -3,   58,   -7,  -22,  -50,  -14,  -55,\\n           52,   47,   21,   12,   24,  -47,   66,   -4,  -68,  -71,\\n           70,  -10,   37,   76,  -91,   11,   37,  -37,  -51,   33,\\n          -52,  -82,   40,  -30,   36,   49,   46,   20,   26,   60,\\n          -10,  -89,  -88,  -89,   36,  -45,  -16,   30,  -71,   30,\\n            3,   50,   12,   61,   83,  -51,   17,  -65,   96,  -36,\\n           68,   55,   92,   58,  -73,   62,  -71,    3,  -59,  -55,\\n          -58,  -51,  -94,   63,   42,  -60,   33,   77,   86,   93,\\n           84,  -66,    4,  -33,  -10,  -61,   12,  -82,   -5,  -23,\\n           69,  -61,  -42,  -98,  -58,   79,  -57,  -53,   -8,   98,\\n           33,  -94,  -42,   22,  -86,  -76,   -6,  -27,  -30,   72,\\n          -32,  -99,   47,  -40,  -93,   63,  -37,   18,  -80,   34,\\n           68,  -80,    1,   -1,    0,   26,  -51,   85,   38,  -50,\\n          -71,   22,   73,   61,   37,    2,   78,   64,   33,   53,\\n          -93,  -51,   80,  -63,  -98,  -82,   35,   63,   73,  -43,\\n          -89,  -53,   90,  -44,   67,  -64,  -70,   90,  -28,   20,\\n         -100,   38,  -60]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -50,   -5,  -84,   41,   -1,  -84,    7,  -45,  -78,  -22,\\n          -81,   90,  -74,  -41,   70,  -20,  -87,  -75,   60,  -11,\\n           65,   73,   -2,   36,  -39,   61,   87,   24,  -51,   61,\\n           65,   98,   75,   -3,   58,   -7,  -22,  -50,  -14,  -55,\\n           52,   47,   21,   12,   24,  -47,   66,   -4,  -68,  -71,\\n           70,  -10,   37,   76,  -91,   11,   37,  -37,  -51,   33,\\n          -52,  -82,   40,  -30,   36,   49,   46,   20,   26,   60,\\n          -10,  -89,  -88,  -89,   36,  -45,  -16,   30,  -71,   30,\\n            3,   50,   12,   61,   83,  -51,   17,  -65,   96,  -36,\\n           68,   55,   92,   58,  -73,   62,  -71,    3,  -59,  -55,\\n          -58,  -51,  -94,   63,   42,  -60,   33,   77,   86,   93,\\n           84,  -66,    4,  -33,  -10,  -61,   12,  -82,   -5,  -23,\\n           69,  -61,  -42,  -98,  -58,   79,  -57,  -53,   -8,   98,\\n           33,  -94,  -42,   22,  -86,  -76,   -6,  -27,  -30,   72,\\n          -32,  -99,   47,  -40,  -93,   63,  -37,   18,  -80,   34,\\n           68,  -80,    1,   -1,    0,   26,  -51,   85,   38,  -50,\\n          -71,   22,   73,   61,   37,    2,   78,   64,   33,   53,\\n          -93,  -51,   80,  -63,  -98,  -82,   35,   63,   73,  -43,\\n          -89,  -53,   90,  -44,   67,  -64,  -70,   90,  -28,   20,\\n         -100,   38,  -60]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_42/tests58_42_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_193_integers():", "        if 193 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(193 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(193)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -50,   -5,  -84,   41,   -1,  -84,    7,  -45,  -78,  -22,\\n          -81,   90,  -74,  -41,   70,  -20,  -87,  -75,   60,  -11,\\n           65,   73,   -2,   36,  -39,   61,   87,   24,  -51,   61,\\n           65,   98,   75,   -3,   58,   -7,  -22,  -50,  -14,  -55,\\n           52,   47,   21,   12,   24,  -47,   66,   -4,  -68,  -71,\\n           70,  -10,   37,   76,  -91,   11,   37,  -37,  -51,   33,\\n          -52,  -82,   40,  -30,   36,   49,   46,   20,   26,   60,\\n          -10,  -89,  -88,  -89,   36,  -45,  -16,   30,  -71,   30,\\n            3,   50,   12,   61,   83,  -51,   17,  -65,   96,  -36,\\n           68,   55,   92,   58,  -73,   62,  -71,    3,  -59,  -55,\\n          -58,  -51,  -94,   63,   42,  -60,   33,   77,   86,   93,\\n           84,  -66,    4,  -33,  -10,  -61,   12,  -82,   -5,  -23,\\n           69,  -61,  -42,  -98,  -58,   79,  -57,  -53,   -8,   98,\\n           33,  -94,  -42,   22,  -86,  -76,   -6,  -27,  -30,   72,\\n          -32,  -99,   47,  -40,  -93,   63,  -37,   18,  -80,   34,\\n           68,  -80,    1,   -1,    0,   26,  -51,   85,   38,  -50,\\n          -71,   22,   73,   61,   37,    2,   78,   64,   33,   53,\\n          -93,  -51,   80,  -63,  -98,  -82,   35,   63,   73,  -43,\\n          -89,  -53,   90,  -44,   67,  -64,  -70,   90,  -28,   20,\\n         -100,   38,  -60]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_42/tests58_42_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_42/tests58_42_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,   -5,  -84,   41,   -1,  -84,    7,  -45,  -78,  -22,\\n          -81,   90,  -74,  -41,   70,  -20,  -87,  -75,   60,  -11,\\n           65,   73,   -2,   36,  -39,   61,   87,   24,  -51,   61,\\n           65,   98,   75,   -3,   58,   -7,  -22,  -50,  -14,  -55,\\n           52,   47,   21,   12,   24,  -47,   66,   -4,  -68,  -71,\\n           70,  -10,   37,   76,  -91,   11,   37,  -37,  -51,   33,\\n          -52,  -82,   40,  -30,   36,   49,   46,   20,   26,   60,\\n          -10,  -89,  -88,  -89,   36,  -45,  -16,   30,  -71,   30,\\n            3,   50,   12,   61,   83,  -51,   17,  -65,   96,  -36,\\n           68,   55,   92,   58,  -73,   62,  -71,    3,  -59,  -55,\\n          -58,  -51,  -94,   63,   42,  -60,   33,   77,   86,   93,\\n           84,  -66,    4,  -33,  -10,  -61,   12,  -82,   -5,  -23,\\n           69,  -61,  -42,  -98,  -58,   79,  -57,  -53,   -8,   98,\\n           33,  -94,  -42,   22,  -86,  -76,   -6,  -27,  -30,   72,\\n          -32,  -99,   47,  -40,  -93,   63,  -37,   18,  -80,   34,\\n           68,  -80,    1,   -1,    0,   26,  -51,   85,   38,  -50,\\n          -71,   22,   73,   61,   37,    2,   78,   64,   33,   53,\\n          -93,  -51,   80,  -63,  -98,  -82,   35,   63,   73,  -43,\\n          -89,  -53,   90,  -44,   67,  -64,  -70,   90,  -28,   20,\\n         -100,   38,  -60]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013543160166591406, "start": 1700303337.0556762, "stop": 1700303337.0570314, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8252b8d35eb740dc81c12fd13fd1e51f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
