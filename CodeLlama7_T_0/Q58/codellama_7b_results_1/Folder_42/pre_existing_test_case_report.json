{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00053
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,   -5,  -84,   41,   -1,  -84,    7,  -45,  -78,  -22,\\n          -81,   90,  -74,  -41,   70,  -20,  -87,  -75,   60,  -11,\\n           65,   73,   -2,   36,  -39,   61,   87,   24,  -51,   61,\\n           65,   98,   75,   -3,   58,   -7,  -22,  -50,  -14,  -55,\\n           52,   47,   21,   12,   24,  -47,   66,   -4,  -68,  -71,\\n           70,  -10,   37,   76,  -91,   11,   37,  -37,  -51,   33,\\n          -52,  -82,   40,  -30,   36,   49,   46,   20,   26,   60,\\n          -10,  -89,  -88,  -89,   36,  -45,  -16,   30,  -71,   30,\\n            3,   50,   12,   61,   83,  -51,   17,  -65,   96,  -36,\\n           68,   55,   92,   58,  -73,   62,  -71,    3,  -59,  -55,\\n          -58,  -51,  -94,   63,   42,  -60,   33,   77,   86,   93,\\n           84,  -66,    4,  -33,  -10,  -61,   12,  -82,   -5,  -23,\\n           69,  -61,  -42,  -98,  -58,   79,  -57,  -53,   -8,   98,\\n           33,  -94,  -42,   22,  -86,  -76,   -6,  -27,  -30,   72,\\n          -32,  -99,   47,  -40,  -93,   63,  -37,   18,  -80,   34,\\n           68,  -80,    1,   -1,    0,   26,  -51,   85,   38,  -50,\\n          -71,   22,   73,   61,   37,    2,   78,   64,   33,   53,\\n          -93,  -51,   80,  -63,  -98,  -82,   35,   63,   73,  -43,\\n          -89,  -53,   90,  -44,   67,  -64,  -70,   90,  -28,   20,\\n         -100,   38,  -60]]))",
    0.00135
  ]
}