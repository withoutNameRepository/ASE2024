{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_86_1.py::test_horizontal_matrix", "location": ["tests58_86_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001363509800285101, "start": 1700303369.5937622, "stop": 1700303369.5938988, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_86_1.py::test_matrix_of_one_integer", "location": ["tests58_86_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017096599913202226, "start": 1700303369.5937552, "stop": 1700303369.593927, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_1.py::test_matrix_of_one_integer", "location": ["tests58_86_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002067440073005855, "start": 1700303369.5942078, "stop": 1700303369.594415, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_1.py::test_matrix_of_one_integer", "location": ["tests58_86_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.960899478755891e-05, "start": 1700303369.5947256, "stop": 1700303369.5948257, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_1.py::test_matrix_of_having_138_integers", "location": ["tests58_86_1.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010249498882330954, "start": 1700303369.595262, "stop": 1700303369.5953648, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_86_1.py::test_matrix_of_having_138_integers", "location": ["tests58_86_1.py", 28, "test_matrix_of_having_138_integers"], "keywords": {"test_matrix_of_having_138_integers": 1, "__wrapped__": 1, "tests58_86_1.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_86/tests58_86_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,   72],\\n        [  63,  -96],\\n        [ -34,  -28],\\n        [  45,   25],\\n        [ -57,  -35],\\n        [  63,   18],\\n        [  34,   -7],\\n        [   6,  -27],\\n        [   1,   51],\\n        [ -12,    2],\\n        [ -85,  -98],\\n        [  97,   -9],\\n        [  93,   18],\\n        [  34,  -39],\\n        [  46,   58],\\n        [ -41,   76],\\n        [  60,  -71],\\n        [  99,   41],\\n        [  15,   14],\\n        [  19,   87],\\n        [ -26,   78],\\n        [  41,    8],\\n        [ -98,  -10],\\n        [ -34,   83],\\n        [  71, -100],\\n        [   3,   99],\\n        [ -82,  -18],\\n        [ -38,    9],\\n        [  31,    9],\\n        [ -83,   31],\\n        [  -6,   93],\\n        [  28,  -78],\\n        [   7,  -54],\\n        [  53,  -18],\\n        [  -3,  -13],\\n        [  46,   49],\\n        [ -63,  -52],\\n        [ -74,   44],\\n        [  70,   71],\\n        [   9,  -70],\\n        [ -34,   75],\\n        [ -99,   34],\\n        [ -32,   51],\\n        [ -35,  -42],\\n        [ -11,  -13],\\n        [ -37,   69],\\n        [  28,   92],\\n        [ -68,  -21],\\n        [ -26,  -49],\\n        [  79,   43],\\n        [  34,   68],\\n        [   2,   76],\\n        [ -63,  -66],\\n        [  17,   91],\\n        [  23,   78],\\n        [  87,   98],\\n        [  -2,  -73],\\n        [ -71,  -63],\\n        [  45,   42],\\n        [  87,   78],\\n        [  17,   -1],\\n        [  91,  -52],\\n        [ -11,  -73],\\n        [  17,  -80],\\n        [ -32,   90],\\n        [ -29,   30],\\n        [  79,  -96],\\n        [  -7,   76],\\n        [  31,  -98]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  87,   72],\\n        [  63,  -96],\\n        [ -34,  -28],\\n        [  45,   25],\\n        [ -57,  -35],\\n        [  63,   18],\\n        [  34,   -7],\\n        [   6,  -27],\\n        [   1,   51],\\n        [ -12,    2],\\n        [ -85,  -98],\\n        [  97,   -9],\\n        [  93,   18],\\n        [  34,  -39],\\n        [  46,   58],\\n        [ -41,   76],\\n        [  60,  -71],\\n        [  99,   41],\\n        [  15,   14],\\n        [  19,   87],\\n        [ -26,   78],\\n        [  41,    8],\\n        [ -98,  -10],\\n        [ -34,   83],\\n        [  71, -100],\\n        [   3,   99],\\n        [ -82,  -18],\\n        [ -38,    9],\\n        [  31,    9],\\n        [ -83,   31],\\n        [  -6,   93],\\n        [  28,  -78],\\n        [   7,  -54],\\n        [  53,  -18],\\n        [  -3,  -13],\\n        [  46,   49],\\n        [ -63,  -52],\\n        [ -74,   44],\\n        [  70,   71],\\n        [   9,  -70],\\n        [ -34,   75],\\n        [ -99,   34],\\n        [ -32,   51],\\n        [ -35,  -42],\\n        [ -11,  -13],\\n        [ -37,   69],\\n        [  28,   92],\\n        [ -68,  -21],\\n        [ -26,  -49],\\n        [  79,   43],\\n        [  34,   68],\\n        [   2,   76],\\n        [ -63,  -66],\\n        [  17,   91],\\n        [  23,   78],\\n        [  87,   98],\\n        [  -2,  -73],\\n        [ -71,  -63],\\n        [  45,   42],\\n        [  87,   78],\\n        [  17,   -1],\\n        [  91,  -52],\\n        [ -11,  -73],\\n        [  17,  -80],\\n        [ -32,   90],\\n        [ -29,   30],\\n        [  79,  -96],\\n        [  -7,   76],\\n        [  31,  -98]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_86/tests58_86_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_138_integers():", "        if 138 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(138 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(138)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  87,   72],\\n        [  63,  -96],\\n        [ -34,  -28],\\n        [  45,   25],\\n        [ -57,  -35],\\n        [  63,   18],\\n        [  34,   -7],\\n        [   6,  -27],\\n        [   1,   51],\\n        [ -12,    2],\\n        [ -85,  -98],\\n        [  97,   -9],\\n        [  93,   18],\\n        [  34,  -39],\\n        [  46,   58],\\n        [ -41,   76],\\n        [  60,  -71],\\n        [  99,   41],\\n        [  15,   14],\\n        [  19,   87],\\n        [ -26,   78],\\n        [  41,    8],\\n        [ -98,  -10],\\n        [ -34,   83],\\n        [  71, -100],\\n        [   3,   99],\\n        [ -82,  -18],\\n        [ -38,    9],\\n        [  31,    9],\\n        [ -83,   31],\\n        [  -6,   93],\\n        [  28,  -78],\\n        [   7,  -54],\\n        [  53,  -18],\\n        [  -3,  -13],\\n        [  46,   49],\\n        [ -63,  -52],\\n        [ -74,   44],\\n        [  70,   71],\\n        [   9,  -70],\\n        [ -34,   75],\\n        [ -99,   34],\\n        [ -32,   51],\\n        [ -35,  -42],\\n        [ -11,  -13],\\n        [ -37,   69],\\n        [  28,   92],\\n        [ -68,  -21],\\n        [ -26,  -49],\\n        [  79,   43],\\n        [  34,   68],\\n        [   2,   76],\\n        [ -63,  -66],\\n        [  17,   91],\\n        [  23,   78],\\n        [  87,   98],\\n        [  -2,  -73],\\n        [ -71,  -63],\\n        [  45,   42],\\n        [  87,   78],\\n        [  17,   -1],\\n        [  91,  -52],\\n        [ -11,  -73],\\n        [  17,  -80],\\n        [ -32,   90],\\n        [ -29,   30],\\n        [  79,  -96],\\n        [  -7,   76],\\n        [  31,  -98]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_86/tests58_86_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_86/tests58_86_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,   72],\\n        [  63,  -96],\\n        [ -34,  -28],\\n        [  45,   25],\\n        [ -57,  -35],\\n        [  63,   18],\\n        [  34,   -7],\\n        [   6,  -27],\\n        [   1,   51],\\n        [ -12,    2],\\n        [ -85,  -98],\\n        [  97,   -9],\\n        [  93,   18],\\n        [  34,  -39],\\n        [  46,   58],\\n        [ -41,   76],\\n        [  60,  -71],\\n        [  99,   41],\\n        [  15,   14],\\n        [  19,   87],\\n        [ -26,   78],\\n        [  41,    8],\\n        [ -98,  -10],\\n        [ -34,   83],\\n        [  71, -100],\\n        [   3,   99],\\n        [ -82,  -18],\\n        [ -38,    9],\\n        [  31,    9],\\n        [ -83,   31],\\n        [  -6,   93],\\n        [  28,  -78],\\n        [   7,  -54],\\n        [  53,  -18],\\n        [  -3,  -13],\\n        [  46,   49],\\n        [ -63,  -52],\\n        [ -74,   44],\\n        [  70,   71],\\n        [   9,  -70],\\n        [ -34,   75],\\n        [ -99,   34],\\n        [ -32,   51],\\n        [ -35,  -42],\\n        [ -11,  -13],\\n        [ -37,   69],\\n        [  28,   92],\\n        [ -68,  -21],\\n        [ -26,  -49],\\n        [  79,   43],\\n        [  34,   68],\\n        [   2,   76],\\n        [ -63,  -66],\\n        [  17,   91],\\n        [  23,   78],\\n        [  87,   98],\\n        [  -2,  -73],\\n        [ -71,  -63],\\n        [  45,   42],\\n        [  87,   78],\\n        [  17,   -1],\\n        [  91,  -52],\\n        [ -11,  -73],\\n        [  17,  -80],\\n        [ -32,   90],\\n        [ -29,   30],\\n        [  79,  -96],\\n        [  -7,   76],\\n        [  31,  -98]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010074820020236075, "start": 1700303369.5955029, "stop": 1700303369.596511, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0f4d3c16c9674b5caa33251fc9f65383", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
