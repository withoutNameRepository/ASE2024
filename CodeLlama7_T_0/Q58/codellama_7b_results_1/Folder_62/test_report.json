{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_1.py::test_horizontal_matrix", "location": ["tests58_62_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012542397598735988, "start": 1700303351.5440173, "stop": 1700303351.5441434, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016608397709205747, "start": 1700303351.5368118, "stop": 1700303351.5369787, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020395300816744566, "start": 1700303351.5372357, "stop": 1700303351.5374403, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.380999836139381e-05, "start": 1700303351.5377257, "stop": 1700303351.53782, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_having_186_integers", "location": ["tests58_62_1.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.868100121617317e-05, "start": 1700303351.538202, "stop": 1700303351.5382912, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_having_186_integers", "location": ["tests58_62_1.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,  -44],\\n        [  14,  -23],\\n        [  92,   66],\\n        [  36,  -18],\\n        [  15,  -70],\\n        [   8,   34],\\n        [ -53,   73],\\n        [  56,  -86],\\n        [ -79,   99],\\n        [ -57,   -5],\\n        [ -52,  -78],\\n        [  62,   77],\\n        [ -11,   56],\\n        [ -12,  -37],\\n        [ -97,   39],\\n        [  83,   76],\\n        [ -79,  -28],\\n        [  77,   31],\\n        [   2,  -18],\\n        [ -24,  -35],\\n        [  72,   80],\\n        [ -19,  -96],\\n        [  97,  -94],\\n        [ -48,  -70],\\n        [ -39,   31],\\n        [ -24,   53],\\n        [ -82,    3],\\n        [   4,  -81],\\n        [  62,  -50],\\n        [ -71,   20],\\n        [ -30,  -82],\\n        [  71,  -38],\\n        [ -61,   26],\\n        [ -15,    6],\\n        [  98,  -26],\\n        [  97,  -99],\\n        [  96,  -27],\\n        [   0,   89],\\n        [  64,   60],\\n        [ -37,   33],\\n        [ -65,   77],\\n        [ -73,  -82],\\n        [ -44,  -83],\\n        [  61,  -29],\\n        [  37,   50],\\n        [ -27,    1],\\n        [ -26,   27],\\n        [  94,   34],\\n        [ -59,  -31],\\n        [  65,  -60],\\n        [ -43,   42],\\n        [  18,  -68],\\n        [ -18,   75],\\n        [  61,  -32],\\n        [ -64,  -26],\\n        [  60,  -99],\\n        [  32,   79],\\n        [  48,  -21],\\n        [  89,   25],\\n        [   9, -100],\\n        [ -36,  -60],\\n        [  52,   54],\\n        [  21,   74],\\n        [  -3,   58],\\n        [  17,  -42],\\n        [  76,  -90],\\n        [  11,  -18],\\n        [ -83,  -61],\\n        [ -90,   72],\\n        [  84,  -32],\\n        [ -56,   71],\\n        [   9,  -99],\\n        [  32,  -61],\\n        [  12,  -17],\\n        [  64,   44],\\n        [  32,  -58],\\n        [ -82,   56],\\n        [ -33,   67],\\n        [ -79,   20],\\n        [  39,  -57],\\n        [  38,  -48],\\n        [ -99,  -34],\\n        [ -99,   26],\\n        [  90,  -28],\\n        [  -9,   82],\\n        [ -14,  -32],\\n        [ -95,    0],\\n        [  36,  -84],\\n        [ -22,   75],\\n        [ -11,  -43],\\n        [ -87,   13],\\n        [ -70,  -53],\\n        [  94,  -27]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  53,  -44],\\n        [  14,  -23],\\n        [  92,   66],\\n        [  36,  -18],\\n        [  15,  -70],\\n        [   8,   34],\\n        [ -53,   73],\\n        [  56,  -86],\\n        [ -79,   99],\\n        [ -57,   -5],\\n        [ -52,  -78],\\n        [  62,   77],\\n        [ -11,   56],\\n        [ -12,  -37],\\n        [ -97,   39],\\n        [  83,   76],\\n        [ -79,  -28],\\n        [  77,   31],\\n        [   2,  -18],\\n        [ -24,  -35],\\n        [  72,   80],\\n        [ -19,  -96],\\n        [  97,  -94],\\n        [ -48,  -70],\\n        [ -39,   31],\\n        [ -24,   53],\\n        [ -82,    3],\\n        [   4,  -81],\\n        [  62,  -50],\\n        [ -71,   20],\\n        [ -30,  -82],\\n        [  71,  -38],\\n        [ -61,   26],\\n        [ -15,    6],\\n        [  98,  -26],\\n        [  97,  -99],\\n        [  96,  -27],\\n        [   0,   89],\\n        [  64,   60],\\n        [ -37,   33],\\n        [ -65,   77],\\n        [ -73,  -82],\\n        [ -44,  -83],\\n        [  61,  -29],\\n        [  37,   50],\\n        [ -27,    1],\\n        [ -26,   27],\\n        [  94,   34],\\n        [ -59,  -31],\\n        [  65,  -60],\\n        [ -43,   42],\\n        [  18,  -68],\\n        [ -18,   75],\\n        [  61,  -32],\\n        [ -64,  -26],\\n        [  60,  -99],\\n        [  32,   79],\\n        [  48,  -21],\\n        [  89,   25],\\n        [   9, -100],\\n        [ -36,  -60],\\n        [  52,   54],\\n        [  21,   74],\\n        [  -3,   58],\\n        [  17,  -42],\\n        [  76,  -90],\\n        [  11,  -18],\\n        [ -83,  -61],\\n        [ -90,   72],\\n        [  84,  -32],\\n        [ -56,   71],\\n        [   9,  -99],\\n        [  32,  -61],\\n        [  12,  -17],\\n        [  64,   44],\\n        [  32,  -58],\\n        [ -82,   56],\\n        [ -33,   67],\\n        [ -79,   20],\\n        [  39,  -57],\\n        [  38,  -48],\\n        [ -99,  -34],\\n        [ -99,   26],\\n        [  90,  -28],\\n        [  -9,   82],\\n        [ -14,  -32],\\n        [ -95,    0],\\n        [  36,  -84],\\n        [ -22,   75],\\n        [ -11,  -43],\\n        [ -87,   13],\\n        [ -70,  -53],\\n        [  94,  -27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  53,  -44],\\n        [  14,  -23],\\n        [  92,   66],\\n        [  36,  -18],\\n        [  15,  -70],\\n        [   8,   34],\\n        [ -53,   73],\\n        [  56,  -86],\\n        [ -79,   99],\\n        [ -57,   -5],\\n        [ -52,  -78],\\n        [  62,   77],\\n        [ -11,   56],\\n        [ -12,  -37],\\n        [ -97,   39],\\n        [  83,   76],\\n        [ -79,  -28],\\n        [  77,   31],\\n        [   2,  -18],\\n        [ -24,  -35],\\n        [  72,   80],\\n        [ -19,  -96],\\n        [  97,  -94],\\n        [ -48,  -70],\\n        [ -39,   31],\\n        [ -24,   53],\\n        [ -82,    3],\\n        [   4,  -81],\\n        [  62,  -50],\\n        [ -71,   20],\\n        [ -30,  -82],\\n        [  71,  -38],\\n        [ -61,   26],\\n        [ -15,    6],\\n        [  98,  -26],\\n        [  97,  -99],\\n        [  96,  -27],\\n        [   0,   89],\\n        [  64,   60],\\n        [ -37,   33],\\n        [ -65,   77],\\n        [ -73,  -82],\\n        [ -44,  -83],\\n        [  61,  -29],\\n        [  37,   50],\\n        [ -27,    1],\\n        [ -26,   27],\\n        [  94,   34],\\n        [ -59,  -31],\\n        [  65,  -60],\\n        [ -43,   42],\\n        [  18,  -68],\\n        [ -18,   75],\\n        [  61,  -32],\\n        [ -64,  -26],\\n        [  60,  -99],\\n        [  32,   79],\\n        [  48,  -21],\\n        [  89,   25],\\n        [   9, -100],\\n        [ -36,  -60],\\n        [  52,   54],\\n        [  21,   74],\\n        [  -3,   58],\\n        [  17,  -42],\\n        [  76,  -90],\\n        [  11,  -18],\\n        [ -83,  -61],\\n        [ -90,   72],\\n        [  84,  -32],\\n        [ -56,   71],\\n        [   9,  -99],\\n        [  32,  -61],\\n        [  12,  -17],\\n        [  64,   44],\\n        [  32,  -58],\\n        [ -82,   56],\\n        [ -33,   67],\\n        [ -79,   20],\\n        [  39,  -57],\\n        [  38,  -48],\\n        [ -99,  -34],\\n        [ -99,   26],\\n        [  90,  -28],\\n        [  -9,   82],\\n        [ -14,  -32],\\n        [ -95,    0],\\n        [  36,  -84],\\n        [ -22,   75],\\n        [ -11,  -43],\\n        [ -87,   13],\\n        [ -70,  -53],\\n        [  94,  -27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codellama_7b_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q58/codellama_7b_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,  -44],\\n        [  14,  -23],\\n        [  92,   66],\\n        [  36,  -18],\\n        [  15,  -70],\\n        [   8,   34],\\n        [ -53,   73],\\n        [  56,  -86],\\n        [ -79,   99],\\n        [ -57,   -5],\\n        [ -52,  -78],\\n        [  62,   77],\\n        [ -11,   56],\\n        [ -12,  -37],\\n        [ -97,   39],\\n        [  83,   76],\\n        [ -79,  -28],\\n        [  77,   31],\\n        [   2,  -18],\\n        [ -24,  -35],\\n        [  72,   80],\\n        [ -19,  -96],\\n        [  97,  -94],\\n        [ -48,  -70],\\n        [ -39,   31],\\n        [ -24,   53],\\n        [ -82,    3],\\n        [   4,  -81],\\n        [  62,  -50],\\n        [ -71,   20],\\n        [ -30,  -82],\\n        [  71,  -38],\\n        [ -61,   26],\\n        [ -15,    6],\\n        [  98,  -26],\\n        [  97,  -99],\\n        [  96,  -27],\\n        [   0,   89],\\n        [  64,   60],\\n        [ -37,   33],\\n        [ -65,   77],\\n        [ -73,  -82],\\n        [ -44,  -83],\\n        [  61,  -29],\\n        [  37,   50],\\n        [ -27,    1],\\n        [ -26,   27],\\n        [  94,   34],\\n        [ -59,  -31],\\n        [  65,  -60],\\n        [ -43,   42],\\n        [  18,  -68],\\n        [ -18,   75],\\n        [  61,  -32],\\n        [ -64,  -26],\\n        [  60,  -99],\\n        [  32,   79],\\n        [  48,  -21],\\n        [  89,   25],\\n        [   9, -100],\\n        [ -36,  -60],\\n        [  52,   54],\\n        [  21,   74],\\n        [  -3,   58],\\n        [  17,  -42],\\n        [  76,  -90],\\n        [  11,  -18],\\n        [ -83,  -61],\\n        [ -90,   72],\\n        [  84,  -32],\\n        [ -56,   71],\\n        [   9,  -99],\\n        [  32,  -61],\\n        [  12,  -17],\\n        [  64,   44],\\n        [  32,  -58],\\n        [ -82,   56],\\n        [ -33,   67],\\n        [ -79,   20],\\n        [  39,  -57],\\n        [  38,  -48],\\n        [ -99,  -34],\\n        [ -99,   26],\\n        [  90,  -28],\\n        [  -9,   82],\\n        [ -14,  -32],\\n        [ -95,    0],\\n        [  36,  -84],\\n        [ -22,   75],\\n        [ -11,  -43],\\n        [ -87,   13],\\n        [ -70,  -53],\\n        [  94,  -27]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001792484981706366, "start": 1700303351.5384114, "stop": 1700303351.5402043, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9d61f2b04f05471184c40625683f49b8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
