{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00044
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -98,  89,  35,  -4, -95, -60, -56, -96,  70,  55, -22,  16,\\n          43, -41, -38, -52, -59,  50,  66, -64,  96,   1,  39,  18, -55,\\n         -15,  48,  58, -30, -19,  -4,  26,   7,  -3,  59, -54,  73,  61,\\n          49, -47, -54,   6, -51, -52, -54,   8,  22,  18,  35,  58,  52,\\n         -25,  45, -29,  56,   6, -45, -54,  -5,  81,  93, -68,  56, -76,\\n          88, -97,   9, -16,  15,  35,  27, -88,  -5, -70,  94, -59, -46,\\n          67, -70,  96, -32, -50, -66,  90,  72, -59, -41,  75, -10,  -8,\\n          70, -56, -91, -10,   0, -70,  -2, -28,  58, -42, -98,  27, -17,\\n         -47, -92,  49,  47,  51,  30,  26,  32,  20,  78, -61, -93, -81,\\n           3, -56,  -9,  -6,  89,  89,  29, -79, -16, -26, -19, -99,  37,\\n         -35, -71,  57,  84, -20,  31, -30,  26, -64, -47,  44,  -8,  20,\\n         -34,  84, -40,  68, -42, -22, -87, -78,   7,  96,  59,  93,  74,\\n         -55, -69, -23,  -4,  23, -44, -70,  48, -99, -43, -80,  14, -96,\\n         -86, -53, -99,  99, -90,  44, -68,  36, 100,  15,  16,  44,  41,\\n         -33, -86,   5,  -3,  25, -44,  30,  53, -21, -35,  89]]))",
    0.00115
  ]
}