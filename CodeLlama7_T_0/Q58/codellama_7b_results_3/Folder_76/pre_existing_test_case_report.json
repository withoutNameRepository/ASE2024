{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00025
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29,  41,  52,  38, -56, -18,  59, -95,  64, -85,  -8,  -9, -26,\\n          -6,  48, -43, -35, -22, -30,  64,  -2, -37, -65,   2, -16,  97,\\n          90,  78, -47, -87,  66, -74,  99,  64,  59,  94,  69, -68, -72,\\n         -75, -81,  44,  45, -23,  14,  -8, -45,  30,  24, -64, -26,  87,\\n          10,  48, -12, -76, -56,  86, -39,  -3,  86,  63, -32, -21,  87,\\n         -61,  61, -31, -36, -92,  95, -78,  92, -76,  70, -72, -55,  17,\\n          17,  73, -22, -70,  42,  96,  75, -34,  60,  36, -83,  71,  35,\\n          85,  46,  49, -22, -82,  -2,  87,  23, -71,  -4, -74,  51, -84,\\n           9,  57,  -5,  51,  -8,  27, -34, -87,   0,   4, -25,  46,  37,\\n           2, -22, -88,  28, -27, -42, -61, -65, -64, -25,  72,  33,  99,\\n          69,  34, -65,  41,  62, -60,  -3,  51, -46, -20,  27, -78,  68,\\n          48, -72,  13,  55, -47, -23, -16, -10,  -3,   2,  12, -17,  61,\\n          47, -12,  24]]))",
    0.00114
  ]
}