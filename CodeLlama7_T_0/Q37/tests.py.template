from Q37.$6_results_$7.Folder_$4.generated_answer import $5
import string
import random


def test_repeat_char():
    s = 'm' * ($3 + 2)
    if '$0' <= 'm' <= '$1':
        assert $5(s) == ''
    else:
        assert $5(s) == s


def test_property_of_function():
    s = ''.join(random.choice(string.ascii_letters) for _ in range($3 * 2))
    returned_s = $5(s)
    sliced_s = s[$2:$3+1]
    for char in sliced_s:
        if '$0' <= char <= '$1':
            assert char not in returned_s


def test_compare_lengths_with_large_string():
    s = ''.join(random.choice(string.ascii_letters) for _ in range($3*100))
    assert len($5(s)) <= len(s)


def test_chars_not_in_range():
    s = ''
    given_range = list(range(ord('$0'), ord('$1') + 1))
    for _ in range($3 + 10):
        char = random.choice(string.ascii_letters + '$ % & * + < = > @ ')
        if ord(char) not in given_range:
            s += char
    
    assert $5(s) == s


def test_chars_in_range():
    s = ''
    given_range = list(range(ord('$0'), ord('$1') + 1))
    for _ in range($2 + 1):
        s += '$0'
    for _ in range($3 - $2):
        s += chr(random.choice(given_range))
    
    assert $5(s) == ''
