{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_39_2.py::test_strings_of_size_equal_to_23", "location": ["tests39_39_2.py", 5, "test_strings_of_size_equal_to_23"], "keywords": {"test_strings_of_size_equal_to_23": 1, "tests39_39_2.py": 1, "Folder_39": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017350900452584028, "start": 1700295134.0809686, "stop": 1700295134.0811431, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "64e52ebac2ae4838bd888729df085e29", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_39_2.py::test_if_result_is_sorted", "location": ["tests39_39_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_39_2.py": 1, "Folder_39": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019343497115187347, "start": 1700295134.080983, "stop": 1700295134.0811772, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "64e52ebac2ae4838bd888729df085e29", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_39_2.py::test_strings_of_size_equal_to_23", "location": ["tests39_39_2.py", 5, "test_strings_of_size_equal_to_23"], "keywords": {"test_strings_of_size_equal_to_23": 1, "tests39_39_2.py": 1, "Folder_39": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_2/Folder_39/tests39_39_2.py", "lineno": 10, "message": "AssertionError: assert ['~', '{', 'm...'k', 'e', ...] == ['#', '+', ',...'2', '4', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '{',\n  +  'm',\n  +  'l',...\n  \n  ...Full output truncated (42 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_23():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=23))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['~', '{', 'm...'k', 'e', ...] == ['#', '+', ',...'2', '4', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '{',", "E             +  'm',", "E             +  'l',...", "E             ", "E             ...Full output truncated (42 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_2/Folder_39/tests39_39_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_23():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=23))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['~', '{', 'm...'k', 'e', ...] == ['#', '+', ',...'2', '4', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '{',", "E             +  'm',", "E             +  'l',...", "E             ", "E             ...Full output truncated (42 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_2/Folder_39/tests39_39_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_2/Folder_39/tests39_39_2.py", "lineno": 10, "message": "AssertionError: assert ['~', '{', 'm...'k', 'e', ...] == ['#', '+', ',...'2', '4', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '{',\n  +  'm',\n  +  'l',...\n  \n  ...Full output truncated (42 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006173110159579664, "start": 1700295134.0814424, "stop": 1700295134.0820606, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "64e52ebac2ae4838bd888729df085e29", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
