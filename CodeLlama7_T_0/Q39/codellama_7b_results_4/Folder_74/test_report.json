{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_74_4.py::test_strings_of_size_equal_to_5", "location": ["tests39_74_4.py", 5, "test_strings_of_size_equal_to_5"], "keywords": {"test_strings_of_size_equal_to_5": 1, "tests39_74_4.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010963098611682653, "start": 1700295288.197032, "stop": 1700295288.1971421, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88adb7fbc5f74478bfe707b86fce11d4", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_74_4.py::test_if_result_is_sorted", "location": ["tests39_74_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_4.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011096498928964138, "start": 1700295288.19688, "stop": 1700295288.1969917, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88adb7fbc5f74478bfe707b86fce11d4", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_74_4.py::test_if_result_is_sorted", "location": ["tests39_74_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_4.py": 1, "Folder_74": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_4/Folder_74/tests39_74_4.py", "lineno": 26, "message": "AssertionError: assert ['f', 'P', 'C', '8', '7'] == ['7', '8', 'C', 'P', 'f']\n  At index 0 diff: 'f' != '7'\n  Full diff:\n  - ['7', '8', 'C', 'P', 'f']\n  + ['f', 'P', 'C', '8', '7']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['f', 'P', 'C', '8', '7'] == ['7', '8', 'C', 'P', 'f']", "E             At index 0 diff: 'f' != '7'", "E             Full diff:", "E             - ['7', '8', 'C', 'P', 'f']", "E             + ['f', 'P', 'C', '8', '7']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_4/Folder_74/tests39_74_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['f', 'P', 'C', '8', '7'] == ['7', '8', 'C', 'P', 'f']", "E             At index 0 diff: 'f' != '7'", "E             Full diff:", "E             - ['7', '8', 'C', 'P', 'f']", "E             + ['f', 'P', 'C', '8', '7']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_4/Folder_74/tests39_74_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_4/Folder_74/tests39_74_4.py", "lineno": 26, "message": "AssertionError: assert ['f', 'P', 'C', '8', '7'] == ['7', '8', 'C', 'P', 'f']\n  At index 0 diff: 'f' != '7'\n  Full diff:\n  - ['7', '8', 'C', 'P', 'f']\n  + ['f', 'P', 'C', '8', '7']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035626799217425287, "start": 1700295288.1971805, "stop": 1700295288.197537, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88adb7fbc5f74478bfe707b86fce11d4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
