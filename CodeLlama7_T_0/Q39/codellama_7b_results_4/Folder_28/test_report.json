{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_28_4.py::test_strings_of_size_equal_to_3", "location": ["tests39_28_4.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests39_28_4.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012169597903266549, "start": 1700295250.1689606, "stop": 1700295250.1690829, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bcfa795701e04ceeae84930dbaecaf12", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_28_4.py::test_if_result_is_sorted", "location": ["tests39_28_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_28_4.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011679698945954442, "start": 1700295250.1689262, "stop": 1700295250.1690435, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bcfa795701e04ceeae84930dbaecaf12", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_28_4.py::test_strings_of_size_equal_to_3", "location": ["tests39_28_4.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests39_28_4.py": 1, "Folder_28": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_4/Folder_28/tests39_28_4.py", "lineno": 10, "message": "AssertionError: assert [']', 'N', '7'] == ['7', 'N', ']']\n  At index 0 diff: ']' != '7'\n  Full diff:\n  - ['7', 'N', ']']\n  ?   ^          --\n  + [']', 'N', '7']\n  ?   ^        ++"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert [']', 'N', '7'] == ['7', 'N', ']']", "E             At index 0 diff: ']' != '7'", "E             Full diff:", "E             - ['7', 'N', ']']", "E             ?   ^          --", "E             + [']', 'N', '7']", "E             ?   ^        ++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_4/Folder_28/tests39_28_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert [']', 'N', '7'] == ['7', 'N', ']']", "E             At index 0 diff: ']' != '7'", "E             Full diff:", "E             - ['7', 'N', ']']", "E             ?   ^          --", "E             + [']', 'N', '7']", "E             ?   ^        ++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_4/Folder_28/tests39_28_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_4/Folder_28/tests39_28_4.py", "lineno": 10, "message": "AssertionError: assert [']', 'N', '7'] == ['7', 'N', ']']\n  At index 0 diff: ']' != '7'\n  Full diff:\n  - ['7', 'N', ']']\n  ?   ^          --\n  + [']', 'N', '7']\n  ?   ^        ++"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00038451599539257586, "start": 1700295250.1692877, "stop": 1700295250.169673, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bcfa795701e04ceeae84930dbaecaf12", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
