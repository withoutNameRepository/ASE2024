{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_3.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_3.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010610499884933233, "start": 1700295218.3737187, "stop": 1700295218.3738256, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "76bd78dbf89547989e49e2c559da3e78", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001005730009637773, "start": 1700295218.3736947, "stop": 1700295218.373796, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "76bd78dbf89547989e49e2c559da3e78", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_3.py::test_if_result_is_sorted", "location": ["tests39_71_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_3.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['~', '{', 'p...'i', 'e', ...] == ['#', ')', ',...'I', 'M', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n  - ['#', ')', ',', 'G', 'I', 'M', 'R', 'd', 'e', 'i', 'm', 'p', '{', '~']\n  + ['~', '{', 'p', 'm', 'i', 'e', 'd', 'R', 'M', 'I', 'G', ',', ')', '#']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '{', 'p...'i', 'e', ...] == ['#', ')', ',...'I', 'M', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E             - ['#', ')', ',', 'G', 'I', 'M', 'R', 'd', 'e', 'i', 'm', 'p', '{', '~']", "E             + ['~', '{', 'p', 'm', 'i', 'e', 'd', 'R', 'M', 'I', 'G', ',', ')', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '{', 'p...'i', 'e', ...] == ['#', ')', ',...'I', 'M', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E             - ['#', ')', ',', 'G', 'I', 'M', 'R', 'd', 'e', 'i', 'm', 'p', '{', '~']", "E             + ['~', '{', 'p', 'm', 'i', 'e', 'd', 'R', 'M', 'I', 'G', ',', ')', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_71/tests39_71_3.py", "lineno": 26, "message": "AssertionError: assert ['~', '{', 'p...'i', 'e', ...] == ['#', ')', ',...'I', 'M', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n  - ['#', ')', ',', 'G', 'I', 'M', 'R', 'd', 'e', 'i', 'm', 'p', '{', '~']\n  + ['~', '{', 'p', 'm', 'i', 'e', 'd', 'R', 'M', 'I', 'G', ',', ')', '#']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005191800009924918, "start": 1700295218.3739662, "stop": 1700295218.374486, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "76bd78dbf89547989e49e2c559da3e78", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
