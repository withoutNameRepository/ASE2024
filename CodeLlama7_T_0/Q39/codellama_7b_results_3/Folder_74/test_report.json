{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_74_3.py::test_strings_of_size_equal_to_5", "location": ["tests39_74_3.py", 5, "test_strings_of_size_equal_to_5"], "keywords": {"test_strings_of_size_equal_to_5": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012114498531445861, "start": 1700295221.0243888, "stop": 1700295221.0245104, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2e2aa503bd874ba3b6e28dfb1eafd6e7", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_74_3.py::test_if_result_is_sorted", "location": ["tests39_74_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010301999282091856, "start": 1700295221.0242937, "stop": 1700295221.0243974, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2e2aa503bd874ba3b6e28dfb1eafd6e7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_74_3.py::test_if_result_is_sorted", "location": ["tests39_74_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_74_3.py": 1, "Folder_74": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError: assert ['h', 'U', '1', '+', ')'] == [')', '+', '1', 'U', 'h']\n  At index 0 diff: 'h' != ')'\n  Full diff:\n  - [')', '+', '1', 'U', 'h']\n  + ['h', 'U', '1', '+', ')']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['h', 'U', '1', '+', ')'] == [')', '+', '1', 'U', 'h']", "E             At index 0 diff: 'h' != ')'", "E             Full diff:", "E             - [')', '+', '1', 'U', 'h']", "E             + ['h', 'U', '1', '+', ')']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=5 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['h', 'U', '1', '+', ')'] == [')', '+', '1', 'U', 'h']", "E             At index 0 diff: 'h' != ')'", "E             Full diff:", "E             - [')', '+', '1', 'U', 'h']", "E             + ['h', 'U', '1', '+', ')']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_74/tests39_74_3.py", "lineno": 26, "message": "AssertionError: assert ['h', 'U', '1', '+', ')'] == [')', '+', '1', 'U', 'h']\n  At index 0 diff: 'h' != ')'\n  Full diff:\n  - [')', '+', '1', 'U', 'h']\n  + ['h', 'U', '1', '+', ')']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00036842498229816556, "start": 1700295221.0245779, "stop": 1700295221.0249467, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2e2aa503bd874ba3b6e28dfb1eafd6e7", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
