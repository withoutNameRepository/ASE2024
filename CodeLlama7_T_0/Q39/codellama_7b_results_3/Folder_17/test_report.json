{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_17_3.py::test_if_result_is_sorted", "location": ["tests39_17_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_17_3.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.4573013484478e-05, "start": 1700295181.1584544, "stop": 1700295181.1585498, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "333880878ffa458eab8bcb2d35e91735", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_17_3.py::test_strings_of_size_equal_to_11", "location": ["tests39_17_3.py", 5, "test_strings_of_size_equal_to_11"], "keywords": {"test_strings_of_size_equal_to_11": 1, "tests39_17_3.py": 1, "Folder_17": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010670500341802835, "start": 1700295181.1586335, "stop": 1700295181.1587405, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "333880878ffa458eab8bcb2d35e91735", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_17_3.py::test_if_result_is_sorted", "location": ["tests39_17_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_17_3.py": 1, "Folder_17": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_17/tests39_17_3.py", "lineno": 26, "message": "AssertionError: assert ['~', 'y', 'd...'P', 'C', ...] == ['#', ')', ';...'B', 'C', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n  - ['#', ')', ';', 'A', 'B', 'C', 'P', 'W', 'd', 'y', '~']\n  + ['~', 'y', 'd', 'W', 'P', 'C', 'B', 'A', ';', ')', '#']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', 'y', 'd...'P', 'C', ...] == ['#', ')', ';...'B', 'C', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E             - ['#', ')', ';', 'A', 'B', 'C', 'P', 'W', 'd', 'y', '~']", "E             + ['~', 'y', 'd', 'W', 'P', 'C', 'B', 'A', ';', ')', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_17/tests39_17_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', 'y', 'd...'P', 'C', ...] == ['#', ')', ';...'B', 'C', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E             - ['#', ')', ';', 'A', 'B', 'C', 'P', 'W', 'd', 'y', '~']", "E             + ['~', 'y', 'd', 'W', 'P', 'C', 'B', 'A', ';', ')', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_3/Folder_17/tests39_17_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_3/Folder_17/tests39_17_3.py", "lineno": 26, "message": "AssertionError: assert ['~', 'y', 'd...'P', 'C', ...] == ['#', ')', ';...'B', 'C', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n  - ['#', ')', ';', 'A', 'B', 'C', 'P', 'W', 'd', 'y', '~']\n  + ['~', 'y', 'd', 'W', 'P', 'C', 'B', 'A', ';', ')', '#']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00045679998584091663, "start": 1700295181.158706, "stop": 1700295181.1591632, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "333880878ffa458eab8bcb2d35e91735", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
