{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_71_5.py::test_if_result_is_sorted", "location": ["tests39_71_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.503998444415629e-05, "start": 1700295358.3639796, "stop": 1700295358.3640747, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8bdf922d06d6477ca1889c68ce7ba016", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_71_5.py::test_strings_of_size_equal_to_14", "location": ["tests39_71_5.py", 5, "test_strings_of_size_equal_to_14"], "keywords": {"test_strings_of_size_equal_to_14": 1, "tests39_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013706297613680363, "start": 1700295358.3640544, "stop": 1700295358.3641922, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8bdf922d06d6477ca1889c68ce7ba016", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_71_5.py::test_if_result_is_sorted", "location": ["tests39_71_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_71_5.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_5/Folder_71/tests39_71_5.py", "lineno": 26, "message": "AssertionError: assert ['v', 's', 'l...'Y', 'M', ...] == ['#', '$', '&...'9', ';', ...]\n  At index 0 diff: 'v' != '#'\n  Full diff:\n  - ['#', '$', '&', '8', '9', ';', '?', '@', 'M', 'Y', '[', 'l', 's', 'v']\n  + ['v', 's', 'l', '[', 'Y', 'M', '@', '?', ';', '9', '8', '&', '$', '#']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['v', 's', 'l...'Y', 'M', ...] == ['#', '$', '&...'9', ';', ...]", "E             At index 0 diff: 'v' != '#'", "E             Full diff:", "E             - ['#', '$', '&', '8', '9', ';', '?', '@', 'M', 'Y', '[', 'l', 's', 'v']", "E             + ['v', 's', 'l', '[', 'Y', 'M', '@', '?', ';', '9', '8', '&', '$', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_71/tests39_71_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=14 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['v', 's', 'l...'Y', 'M', ...] == ['#', '$', '&...'9', ';', ...]", "E             At index 0 diff: 'v' != '#'", "E             Full diff:", "E             - ['#', '$', '&', '8', '9', ';', '?', '@', 'M', 'Y', '[', 'l', 's', 'v']", "E             + ['v', 's', 'l', '[', 'Y', 'M', '@', '?', ';', '9', '8', '&', '$', '#']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_5/Folder_71/tests39_71_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_5/Folder_71/tests39_71_5.py", "lineno": 26, "message": "AssertionError: assert ['v', 's', 'l...'Y', 'M', ...] == ['#', '$', '&...'9', ';', ...]\n  At index 0 diff: 'v' != '#'\n  Full diff:\n  - ['#', '$', '&', '8', '9', ';', '?', '@', 'M', 'Y', '[', 'l', 's', 'v']\n  + ['v', 's', 'l', '[', 'Y', 'M', '@', '?', ';', '9', '8', '&', '$', '#']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006069800001569092, "start": 1700295358.3642561, "stop": 1700295358.3648636, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8bdf922d06d6477ca1889c68ce7ba016", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
