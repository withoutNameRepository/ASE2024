{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_28_1.py::test_if_result_is_sorted", "location": ["tests39_28_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_28_1.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001702230074442923, "start": 1700295073.936756, "stop": 1700295073.936927, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e5bca83dd81c45459b395ba4643f936d", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_28_1.py::test_strings_of_size_equal_to_3", "location": ["tests39_28_1.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests39_28_1.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016109799616970122, "start": 1700295073.9368007, "stop": 1700295073.9369628, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e5bca83dd81c45459b395ba4643f936d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_28_1.py::test_strings_of_size_equal_to_3", "location": ["tests39_28_1.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests39_28_1.py": 1, "Folder_28": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_1/Folder_28/tests39_28_1.py", "lineno": 10, "message": "AssertionError: assert ['T', 'L', ';'] == [';', 'L', 'T']\n  At index 0 diff: 'T' != ';'\n  Full diff:\n  - [';', 'L', 'T']\n  ?   ^         ^\n  + ['T', 'L', ';']\n  ?   ^         ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['T', 'L', ';'] == [';', 'L', 'T']", "E             At index 0 diff: 'T' != ';'", "E             Full diff:", "E             - [';', 'L', 'T']", "E             ?   ^         ^", "E             + ['T', 'L', ';']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_1/Folder_28/tests39_28_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['T', 'L', ';'] == [';', 'L', 'T']", "E             At index 0 diff: 'T' != ';'", "E             Full diff:", "E             - [';', 'L', 'T']", "E             ?   ^         ^", "E             + ['T', 'L', ';']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codellama_7b_results_1/Folder_28/tests39_28_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/CodeLlama_T0/Q39/codellama_7b_results_1/Folder_28/tests39_28_1.py", "lineno": 10, "message": "AssertionError: assert ['T', 'L', ';'] == [';', 'L', 'T']\n  At index 0 diff: 'T' != ';'\n  Full diff:\n  - [';', 'L', 'T']\n  ?   ^         ^\n  + ['T', 'L', ';']\n  ?   ^         ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005513599899131805, "start": 1700295073.937232, "stop": 1700295073.9377844, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e5bca83dd81c45459b395ba4643f936d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
