 ```
def palindromes_of_specific_lengths(string):
    # Define the range of indices for the substring
    start_index = 62
    end_index = 88
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each character in the substring
    for i in range(start_index, end_index + 1):
        # Check if the current character is a letter
        if string[i].isalpha():
            # Define the length of the palindrome
            length = 21

            # Iterate over each possible length for the palindrome
            while length >= 18:
                # Define the substring for the current length
                substr = string[i - (length - 1) // 2 : i + (length - 1) // 2 + 1]
                # Check if the substring is a palindrome
                if substr == substr[::-1]:
                    # Add the palindrome to the set
                    palindromes.add(substr)
                # Decrease the length of the palindrome by one
                length -= 1

    # Return the set of palindromes
    return palindromes
```