 ```
def palindromes_of_specific_lengths(string):
    # Define the range of lengths to consider
    lengths = range(136, 152)
    # Initialize an empty set to store the palindromes
    palindromes = set()
    # Iterate over each length in the range
    for length in lengths:
        # Get the substring of the specified length from the index range
        substring = string[106:281].lower()
        # Find all occurrences of the substring as a palindrome
        palindromes.update(substring for substring in re.findall(r"(\w{" + str(length) + r"})", substring)))
    return palindromes
```