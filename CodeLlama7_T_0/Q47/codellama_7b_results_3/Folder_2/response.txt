 ```
def palindromes_of_specific_lengths(string):
    # Define the substring range for consideration
    start = 10
    end = 59

    # Initialize an empty set to store the palindromes
    palindromes = set()

    # Iterate over the characters in the substring
    for i in range(start, end + 1):
        # Check if the character at index i is a letter
        if string[i].isalpha():
            # Define the length of the current palindrome
            length = (end - start) + 1

            # Check if the length of the current palindrome is within the specified range
            if length >= 18 and length <= 36:
                # Initialize an empty string to store the current palindrome
                palindrome = ""

                # Iterate over the characters in the substring
                for j in range(start, end + 1):
                    # Check if the character at index j is a letter
                    if string[j].isalpha():
                        # Add the character at index j to the current palindrome
                        palindrome += string[j]

                # Check if the current palindrome is case-insensitive and occurs in the specified substring range
                if palindrome.lower() == palindrome and start <= i <= end:
                    # Add the current palindrome to the set of palindromes
                    palindromes.add(palindrome)

    # Return the set of palindromes
    return palindromes
```