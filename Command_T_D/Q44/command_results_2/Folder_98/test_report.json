{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests44_98_2.py::test_list_of_non_prime_nums", "location": ["tests44_98_2.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_98_2.py": 1, "Folder_98": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019338299898663536, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f0f8a0a5e8624f719992d283d7db204f", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_98_2.py::test_list_of_primes", "location": ["tests44_98_2.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_98_2.py": 1, "Folder_98": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029818999973940663, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f0f8a0a5e8624f719992d283d7db204f", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_98_2.py::test_list_of_non_prime_nums", "location": ["tests44_98_2.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_98_2.py": 1, "Folder_98": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q44/command_results_2/Folder_98/generated_answer.py", "lineno": 3, "message": "ValueError: operands could not be broadcast together with shapes (15,) (68,)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (6 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[0:6 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/command_results_2/Folder_98/tests44_98_2.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def composite_nums_between_indices(nums):", ">       return set(np.where(np.all(np.array(range(2, nums[6]+1)) % nums == 0, axis=1), True, False)[0].tolist())", "E       ValueError: operands could not be broadcast together with shapes (15,) (68,)"], "reprfuncargs": {"args": [["nums", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q44/command_results_2/Folder_98/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (6 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[0:6 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/command_results_2/Folder_98/tests44_98_2.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def composite_nums_between_indices(nums):", ">       return set(np.where(np.all(np.array(range(2, nums[6]+1)) % nums == 0, axis=1), True, False)[0].tolist())", "E       ValueError: operands could not be broadcast together with shapes (15,) (68,)"], "reprfuncargs": {"args": [["nums", "[4, 6, 8, 10, 12, 14, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q44/command_results_2/Folder_98/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q44/command_results_2/Folder_98/generated_answer.py", "lineno": 3, "message": "ValueError: operands could not be broadcast together with shapes (15,) (68,)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021222799841780216, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f0f8a0a5e8624f719992d283d7db204f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
