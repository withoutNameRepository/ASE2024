{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_1_1.py::test_strings_of_size_equal_to_11", "location": ["tests39_1_1.py", 5, "test_strings_of_size_equal_to_11"], "keywords": {"test_strings_of_size_equal_to_11": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011758197797462344, "start": 1700341525.5294542, "stop": 1700341525.5295727, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_1_1.py::test_if_result_is_sorted", "location": ["tests39_1_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001629049947950989, "start": 1700341525.5295439, "stop": 1700341525.5297074, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_1_1.py::test_if_result_is_sorted", "location": ["tests39_1_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026356198941357434, "start": 1700341525.5299733, "stop": 1700341525.5302374, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_1_1.py::test_if_result_is_sorted", "location": ["tests39_1_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010387602378614247, "start": 1700341525.5305252, "stop": 1700341525.5306299, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_1_1.py::test_if_result_contains_highest_chars", "location": ["tests39_1_1.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010956401820294559, "start": 1700341525.5310795, "stop": 1700341525.5311894, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_1_1.py::test_strings_of_size_equal_to_11", "location": ["tests39_1_1.py", 5, "test_strings_of_size_equal_to_11"], "keywords": {"test_strings_of_size_equal_to_11": 1, "tests39_1_1.py": 1, "Folder_1": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_1/tests39_1_1.py", "lineno": 12, "message": "AssertionError: assert ['T', 'IB'] == ['~', '}', 'n...'i', 'c', ...]\n  At index 0 diff: 'T' != '~'\n  Right contains 9 more items, first extra item: 'n'\n  Full diff:\n  - ['~', '}', 'n', 'l', 'i', 'c', 'T', 'I', 'B', '8', '*']\n  + ['T', 'IB']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_11():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['T', 'IB'] == ['~', '}', 'n...'i', 'c', ...]", "E             At index 0 diff: 'T' != '~'", "E             Right contains 9 more items, first extra item: 'n'", "E             Full diff:", "E             - ['~', '}', 'n', 'l', 'i', 'c', 'T', 'I', 'B', '8', '*']", "E             + ['T', 'IB']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_1/tests39_1_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_11():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=11))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['T', 'IB'] == ['~', '}', 'n...'i', 'c', ...]", "E             At index 0 diff: 'T' != '~'", "E             Right contains 9 more items, first extra item: 'n'", "E             Full diff:", "E             - ['~', '}', 'n', 'l', 'i', 'c', 'T', 'I', 'B', '8', '*']", "E             + ['T', 'IB']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_1/tests39_1_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_1/tests39_1_1.py", "lineno": 12, "message": "AssertionError: assert ['T', 'IB'] == ['~', '}', 'n...'i', 'c', ...]\n  At index 0 diff: 'T' != '~'\n  Right contains 9 more items, first extra item: 'n'\n  Full diff:\n  - ['~', '}', 'n', 'l', 'i', 'c', 'T', 'I', 'B', '8', '*']\n  + ['T', 'IB']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003608330152928829, "start": 1700341525.5297556, "stop": 1700341525.5301168, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d68770463980499b9684c871e9f02ed7", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
