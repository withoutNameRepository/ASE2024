{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_33_1.py::test_if_result_is_sorted", "location": ["tests39_33_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_33_1.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022933498257771134, "start": 1700341544.395935, "stop": 1700341544.3961654, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ff1b61ce6f3f41f8b3779be260d92748", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_33_1.py::test_strings_of_size_equal_to_36", "location": ["tests39_33_1.py", 5, "test_strings_of_size_equal_to_36"], "keywords": {"test_strings_of_size_equal_to_36": 1, "tests39_33_1.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025967901456169784, "start": 1700341544.396043, "stop": 1700341544.3963041, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ff1b61ce6f3f41f8b3779be260d92748", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_33_1.py::test_if_result_is_sorted", "location": ["tests39_33_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_33_1.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_33/tests39_33_1.py", "lineno": 28, "message": "AssertionError: assert ['A', 'B', 'C...'I', 'J', ...] == ['Z', 'W', 'V...'T', 'S', ...]\n  At index 0 diff: 'A' != 'Z'\n  Full diff:\n  - ['Z', 'W', 'V', 'U', 'T', 'S', 'Q', 'N', 'K', 'J', 'I', 'E', 'C', 'B', 'A']\n  + ['A', 'B', 'C', 'E', 'I', 'J', 'K', 'N', 'Q', 'S', 'T', 'U', 'V', 'W', 'Z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'B', 'C...'I', 'J', ...] == ['Z', 'W', 'V...'T', 'S', ...]", "E             At index 0 diff: 'A' != 'Z'", "E             Full diff:", "E             - ['Z', 'W', 'V', 'U', 'T', 'S', 'Q', 'N', 'K', 'J', 'I', 'E', 'C', 'B', 'A']", "E             + ['A', 'B', 'C', 'E', 'I', 'J', 'K', 'N', 'Q', 'S', 'T', 'U', 'V', 'W', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_33/tests39_33_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=36 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'B', 'C...'I', 'J', ...] == ['Z', 'W', 'V...'T', 'S', ...]", "E             At index 0 diff: 'A' != 'Z'", "E             Full diff:", "E             - ['Z', 'W', 'V', 'U', 'T', 'S', 'Q', 'N', 'K', 'J', 'I', 'E', 'C', 'B', 'A']", "E             + ['A', 'B', 'C', 'E', 'I', 'J', 'K', 'N', 'Q', 'S', 'T', 'U', 'V', 'W', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_33/tests39_33_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_33/tests39_33_1.py", "lineno": 28, "message": "AssertionError: assert ['A', 'B', 'C...'I', 'J', ...] == ['Z', 'W', 'V...'T', 'S', ...]\n  At index 0 diff: 'A' != 'Z'\n  Full diff:\n  - ['Z', 'W', 'V', 'U', 'T', 'S', 'Q', 'N', 'K', 'J', 'I', 'E', 'C', 'B', 'A']\n  + ['A', 'B', 'C', 'E', 'I', 'J', 'K', 'N', 'Q', 'S', 'T', 'U', 'V', 'W', 'Z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012463029997888952, "start": 1700341544.396559, "stop": 1700341544.3978062, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ff1b61ce6f3f41f8b3779be260d92748", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
