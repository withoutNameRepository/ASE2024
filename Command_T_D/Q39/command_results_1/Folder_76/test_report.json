{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_76_1.py::test_if_result_is_sorted", "location": ["tests39_76_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_76_1.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000158127979375422, "start": 1700341574.9523673, "stop": 1700341574.9525263, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c376b3f8696e44fba5d3d56715662a5a", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_76_1.py::test_strings_of_size_equal_to_3", "location": ["tests39_76_1.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests39_76_1.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016929299454204738, "start": 1700341574.9523315, "stop": 1700341574.952502, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c376b3f8696e44fba5d3d56715662a5a", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_76_1.py::test_if_result_is_sorted", "location": ["tests39_76_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_76_1.py": 1, "Folder_76": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_76/tests39_76_1.py", "lineno": 28, "message": "AssertionError: assert ['A', 'K'] == ['K', 'A']\n  At index 0 diff: 'A' != 'K'\n  Full diff:\n  - ['K', 'A']\n  + ['A', 'K']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'K'] == ['K', 'A']", "E             At index 0 diff: 'A' != 'K'", "E             Full diff:", "E             - ['K', 'A']", "E             + ['A', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_76/tests39_76_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'K'] == ['K', 'A']", "E             At index 0 diff: 'A' != 'K'", "E             Full diff:", "E             - ['K', 'A']", "E             + ['A', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_76/tests39_76_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_76/tests39_76_1.py", "lineno": 28, "message": "AssertionError: assert ['A', 'K'] == ['K', 'A']\n  At index 0 diff: 'A' != 'K'\n  Full diff:\n  - ['K', 'A']\n  + ['A', 'K']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000500096008181572, "start": 1700341574.9527879, "stop": 1700341574.9532888, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c376b3f8696e44fba5d3d56715662a5a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
