{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_57_1.py::test_if_result_is_sorted", "location": ["tests39_57_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012165700900368392, "start": 1700341561.7961328, "stop": 1700341561.7962556, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "40a29d67073047b8b4bcab7ae83b6d8c", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_57_1.py::test_strings_of_size_equal_to_29", "location": ["tests39_57_1.py", 5, "test_strings_of_size_equal_to_29"], "keywords": {"test_strings_of_size_equal_to_29": 1, "tests39_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011651200475171208, "start": 1700341561.7961357, "stop": 1700341561.796253, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "40a29d67073047b8b4bcab7ae83b6d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_57_1.py::test_if_result_is_sorted", "location": ["tests39_57_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_57_1.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_57/tests39_57_1.py", "lineno": 28, "message": "AssertionError: assert ['S', 'L', 'X', 'I', 'H', 'K'] == ['X', 'S', 'L', 'K', 'I', 'H']\n  At index 0 diff: 'S' != 'X'\n  Full diff:\n  - ['X', 'S', 'L', 'K', 'I', 'H']\n  + ['S', 'L', 'X', 'I', 'H', 'K']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=29 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['S', 'L', 'X', 'I', 'H', 'K'] == ['X', 'S', 'L', 'K', 'I', 'H']", "E             At index 0 diff: 'S' != 'X'", "E             Full diff:", "E             - ['X', 'S', 'L', 'K', 'I', 'H']", "E             + ['S', 'L', 'X', 'I', 'H', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_57/tests39_57_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=29 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['S', 'L', 'X', 'I', 'H', 'K'] == ['X', 'S', 'L', 'K', 'I', 'H']", "E             At index 0 diff: 'S' != 'X'", "E             Full diff:", "E             - ['X', 'S', 'L', 'K', 'I', 'H']", "E             + ['S', 'L', 'X', 'I', 'H', 'K']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_1/Folder_57/tests39_57_1.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_1/Folder_57/tests39_57_1.py", "lineno": 28, "message": "AssertionError: assert ['S', 'L', 'X', 'I', 'H', 'K'] == ['X', 'S', 'L', 'K', 'I', 'H']\n  At index 0 diff: 'S' != 'X'\n  Full diff:\n  - ['X', 'S', 'L', 'K', 'I', 'H']\n  + ['S', 'L', 'X', 'I', 'H', 'K']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00047107800492085516, "start": 1700341561.7964308, "stop": 1700341561.7969024, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "40a29d67073047b8b4bcab7ae83b6d8c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
