{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_84_5.py::test_strings_of_size_equal_to_10", "location": ["tests39_84_5.py", 5, "test_strings_of_size_equal_to_10"], "keywords": {"test_strings_of_size_equal_to_10": 1, "tests39_84_5.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012026500189676881, "start": 1700341978.5323827, "stop": 1700341978.5325036, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "be77ea4df0ae4b4da5b71ac0fb70a711", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_84_5.py::test_if_result_is_sorted", "location": ["tests39_84_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_84_5.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013035998563282192, "start": 1700341978.5324469, "stop": 1700341978.5325778, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "be77ea4df0ae4b4da5b71ac0fb70a711", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_84_5.py::test_strings_of_size_equal_to_10", "location": ["tests39_84_5.py", 5, "test_strings_of_size_equal_to_10"], "keywords": {"test_strings_of_size_equal_to_10": 1, "tests39_84_5.py": 1, "Folder_84": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_84/tests39_84_5.py", "lineno": 10, "message": "AssertionError: assert [] == ['#', '*', '4...'b', 'g', ...]\n  Right contains 10 more items, first extra item: '#'\n  Full diff:\n  - ['#', '*', '4', '8', 'b', 'g', 'm', 'q', 't', '}']\n  + []"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_10():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=10))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert [] == ['#', '*', '4...'b', 'g', ...]", "E             Right contains 10 more items, first extra item: '#'", "E             Full diff:", "E             - ['#', '*', '4', '8', 'b', 'g', 'm', 'q', 't', '}']", "E             + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_84/tests39_84_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_10():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=10))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert [] == ['#', '*', '4...'b', 'g', ...]", "E             Right contains 10 more items, first extra item: '#'", "E             Full diff:", "E             - ['#', '*', '4', '8', 'b', 'g', 'm', 'q', 't', '}']", "E             + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_84/tests39_84_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_84/tests39_84_5.py", "lineno": 10, "message": "AssertionError: assert [] == ['#', '*', '4...'b', 'g', ...]\n  Right contains 10 more items, first extra item: '#'\n  Full diff:\n  - ['#', '*', '4', '8', 'b', 'g', 'm', 'q', 't', '}']\n  + []"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003818830009549856, "start": 1700341978.5327091, "stop": 1700341978.5330913, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "be77ea4df0ae4b4da5b71ac0fb70a711", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
