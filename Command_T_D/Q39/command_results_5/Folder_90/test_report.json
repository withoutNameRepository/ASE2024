{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_90_5.py::test_if_result_is_sorted", "location": ["tests39_90_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013579102233052254, "start": 1700341984.7428465, "stop": 1700341984.7429829, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9ef8968c50994e28941d67959340f4a5", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_90_5.py::test_strings_of_size_equal_to_24", "location": ["tests39_90_5.py", 5, "test_strings_of_size_equal_to_24"], "keywords": {"test_strings_of_size_equal_to_24": 1, "tests39_90_5.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014330499107018113, "start": 1700341984.7429097, "stop": 1700341984.743054, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ef8968c50994e28941d67959340f4a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_90_5.py::test_if_result_is_sorted", "location": ["tests39_90_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_90_5.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_90/tests39_90_5.py", "lineno": 28, "message": "AssertionError: assert ['e', 'g', 'o...'q', 'r', ...] == ['z', 'x', 'r...'p', 'o', ...]\n  At index 0 diff: 'e' != 'z'\n  Full diff:\n  - ['z', 'x', 'r', 'q', 'p', 'o', 'g', 'e']\n  + ['e', 'g', 'o', 'p', 'q', 'r', 'x', 'z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=24 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['e', 'g', 'o...'q', 'r', ...] == ['z', 'x', 'r...'p', 'o', ...]", "E             At index 0 diff: 'e' != 'z'", "E             Full diff:", "E             - ['z', 'x', 'r', 'q', 'p', 'o', 'g', 'e']", "E             + ['e', 'g', 'o', 'p', 'q', 'r', 'x', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_90/tests39_90_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=24 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['e', 'g', 'o...'q', 'r', ...] == ['z', 'x', 'r...'p', 'o', ...]", "E             At index 0 diff: 'e' != 'z'", "E             Full diff:", "E             - ['z', 'x', 'r', 'q', 'p', 'o', 'g', 'e']", "E             + ['e', 'g', 'o', 'p', 'q', 'r', 'x', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_90/tests39_90_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_90/tests39_90_5.py", "lineno": 28, "message": "AssertionError: assert ['e', 'g', 'o...'q', 'r', ...] == ['z', 'x', 'r...'p', 'o', ...]\n  At index 0 diff: 'e' != 'z'\n  Full diff:\n  - ['z', 'x', 'r', 'q', 'p', 'o', 'g', 'e']\n  + ['e', 'g', 'o', 'p', 'q', 'r', 'x', 'z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006141240010038018, "start": 1700341984.7432113, "stop": 1700341984.743826, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9ef8968c50994e28941d67959340f4a5", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
