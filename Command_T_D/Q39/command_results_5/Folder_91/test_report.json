{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_91_5.py::test_if_result_is_sorted", "location": ["tests39_91_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011007901048287749, "start": 1700341985.735768, "stop": 1700341985.7358787, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a580ef22cf2343eaaa20e6189385d66c", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_91_5.py::test_strings_of_size_equal_to_6", "location": ["tests39_91_5.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001261669967789203, "start": 1700341985.7357495, "stop": 1700341985.735876, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a580ef22cf2343eaaa20e6189385d66c", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_91_5.py::test_if_result_is_sorted", "location": ["tests39_91_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_91_5.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError: assert ['%', 'q', '6...'&', 'j', ...] == ['q', 'j', '6...')', '&', ...]\n  At index 0 diff: '%' != 'q'\n  Full diff:\n  - ['q', 'j', '6', '0', ')', '&', '%']\n  + ['%', 'q', '6', '0', '&', 'j', ')']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['%', 'q', '6...'&', 'j', ...] == ['q', 'j', '6...')', '&', ...]", "E             At index 0 diff: '%' != 'q'", "E             Full diff:", "E             - ['q', 'j', '6', '0', ')', '&', '%']", "E             + ['%', 'q', '6', '0', '&', 'j', ')']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['%', 'q', '6...'&', 'j', ...] == ['q', 'j', '6...')', '&', ...]", "E             At index 0 diff: '%' != 'q'", "E             Full diff:", "E             - ['q', 'j', '6', '0', ')', '&', '%']", "E             + ['%', 'q', '6', '0', '&', 'j', ')']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_91/tests39_91_5.py", "lineno": 28, "message": "AssertionError: assert ['%', 'q', '6...'&', 'j', ...] == ['q', 'j', '6...')', '&', ...]\n  At index 0 diff: '%' != 'q'\n  Full diff:\n  - ['q', 'j', '6', '0', ')', '&', '%']\n  + ['%', 'q', '6', '0', '&', 'j', ')']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004103620012756437, "start": 1700341985.736065, "stop": 1700341985.736476, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a580ef22cf2343eaaa20e6189385d66c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
