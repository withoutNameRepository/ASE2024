{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_57_5.py::test_strings_of_size_equal_to_29", "location": ["tests39_57_5.py", 5, "test_strings_of_size_equal_to_29"], "keywords": {"test_strings_of_size_equal_to_29": 1, "tests39_57_5.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012867801706306636, "start": 1700341949.5089095, "stop": 1700341949.509039, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e149b60b7d284646bc1ef180a464739c", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_57_5.py::test_if_result_is_sorted", "location": ["tests39_57_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_57_5.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010426400694996119, "start": 1700341949.5088727, "stop": 1700341949.5089774, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e149b60b7d284646bc1ef180a464739c", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_57_5.py::test_if_result_is_sorted", "location": ["tests39_57_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_57_5.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_57/generated_answer.py", "lineno": 5, "message": "ValueError: max() arg is an empty sequence"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=29 + 1))", ">       result = return_n_greatest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_57/tests39_57_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_greatest_chars(s):", "        char_list = []", "        for c in s:", ">           if ord(c) > ord(max(char_list, key=lambda x: ord(x))):", "E           ValueError: max() arg is an empty sequence"], "reprfuncargs": {"args": [["s", "'.458P;F&^rGVkYIvAU<(9:y*6~x])b'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_57/generated_answer.py", "lineno": 5, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=29 + 1))", ">       result = return_n_greatest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_57/tests39_57_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_greatest_chars(s):", "        char_list = []", "        for c in s:", ">           if ord(c) > ord(max(char_list, key=lambda x: ord(x))):", "E           ValueError: max() arg is an empty sequence"], "reprfuncargs": {"args": [["s", "'.458P;F&^rGVkYIvAU<(9:y*6~x])b'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_57/generated_answer.py", "lineno": 5, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_57/generated_answer.py", "lineno": 5, "message": "ValueError: max() arg is an empty sequence"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012295797932893038, "start": 1700341949.5091507, "stop": 1700341949.509274, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e149b60b7d284646bc1ef180a464739c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
