{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_41_5.py::test_if_result_is_sorted", "location": ["tests39_41_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_41_5.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011170102516189218, "start": 1700341934.9844673, "stop": 1700341934.9845793, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c87c4a09d1c34d0b8c1d440b4a08caf3", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_41_5.py::test_strings_of_size_equal_to_37", "location": ["tests39_41_5.py", 5, "test_strings_of_size_equal_to_37"], "keywords": {"test_strings_of_size_equal_to_37": 1, "tests39_41_5.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.958099690265954e-05, "start": 1700341934.9845552, "stop": 1700341934.9846554, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c87c4a09d1c34d0b8c1d440b4a08caf3", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_41_5.py::test_if_result_is_sorted", "location": ["tests39_41_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_41_5.py": 1, "Folder_41": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_41/tests39_41_5.py", "lineno": 26, "message": "AssertionError: assert ['M', 'P', 'E...'H', 'C', ...] == ['B', 'C', 'D...'H', 'J', ...]\n  At index 0 diff: 'M' != 'B'\n  Full diff:\n  - ['B', 'C', 'DI', 'E', 'H', 'J', 'L', 'M', 'P', 'V', 'W']\n  + ['M', 'P', 'E', 'L', 'H', 'C', 'B', 'V', 'W', 'J', 'DI']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=37 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['M', 'P', 'E...'H', 'C', ...] == ['B', 'C', 'D...'H', 'J', ...]", "E             At index 0 diff: 'M' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'DI', 'E', 'H', 'J', 'L', 'M', 'P', 'V', 'W']", "E             + ['M', 'P', 'E', 'L', 'H', 'C', 'B', 'V', 'W', 'J', 'DI']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_41/tests39_41_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=37 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['M', 'P', 'E...'H', 'C', ...] == ['B', 'C', 'D...'H', 'J', ...]", "E             At index 0 diff: 'M' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'DI', 'E', 'H', 'J', 'L', 'M', 'P', 'V', 'W']", "E             + ['M', 'P', 'E', 'L', 'H', 'C', 'B', 'V', 'W', 'J', 'DI']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_41/tests39_41_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_41/tests39_41_5.py", "lineno": 26, "message": "AssertionError: assert ['M', 'P', 'E...'H', 'C', ...] == ['B', 'C', 'D...'H', 'J', ...]\n  At index 0 diff: 'M' != 'B'\n  Full diff:\n  - ['B', 'C', 'DI', 'E', 'H', 'J', 'L', 'M', 'P', 'V', 'W']\n  + ['M', 'P', 'E', 'L', 'H', 'C', 'B', 'V', 'W', 'J', 'DI']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004974559997208416, "start": 1700341934.984746, "stop": 1700341934.9852438, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c87c4a09d1c34d0b8c1d440b4a08caf3", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
