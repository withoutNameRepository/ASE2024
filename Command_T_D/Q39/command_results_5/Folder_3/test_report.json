{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_3_5.py::test_strings_of_size_equal_to_28", "location": ["tests39_3_5.py", 5, "test_strings_of_size_equal_to_28"], "keywords": {"test_strings_of_size_equal_to_28": 1, "tests39_3_5.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013042200589552522, "start": 1700341894.2867312, "stop": 1700341894.2868626, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ea6334dceb95408da4cd8d495389dd44", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_3_5.py::test_if_result_is_sorted", "location": ["tests39_3_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_3_5.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011314699077047408, "start": 1700341894.2866776, "stop": 1700341894.286791, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ea6334dceb95408da4cd8d495389dd44", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_3_5.py::test_if_result_is_sorted", "location": ["tests39_3_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_3_5.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_3/tests39_3_5.py", "lineno": 28, "message": "AssertionError: assert ['Q', 'M', 'K...'N', 'S', ...] == ['U', 'S', 'Q...'M', 'K', ...]\n  At index 0 diff: 'Q' != 'U'\n  Full diff:\n  - ['U', 'S', 'Q', 'N', 'M', 'K', 'D', 'A']\n  + ['Q', 'M', 'K', 'A', 'N', 'S', 'U', 'D']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=28 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['Q', 'M', 'K...'N', 'S', ...] == ['U', 'S', 'Q...'M', 'K', ...]", "E             At index 0 diff: 'Q' != 'U'", "E             Full diff:", "E             - ['U', 'S', 'Q', 'N', 'M', 'K', 'D', 'A']", "E             + ['Q', 'M', 'K', 'A', 'N', 'S', 'U', 'D']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_3/tests39_3_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=28 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['Q', 'M', 'K...'N', 'S', ...] == ['U', 'S', 'Q...'M', 'K', ...]", "E             At index 0 diff: 'Q' != 'U'", "E             Full diff:", "E             - ['U', 'S', 'Q', 'N', 'M', 'K', 'D', 'A']", "E             + ['Q', 'M', 'K', 'A', 'N', 'S', 'U', 'D']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_3/tests39_3_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_3/tests39_3_5.py", "lineno": 28, "message": "AssertionError: assert ['Q', 'M', 'K...'N', 'S', ...] == ['U', 'S', 'Q...'M', 'K', ...]\n  At index 0 diff: 'Q' != 'U'\n  Full diff:\n  - ['U', 'S', 'Q', 'N', 'M', 'K', 'D', 'A']\n  + ['Q', 'M', 'K', 'A', 'N', 'S', 'U', 'D']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00048552200314588845, "start": 1700341894.286987, "stop": 1700341894.2874732, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ea6334dceb95408da4cd8d495389dd44", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
