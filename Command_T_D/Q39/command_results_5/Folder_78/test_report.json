{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_78_5.py::test_if_result_is_sorted", "location": ["tests39_78_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018818399985320866, "start": 1700341972.479265, "stop": 1700341972.4794543, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f762365e90f74a8c90749ed3e1f9b45d", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_78_5.py::test_strings_of_size_equal_to_43", "location": ["tests39_78_5.py", 5, "test_strings_of_size_equal_to_43"], "keywords": {"test_strings_of_size_equal_to_43": 1, "tests39_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003488340007606894, "start": 1700341972.479782, "stop": 1700341972.4801326, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f762365e90f74a8c90749ed3e1f9b45d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_78_5.py::test_if_result_is_sorted", "location": ["tests39_78_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_78_5.py": 1, "Folder_78": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_78/tests39_78_5.py", "lineno": 28, "message": "AssertionError: assert ['A', 'C', 'G...'J', 'N', ...] == ['Q', 'O', 'N...'H', 'G', ...]\n  At index 0 diff: 'A' != 'Q'\n  Full diff:\n  - ['Q', 'O', 'N', 'J', 'H', 'G', 'C', 'A']\n  + ['A', 'C', 'G', 'H', 'J', 'N', 'O', 'Q']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=43 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'C', 'G...'J', 'N', ...] == ['Q', 'O', 'N...'H', 'G', ...]", "E             At index 0 diff: 'A' != 'Q'", "E             Full diff:", "E             - ['Q', 'O', 'N', 'J', 'H', 'G', 'C', 'A']", "E             + ['A', 'C', 'G', 'H', 'J', 'N', 'O', 'Q']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_78/tests39_78_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=43 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['A', 'C', 'G...'J', 'N', ...] == ['Q', 'O', 'N...'H', 'G', ...]", "E             At index 0 diff: 'A' != 'Q'", "E             Full diff:", "E             - ['Q', 'O', 'N', 'J', 'H', 'G', 'C', 'A']", "E             + ['A', 'C', 'G', 'H', 'J', 'N', 'O', 'Q']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_5/Folder_78/tests39_78_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_5/Folder_78/tests39_78_5.py", "lineno": 28, "message": "AssertionError: assert ['A', 'C', 'G...'J', 'N', ...] == ['Q', 'O', 'N...'H', 'G', ...]\n  At index 0 diff: 'A' != 'Q'\n  Full diff:\n  - ['Q', 'O', 'N', 'J', 'H', 'G', 'C', 'A']\n  + ['A', 'C', 'G', 'H', 'J', 'N', 'O', 'Q']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008418539946433157, "start": 1700341972.479784, "stop": 1700341972.4806263, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f762365e90f74a8c90749ed3e1f9b45d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
