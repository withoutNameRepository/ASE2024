{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_13_3.py::test_strings_of_size_equal_to_31", "location": ["tests39_13_3.py", 5, "test_strings_of_size_equal_to_31"], "keywords": {"test_strings_of_size_equal_to_31": 1, "tests39_13_3.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001099070068448782, "start": 1700341717.0172882, "stop": 1700341717.0173988, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82788925a0ce442ea20df7a4a810b699", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_13_3.py::test_if_result_is_sorted", "location": ["tests39_13_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_13_3.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010396502329967916, "start": 1700341717.0172656, "stop": 1700341717.0173702, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "82788925a0ce442ea20df7a4a810b699", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_13_3.py::test_if_result_is_sorted", "location": ["tests39_13_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_13_3.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_13/tests39_13_3.py", "lineno": 26, "message": "AssertionError: assert ['I', 'R', 'B...'Y', 'S', ...] == ['B', 'F', 'I...'R', 'S', ...]\n  At index 0 diff: 'I' != 'B'\n  Full diff:\n  - ['B', 'F', 'I', 'P', 'R', 'S', 'T', 'V', 'Y', 'Z']\n  + ['I', 'R', 'B', 'F', 'Y', 'S', 'V', 'T', 'Z', 'P']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=31 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['I', 'R', 'B...'Y', 'S', ...] == ['B', 'F', 'I...'R', 'S', ...]", "E             At index 0 diff: 'I' != 'B'", "E             Full diff:", "E             - ['B', 'F', 'I', 'P', 'R', 'S', 'T', 'V', 'Y', 'Z']", "E             + ['I', 'R', 'B', 'F', 'Y', 'S', 'V', 'T', 'Z', 'P']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_13/tests39_13_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=31 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['I', 'R', 'B...'Y', 'S', ...] == ['B', 'F', 'I...'R', 'S', ...]", "E             At index 0 diff: 'I' != 'B'", "E             Full diff:", "E             - ['B', 'F', 'I', 'P', 'R', 'S', 'T', 'V', 'Y', 'Z']", "E             + ['I', 'R', 'B', 'F', 'Y', 'S', 'V', 'T', 'Z', 'P']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_13/tests39_13_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_13/tests39_13_3.py", "lineno": 26, "message": "AssertionError: assert ['I', 'R', 'B...'Y', 'S', ...] == ['B', 'F', 'I...'R', 'S', ...]\n  At index 0 diff: 'I' != 'B'\n  Full diff:\n  - ['B', 'F', 'I', 'P', 'R', 'S', 'T', 'V', 'Y', 'Z']\n  + ['I', 'R', 'B', 'F', 'Y', 'S', 'V', 'T', 'Z', 'P']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005337600014172494, "start": 1700341717.0175445, "stop": 1700341717.0180786, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "82788925a0ce442ea20df7a4a810b699", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
