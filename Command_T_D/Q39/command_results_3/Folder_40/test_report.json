{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_40_3.py::test_if_result_is_sorted", "location": ["tests39_40_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_40_3.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.450799552723765e-05, "start": 1700341740.1718698, "stop": 1700341740.1719646, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3e7b4aa012284897be31fb0dfb503c07", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_40_3.py::test_strings_of_size_equal_to_7", "location": ["tests39_40_3.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests39_40_3.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011851399904116988, "start": 1700341740.1718476, "stop": 1700341740.171967, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3e7b4aa012284897be31fb0dfb503c07", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_40_3.py::test_if_result_is_sorted", "location": ["tests39_40_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_40_3.py": 1, "Folder_40": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_40/tests39_40_3.py", "lineno": 28, "message": "AssertionError: assert ['5', '9', 'G...'c', 's', ...] == ['w', 's', 'c...'G', '9', ...]\n  At index 0 diff: '5' != 'w'\n  Full diff:\n  - ['w', 's', 'c', '_', 'G', '9', '5']\n  + ['5', '9', 'G', '_', 'c', 's', 'w']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['5', '9', 'G...'c', 's', ...] == ['w', 's', 'c...'G', '9', ...]", "E             At index 0 diff: '5' != 'w'", "E             Full diff:", "E             - ['w', 's', 'c', '_', 'G', '9', '5']", "E             + ['5', '9', 'G', '_', 'c', 's', 'w']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_40/tests39_40_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['5', '9', 'G...'c', 's', ...] == ['w', 's', 'c...'G', '9', ...]", "E             At index 0 diff: '5' != 'w'", "E             Full diff:", "E             - ['w', 's', 'c', '_', 'G', '9', '5']", "E             + ['5', '9', 'G', '_', 'c', 's', 'w']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_40/tests39_40_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_40/tests39_40_3.py", "lineno": 28, "message": "AssertionError: assert ['5', '9', 'G...'c', 's', ...] == ['w', 's', 'c...'G', '9', ...]\n  At index 0 diff: '5' != 'w'\n  Full diff:\n  - ['w', 's', 'c', '_', 'G', '9', '5']\n  + ['5', '9', 'G', '_', 'c', 's', 'w']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003820330020971596, "start": 1700341740.1721447, "stop": 1700341740.172527, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3e7b4aa012284897be31fb0dfb503c07", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
