{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_38_3.py::test_strings_of_size_equal_to_45", "location": ["tests39_38_3.py", 5, "test_strings_of_size_equal_to_45"], "keywords": {"test_strings_of_size_equal_to_45": 1, "tests39_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013530801516026258, "start": 1700341738.4389684, "stop": 1700341738.439104, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0a7530d4a9654ef6944c558664a1c3f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_38_3.py::test_if_result_is_sorted", "location": ["tests39_38_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012054998660460114, "start": 1700341738.438926, "stop": 1700341738.4390473, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0a7530d4a9654ef6944c558664a1c3f1", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_38_3.py::test_if_result_is_sorted", "location": ["tests39_38_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_38_3.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_38/tests39_38_3.py", "lineno": 26, "message": "AssertionError: assert ['2', '4', '8', '6', '5'] == ['2', '4', '5', '6', '8']\n  At index 2 diff: '8' != '5'\n  Full diff:\n  - ['2', '4', '5', '6', '8']\n  ?             ^         ^\n  + ['2', '4', '8', '6', '5']\n  ?             ^         ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=45 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['2', '4', '8', '6', '5'] == ['2', '4', '5', '6', '8']", "E             At index 2 diff: '8' != '5'", "E             Full diff:", "E             - ['2', '4', '5', '6', '8']", "E             ?             ^         ^", "E             + ['2', '4', '8', '6', '5']", "E             ?             ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_38/tests39_38_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=45 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['2', '4', '8', '6', '5'] == ['2', '4', '5', '6', '8']", "E             At index 2 diff: '8' != '5'", "E             Full diff:", "E             - ['2', '4', '5', '6', '8']", "E             ?             ^         ^", "E             + ['2', '4', '8', '6', '5']", "E             ?             ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_38/tests39_38_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_38/tests39_38_3.py", "lineno": 26, "message": "AssertionError: assert ['2', '4', '8', '6', '5'] == ['2', '4', '5', '6', '8']\n  At index 2 diff: '8' != '5'\n  Full diff:\n  - ['2', '4', '5', '6', '8']\n  ?             ^         ^\n  + ['2', '4', '8', '6', '5']\n  ?             ^         ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004759279836434871, "start": 1700341738.4392571, "stop": 1700341738.4397335, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0a7530d4a9654ef6944c558664a1c3f1", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
