{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_82_3.py::test_if_result_is_sorted", "location": ["tests39_82_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_82_3.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001247919863089919, "start": 1700341778.6629753, "stop": 1700341778.6631007, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d5d89f141a674688a4b4f1354035188d", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_82_3.py::test_strings_of_size_equal_to_60", "location": ["tests39_82_3.py", 5, "test_strings_of_size_equal_to_60"], "keywords": {"test_strings_of_size_equal_to_60": 1, "tests39_82_3.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015516800340265036, "start": 1700341778.6629605, "stop": 1700341778.6631167, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d5d89f141a674688a4b4f1354035188d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_82_3.py::test_if_result_is_sorted", "location": ["tests39_82_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_82_3.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_82/tests39_82_3.py", "lineno": 26, "message": "AssertionError: assert ['KW', 'Q', '...'G', 'N', ...] == ['C', 'G', 'H...LS', 'N', ...]\n  At index 0 diff: 'KW' != 'C'\n  Full diff:\n  - ['C', 'G', 'H', 'KW', 'LS', 'N', 'P', 'Q', 'T', 'V', 'X', 'Y']\n  + ['KW', 'Q', 'C', 'V', 'G', 'N', 'Y', 'H', 'LS', 'P', 'T', 'X']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=60 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['KW', 'Q', '...'G', 'N', ...] == ['C', 'G', 'H...LS', 'N', ...]", "E             At index 0 diff: 'KW' != 'C'", "E             Full diff:", "E             - ['C', 'G', 'H', 'KW', 'LS', 'N', 'P', 'Q', 'T', 'V', 'X', 'Y']", "E             + ['KW', 'Q', 'C', 'V', 'G', 'N', 'Y', 'H', 'LS', 'P', 'T', 'X']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_82/tests39_82_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=60 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['KW', 'Q', '...'G', 'N', ...] == ['C', 'G', 'H...LS', 'N', ...]", "E             At index 0 diff: 'KW' != 'C'", "E             Full diff:", "E             - ['C', 'G', 'H', 'KW', 'LS', 'N', 'P', 'Q', 'T', 'V', 'X', 'Y']", "E             + ['KW', 'Q', 'C', 'V', 'G', 'N', 'Y', 'H', 'LS', 'P', 'T', 'X']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_82/tests39_82_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_82/tests39_82_3.py", "lineno": 26, "message": "AssertionError: assert ['KW', 'Q', '...'G', 'N', ...] == ['C', 'G', 'H...LS', 'N', ...]\n  At index 0 diff: 'KW' != 'C'\n  Full diff:\n  - ['C', 'G', 'H', 'KW', 'LS', 'N', 'P', 'Q', 'T', 'V', 'X', 'Y']\n  + ['KW', 'Q', 'C', 'V', 'G', 'N', 'Y', 'H', 'LS', 'P', 'T', 'X']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007071059953887016, "start": 1700341778.6633193, "stop": 1700341778.664027, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d5d89f141a674688a4b4f1354035188d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
