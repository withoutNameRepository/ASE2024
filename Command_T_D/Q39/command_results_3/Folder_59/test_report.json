{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_59_3.py::test_strings_of_size_equal_to_13", "location": ["tests39_59_3.py", 5, "test_strings_of_size_equal_to_13"], "keywords": {"test_strings_of_size_equal_to_13": 1, "tests39_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000136419985210523, "start": 1700341756.8819165, "stop": 1700341756.8820534, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "03e4355606a343ef8fe69d3415096492", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_59_3.py::test_if_result_is_sorted", "location": ["tests39_59_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_59_3.py": 1, "Folder_59": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.8794000223279e-05, "start": 1700341756.8818352, "stop": 1700341756.8819344, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "03e4355606a343ef8fe69d3415096492", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_59_3.py::test_if_result_is_sorted", "location": ["tests39_59_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_59_3.py": 1, "Folder_59": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_59/tests39_59_3.py", "lineno": 28, "message": "AssertionError: assert ['%', '/', '1...'>', 'e', ...] == ['{', 'n', 'e...'Q', 'M', ...]\n  At index 0 diff: '%' != '{'\n  Full diff:\n  - ['{', 'n', 'e', 'X', 'Q', 'M', 'K', 'F', '>', '5', '1', '/', '%']\n  + ['%', '/', '1', '5', '>', 'e', 'F', 'K', 'M', 'n', 'Q', 'X', '{']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['%', '/', '1...'>', 'e', ...] == ['{', 'n', 'e...'Q', 'M', ...]", "E             At index 0 diff: '%' != '{'", "E             Full diff:", "E             - ['{', 'n', 'e', 'X', 'Q', 'M', 'K', 'F', '>', '5', '1', '/', '%']", "E             + ['%', '/', '1', '5', '>', 'e', 'F', 'K', 'M', 'n', 'Q', 'X', '{']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_59/tests39_59_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=13 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['%', '/', '1...'>', 'e', ...] == ['{', 'n', 'e...'Q', 'M', ...]", "E             At index 0 diff: '%' != '{'", "E             Full diff:", "E             - ['{', 'n', 'e', 'X', 'Q', 'M', 'K', 'F', '>', '5', '1', '/', '%']", "E             + ['%', '/', '1', '5', '>', 'e', 'F', 'K', 'M', 'n', 'Q', 'X', '{']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_59/tests39_59_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_59/tests39_59_3.py", "lineno": 28, "message": "AssertionError: assert ['%', '/', '1...'>', 'e', ...] == ['{', 'n', 'e...'Q', 'M', ...]\n  At index 0 diff: '%' != '{'\n  Full diff:\n  - ['{', 'n', 'e', 'X', 'Q', 'M', 'K', 'F', '>', '5', '1', '/', '%']\n  + ['%', '/', '1', '5', '>', 'e', 'F', 'K', 'M', 'n', 'Q', 'X', '{']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005206139758229256, "start": 1700341756.882098, "stop": 1700341756.8826191, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "03e4355606a343ef8fe69d3415096492", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
