{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_9_3.py::test_if_result_is_sorted", "location": ["tests39_9_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_9_3.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012763499398715794, "start": 1700341713.7406032, "stop": 1700341713.7407315, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "cc2622feb8354768be006f192048061a", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_9_3.py::test_strings_of_size_equal_to_20", "location": ["tests39_9_3.py", 5, "test_strings_of_size_equal_to_20"], "keywords": {"test_strings_of_size_equal_to_20": 1, "tests39_9_3.py": 1, "Folder_9": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014760298654437065, "start": 1700341713.7406676, "stop": 1700341713.7408159, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cc2622feb8354768be006f192048061a", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_9_3.py::test_if_result_is_sorted", "location": ["tests39_9_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_9_3.py": 1, "Folder_9": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_9/tests39_9_3.py", "lineno": 26, "message": "AssertionError: assert ['Q', 'U', 'X', 'J'] == ['J', 'Q', 'U', 'X']\n  At index 0 diff: 'Q' != 'J'\n  Full diff:\n  - ['J', 'Q', 'U', 'X']\n  ?  -----\n  + ['Q', 'U', 'X', 'J']\n  ?               +++++"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=20 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Q', 'U', 'X', 'J'] == ['J', 'Q', 'U', 'X']", "E             At index 0 diff: 'Q' != 'J'", "E             Full diff:", "E             - ['J', 'Q', 'U', 'X']", "E             ?  -----", "E             + ['Q', 'U', 'X', 'J']", "E             ?               +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_9/tests39_9_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=20 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Q', 'U', 'X', 'J'] == ['J', 'Q', 'U', 'X']", "E             At index 0 diff: 'Q' != 'J'", "E             Full diff:", "E             - ['J', 'Q', 'U', 'X']", "E             ?  -----", "E             + ['Q', 'U', 'X', 'J']", "E             ?               +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_3/Folder_9/tests39_9_3.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_3/Folder_9/tests39_9_3.py", "lineno": 26, "message": "AssertionError: assert ['Q', 'U', 'X', 'J'] == ['J', 'Q', 'U', 'X']\n  At index 0 diff: 'Q' != 'J'\n  Full diff:\n  - ['J', 'Q', 'U', 'X']\n  ?  -----\n  + ['Q', 'U', 'X', 'J']\n  ?               +++++"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005214120028540492, "start": 1700341713.7409492, "stop": 1700341713.7414713, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "cc2622feb8354768be006f192048061a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
