{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_73_2.py::test_if_result_is_sorted", "location": ["tests39_73_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_73_2.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.854597738012671e-05, "start": 1700341685.686648, "stop": 1700341685.6867468, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3690e12f2cb74ae18af38564fb5357cf", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_73_2.py::test_strings_of_size_equal_to_80", "location": ["tests39_73_2.py", 5, "test_strings_of_size_equal_to_80"], "keywords": {"test_strings_of_size_equal_to_80": 1, "tests39_73_2.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011367799015715718, "start": 1700341685.6866286, "stop": 1700341685.686743, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3690e12f2cb74ae18af38564fb5357cf", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_73_2.py::test_if_result_is_sorted", "location": ["tests39_73_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_73_2.py": 1, "Folder_73": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_73/tests39_73_2.py", "lineno": 26, "message": "AssertionError: assert 'ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba' == ['A', 'B', 'C', 'D', 'E', 'F', ...]\n +  where ['A', 'B', 'C', 'D', 'E', 'F', ...] = sorted('ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=80 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert 'ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba' == ['A', 'B', 'C', 'D', 'E', 'F', ...]", "E            +  where ['A', 'B', 'C', 'D', 'E', 'F', ...] = sorted('ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_73/tests39_73_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=80 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert 'ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba' == ['A', 'B', 'C', 'D', 'E', 'F', ...]", "E            +  where ['A', 'B', 'C', 'D', 'E', 'F', ...] = sorted('ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_73/tests39_73_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_73/tests39_73_2.py", "lineno": 26, "message": "AssertionError: assert 'ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba' == ['A', 'B', 'C', 'D', 'E', 'F', ...]\n +  where ['A', 'B', 'C', 'D', 'E', 'F', ...] = sorted('ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021049100905656815, "start": 1700341685.6869054, "stop": 1700341685.6871164, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3690e12f2cb74ae18af38564fb5357cf", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
