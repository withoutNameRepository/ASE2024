{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_37_2.py::test_if_result_is_sorted", "location": ["tests39_37_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_37_2.py": 1, "Folder_37": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014399801148101687, "start": 1700341655.9858265, "stop": 1700341655.9859712, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4649766be67446e5a335f9a75968a96b", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_37_2.py::test_strings_of_size_equal_to_26", "location": ["tests39_37_2.py", 5, "test_strings_of_size_equal_to_26"], "keywords": {"test_strings_of_size_equal_to_26": 1, "tests39_37_2.py": 1, "Folder_37": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001598950184416026, "start": 1700341655.9858325, "stop": 1700341655.985993, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4649766be67446e5a335f9a75968a96b", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_37_2.py::test_if_result_is_sorted", "location": ["tests39_37_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_37_2.py": 1, "Folder_37": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_37/tests39_37_2.py", "lineno": 28, "message": "AssertionError: assert ['E', 'F', 'K...'T', 'X', ...] == ['Z', 'Y', 'X...'O', 'K', ...]\n  At index 0 diff: 'E' != 'Z'\n  Full diff:\n  - ['Z', 'Y', 'X', 'T', 'O', 'K', 'F', 'E']\n  + ['E', 'F', 'K', 'O', 'T', 'X', 'Y', 'Z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=26 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['E', 'F', 'K...'T', 'X', ...] == ['Z', 'Y', 'X...'O', 'K', ...]", "E             At index 0 diff: 'E' != 'Z'", "E             Full diff:", "E             - ['Z', 'Y', 'X', 'T', 'O', 'K', 'F', 'E']", "E             + ['E', 'F', 'K', 'O', 'T', 'X', 'Y', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_37/tests39_37_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=26 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['E', 'F', 'K...'T', 'X', ...] == ['Z', 'Y', 'X...'O', 'K', ...]", "E             At index 0 diff: 'E' != 'Z'", "E             Full diff:", "E             - ['Z', 'Y', 'X', 'T', 'O', 'K', 'F', 'E']", "E             + ['E', 'F', 'K', 'O', 'T', 'X', 'Y', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_37/tests39_37_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_37/tests39_37_2.py", "lineno": 28, "message": "AssertionError: assert ['E', 'F', 'K...'T', 'X', ...] == ['Z', 'Y', 'X...'O', 'K', ...]\n  At index 0 diff: 'E' != 'Z'\n  Full diff:\n  - ['Z', 'Y', 'X', 'T', 'O', 'K', 'F', 'E']\n  + ['E', 'F', 'K', 'O', 'T', 'X', 'Y', 'Z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006428099877666682, "start": 1700341655.986208, "stop": 1700341655.9868517, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4649766be67446e5a335f9a75968a96b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
