{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_83_2.py::test_if_result_is_sorted", "location": ["tests39_83_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_83_2.py": 1, "Folder_83": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010026301606558263, "start": 1700341693.557805, "stop": 1700341693.557906, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b4fdf46af00e474eb8301d406e57fc2f", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_83_2.py::test_strings_of_size_equal_to_38", "location": ["tests39_83_2.py", 5, "test_strings_of_size_equal_to_38"], "keywords": {"test_strings_of_size_equal_to_38": 1, "tests39_83_2.py": 1, "Folder_83": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013489299453794956, "start": 1700341693.5579183, "stop": 1700341693.558054, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b4fdf46af00e474eb8301d406e57fc2f", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_83_2.py::test_if_result_is_sorted", "location": ["tests39_83_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_83_2.py": 1, "Folder_83": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_83/tests39_83_2.py", "lineno": 28, "message": "AssertionError: assert ['C', 'E', 'F...'J', 'K', ...] == ['Z', 'X', 'U...'P', 'M', ...]\n  At index 0 diff: 'C' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'U', 'R', 'P', 'M', 'L', 'K', 'J', 'I', 'F', 'E', 'C']\n  + ['C', 'E', 'F', 'I', 'J', 'K', 'L', 'M', 'P', 'R', 'U', 'X', 'Z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=38 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['C', 'E', 'F...'J', 'K', ...] == ['Z', 'X', 'U...'P', 'M', ...]", "E             At index 0 diff: 'C' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'U', 'R', 'P', 'M', 'L', 'K', 'J', 'I', 'F', 'E', 'C']", "E             + ['C', 'E', 'F', 'I', 'J', 'K', 'L', 'M', 'P', 'R', 'U', 'X', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_83/tests39_83_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=38 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['C', 'E', 'F...'J', 'K', ...] == ['Z', 'X', 'U...'P', 'M', ...]", "E             At index 0 diff: 'C' != 'Z'", "E             Full diff:", "E             - ['Z', 'X', 'U', 'R', 'P', 'M', 'L', 'K', 'J', 'I', 'F', 'E', 'C']", "E             + ['C', 'E', 'F', 'I', 'J', 'K', 'L', 'M', 'P', 'R', 'U', 'X', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_83/tests39_83_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_83/tests39_83_2.py", "lineno": 28, "message": "AssertionError: assert ['C', 'E', 'F...'J', 'K', ...] == ['Z', 'X', 'U...'P', 'M', ...]\n  At index 0 diff: 'C' != 'Z'\n  Full diff:\n  - ['Z', 'X', 'U', 'R', 'P', 'M', 'L', 'K', 'J', 'I', 'F', 'E', 'C']\n  + ['C', 'E', 'F', 'I', 'J', 'K', 'L', 'M', 'P', 'R', 'U', 'X', 'Z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005151950172148645, "start": 1700341693.5580697, "stop": 1700341693.5585856, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b4fdf46af00e474eb8301d406e57fc2f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
