{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_43_2.py::test_if_result_is_sorted", "location": ["tests39_43_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_43_2.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013866700464859605, "start": 1700341660.9560392, "stop": 1700341660.9561784, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e92b2bb28a324a45a05ee2689d6df373", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_43_2.py::test_strings_of_size_equal_to_56", "location": ["tests39_43_2.py", 5, "test_strings_of_size_equal_to_56"], "keywords": {"test_strings_of_size_equal_to_56": 1, "tests39_43_2.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015622400678694248, "start": 1700341660.9560988, "stop": 1700341660.956256, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e92b2bb28a324a45a05ee2689d6df373", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_43_2.py::test_if_result_is_sorted", "location": ["tests39_43_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_43_2.py": 1, "Folder_43": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_43/tests39_43_2.py", "lineno": 28, "message": "AssertionError: assert ['F', 'RC', '..., 'SBPD', ...] == ['YEK', 'X', ...RC', 'I', ...]\n  At index 0 diff: 'F' != 'YEK'\n  Full diff:\n  - ['YEK', 'X', 'WZA', 'SBPD', 'RC', 'I', 'F']\n  + ['F', 'RC', 'WZA', 'I', 'X', 'SBPD', 'YEK']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=56 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'RC', '..., 'SBPD', ...] == ['YEK', 'X', ...RC', 'I', ...]", "E             At index 0 diff: 'F' != 'YEK'", "E             Full diff:", "E             - ['YEK', 'X', 'WZA', 'SBPD', 'RC', 'I', 'F']", "E             + ['F', 'RC', 'WZA', 'I', 'X', 'SBPD', 'YEK']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_43/tests39_43_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=56 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'RC', '..., 'SBPD', ...] == ['YEK', 'X', ...RC', 'I', ...]", "E             At index 0 diff: 'F' != 'YEK'", "E             Full diff:", "E             - ['YEK', 'X', 'WZA', 'SBPD', 'RC', 'I', 'F']", "E             + ['F', 'RC', 'WZA', 'I', 'X', 'SBPD', 'YEK']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_43/tests39_43_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_43/tests39_43_2.py", "lineno": 28, "message": "AssertionError: assert ['F', 'RC', '..., 'SBPD', ...] == ['YEK', 'X', ...RC', 'I', ...]\n  At index 0 diff: 'F' != 'YEK'\n  Full diff:\n  - ['YEK', 'X', 'WZA', 'SBPD', 'RC', 'I', 'F']\n  + ['F', 'RC', 'WZA', 'I', 'X', 'SBPD', 'YEK']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006647819827776402, "start": 1700341660.956417, "stop": 1700341660.9570823, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e92b2bb28a324a45a05ee2689d6df373", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
