{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_91_2.py::test_if_result_is_sorted", "location": ["tests39_91_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010846700752153993, "start": 1700341699.3214452, "stop": 1700341699.3215542, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4112edcd7d6240eeb8488b9f8d08cfb2", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_91_2.py::test_strings_of_size_equal_to_6", "location": ["tests39_91_2.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests39_91_2.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001411440025549382, "start": 1700341699.3215668, "stop": 1700341699.3217084, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4112edcd7d6240eeb8488b9f8d08cfb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_91_2.py::test_strings_of_size_equal_to_6", "location": ["tests39_91_2.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests39_91_2.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_91/tests39_91_2.py", "lineno": 12, "message": "AssertionError: assert ['A', 'S', 'Y', '_', 'i', 'v'] == ['v', 'i', '_', 'Y', 'S', 'A']\n  At index 0 diff: 'A' != 'v'\n  Full diff:\n  - ['v', 'i', '_', 'Y', 'S', 'A']\n  + ['A', 'S', 'Y', '_', 'i', 'v']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_6():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['A', 'S', 'Y', '_', 'i', 'v'] == ['v', 'i', '_', 'Y', 'S', 'A']", "E             At index 0 diff: 'A' != 'v'", "E             Full diff:", "E             - ['v', 'i', '_', 'Y', 'S', 'A']", "E             + ['A', 'S', 'Y', '_', 'i', 'v']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_91/tests39_91_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_6():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['A', 'S', 'Y', '_', 'i', 'v'] == ['v', 'i', '_', 'Y', 'S', 'A']", "E             At index 0 diff: 'A' != 'v'", "E             Full diff:", "E             - ['v', 'i', '_', 'Y', 'S', 'A']", "E             + ['A', 'S', 'Y', '_', 'i', 'v']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_91/tests39_91_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_91/tests39_91_2.py", "lineno": 12, "message": "AssertionError: assert ['A', 'S', 'Y', '_', 'i', 'v'] == ['v', 'i', '_', 'Y', 'S', 'A']\n  At index 0 diff: 'A' != 'v'\n  Full diff:\n  - ['v', 'i', '_', 'Y', 'S', 'A']\n  + ['A', 'S', 'Y', '_', 'i', 'v']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040638100472278893, "start": 1700341699.3219254, "stop": 1700341699.3223321, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4112edcd7d6240eeb8488b9f8d08cfb2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
