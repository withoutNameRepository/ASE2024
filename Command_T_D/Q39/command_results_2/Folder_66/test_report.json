{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_66_2.py::test_strings_of_size_equal_to_33", "location": ["tests39_66_2.py", 5, "test_strings_of_size_equal_to_33"], "keywords": {"test_strings_of_size_equal_to_33": 1, "tests39_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013080498320050538, "start": 1700341680.6308427, "stop": 1700341680.630974, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2074a4fb051495f846b36afa3dc2853", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_66_2.py::test_if_result_is_sorted", "location": ["tests39_66_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_66_2.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.176100138574839e-05, "start": 1700341680.6307323, "stop": 1700341680.6308246, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e2074a4fb051495f846b36afa3dc2853", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_66_2.py::test_if_result_is_sorted", "location": ["tests39_66_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_66_2.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_66/tests39_66_2.py", "lineno": 28, "message": "AssertionError: assert ['F', 'H', 'D...'E', 'Z', ...] == ['Z', 'R', 'Q...'O', 'K', ...]\n  At index 0 diff: 'F' != 'Z'\n  Full diff:\n  - ['Z', 'R', 'Q', 'P', 'O', 'K', 'H', 'G', 'F', 'E', 'D']\n  + ['F', 'H', 'D', 'R', 'E', 'Z', 'K', 'G', 'P', 'Q', 'O']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=33 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'H', 'D...'E', 'Z', ...] == ['Z', 'R', 'Q...'O', 'K', ...]", "E             At index 0 diff: 'F' != 'Z'", "E             Full diff:", "E             - ['Z', 'R', 'Q', 'P', 'O', 'K', 'H', 'G', 'F', 'E', 'D']", "E             + ['F', 'H', 'D', 'R', 'E', 'Z', 'K', 'G', 'P', 'Q', 'O']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_66/tests39_66_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=33 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'H', 'D...'E', 'Z', ...] == ['Z', 'R', 'Q...'O', 'K', ...]", "E             At index 0 diff: 'F' != 'Z'", "E             Full diff:", "E             - ['Z', 'R', 'Q', 'P', 'O', 'K', 'H', 'G', 'F', 'E', 'D']", "E             + ['F', 'H', 'D', 'R', 'E', 'Z', 'K', 'G', 'P', 'Q', 'O']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_66/tests39_66_2.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_66/tests39_66_2.py", "lineno": 28, "message": "AssertionError: assert ['F', 'H', 'D...'E', 'Z', ...] == ['Z', 'R', 'Q...'O', 'K', ...]\n  At index 0 diff: 'F' != 'Z'\n  Full diff:\n  - ['Z', 'R', 'Q', 'P', 'O', 'K', 'H', 'G', 'F', 'E', 'D']\n  + ['F', 'H', 'D', 'R', 'E', 'Z', 'K', 'G', 'P', 'Q', 'O']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005036180082242936, "start": 1700341680.6309998, "stop": 1700341680.6315036, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e2074a4fb051495f846b36afa3dc2853", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
