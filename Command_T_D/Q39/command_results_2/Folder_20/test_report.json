{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_20_2.py::test_strings_of_size_equal_to_40", "location": ["tests39_20_2.py", 5, "test_strings_of_size_equal_to_40"], "keywords": {"test_strings_of_size_equal_to_40": 1, "tests39_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000120801996672526, "start": 1700341641.7649567, "stop": 1700341641.7650778, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb7949c9d7c94a8ebe34d6a21fe0d43a", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_20_2.py::test_if_result_is_sorted", "location": ["tests39_20_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011142098810523748, "start": 1700341641.7649212, "stop": 1700341641.765033, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb7949c9d7c94a8ebe34d6a21fe0d43a", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_20_2.py::test_if_result_is_sorted", "location": ["tests39_20_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_20_2.py": 1, "Folder_20": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_20/tests39_20_2.py", "lineno": 26, "message": "AssertionError: assert ['P', 'M', 'R...'J', 'Q', ...] == ['B', 'F', 'G...'J', 'M', ...]\n  At index 0 diff: 'P' != 'B'\n  Full diff:\n  - ['B', 'F', 'G', 'H', 'J', 'M', 'P', 'Q', 'R', 'S']\n  + ['P', 'M', 'R', 'H', 'J', 'Q', 'S', 'F', 'B', 'G']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=40 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['P', 'M', 'R...'J', 'Q', ...] == ['B', 'F', 'G...'J', 'M', ...]", "E             At index 0 diff: 'P' != 'B'", "E             Full diff:", "E             - ['B', 'F', 'G', 'H', 'J', 'M', 'P', 'Q', 'R', 'S']", "E             + ['P', 'M', 'R', 'H', 'J', 'Q', 'S', 'F', 'B', 'G']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_20/tests39_20_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=40 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['P', 'M', 'R...'J', 'Q', ...] == ['B', 'F', 'G...'J', 'M', ...]", "E             At index 0 diff: 'P' != 'B'", "E             Full diff:", "E             - ['B', 'F', 'G', 'H', 'J', 'M', 'P', 'Q', 'R', 'S']", "E             + ['P', 'M', 'R', 'H', 'J', 'Q', 'S', 'F', 'B', 'G']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_20/tests39_20_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_20/tests39_20_2.py", "lineno": 26, "message": "AssertionError: assert ['P', 'M', 'R...'J', 'Q', ...] == ['B', 'F', 'G...'J', 'M', ...]\n  At index 0 diff: 'P' != 'B'\n  Full diff:\n  - ['B', 'F', 'G', 'H', 'J', 'M', 'P', 'Q', 'R', 'S']\n  + ['P', 'M', 'R', 'H', 'J', 'Q', 'S', 'F', 'B', 'G']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004917889891657978, "start": 1700341641.765213, "stop": 1700341641.7657049, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb7949c9d7c94a8ebe34d6a21fe0d43a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
