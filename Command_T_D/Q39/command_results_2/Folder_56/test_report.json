{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_56_2.py::test_if_result_is_sorted", "location": ["tests39_56_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_56_2.py": 1, "Folder_56": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013487599790096283, "start": 1700341672.04873, "stop": 1700341672.048865, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7b87fd3be9c342f9a9890a31d8c2e449", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_56_2.py::test_strings_of_size_equal_to_21", "location": ["tests39_56_2.py", 5, "test_strings_of_size_equal_to_21"], "keywords": {"test_strings_of_size_equal_to_21": 1, "tests39_56_2.py": 1, "Folder_56": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015637799515388906, "start": 1700341672.0487418, "stop": 1700341672.0488987, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7b87fd3be9c342f9a9890a31d8c2e449", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_56_2.py::test_if_result_is_sorted", "location": ["tests39_56_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_56_2.py": 1, "Folder_56": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_56/tests39_56_2.py", "lineno": 26, "message": "AssertionError: assert ['K', 'LY', '...MB', 'S', 'W'] == ['C', 'K', 'L...MB', 'S', 'W']\n  At index 0 diff: 'K' != 'C'\n  Full diff:\n  - ['C', 'K', 'LY', 'MB', 'S', 'W']\n  ?  -----\n  + ['K', 'LY', 'C', 'MB', 'S', 'W']\n  ?             +++++"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=21 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['K', 'LY', '...MB', 'S', 'W'] == ['C', 'K', 'L...MB', 'S', 'W']", "E             At index 0 diff: 'K' != 'C'", "E             Full diff:", "E             - ['C', 'K', 'LY', 'MB', 'S', 'W']", "E             ?  -----", "E             + ['K', 'LY', 'C', 'MB', 'S', 'W']", "E             ?             +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_56/tests39_56_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=21 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['K', 'LY', '...MB', 'S', 'W'] == ['C', 'K', 'L...MB', 'S', 'W']", "E             At index 0 diff: 'K' != 'C'", "E             Full diff:", "E             - ['C', 'K', 'LY', 'MB', 'S', 'W']", "E             ?  -----", "E             + ['K', 'LY', 'C', 'MB', 'S', 'W']", "E             ?             +++++"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_2/Folder_56/tests39_56_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_2/Folder_56/tests39_56_2.py", "lineno": 26, "message": "AssertionError: assert ['K', 'LY', '...MB', 'S', 'W'] == ['C', 'K', 'L...MB', 'S', 'W']\n  At index 0 diff: 'K' != 'C'\n  Full diff:\n  - ['C', 'K', 'LY', 'MB', 'S', 'W']\n  ?  -----\n  + ['K', 'LY', 'C', 'MB', 'S', 'W']\n  ?             +++++"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004752269887831062, "start": 1700341672.0490277, "stop": 1700341672.0495033, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7b87fd3be9c342f9a9890a31d8c2e449", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
