{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_97_4.py::test_if_result_is_sorted", "location": ["tests39_97_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_97_4.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013519401545636356, "start": 1700341888.6276412, "stop": 1700341888.627777, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "888c1662de0f4edeb4870ca2577d0e3b", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_97_4.py::test_strings_of_size_equal_to_38", "location": ["tests39_97_4.py", 5, "test_strings_of_size_equal_to_38"], "keywords": {"test_strings_of_size_equal_to_38": 1, "tests39_97_4.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013907600077800453, "start": 1700341888.6275706, "stop": 1700341888.62771, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "888c1662de0f4edeb4870ca2577d0e3b", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_97_4.py::test_if_result_is_sorted", "location": ["tests39_97_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_97_4.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_97/tests39_97_4.py", "lineno": 26, "message": "AssertionError: assert ['Q', 'B', 'G...'O', 'K', ...] == ['B', 'C', 'E...'G', 'K', ...]\n  At index 0 diff: 'Q' != 'B'\n  Full diff:\n  - ['B', 'C', 'E', 'F', 'G', 'K', 'M', 'N', 'O', 'Q', 'R']\n  + ['Q', 'B', 'G', 'E', 'O', 'K', 'C', 'M', 'F', 'R', 'N']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=38 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Q', 'B', 'G...'O', 'K', ...] == ['B', 'C', 'E...'G', 'K', ...]", "E             At index 0 diff: 'Q' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'E', 'F', 'G', 'K', 'M', 'N', 'O', 'Q', 'R']", "E             + ['Q', 'B', 'G', 'E', 'O', 'K', 'C', 'M', 'F', 'R', 'N']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_97/tests39_97_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=38 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['Q', 'B', 'G...'O', 'K', ...] == ['B', 'C', 'E...'G', 'K', ...]", "E             At index 0 diff: 'Q' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'E', 'F', 'G', 'K', 'M', 'N', 'O', 'Q', 'R']", "E             + ['Q', 'B', 'G', 'E', 'O', 'K', 'C', 'M', 'F', 'R', 'N']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_97/tests39_97_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_97/tests39_97_4.py", "lineno": 26, "message": "AssertionError: assert ['Q', 'B', 'G...'O', 'K', ...] == ['B', 'C', 'E...'G', 'K', ...]\n  At index 0 diff: 'Q' != 'B'\n  Full diff:\n  - ['B', 'C', 'E', 'F', 'G', 'K', 'M', 'N', 'O', 'Q', 'R']\n  + ['Q', 'B', 'G', 'E', 'O', 'K', 'C', 'M', 'F', 'R', 'N']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006431130168493837, "start": 1700341888.627977, "stop": 1700341888.6286206, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "888c1662de0f4edeb4870ca2577d0e3b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
