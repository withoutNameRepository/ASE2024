{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_50_4.py::test_strings_of_size_equal_to_16", "location": ["tests39_50_4.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests39_50_4.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000116690993309021, "start": 1700341839.0394797, "stop": 1700341839.0395973, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "81418e7f478048008579766f8653c3f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_50_4.py::test_if_result_is_sorted", "location": ["tests39_50_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_4.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010048900730907917, "start": 1700341839.0394752, "stop": 1700341839.039576, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "81418e7f478048008579766f8653c3f8", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_50_4.py::test_if_result_is_sorted", "location": ["tests39_50_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_50_4.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_50/tests39_50_4.py", "lineno": 28, "message": "AssertionError: assert ['H', 'B', 'R...'F', 'D', ...] == ['X', 'R', 'Q...'H', 'F', ...]\n  At index 0 diff: 'H' != 'X'\n  Full diff:\n  - ['X', 'R', 'Q', 'I', 'H', 'F', 'D', 'B']\n  + ['H', 'B', 'R', 'X', 'F', 'D', 'Q', 'I']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['H', 'B', 'R...'F', 'D', ...] == ['X', 'R', 'Q...'H', 'F', ...]", "E             At index 0 diff: 'H' != 'X'", "E             Full diff:", "E             - ['X', 'R', 'Q', 'I', 'H', 'F', 'D', 'B']", "E             + ['H', 'B', 'R', 'X', 'F', 'D', 'Q', 'I']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_50/tests39_50_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16 + 1))", "        result = return_n_greatest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['H', 'B', 'R...'F', 'D', ...] == ['X', 'R', 'Q...'H', 'F', ...]", "E             At index 0 diff: 'H' != 'X'", "E             Full diff:", "E             - ['X', 'R', 'Q', 'I', 'H', 'F', 'D', 'B']", "E             + ['H', 'B', 'R', 'X', 'F', 'D', 'Q', 'I']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_50/tests39_50_4.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_50/tests39_50_4.py", "lineno": 28, "message": "AssertionError: assert ['H', 'B', 'R...'F', 'D', ...] == ['X', 'R', 'Q...'H', 'F', ...]\n  At index 0 diff: 'H' != 'X'\n  Full diff:\n  - ['X', 'R', 'Q', 'I', 'H', 'F', 'D', 'B']\n  + ['H', 'B', 'R', 'X', 'F', 'D', 'Q', 'I']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00045861699618399143, "start": 1700341839.0397468, "stop": 1700341839.0402062, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "81418e7f478048008579766f8653c3f8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
