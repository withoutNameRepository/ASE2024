{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_20_4.py::test_if_result_is_sorted", "location": ["tests39_20_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_20_4.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023622397566214204, "start": 1700341811.126295, "stop": 1700341811.1265323, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e532e0db408841779dd21022c48619f3", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_20_4.py::test_strings_of_size_equal_to_40", "location": ["tests39_20_4.py", 5, "test_strings_of_size_equal_to_40"], "keywords": {"test_strings_of_size_equal_to_40": 1, "tests39_20_4.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000252735975664109, "start": 1700341811.1263752, "stop": 1700341811.126629, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e532e0db408841779dd21022c48619f3", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_20_4.py::test_if_result_is_sorted", "location": ["tests39_20_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_20_4.py": 1, "Folder_20": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_20/generated_answer.py", "lineno": 2, "message": "TypeError: index() takes at least 1 argument (0 given)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=40 + 1))", ">       result = return_n_greatest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_20/tests39_20_4.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_greatest_chars(s):", ">       return sorted(s, key=str.index)[:40]", "E       TypeError: index() takes at least 1 argument (0 given)"], "reprfuncargs": {"args": [["s", "'OaRKdDle8fyJ_GrSB!3{x$zH9w]pP^E%m:Ig0~Y7@'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_20/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=40 + 1))", ">       result = return_n_greatest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_20/tests39_20_4.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_greatest_chars(s):", ">       return sorted(s, key=str.index)[:40]", "E       TypeError: index() takes at least 1 argument (0 given)"], "reprfuncargs": {"args": [["s", "'OaRKdDle8fyJ_GrSB!3{x$zH9w]pP^E%m:Ig0~Y7@'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_20/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_20/generated_answer.py", "lineno": 2, "message": "TypeError: index() takes at least 1 argument (0 given)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027810499886982143, "start": 1700341811.1269336, "stop": 1700341811.1272125, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e532e0db408841779dd21022c48619f3", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
