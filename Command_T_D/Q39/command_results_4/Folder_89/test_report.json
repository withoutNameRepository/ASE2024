{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_89_4.py::test_if_result_is_sorted", "location": ["tests39_89_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001978510117623955, "start": 1700341880.9459732, "stop": 1700341880.9461722, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "882b8693303a43a0b1931062dc764d07", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_89_4.py::test_strings_of_size_equal_to_55", "location": ["tests39_89_4.py", 5, "test_strings_of_size_equal_to_55"], "keywords": {"test_strings_of_size_equal_to_55": 1, "tests39_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002282189961988479, "start": 1700341880.9459794, "stop": 1700341880.9462087, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "882b8693303a43a0b1931062dc764d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_89_4.py::test_if_result_is_sorted", "location": ["tests39_89_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_89_4.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_89/tests39_89_4.py", "lineno": 26, "message": "AssertionError: assert ['UI', 'B', '...'F', 'P', ...] == ['B', 'C', 'E...'G', 'K', ...]\n  At index 0 diff: 'UI' != 'B'\n  Full diff:\n  - ['B', 'C', 'E', 'F', 'G', 'K', 'L', 'M', 'P', 'Q', 'T', 'UI', 'WH', 'X']\n  + ['UI', 'B', 'L', 'G', 'F', 'P', 'T', 'M', 'X', 'Q', 'K', 'C', 'WH', 'E']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=55 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['UI', 'B', '...'F', 'P', ...] == ['B', 'C', 'E...'G', 'K', ...]", "E             At index 0 diff: 'UI' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'E', 'F', 'G', 'K', 'L', 'M', 'P', 'Q', 'T', 'UI', 'WH', 'X']", "E             + ['UI', 'B', 'L', 'G', 'F', 'P', 'T', 'M', 'X', 'Q', 'K', 'C', 'WH', 'E']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_89/tests39_89_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=55 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['UI', 'B', '...'F', 'P', ...] == ['B', 'C', 'E...'G', 'K', ...]", "E             At index 0 diff: 'UI' != 'B'", "E             Full diff:", "E             - ['B', 'C', 'E', 'F', 'G', 'K', 'L', 'M', 'P', 'Q', 'T', 'UI', 'WH', 'X']", "E             + ['UI', 'B', 'L', 'G', 'F', 'P', 'T', 'M', 'X', 'Q', 'K', 'C', 'WH', 'E']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_89/tests39_89_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q39/command_results_4/Folder_89/tests39_89_4.py", "lineno": 26, "message": "AssertionError: assert ['UI', 'B', '...'F', 'P', ...] == ['B', 'C', 'E...'G', 'K', ...]\n  At index 0 diff: 'UI' != 'B'\n  Full diff:\n  - ['B', 'C', 'E', 'F', 'G', 'K', 'L', 'M', 'P', 'Q', 'T', 'UI', 'WH', 'X']\n  + ['UI', 'B', 'L', 'G', 'F', 'P', 'T', 'M', 'X', 'Q', 'K', 'C', 'WH', 'E']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009391350031364709, "start": 1700341880.9464889, "stop": 1700341880.947429, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "882b8693303a43a0b1931062dc764d07", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
