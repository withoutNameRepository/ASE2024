{
  "parameter(s)": [
    3
  ],
  "test_string_of_similar_chars_of_length_3": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_similar_chars_of_length_greater_than_3": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    9e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    9e-05
  ],
  "test_numeric_string": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdef', 'abcdefabcdef', 'abcdefabcdefabcdef', 'bcdef', 'bcdefabcdef', 'bcdefabcdefabcdef', ...}\n +  where {'abcdef', 'abcdefabcdef', 'abcdefabcdefabcdef', 'bcdef', 'bcdefabcdef', 'bcdefabcdefabcdef', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdef')",
    0.00052
  ]
}