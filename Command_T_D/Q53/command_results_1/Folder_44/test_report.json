{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests53_44_1.py::test_string_of_many_chars", "location": ["tests53_44_1.py", 19, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests53_44_1.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011302100028842688, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b8700222917b480f845f78e603976493", "node": "<WorkerController gw1>"}
{"nodeid": "tests53_44_1.py::test_string_of_similar_chars_of_length_89", "location": ["tests53_44_1.py", 5, "test_string_of_similar_chars_of_length_89"], "keywords": {"test_string_of_similar_chars_of_length_89": 1, "tests53_44_1.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013635499999509193, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b8700222917b480f845f78e603976493", "node": "<WorkerController gw0>"}
{"nodeid": "tests53_44_1.py::test_string_of_many_chars", "location": ["tests53_44_1.py", 19, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests53_44_1.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q53/command_results_1/Folder_44/generated_answer.py", "lineno": 3, "message": "KeyError: '%d,'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", "        r = ''", "        for _ in range(89):", "            r += s", ">       assert not palindrome_of_length_at_least_n(r)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_1/Folder_44/tests53_44_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_at_least_n(s):", ">       return set(re.findall(r'[A-Z][a-z]+[A-Z][^A-Z]*[a-z][A-Z]{%d,}{%d}'.format(89, 89), s.lower()))", "E       KeyError: '%d,'"], "reprfuncargs": {"args": [["s", "'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabc...cdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_1/Folder_44/generated_answer.py", "lineno": 3, "message": "KeyError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", "        r = ''", "        for _ in range(89):", "            r += s", ">       assert not palindrome_of_length_at_least_n(r)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_1/Folder_44/tests53_44_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_at_least_n(s):", ">       return set(re.findall(r'[A-Z][a-z]+[A-Z][^A-Z]*[a-z][A-Z]{%d,}{%d}'.format(89, 89), s.lower()))", "E       KeyError: '%d,'"], "reprfuncargs": {"args": [["s", "'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabc...cdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_1/Folder_44/generated_answer.py", "lineno": 3, "message": "KeyError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q53/command_results_1/Folder_44/generated_answer.py", "lineno": 3, "message": "KeyError: '%d,'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012679800056503154, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b8700222917b480f845f78e603976493", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
