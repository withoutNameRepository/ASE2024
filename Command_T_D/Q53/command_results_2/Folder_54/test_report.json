{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests53_54_2.py::test_string_of_many_chars", "location": ["tests53_54_2.py", 19, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests53_54_2.py": 1, "Folder_54": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013884999862057157, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "295b16acb8834f518ae14329f7adb738", "node": "<WorkerController gw1>"}
{"nodeid": "tests53_54_2.py::test_string_of_similar_chars_of_length_74", "location": ["tests53_54_2.py", 5, "test_string_of_similar_chars_of_length_74"], "keywords": {"test_string_of_similar_chars_of_length_74": 1, "tests53_54_2.py": 1, "Folder_54": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015744500342407264, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "295b16acb8834f518ae14329f7adb738", "node": "<WorkerController gw0>"}
{"nodeid": "tests53_54_2.py::test_string_of_many_chars", "location": ["tests53_54_2.py", 19, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests53_54_2.py": 1, "Folder_54": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "re.error: unbalanced parenthesis at position 21"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", "        r = ''", "        for _ in range(74):", "            r += s", ">       assert not palindrome_of_length_at_least_n(r)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_2/Folder_54/tests53_54_2.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(r'[a-z]{75,}(?=([a-z])))', text.lower()))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_2/Folder_54/generated_answer.py", "lineno": 3, "message": "in palindrome_of_length_at_least_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", "            p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        except Verbose:", "            # the VERBOSE flag was switched on inside the pattern.  to be", "            # on the safe side, we'll parse the whole thing again...", "            state = State()", "            state.flags = flags | SRE_FLAG_VERBOSE", "            state.str = str", "            source.seek(0)", "            p = _parse_sub(source, state, True, 0)", "    ", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 21"], "reprfuncargs": {"args": [["str", "'[a-z]{75,}(?=([a-z])))'"], ["flags", "0"], ["state", "<sre_parse.State object at 0x7f12810495d0>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", "        r = ''", "        for _ in range(74):", "            r += s", ">       assert not palindrome_of_length_at_least_n(r)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_2/Folder_54/tests53_54_2.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(r'[a-z]{75,}(?=([a-z])))', text.lower()))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q53/command_results_2/Folder_54/generated_answer.py", "lineno": 3, "message": "in palindrome_of_length_at_least_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", "            p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        except Verbose:", "            # the VERBOSE flag was switched on inside the pattern.  to be", "            # on the safe side, we'll parse the whole thing again...", "            state = State()", "            state.flags = flags | SRE_FLAG_VERBOSE", "            state.str = str", "            source.seek(0)", "            p = _parse_sub(source, state, True, 0)", "    ", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 21"], "reprfuncargs": {"args": [["str", "'[a-z]{75,}(?=([a-z])))'"], ["flags", "0"], ["state", "<sre_parse.State object at 0x7f12810495d0>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "re.error: unbalanced parenthesis at position 21"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022276700110523961, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "295b16acb8834f518ae14329f7adb738", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
