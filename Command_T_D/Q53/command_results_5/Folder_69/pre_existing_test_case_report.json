{
  "parameter(s)": [
    98
  ],
  "test_string_of_similar_chars_of_length_98": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'', 'abcdef', 'abcdefabcdef', 'abcdefabcdefabcdef', 'abcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdef', ...}\n +  where {'', 'abcdef', 'abcdefabcdef', 'abcdefabcdefabcdef', 'abcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdef', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00033
  ]
}