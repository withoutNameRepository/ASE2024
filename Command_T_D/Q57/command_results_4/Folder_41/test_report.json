{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests57_41_4.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_41_4.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026756100123748183, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw4>"}
{"nodeid": "tests57_41_4.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_41_4.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00048239199531963095, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_41_4.py::test_matrix_of_single_number_unequal_to_sum", "location": ["tests57_41_4.py", 23, "test_matrix_of_single_number_unequal_to_sum"], "keywords": {"test_matrix_of_single_number_unequal_to_sum": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.001092488004360348, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_41_4.py::test_small_matrix_of_all_zeros", "location": ["tests57_41_4.py", 40, "test_small_matrix_of_all_zeros"], "keywords": {"test_small_matrix_of_all_zeros": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032668399944668636, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw3>"}
{"nodeid": "tests57_41_4.py::test_dimension_of_submatrices", "location": ["tests57_41_4.py", 71, "test_dimension_of_submatrices"], "keywords": {"test_dimension_of_submatrices": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025079899933189154, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw5", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw5>"}
{"nodeid": "tests57_41_4.py::test_matrix_of_several_numbers", "location": ["tests57_41_4.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026181100110989064, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_41_4.py::test_matrix_of_single_number_unequal_to_sum", "location": ["tests57_41_4.py", 23, "test_matrix_of_single_number_unequal_to_sum"], "keywords": {"test_matrix_of_single_number_unequal_to_sum": 1, "__wrapped__": 1, "tests57_41_4.py": 1, "Folder_41": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/.local/lib/python3.10/site-packages/numpy/__init__.py", "lineno": 284, "message": "AttributeError: module 'numpy' has no attribute 'bool'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_unequal_to_sum():", "        input_matrix = np.matrix([[-26 - 1]])", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_4/Folder_41/tests57_41_4.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    mask = np.zeros((matrix.shape[0], matrix.shape[1]), dtype=np.bool)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_4/Folder_41/generated_answer.py", "lineno": 6, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.  (This may have returned Python \"", "                \"scalars in past versions.\", FutureWarning, stacklevel=2)", "    ", "        # Importing Tester requires importing all of UnitTest which is not a", "        # cheap import Since it is mainly used in test suits, we lazy import it", "        # here to save on the order of 10 ms of import time for most users", "        #", "        # The previous way Tester was imported also had a side effect of adding", "        # the full `numpy.testing` namespace", "        if attr == 'testing':", "            import numpy.testing as testing", "            return testing", "        elif attr == 'Tester':", "            from .testing import Tester", "            return Tester", "    ", ">       raise AttributeError(\"module {!r} has no attribute \"", "                             \"{!r}\".format(__name__, attr))", "E       AttributeError: module 'numpy' has no attribute 'bool'"], "reprfuncargs": {"args": [["attr", "'bool'"]]}, "reprlocals": null, "reprfileloc": {"path": "../.local/lib/python3.10/site-packages/numpy/__init__.py", "lineno": 284, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_unequal_to_sum():", "        input_matrix = np.matrix([[-26 - 1]])", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_4/Folder_41/tests57_41_4.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    mask = np.zeros((matrix.shape[0], matrix.shape[1]), dtype=np.bool)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_4/Folder_41/generated_answer.py", "lineno": 6, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.  (This may have returned Python \"", "                \"scalars in past versions.\", FutureWarning, stacklevel=2)", "    ", "        # Importing Tester requires importing all of UnitTest which is not a", "        # cheap import Since it is mainly used in test suits, we lazy import it", "        # here to save on the order of 10 ms of import time for most users", "        #", "        # The previous way Tester was imported also had a side effect of adding", "        # the full `numpy.testing` namespace", "        if attr == 'testing':", "            import numpy.testing as testing", "            return testing", "        elif attr == 'Tester':", "            from .testing import Tester", "            return Tester", "    ", ">       raise AttributeError(\"module {!r} has no attribute \"", "                             \"{!r}\".format(__name__, attr))", "E       AttributeError: module 'numpy' has no attribute 'bool'"], "reprfuncargs": {"args": [["attr", "'bool'"]]}, "reprlocals": null, "reprfileloc": {"path": "../.local/lib/python3.10/site-packages/numpy/__init__.py", "lineno": 284, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/.local/lib/python3.10/site-packages/numpy/__init__.py", "lineno": 284, "message": "AttributeError: module 'numpy' has no attribute 'bool'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002608380018500611, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "139d47a73afe42b086252ad357d12394", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
