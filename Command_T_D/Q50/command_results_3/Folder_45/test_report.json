{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests50_45_3.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_45_3.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011364300007699057, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_45_3.py::test_list_of_strings_of_length_two", "location": ["tests50_45_3.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001416849991073832, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_45_3.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_45_3.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011411400191718712, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_45_3.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_45_3.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.492000051774085e-05, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_45_3.py::test_list_of_anagrams_of_size_n", "location": ["tests50_45_3.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.063000106834807e-05, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_45_3.py::test_list_of_anagrams_of_size_n", "location": ["tests50_45_3.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_45_3.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q50/command_results_3/Folder_45/tests50_45_3.py", "lineno": 37, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aBCdE', 'aBCEd', 'aBdCE', 'aBdEC', 'aBECd', 'aBEdC', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 277 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 277 < 277:", "                   assert if_contains_anagrams(l)", "                else:", "                   assert not if_contains_anagrams(l)", "            else:", ">               assert if_contains_anagrams(l)", "E               AssertionError: assert False", "E                +  where False = if_contains_anagrams(['aBCdE', 'aBCEd', 'aBdCE', 'aBdEC', 'aBECd', 'aBEdC', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/command_results_3/Folder_45/tests50_45_3.py", "lineno": 37, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 277 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 277 < 277:", "                   assert if_contains_anagrams(l)", "                else:", "                   assert not if_contains_anagrams(l)", "            else:", ">               assert if_contains_anagrams(l)", "E               AssertionError: assert False", "E                +  where False = if_contains_anagrams(['aBCdE', 'aBCEd', 'aBdCE', 'aBdEC', 'aBECd', 'aBEdC', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/command_results_3/Folder_45/tests50_45_3.py", "lineno": 37, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q50/command_results_3/Folder_45/tests50_45_3.py", "lineno": 37, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aBCdE', 'aBCEd', 'aBdCE', 'aBdEC', 'aBECd', 'aBEdC', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018908399943029508, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7380af5628254441a7c575230305245b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
