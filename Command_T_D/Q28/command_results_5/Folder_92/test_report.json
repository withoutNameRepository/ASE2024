{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_92_5.py::test_result_is_smaller", "location": ["tests28_92_5.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_92_5.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021811097394675016, "start": 1701621329.869598, "stop": 1701621329.8698175, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f92fb2fead9c4f68af845f87b721e2e4", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_92_5.py::test_result_is_in_given_string", "location": ["tests28_92_5.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_92_5.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020152493380010128, "start": 1701621329.8696406, "stop": 1701621329.8698432, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f92fb2fead9c4f68af845f87b721e2e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_92_5.py::test_result_is_smaller", "location": ["tests28_92_5.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_92_5.py": 1, "Folder_92": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_5/Folder_92/generated_answer.py", "lineno": 7, "message": "IndexError: list index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_92/tests28_92_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        ASCII_RE = re.compile(r'<\\w+>')", "        ASCII_VALUES = sorted(list(set( ASCII_RE.findall(s)) ))", ">       return ASCII_VALUES[3]", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["s", "'QN[U\"C3`*uA/0isg&B+Ob{KvemXj;,@=)z.q9(J7} E^cyGD2aHlSh$!:|\\\\1x<#R]dF%WMt-LY~4T8>Zp5Pn\\'fI6oVr?k'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_92/generated_answer.py", "lineno": 7, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_92/tests28_92_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        ASCII_RE = re.compile(r'<\\w+>')", "        ASCII_VALUES = sorted(list(set( ASCII_RE.findall(s)) ))", ">       return ASCII_VALUES[3]", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["s", "'QN[U\"C3`*uA/0isg&B+Ob{KvemXj;,@=)z.q9(J7} E^cyGD2aHlSh$!:|\\\\1x<#R]dF%WMt-LY~4T8>Zp5Pn\\'fI6oVr?k'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_92/generated_answer.py", "lineno": 7, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_5/Folder_92/generated_answer.py", "lineno": 7, "message": "IndexError: list index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00036413094494491816, "start": 1701621329.8701522, "stop": 1701621329.8705173, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f92fb2fead9c4f68af845f87b721e2e4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
