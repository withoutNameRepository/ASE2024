{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_16_5.py::test_result_is_smaller", "location": ["tests28_16_5.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002021020045503974, "start": 1701621228.6041007, "stop": 1701621228.6043038, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "130b7ba812944e289970793eecc3f8da", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_16_5.py::test_result_is_in_given_string", "location": ["tests28_16_5.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026238500140607357, "start": 1701621228.6041794, "stop": 1701621228.604443, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "130b7ba812944e289970793eecc3f8da", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_16_5.py::test_result_is_smaller", "location": ["tests28_16_5.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_5/Folder_16/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_16/tests28_16_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(m[0] for m in re.finditer(r'<[a-z]', s, flags=re.I) if m.start() == 18 and m.end() == 45)", "E       StopIteration"], "reprfuncargs": {"args": [["s", "'/fV1hE8)|nG+d^A`=R #OwtYK~:}S$zbem5\\'6PFgM_-7LIcHJ@*p\\\\NDr[9Z&0k,;<y!W(\"]BUoaQlXi{quv>2.T4jxsC%'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_16/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_16/tests28_16_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(m[0] for m in re.finditer(r'<[a-z]', s, flags=re.I) if m.start() == 18 and m.end() == 45)", "E       StopIteration"], "reprfuncargs": {"args": [["s", "'/fV1hE8)|nG+d^A`=R #OwtYK~:}S$zbem5\\'6PFgM_-7LIcHJ@*p\\\\NDr[9Z&0k,;<y!W(\"]BUoaQlXi{quv>2.T4jxsC%'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_5/Folder_16/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_5/Folder_16/generated_answer.py", "lineno": 5, "message": "StopIteration"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004982249811291695, "start": 1701621228.6045823, "stop": 1701621228.605081, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "130b7ba812944e289970793eecc3f8da", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
