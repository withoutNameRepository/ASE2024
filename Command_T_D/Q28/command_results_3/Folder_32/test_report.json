{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_32_3.py::test_result_is_smaller", "location": ["tests28_32_3.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_32_3.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022511999122798443, "start": 1701621007.1901734, "stop": 1701621007.1903996, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b59dd4ecb17c494fa55511f307f959b1", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_32_3.py::test_result_is_in_given_string", "location": ["tests28_32_3.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_32_3.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001811860129237175, "start": 1701621007.1903026, "stop": 1701621007.1904852, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b59dd4ecb17c494fa55511f307f959b1", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_32_3.py::test_result_is_in_given_string", "location": ["tests28_32_3.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_32_3.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_3/Folder_32/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[14: 66 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_3/Folder_32/tests28_32_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[13])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "\"qJK,Mmo*Hi.je&I@lS<2L5dAF'W>O`7/XaB;pN-^(1G4|]0!Tc[y\\\\Uw{x_run}E)36t:vQzRYDh+Z#8~$k9?%sV Pf=bg\""]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_3/Folder_32/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[14: 66 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_3/Folder_32/tests28_32_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[13])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "\"qJK,Mmo*Hi.je&I@lS<2L5dAF'W>O`7/XaB;pN-^(1G4|]0!Tc[y\\\\Uw{x_run}E)36t:vQzRYDh+Z#8~$k9?%sV Pf=bg\""]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_3/Folder_32/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_3/Folder_32/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002790619619190693, "start": 1701621007.1907423, "stop": 1701621007.191022, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b59dd4ecb17c494fa55511f307f959b1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
