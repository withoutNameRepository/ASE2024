{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_92_1.py::test_result_is_smaller", "location": ["tests28_92_1.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013642199337482452, "start": 1701620876.8993878, "stop": 1701620876.899525, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "42fe332437cc4e608ba1ccbfd56b02ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_92_1.py::test_result_is_in_given_string", "location": ["tests28_92_1.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015098904259502888, "start": 1701620876.8994215, "stop": 1701620876.8995733, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42fe332437cc4e608ba1ccbfd56b02ee", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_92_1.py::test_result_is_in_given_string", "location": ["tests28_92_1.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_92_1.py": 1, "Folder_92": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_92/generated_answer.py", "lineno": 3, "message": "TypeError: string indices must be integers"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[0: 3 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_92/tests28_92_1.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(str_input):", ">       return str_input[sorted(str_input)[3]]", "E       TypeError: string indices must be integers"], "reprfuncargs": {"args": [["str_input", "'!+={<2e_4*\\'S]s1YEi7wukO D-r@h?HBQ\\\\#v53TV/q.$^pLA\"PKaclgntmG:Jb`R>ZXy)F%,f[06z;j(N&I|MdU}o~Cx9'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_92/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[0: 3 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_92/tests28_92_1.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(str_input):", ">       return str_input[sorted(str_input)[3]]", "E       TypeError: string indices must be integers"], "reprfuncargs": {"args": [["str_input", "'!+={<2e_4*\\'S]s1YEi7wukO D-r@h?HBQ\\\\#v53TV/q.$^pLA\"PKaclgntmG:Jb`R>ZXy)F%,f[06z;j(N&I|MdU}o~Cx9'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_92/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_92/generated_answer.py", "lineno": 3, "message": "TypeError: string indices must be integers"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016220100224018097, "start": 1701620876.899783, "stop": 1701620876.8999455, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42fe332437cc4e608ba1ccbfd56b02ee", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
