{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_57_1.py::test_result_is_smaller", "location": ["tests28_57_1.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012064410839229822, "start": 1701620854.1498795, "stop": 1701620854.1500006, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5d4706b63d6a4e85b85dfc08e3cfc3a4", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_57_1.py::test_result_is_in_given_string", "location": ["tests28_57_1.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016537890769541264, "start": 1701620854.1499813, "stop": 1701620854.1501477, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5d4706b63d6a4e85b85dfc08e3cfc3a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_57_1.py::test_result_is_smaller", "location": ["tests28_57_1.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_57_1.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_57/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_57/tests28_57_1.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[17:35])", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'Wp8:,kw}UG?|Z^%0Rq#o$HfYNz_.a6SJD]Q=v)g~P>e*c<&\\\\;BC/usy7\"4O+IrF{`iLVtbxhKl\\'[m@1n(-3 2jTME5!A9'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_57/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_57/tests28_57_1.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[17:35])", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'Wp8:,kw}UG?|Z^%0Rq#o$HfYNz_.a6SJD]Q=v)g~P>e*c<&\\\\;BC/usy7\"4O+IrF{`iLVtbxhKl\\'[m@1n(-3 2jTME5!A9'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_57/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_57/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021725695114582777, "start": 1701620854.1502037, "stop": 1701620854.1504216, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5d4706b63d6a4e85b85dfc08e3cfc3a4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
