{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_79_1.py::test_result_is_smaller", "location": ["tests28_79_1.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_79_1.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001109529985114932, "start": 1701620868.0865164, "stop": 1701620868.0866275, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8ff6d7bee94747a99ae0ee7d9fb1e8a9", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_79_1.py::test_result_is_in_given_string", "location": ["tests28_79_1.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_79_1.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021675496827811003, "start": 1701620868.086795, "stop": 1701620868.0870128, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8ff6d7bee94747a99ae0ee7d9fb1e8a9", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_79_1.py::test_result_is_smaller", "location": ["tests28_79_1.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_79_1.py": 1, "Folder_79": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_79/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_79/tests28_79_1.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       ascii_value = next(re.findall(r'[A-Z]', s[13:35]), -1)", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'{^tq~<ag\\'S%n*RP5Q_=Xx[f]2:?8dT4h.DOurlJ!N7\\\\mB0pVFzUCoeIk#LH($@)+}3 jbvA>iw-M`9\"yGWE;6Z&,c|/K1'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_79/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_79/tests28_79_1.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       ascii_value = next(re.findall(r'[A-Z]', s[13:35]), -1)", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'{^tq~<ag\\'S%n*RP5Q_=Xx[f]2:?8dT4h.DOurlJ!N7\\\\mB0pVFzUCoeIk#LH($@)+}3 jbvA>iw-M`9\"yGWE;6Z&,c|/K1'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_1/Folder_79/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_1/Folder_79/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020763499196618795, "start": 1701620868.086806, "stop": 1701620868.0870142, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8ff6d7bee94747a99ae0ee7d9fb1e8a9", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
