{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_22_4.py::test_result_is_smaller", "location": ["tests28_22_4.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021970306988805532, "start": 1701621111.30804, "stop": 1701621111.3082607, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b5e6a18809b54674bc593affa5fc146e", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_22_4.py::test_result_is_in_given_string", "location": ["tests28_22_4.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_22_4.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024354900233447552, "start": 1701621111.3082159, "stop": 1701621111.3084605, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5e6a18809b54674bc593affa5fc146e", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_22_4.py::test_result_is_in_given_string", "location": ["tests28_22_4.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_22_4.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_4/Folder_22/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[0: 16 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_22/tests28_22_4.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[-17])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "'VcR?sEK#}~F`.)b5pi8\\\\0Y<Uoq;6&t|^!d_4eCX\">gJj72/@rkDBA[\\'ufWy9:z({Z$O+TL=GnaSM m]3PI%,Qvx*h1-HN'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_22/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_given_string():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", ">       assert return_nth_smallest_ascii(s) in s[0: 16 + 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_22/tests28_22_4.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s)[-17])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "'VcR?sEK#}~F`.)b5pi8\\\\0Y<Uoq;6&t|^!d_4eCX\">gJj72/@rkDBA[\\'ufWy9:z({Z$O+TL=GnaSM m]3PI%,Qvx*h1-HN'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_22/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_4/Folder_22/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003765110159292817, "start": 1701621111.3088298, "stop": 1701621111.3092072, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b5e6a18809b54674bc593affa5fc146e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
