{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_45_4.py::test_result_is_smaller", "location": ["tests28_45_4.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_45_4.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022895494475960732, "start": 1701621140.1471143, "stop": 1701621140.1473446, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e548ab387ff047e28d25376e2dc88d7e", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_45_4.py::test_result_is_in_given_string", "location": ["tests28_45_4.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_45_4.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002617770805954933, "start": 1701621140.1470551, "stop": 1701621140.1473184, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e548ab387ff047e28d25376e2dc88d7e", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_45_4.py::test_result_is_smaller", "location": ["tests28_45_4.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_45_4.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_4/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError: string indices must be integers"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_45/tests28_45_4.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        idx = re.findall(r'[a-z]', s)[-16]", ">       return s[idx]", "E       TypeError: string indices must be integers"], "reprfuncargs": {"args": [["s", "'bwjk;of(=}te|puPZ\"dKxsNYV@/IlrS~[Oy]0{&RT%)-_Ji8F^6B>9\\'mDg:!$G\\\\qECh1#czMWLv5U7+2Q3H? X.,n`a<*'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_45/tests28_45_4.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        idx = re.findall(r'[a-z]', s)[-16]", ">       return s[idx]", "E       TypeError: string indices must be integers"], "reprfuncargs": {"args": [["s", "'bwjk;of(=}te|puPZ\"dKxsNYV@/IlrS~[Oy]0{&RT%)-_Ji8F^6B>9\\'mDg:!$G\\\\qECh1#czMWLv5U7+2Q3H? X.,n`a<*'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_4/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_4/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError: string indices must be integers"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00039439601823687553, "start": 1701621140.1476305, "stop": 1701621140.1480253, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e548ab387ff047e28d25376e2dc88d7e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
