{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_31_2.py::test_result_is_smaller", "location": ["tests28_31_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_31_2.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001390640391036868, "start": 1701620904.9298975, "stop": 1701620904.9300373, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "49b7bd58551d46d4904e9412c10e5878", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_31_2.py::test_result_is_in_given_string", "location": ["tests28_31_2.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_31_2.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017881602980196476, "start": 1701620904.9300616, "stop": 1701620904.9302416, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b7bd58551d46d4904e9412c10e5878", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_31_2.py::test_result_is_smaller", "location": ["tests28_31_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_31_2.py": 1, "Folder_31": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_31/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_31/tests28_31_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(str_):", ">       return next(c for c in re.findall(r\"[A-Z]{%d,%d}\" % (10, 82), str_) if ord(c) < ord(\"g\"))", "E       StopIteration"], "reprfuncargs": {"args": [["str_", "'P9?DRlQ%nze@;r&|UOX7Z=ILxbgB0 qYGWMhu)E(/46f<}H[^vC+y!3dw*cJ]{N_~1A:i`Sks#VFjot85T.\"-2K$\\\\p>,a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_31/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_31/tests28_31_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(str_):", ">       return next(c for c in re.findall(r\"[A-Z]{%d,%d}\" % (10, 82), str_) if ord(c) < ord(\"g\"))", "E       StopIteration"], "reprfuncargs": {"args": [["str_", "'P9?DRlQ%nze@;r&|UOX7Z=ILxbgB0 qYGWMhu)E(/46f<}H[^vC+y!3dw*cJ]{N_~1A:i`Sks#VFjot85T.\"-2K$\\\\p>,a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_31/generated_answer.py", "lineno": 5, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_31/generated_answer.py", "lineno": 5, "message": "StopIteration"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000239024986512959, "start": 1701620904.9302397, "stop": 1701620904.9304793, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "49b7bd58551d46d4904e9412c10e5878", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
