{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_34_2.py::test_result_is_smaller", "location": ["tests28_34_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_34_2.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014046300202608109, "start": 1701620907.2055063, "stop": 1701620907.2056477, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4bc34ea9aeff4244884d4ccb9d29873f", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_34_2.py::test_result_is_in_given_string", "location": ["tests28_34_2.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_34_2.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001997050130739808, "start": 1701620907.2056723, "stop": 1701620907.205873, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4bc34ea9aeff4244884d4ccb9d29873f", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_34_2.py::test_result_is_smaller", "location": ["tests28_34_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_34_2.py": 1, "Folder_34": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_34/generated_answer.py", "lineno": 6, "message": "StopIteration"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_34/tests28_34_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        ascii_map = {}", "        for c in s:", "            ascii_map[c] = ord(c)", ">       return next(c for c in range(ord('a') + 1, ord('z') + 1) if c in ascii_map and ascii_map[c] <= ord('z') - 19)", "E       StopIteration"], "reprfuncargs": {"args": [["s", "'vc3H2r5G%.K;u:!Cm8b7PR{-X<dp Sg#i0w\\'y\"LWBoef`qUj=[\\\\tlAO?EhYMTn>]}aD&J^,1IZzsFN6*_x/)~V|4(@9Q$'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_34/generated_answer.py", "lineno": 6, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_34/tests28_34_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", "        ascii_map = {}", "        for c in s:", "            ascii_map[c] = ord(c)", ">       return next(c for c in range(ord('a') + 1, ord('z') + 1) if c in ascii_map and ascii_map[c] <= ord('z') - 19)", "E       StopIteration"], "reprfuncargs": {"args": [["s", "'vc3H2r5G%.K;u:!Cm8b7PR{-X<dp Sg#i0w\\'y\"LWBoef`qUj=[\\\\tlAO?EhYMTn>]}aD&J^,1IZzsFN6*_x/)~V|4(@9Q$'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_34/generated_answer.py", "lineno": 6, "message": "StopIteration"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_34/generated_answer.py", "lineno": 6, "message": "StopIteration"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018923799507319927, "start": 1701620907.2058756, "stop": 1701620907.2060654, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4bc34ea9aeff4244884d4ccb9d29873f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
