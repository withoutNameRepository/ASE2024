{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_44_2.py::test_result_is_smaller", "location": ["tests28_44_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001766399946063757, "start": 1701620915.6428506, "stop": 1701620915.643028, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a4a8bfc86da048ca950a49308d161e77", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_44_2.py::test_result_is_in_given_string", "location": ["tests28_44_2.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_44_2.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023642298765480518, "start": 1701620915.6431575, "stop": 1701620915.6433952, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a4a8bfc86da048ca950a49308d161e77", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_44_2.py::test_result_is_smaller", "location": ["tests28_44_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_44_2.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_44/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_44/tests28_44_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s[20:30]), None)", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'r!c;f)>TvGo?sNi9ptW,@(M:Bn`4IFj[h\"3wJL&VqYu{%#-$d]y}aEzD C86PX_l|g.7H2+*^Ok=\\'m~AU/Ke1<xZ5QR\\\\b'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_44/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_44/tests28_44_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[a-z]', s[20:30]), None)", "E       TypeError: 'list' object is not an iterator"], "reprfuncargs": {"args": [["s", "'r!c;f)>TvGo?sNi9ptW,@(M:Bn`4IFj[h\"3wJL&VqYu{%#-$d]y}aEzD C86PX_l|g.7H2+*^Ok=\\'m~AU/Ke1<xZ5QR\\\\b'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_44/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_44/generated_answer.py", "lineno": 5, "message": "TypeError: 'list' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003060130402445793, "start": 1701620915.6432567, "stop": 1701620915.6435633, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a4a8bfc86da048ca950a49308d161e77", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
