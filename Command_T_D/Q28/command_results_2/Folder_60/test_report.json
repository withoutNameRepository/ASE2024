{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests28_60_2.py::test_result_is_smaller", "location": ["tests28_60_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_60_2.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017230701632797718, "start": 1701620929.20849, "stop": 1701620929.208663, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2cabca35bb354c7d9a686f44cee8fcb2", "node": "<WorkerController gw1>"}
{"nodeid": "tests28_60_2.py::test_result_is_in_given_string", "location": ["tests28_60_2.py", 6, "test_result_is_in_given_string"], "keywords": {"test_result_is_in_given_string": 1, "tests28_60_2.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022799603175371885, "start": 1701620929.2087266, "stop": 1701620929.208956, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2cabca35bb354c7d9a686f44cee8fcb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests28_60_2.py::test_result_is_smaller", "location": ["tests28_60_2.py", 23, "test_result_is_smaller"], "keywords": {"test_result_is_smaller": 1, "tests28_60_2.py": 1, "Folder_60": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_60/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_60/tests28_60_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[A-Z][^A-Z]*', s)[11])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "'f|2Rouz#OW-H<6(C[%yr}dVN*4,Tae0Ux7wj p_kn83Q^&/;$b~@51gc]h\\'!SGPmXKF)9q:E{lAM\"Y>vis\\\\`.=BItD+JZ'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_60/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_smaller():", "        s = ''.join(random.sample(string.ascii_letters + string.digits + string.punctuation + ' ', k=93))", "        s_copy = '' + s", ">       result = return_nth_smallest_ascii(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_60/tests28_60_2.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_nth_smallest_ascii(s):", ">       return next(re.findall(r'[A-Z][^A-Z]*', s)[11])", "E       TypeError: 'str' object is not an iterator"], "reprfuncargs": {"args": [["s", "'f|2Rouz#OW-H<6(C[%yr}dVN*4,Tae0Ux7wj p_kn83Q^&/;$b~@51gc]h\\'!SGPmXKF)9q:E{lAM\"Y>vis\\\\`.=BItD+JZ'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q28/command_results_2/Folder_60/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q28/command_results_2/Folder_60/generated_answer.py", "lineno": 5, "message": "TypeError: 'str' object is not an iterator"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003448739880695939, "start": 1701620929.2089357, "stop": 1701620929.2092812, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2cabca35bb354c7d9a686f44cee8fcb2", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
