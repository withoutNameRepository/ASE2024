{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests29_73_5.py::test_list_of_prime_numbers", "location": ["tests29_73_5.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016347299970220774, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw1>"}
{"nodeid": "tests29_73_5.py::test_list_of_ones", "location": ["tests29_73_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014433599790208973, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_73_5.py::test_list_of_ones", "location": ["tests29_73_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011625200204434805, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_73_5.py::test_list_of_ones", "location": ["tests29_73_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.965099914348684e-05, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_73_5.py::test_list_of_same_number", "location": ["tests29_73_5.py", 12, "test_list_of_same_number"], "keywords": {"test_list_of_same_number": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.22760009416379e-05, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_73_5.py::test_list_of_prime_numbers", "location": ["tests29_73_5.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_73_5.py": 1, "Folder_73": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "IndexError: list index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[51] == primes_list[27]:", "            assert gcf_two_nums(primes_list) == primes_list[51]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/tests29_73_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[51] == 0 or nums[27] == 0 else 1 if nums[51] == 1 and nums[27] == 1 else nums[51] / gcf_two_nums(list(range(51, min(51, 27), -1)))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def gcf_two_nums(nums):", ">       return 1 if nums[51] == 0 or nums[27] == 0 else 1 if nums[51] == 1 and nums[27] == 1 else nums[51] / gcf_two_nums(list(range(51, min(51, 27), -1)))", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[51, 50, 49, 48, 47, 46, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[51] == primes_list[27]:", "            assert gcf_two_nums(primes_list) == primes_list[51]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/tests29_73_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[51] == 0 or nums[27] == 0 else 1 if nums[51] == 1 and nums[27] == 1 else nums[51] / gcf_two_nums(list(range(51, min(51, 27), -1)))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def gcf_two_nums(nums):", ">       return 1 if nums[51] == 0 or nums[27] == 0 else 1 if nums[51] == 1 and nums[27] == 1 else nums[51] / gcf_two_nums(list(range(51, min(51, 27), -1)))", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[51, 50, 49, 48, 47, 46, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q29/command_results_5/Folder_73/generated_answer.py", "lineno": 2, "message": "IndexError: list index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001229049994435627, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "88e622926b524e97a3d3dcdeeeaa1dc8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
