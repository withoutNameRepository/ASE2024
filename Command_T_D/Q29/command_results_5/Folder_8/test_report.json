{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests29_8_5.py::test_list_of_prime_numbers", "location": ["tests29_8_5.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015611799972248264, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw1>"}
{"nodeid": "tests29_8_5.py::test_list_of_ones", "location": ["tests29_8_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016090799908852205, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_8_5.py::test_list_of_ones", "location": ["tests29_8_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011976899986620992, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_8_5.py::test_list_of_ones", "location": ["tests29_8_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001061629991454538, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_8_5.py::test_list_of_same_number", "location": ["tests29_8_5.py", 12, "test_list_of_same_number"], "keywords": {"test_list_of_same_number": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010733500312198885, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_8_5.py::test_list_of_prime_numbers", "location": ["tests29_8_5.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_8_5.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded in comparison"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[69] == primes_list[41]:", "            assert gcf_two_nums(primes_list) == primes_list[69]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/tests29_8_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[69] == 1 or nums[41] == 1 else gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1] // gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[69] == 1 or nums[41] == 1 else gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1] // gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1]", "E   RecursionError: maximum recursion depth exceeded in comparison"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[69] == primes_list[41]:", "            assert gcf_two_nums(primes_list) == primes_list[69]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/tests29_8_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[69] == 1 or nums[41] == 1 else gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1] // gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if nums[69] == 1 or nums[41] == 1 else gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1] // gcf_two_nums(nums)[0] // gcf_two_nums(nums)[1]", "E   RecursionError: maximum recursion depth exceeded in comparison"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q29/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded in comparison"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001227094999194378, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "afdd66eed64342d1947f1551efe13e9b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
