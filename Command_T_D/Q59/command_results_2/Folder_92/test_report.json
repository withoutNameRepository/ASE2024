{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests59_92_2.py::test_if_result_integers_are_odd", "location": ["tests59_92_2.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024774399935267866, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_92_2.py::test_list_of_all_one_digit_nums", "location": ["tests59_92_2.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026885399711318314, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_92_2.py::test_if_result_is_less_than_7", "location": ["tests59_92_2.py", 34, "test_if_result_is_less_than_7"], "keywords": {"test_if_result_is_less_than_7": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001876090027508326, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_92_2.py::test_result_size_is_less_than_specified_number", "location": ["tests59_92_2.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025154100148938596, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw4>"}
{"nodeid": "tests59_92_2.py::test_if_result_order_is_correct", "location": ["tests59_92_2.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024924700119299814, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw3>"}
{"nodeid": "tests59_92_2.py::test_if_result_is_less_than_7", "location": ["tests59_92_2.py", 34, "test_if_result_is_less_than_7"], "keywords": {"test_if_result_is_less_than_7": 1, "tests59_92_2.py": 1, "Folder_92": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q59/command_results_2/Folder_92/generated_answer.py", "lineno": 12, "message": "ValueError: invalid literal for int() with base 10: ''"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_7():", "        input_list = tuple([random.randint(3, 1000) for _ in range(7 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_92/tests59_92_2.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(test_tup):", "        res = []", "        for x in range(test_tup[7]):", "            for i in range(10):", "                if str(x)[:i] == '9' * i:", "                    continue", "                elif str(x)[-1] == '9':", "                    res += [int(str(x)[:-1])]", "                elif str(x) == '9':", "                    res += [int(str(x)[:-1])]", "                else:", ">                   res += [int(str(x)[:-1])]", "E                   ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["test_tup", "(102, 340, 349, 344, 221, 605, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_92/generated_answer.py", "lineno": 12, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_7():", "        input_list = tuple([random.randint(3, 1000) for _ in range(7 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_92/tests59_92_2.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(test_tup):", "        res = []", "        for x in range(test_tup[7]):", "            for i in range(10):", "                if str(x)[:i] == '9' * i:", "                    continue", "                elif str(x)[-1] == '9':", "                    res += [int(str(x)[:-1])]", "                elif str(x) == '9':", "                    res += [int(str(x)[:-1])]", "                else:", ">                   res += [int(str(x)[:-1])]", "E                   ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["test_tup", "(102, 340, 349, 344, 221, 605, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_92/generated_answer.py", "lineno": 12, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q59/command_results_2/Folder_92/generated_answer.py", "lineno": 12, "message": "ValueError: invalid literal for int() with base 10: ''"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00029474399343598634, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "63ee1b9159bd476aac0899370dfd6798", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
