{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests59_72_2.py::test_list_of_all_one_digit_nums", "location": ["tests59_72_2.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00028988499980187044, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_72_2.py::test_if_result_integers_are_odd", "location": ["tests59_72_2.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00030241899366956204, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_72_2.py::test_if_result_is_less_than_31", "location": ["tests59_72_2.py", 34, "test_if_result_is_less_than_31"], "keywords": {"test_if_result_is_less_than_31": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027099800354335457, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_72_2.py::test_result_size_is_less_than_specified_number", "location": ["tests59_72_2.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021313700563041493, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw4>"}
{"nodeid": "tests59_72_2.py::test_if_result_order_is_correct", "location": ["tests59_72_2.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003610700005083345, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw3>"}
{"nodeid": "tests59_72_2.py::test_if_result_is_less_than_31", "location": ["tests59_72_2.py", 34, "test_if_result_is_less_than_31"], "keywords": {"test_if_result_is_less_than_31": 1, "tests59_72_2.py": 1, "Folder_72": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q59/command_results_2/Folder_72/generated_answer.py", "lineno": 31, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_31():", "        input_list = tuple([random.randint(3, 1000) for _ in range(31 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_72/tests59_72_2.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(x):", "        def check(i):", "            # find all left-truncatable primes", "            for j in range(2, x+1):", "                if i%10 != j:", "                    continue", "                if i < j:", "                    break", "                for k in range(10):", "                    if i%10 == k:", "                        break", "                    if i < k:", "                        continue", "                    if j%10 == k:", "                        break", "                    if j < k:", "                        continue", "                    if k == 0 or k == 9:", "                        continue", "                    if j > i:", "                        break", "                    elif j == i:", "                        return True", "                    elif i > j:", "                        break", "                    elif i == j:", "                        return True", "            return False", "        # return all left-truncatable primes", ">       return [n for n in range(2, x+1) if all(check(n) for _ in range(10))]", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(12, 667, 459, 132, 710, 793, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_72/generated_answer.py", "lineno": 31, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_31():", "        input_list = tuple([random.randint(3, 1000) for _ in range(31 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_72/tests59_72_2.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(x):", "        def check(i):", "            # find all left-truncatable primes", "            for j in range(2, x+1):", "                if i%10 != j:", "                    continue", "                if i < j:", "                    break", "                for k in range(10):", "                    if i%10 == k:", "                        break", "                    if i < k:", "                        continue", "                    if j%10 == k:", "                        break", "                    if j < k:", "                        continue", "                    if k == 0 or k == 9:", "                        continue", "                    if j > i:", "                        break", "                    elif j == i:", "                        return True", "                    elif i > j:", "                        break", "                    elif i == j:", "                        return True", "            return False", "        # return all left-truncatable primes", ">       return [n for n in range(2, x+1) if all(check(n) for _ in range(10))]", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(12, 667, 459, 132, 710, 793, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_2/Folder_72/generated_answer.py", "lineno": 31, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q59/command_results_2/Folder_72/generated_answer.py", "lineno": 31, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002463310011080466, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "d343a3216f2a4ddd89a0055d298b2a2e", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
