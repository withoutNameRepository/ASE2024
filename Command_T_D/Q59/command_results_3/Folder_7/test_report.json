{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests59_7_3.py::test_result_size_is_less_than_specified_number", "location": ["tests59_7_3.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003071169994655065, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw3", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw3>"}
{"nodeid": "tests59_7_3.py::test_if_result_order_is_correct", "location": ["tests59_7_3.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029321000329218805, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw4", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw4>"}
{"nodeid": "tests59_7_3.py::test_if_result_is_less_than_803", "location": ["tests59_7_3.py", 34, "test_if_result_is_less_than_803"], "keywords": {"test_if_result_is_less_than_803": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000284744004602544, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_7_3.py::test_list_of_all_one_digit_nums", "location": ["tests59_7_3.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025220199313480407, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_7_3.py::test_if_result_integers_are_odd", "location": ["tests59_7_3.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000311494994093664, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_7_3.py::test_if_result_integers_are_odd", "location": ["tests59_7_3.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_7_3.py": 1, "Folder_7": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q59/command_results_3/Folder_7/generated_answer.py", "lineno": 3, "message": "ValueError: invalid literal for int() with base 10: '(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 803 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_3/Folder_7/tests59_7_3.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(n):", "        return sorted(", ">           [n for n in range(2, int(str(n).lstrip(\"0\")) + 1) if all(int(d) > 0 for d in str(n))],", "            key=lambda x: x,", "        )", "E       ValueError: invalid literal for int() with base 10: '(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,"], "reprfuncargs": {"args": [["n", "(1, 2, 3, 4, 5, 6, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_3/Folder_7/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 803 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_3/Folder_7/tests59_7_3.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(n):", "        return sorted(", ">           [n for n in range(2, int(str(n).lstrip(\"0\")) + 1) if all(int(d) > 0 for d in str(n))],", "            key=lambda x: x,", "        )", "E       ValueError: invalid literal for int() with base 10: '(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,"], "reprfuncargs": {"args": [["n", "(1, 2, 3, 4, 5, 6, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/command_results_3/Folder_7/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q59/command_results_3/Folder_7/generated_answer.py", "lineno": 3, "message": "ValueError: invalid literal for int() with base 10: '(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004087409979547374, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "716aff7682964482ab7fa6df0b338836", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
