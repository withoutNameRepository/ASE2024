{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests51_34_4.py::test_list_of_strings_of_length_two", "location": ["tests51_34_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_34_4.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015343799896072596, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "870c940878124186926724985aa41a41", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_34_4.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_34_4.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_34_4.py": 1, "Folder_34": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019302200234960765, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "870c940878124186926724985aa41a41", "node": "<WorkerController gw1>"}
{"nodeid": "tests51_34_4.py::test_list_of_two_strings_of_same_lengths", "location": ["tests51_34_4.py", 16, "test_list_of_two_strings_of_same_lengths"], "keywords": {"test_list_of_two_strings_of_same_lengths": 1, "tests51_34_4.py": 1, "Folder_34": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 955, "message": "TypeError: unsupported operand type(s) for &: 'str' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/tests51_34_4.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall(r'(?i)(?<=.)(.*?)(?=.)', *lst))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/generated_answer.py", "lineno": 3, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", ">           p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "E           TypeError: unsupported operand type(s) for &: 'str' and 'int'"], "reprfuncargs": {"args": [["str", "'(?i)(?<=.)(.*?)(?=.)'"], ["flags", "'aaaa'"], ["state", "<sre_parse.State object at 0x7ff6a2248280>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 955, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_same_lengths():", "        l = ['aaaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/tests51_34_4.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall(r'(?i)(?<=.)(.*?)(?=.)', *lst))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/generated_answer.py", "lineno": 3, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", ">           p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "E           TypeError: unsupported operand type(s) for &: 'str' and 'int'"], "reprfuncargs": {"args": [["str", "'(?i)(?<=.)(.*?)(?=.)'"], ["flags", "'aaaa'"], ["state", "<sre_parse.State object at 0x7ff6a2248280>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 955, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 955, "message": "TypeError: unsupported operand type(s) for &: 'str' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002185400007874705, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "870c940878124186926724985aa41a41", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
