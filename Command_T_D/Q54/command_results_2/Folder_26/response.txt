[cohere.Generation {
	id: c03d059b-2b8e-450e-8b8d-3aceb5368cba
	prompt: Here is a text specification delimited by angle brackets. Create Python code according to the text specification. <Write a function called 'all_right_truncatable_prime' that takes an argument which is a tuple of positive integers. Let x be the integer at index 81. The function should return the sorted list of all right-truncatable prime numbers less than x. The returned list should be sorted in descending order. If there is no such right-truncatable prime number, the function should return an empty list. A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.> The Python code should not contain any comments. The Python code should be delimited only by triple backticks.
	text: 
```
def all_right_truncatable_prime(x):
    l = []
    for i in range(2, x):
        if is_prime(i):
            j = str(i)
            while j[-1] == '0':
                j = int(j[0:-1])
            if is_prime(j):
                l.append(j)
    return sorted(l, reverse=True)

def is_prime(x):
    if x <= 1:
        return False
    if x <= 3:
        return True
    if x % 2 == 0 or x % 3 == 0:
        return False
    i = 5
    while i * i <= x:
        if x % i == 0 or x % (i + 2) == 0:
            return False
        i += 6
    return True
```
	likelihood: None
	token_likelihoods: None
}]