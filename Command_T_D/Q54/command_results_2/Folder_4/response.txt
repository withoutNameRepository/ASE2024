[cohere.Generation {
	id: 0ce43ed8-57ed-4735-b268-7b9592870b5a
	prompt: Here is a text specification delimited by angle brackets. Create Python code according to the text specification. <Write a function called 'all_right_truncatable_prime' that takes an argument which is a tuple of positive integers. Let x be the integer at index 96. The function should return the sorted list of all right-truncatable prime numbers less than x. The returned list should be sorted in descending order. If there is no such right-truncatable prime number, the function should return an empty list. A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.> The Python code should not contain any comments. The Python code should be delimited only by triple backticks.
	text: 
```
import math

def all_right_truncatable_prime(lst):
    max_x = lst[96]
    lst = [n for n in range(2, max_x // 2 + 1) if all(n % d for d in range(3, int(math.sqrt(n)) + 1, 2))]
    return [n for n in lst if all(str(n).rstrip('0')[::-1].count('9') == 1)]
```
	likelihood: None
	token_likelihoods: None
}]