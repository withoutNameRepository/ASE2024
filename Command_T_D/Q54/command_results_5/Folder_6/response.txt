[cohere.Generation {
	id: 92fc2541-70be-4ccd-99f3-1b4cdeedcf4c
	prompt: Here is a text specification delimited by angle brackets. Create Python code according to the text specification. <Write a function called 'all_right_truncatable_prime' that takes an argument which is a tuple of positive integers. Let x be the integer at index 74. The function should return the sorted list of all right-truncatable prime numbers less than x. The returned list should be sorted in ascending order. If there is no such right-truncatable prime number, the function should return an empty list. A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.> The Python code should not contain any comments. The Python code should be delimited only by triple backticks.
	text: 
```python
import re

def all_right_truncatable_prime(nums):
    return sorted(filter(lambda x: is_right_truncatable_prime(str(x)), nums))

def is_right_truncatable_prime(s):
    if not re.fullmatch(r'[2-9][\d]0+', s):
        return False
    #If rightmost digit is 9, then must be followed by 0, then another digit
    if s[0] == '9':
        if not s[1] == '0' or not s[2:]:
            return False
    #If rightmost digit is 8, then can be followed by any digit
    if s[0] == '8':
        return True
    #If rightmost digit is less than 8, then must be followed by 0, then another digit
    if s[0] != '9':
        if not s[1] == '0' or not s[2:]:
            return False
    return True
```
	likelihood: None
	token_likelihoods: None
}]