[cohere.Generation {
	id: 22dc976b-c875-419b-9092-22584a46d54b
	prompt: Here is a text specification delimited by angle brackets. Create Python code according to the text specification. <Write a function called 'all_right_truncatable_prime' that takes an argument which is a tuple of positive integers. Let x be the integer at index 10. The function should return the sorted list of all right-truncatable prime numbers less than x. The returned list should be sorted in descending order. If there is no such right-truncatable prime number, the function should return an empty list. A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.> The Python code should not contain any comments. The Python code should be delimited only by triple backticks.
	text: 
```
import itertools

def all_right_truncatable_prime(n):
    a, b = 2, n
    for d in itertools.permutations('234789', n):
        p = d + '0'
        if all(p[i] * 10**(n-i-1) > b for i in range(1, n+1)):
            yield from range(b+1, p[0]*10, -1)
            break
    if p[-1] * 10**(n-1) > b:
        yield from range(b+1, p[-1] * 10**(n-1), -1)
```
	likelihood: None
	token_likelihoods: None
}]