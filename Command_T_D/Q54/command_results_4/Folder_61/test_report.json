{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests54_61_4.py::test_list_of_all_one_digit_nums", "location": ["tests54_61_4.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003384570009075105, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw0>"}
{"nodeid": "tests54_61_4.py::test_if_result_order_is_correct", "location": ["tests54_61_4.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001965650008060038, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw3>"}
{"nodeid": "tests54_61_4.py::test_result_size_is_less_than_specified_number", "location": ["tests54_61_4.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002491060004103929, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw4>"}
{"nodeid": "tests54_61_4.py::test_if_result_integers_are_odd", "location": ["tests54_61_4.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00035370600380701944, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw2>"}
{"nodeid": "tests54_61_4.py::test_if_result_is_less_than_3", "location": ["tests54_61_4.py", 34, "test_if_result_is_less_than_3"], "keywords": {"test_if_result_is_less_than_3": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003278759977547452, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw1>"}
{"nodeid": "tests54_61_4.py::test_if_result_order_is_correct", "location": ["tests54_61_4.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests54_61_4.py": 1, "Folder_61": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q54/command_results_4/Folder_61/generated_answer.py", "lineno": 14, "message": "TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_order_is_correct():", "        input_list = tuple([random.randint(3, 1000) for _ in range(3 + 1)])", ">       output = all_right_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_61/tests54_61_4.py", "lineno": 45, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_right_truncatable_prime(n):", "        # Note that this function assumes that n is a tuple containing positive integers.", "        # The function should return the sorted list of all right-truncatable prime numbers less than x.", "        # The returned list should be sorted in descending order. If there is no such right-truncatable prime number, the function should return an empty list.", "        # A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.", "        if len(n) < 3:", "            return []", "        x = n[3]", "        res = []", "        for i in range(x // 10 ** 6 + 1):", "            n = str(i + 1)", "            if n[-1] == '9':", "                n = int(n[:-1])", ">           if all(n % d == 0 for d in range(2, int(n ** 0.5) + 1)):", "E           TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'"], "reprfuncargs": {"args": [["n", "'1'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_61/generated_answer.py", "lineno": 14, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_order_is_correct():", "        input_list = tuple([random.randint(3, 1000) for _ in range(3 + 1)])", ">       output = all_right_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_61/tests54_61_4.py", "lineno": 45, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_right_truncatable_prime(n):", "        # Note that this function assumes that n is a tuple containing positive integers.", "        # The function should return the sorted list of all right-truncatable prime numbers less than x.", "        # The returned list should be sorted in descending order. If there is no such right-truncatable prime number, the function should return an empty list.", "        # A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.", "        if len(n) < 3:", "            return []", "        x = n[3]", "        res = []", "        for i in range(x // 10 ** 6 + 1):", "            n = str(i + 1)", "            if n[-1] == '9':", "                n = int(n[:-1])", ">           if all(n % d == 0 for d in range(2, int(n ** 0.5) + 1)):", "E           TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'"], "reprfuncargs": {"args": [["n", "'1'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_61/generated_answer.py", "lineno": 14, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q54/command_results_4/Folder_61/generated_answer.py", "lineno": 14, "message": "TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002603270040708594, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "b7a4ef77102c4e0cac199ef9c292072a", "node": "<WorkerController gw3>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
