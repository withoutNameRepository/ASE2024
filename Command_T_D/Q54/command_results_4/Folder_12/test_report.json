{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests54_12_4.py::test_if_result_is_less_than_70", "location": ["tests54_12_4.py", 34, "test_if_result_is_less_than_70"], "keywords": {"test_if_result_is_less_than_70": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002462900010868907, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw3", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw3>"}
{"nodeid": "tests54_12_4.py::test_list_of_all_one_digit_nums", "location": ["tests54_12_4.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025588899734430015, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw0>"}
{"nodeid": "tests54_12_4.py::test_if_result_order_is_correct", "location": ["tests54_12_4.py", 42, "test_if_result_order_is_correct"], "keywords": {"test_if_result_order_is_correct": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002444769997964613, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw2>"}
{"nodeid": "tests54_12_4.py::test_result_size_is_less_than_specified_number", "location": ["tests54_12_4.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024977799330372363, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw4>"}
{"nodeid": "tests54_12_4.py::test_if_result_integers_are_odd", "location": ["tests54_12_4.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024992800172185525, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw1>"}
{"nodeid": "tests54_12_4.py::test_result_size_is_less_than_specified_number", "location": ["tests54_12_4.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023996899835765362, "extra": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw4>"}
{"nodeid": "tests54_12_4.py::test_result_size_is_less_than_specified_number", "location": ["tests54_12_4.py", 53, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00025119999918388203, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw4>"}
{"nodeid": "tests54_12_4.py::test_if_result_is_less_than_70", "location": ["tests54_12_4.py", 34, "test_if_result_is_less_than_70"], "keywords": {"test_if_result_is_less_than_70": 1, "tests54_12_4.py": 1, "Folder_12": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q54/command_results_4/Folder_12/generated_answer.py", "lineno": 8, "message": "TypeError: unsupported operand type(s) for +: 'int' and 'list'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_70():", "        input_list = tuple([random.randint(3, 1000) for _ in range(70 + 1)])", ">       output = all_right_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_12/tests54_12_4.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_right_truncatable_prime(n):", "        a = [1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 409, 419, 421, 431, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 693, 697, 719, 733, 739, 743, 751, 757, 763, 769, 773, 779, 783, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 867, 871, 873, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]", "        if n[70] < 1:", "            return []", "        if n[70] <= 9:", "            return a[len(a) - 1]", "        else:", ">           return a[len(a) - 1] + a[:len(a) - 1]", "E           TypeError: unsupported operand type(s) for +: 'int' and 'list'"], "reprfuncargs": {"args": [["n", "(34, 249, 463, 70, 987, 292, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_12/generated_answer.py", "lineno": 8, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_70():", "        input_list = tuple([random.randint(3, 1000) for _ in range(70 + 1)])", ">       output = all_right_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_12/tests54_12_4.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_right_truncatable_prime(n):", "        a = [1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 409, 419, 421, 431, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 693, 697, 719, 733, 739, 743, 751, 757, 763, 769, 773, 779, 783, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 867, 871, 873, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]", "        if n[70] < 1:", "            return []", "        if n[70] <= 9:", "            return a[len(a) - 1]", "        else:", ">           return a[len(a) - 1] + a[:len(a) - 1]", "E           TypeError: unsupported operand type(s) for +: 'int' and 'list'"], "reprfuncargs": {"args": [["n", "(34, 249, 463, 70, 987, 292, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q54/command_results_4/Folder_12/generated_answer.py", "lineno": 8, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q54/command_results_4/Folder_12/generated_answer.py", "lineno": 8, "message": "TypeError: unsupported operand type(s) for +: 'int' and 'list'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041391100239707157, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw3", "testrun_uid": "8e4bec99290144a683a9ddd7cc34014a", "node": "<WorkerController gw3>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
