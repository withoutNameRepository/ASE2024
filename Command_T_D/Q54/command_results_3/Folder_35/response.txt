[cohere.Generation {
	id: 36d4e025-50f4-4d25-87fe-f486e444393f
	prompt: Here is a text specification delimited by angle brackets. Create Python code according to the text specification. <Write a function called 'all_right_truncatable_prime' that takes an argument which is a tuple of positive integers. Let x be the integer at index 177. The function should return the sorted list of all right-truncatable prime numbers less than x. The returned list should be sorted in ascending order. If there is no such right-truncatable prime number, the function should return an empty list. A right-truncatable prime number is a prime number that remains prime when the last rightmost digit is successively removed.> The Python code should not contain any comments. The Python code should be delimited only by triple backticks.
	text: 
```python
import bisect

def all_right_truncatable_prime(test_case):
    test_case_str = str(test_case)
    left_bound, right_bound = (test_case[0], test_case[1])
    if left_bound == right_bound:
        return []
    if left_bound > right_bound:
        return [left_bound]
    return sorted(set(range(left_bound, right_bound + 1)))
```
	likelihood: None
	token_likelihoods: None
}]