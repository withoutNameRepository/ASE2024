{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_51_1.py::test_vertical_matrix", "location": ["tests58_51_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_51_1.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032040299993241206, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "4b020ae5c3894627892cdb8b681f8d70", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_51_1.py::test_horizontal_matrix", "location": ["tests58_51_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_51_1.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026660999719752, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4b020ae5c3894627892cdb8b681f8d70", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_51_1.py::test_matrix_of_one_integer", "location": ["tests58_51_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_51_1.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004518730056588538, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4b020ae5c3894627892cdb8b681f8d70", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_51_1.py::test_matrix_of_having_95_integers", "location": ["tests58_51_1.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_1.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002632329997140914, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "4b020ae5c3894627892cdb8b681f8d70", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_51_1.py::test_matrix_of_having_95_integers", "location": ["tests58_51_1.py", 28, "test_matrix_of_having_95_integers"], "keywords": {"test_matrix_of_having_95_integers": 1, "__wrapped__": 1, "tests58_51_1.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_51/tests58_51_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-100,   86,   43,   55,  -60,   51,  -44,   92,  -11,   70,\\n          -55,  -76,   15,  -19,   91,  -13,   96,  -52,   59,   20,\\n           53,   45,  -64,  -64,   83,  -64,   71,  -75,  -78,   37,\\n           87,  -11,  -38,  -55,   33,  -13,   -8,  -47,  -33,  -27,\\n           13,  -40,   31,  -95,  -74,  -70,  -82,  -66,   98,  -73,\\n          -39,   38,   50,   48,  -70,   82,  -15,  -23,  -12,  -49,\\n           16,   76,   12,  -16,   58,  -78,   -3,   16,  -20,  -92,\\n           84,  -69,  -56,   -3,  -57,  -98,    3, -100,   19,    5,\\n           16,   36,   63,    9,   53,    0,    3,  100,  -34,   42,\\n           57,    9,  -12,  -51,  -52]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-100,   86,   43,   55,  -60,   51,  -44,   92,  -11,   70,\\n          -55,  -76,   15,  -19,   91,  -13,   96,  -52,   59,   20,\\n           53,   45,  -64,  -64,   83,  -64,   71,  -75,  -78,   37,\\n           87,  -11,  -38,  -55,   33,  -13,   -8,  -47,  -33,  -27,\\n           13,  -40,   31,  -95,  -74,  -70,  -82,  -66,   98,  -73,\\n          -39,   38,   50,   48,  -70,   82,  -15,  -23,  -12,  -49,\\n           16,   76,   12,  -16,   58,  -78,   -3,   16,  -20,  -92,\\n           84,  -69,  -56,   -3,  -57,  -98,    3, -100,   19,    5,\\n           16,   36,   63,    9,   53,    0,    3,  100,  -34,   42,\\n           57,    9,  -12,  -51,  -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_51/tests58_51_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_95_integers():", "        if 95 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(95 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(95)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-100,   86,   43,   55,  -60,   51,  -44,   92,  -11,   70,\\n          -55,  -76,   15,  -19,   91,  -13,   96,  -52,   59,   20,\\n           53,   45,  -64,  -64,   83,  -64,   71,  -75,  -78,   37,\\n           87,  -11,  -38,  -55,   33,  -13,   -8,  -47,  -33,  -27,\\n           13,  -40,   31,  -95,  -74,  -70,  -82,  -66,   98,  -73,\\n          -39,   38,   50,   48,  -70,   82,  -15,  -23,  -12,  -49,\\n           16,   76,   12,  -16,   58,  -78,   -3,   16,  -20,  -92,\\n           84,  -69,  -56,   -3,  -57,  -98,    3, -100,   19,    5,\\n           16,   36,   63,    9,   53,    0,    3,  100,  -34,   42,\\n           57,    9,  -12,  -51,  -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_51/tests58_51_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_51/tests58_51_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-100,   86,   43,   55,  -60,   51,  -44,   92,  -11,   70,\\n          -55,  -76,   15,  -19,   91,  -13,   96,  -52,   59,   20,\\n           53,   45,  -64,  -64,   83,  -64,   71,  -75,  -78,   37,\\n           87,  -11,  -38,  -55,   33,  -13,   -8,  -47,  -33,  -27,\\n           13,  -40,   31,  -95,  -74,  -70,  -82,  -66,   98,  -73,\\n          -39,   38,   50,   48,  -70,   82,  -15,  -23,  -12,  -49,\\n           16,   76,   12,  -16,   58,  -78,   -3,   16,  -20,  -92,\\n           84,  -69,  -56,   -3,  -57,  -98,    3, -100,   19,    5,\\n           16,   36,   63,    9,   53,    0,    3,  100,  -34,   42,\\n           57,    9,  -12,  -51,  -52]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010312109952792525, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "4b020ae5c3894627892cdb8b681f8d70", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
