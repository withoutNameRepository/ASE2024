{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_96_1.py::test_vertical_matrix", "location": ["tests58_96_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032588300382485613, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "1596330da8d24a7e8632562bd6f8a553", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_96_1.py::test_matrix_of_having_20_integers", "location": ["tests58_96_1.py", 28, "test_matrix_of_having_20_integers"], "keywords": {"test_matrix_of_having_20_integers": 1, "__wrapped__": 1, "tests58_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021928000205662102, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "1596330da8d24a7e8632562bd6f8a553", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_96_1.py::test_matrix_of_one_integer", "location": ["tests58_96_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003136289960821159, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1596330da8d24a7e8632562bd6f8a553", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_96_1.py::test_horizontal_matrix", "location": ["tests58_96_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021621300402330235, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "1596330da8d24a7e8632562bd6f8a553", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_96_1.py::test_vertical_matrix", "location": ["tests58_96_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_96_1.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_96/generated_answer.py", "lineno": 3, "message": "TypeError: logical_or() takes from 2 to 3 positional arguments but 1 were given"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 20", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 20 < 30:", "            num = 4", "        elif 30 <= 20 < 70:", "            num = 3", "        elif 70 <= 20 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", ">           output = submatrix_with_n_numbers(mat)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_96/tests58_96_1.py", "lineno": 77, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", ">       return np.sum(np.logical_or(np.all(matrix[i:j] == 20, axis=1) for i in range(len(matrix)-19) for j in range(i+20, len(matrix))))", "E       TypeError: logical_or() takes from 2 to 3 positional arguments but 1 were given"], "reprfuncargs": {"args": [["matrix", "matrix([[1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n ...,\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_96/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 20", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 20 < 30:", "            num = 4", "        elif 30 <= 20 < 70:", "            num = 3", "        elif 70 <= 20 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", ">           output = submatrix_with_n_numbers(mat)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_96/tests58_96_1.py", "lineno": 77, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", ">       return np.sum(np.logical_or(np.all(matrix[i:j] == 20, axis=1) for i in range(len(matrix)-19) for j in range(i+20, len(matrix))))", "E       TypeError: logical_or() takes from 2 to 3 positional arguments but 1 were given"], "reprfuncargs": {"args": [["matrix", "matrix([[1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n ...,\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1],\n        [1]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_96/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_96/generated_answer.py", "lineno": 3, "message": "TypeError: logical_or() takes from 2 to 3 positional arguments but 1 were given"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006856699983472936, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "1596330da8d24a7e8632562bd6f8a553", "node": "<WorkerController gw3>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
