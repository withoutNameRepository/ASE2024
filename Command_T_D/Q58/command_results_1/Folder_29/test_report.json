{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_29_1.py::test_vertical_matrix", "location": ["tests58_29_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002475729997968301, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_29_1.py::test_matrix_of_one_integer", "location": ["tests58_29_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002690350011107512, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_29_1.py::test_matrix_of_one_integer", "location": ["tests58_29_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022624200209975243, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_29_1.py::test_matrix_of_one_integer", "location": ["tests58_29_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011631300003500655, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_29_1.py::test_matrix_of_having_19_integers", "location": ["tests58_29_1.py", 28, "test_matrix_of_having_19_integers"], "keywords": {"test_matrix_of_having_19_integers": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0017748609971022233, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_29_1.py::test_horizontal_matrix", "location": ["tests58_29_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00038187999598449096, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_29_1.py::test_matrix_of_having_19_integers", "location": ["tests58_29_1.py", 28, "test_matrix_of_having_19_integers"], "keywords": {"test_matrix_of_having_19_integers": 1, "__wrapped__": 1, "tests58_29_1.py": 1, "Folder_29": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_29/tests58_29_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-66, -82,  52,  89, -97,   6,  23,  18, -77, -77,   1,   8, -11,\\n         -62,  82, -22,  48,  -3, -52]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_19_integers():", "        if 19 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(19 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(19)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-66, -82,  52,  89, -97,   6,  23,  18, -77, -77,   1,   8, -11,\\n         -62,  82, -22,  48,  -3, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_29/tests58_29_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_19_integers():", "        if 19 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(19 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(19)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-66, -82,  52,  89, -97,   6,  23,  18, -77, -77,   1,   8, -11,\\n         -62,  82, -22,  48,  -3, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_29/tests58_29_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_1/Folder_29/tests58_29_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-66, -82,  52,  89, -97,   6,  23,  18, -77, -77,   1,   8, -11,\\n         -62,  82, -22,  48,  -3, -52]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001995603000978008, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "46732f39768c4e11a4f2cc2502a56b3f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
