{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_2.py::test_horizontal_matrix", "location": ["tests58_33_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024782299442449585, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw3", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_33_2.py::test_vertical_matrix", "location": ["tests58_33_2.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002527530014049262, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022328699560603127, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002567409974290058, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004455009984667413, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006114490024629049, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  85],\\n        [ 52,  20],\\n        [-29,  97],\\n        [ 30,  78],\\n        [-61, -44],\\n        [-10, -21],\\n        [ 82,  37],\\n        [ 80,   7],\\n        [ -4,  32],\\n        [ 36, -44],\\n        [-27,  22],\\n        [-99,  14],\\n        [ 94,  54],\\n        [ 43,  23],\\n        [-84, -40],\\n        [ 45, -92],\\n        [ 78, -18],\\n        [-99, -71],\\n        [-12, -38],\\n        [-41,  46],\\n        [ 13,  94],\\n        [-86, -64],\\n        [ 64, 100],\\n        [-10,  71],\\n        [ 69,  83],\\n        [ 75, -54],\\n        [-27,  93],\\n        [ -5, -88],\\n        [ 21, -36],\\n        [ 37, -58],\\n        [-80, -46],\\n        [ 35,   3],\\n        [ -9,  59],\\n        [ 72,  23],\\n        [ 22,  39],\\n        [-13,  26],\\n        [-95, -67],\\n        [-17,  13],\\n        [ 16,  99],\\n        [-93,  73],\\n        [-40,  18],\\n        [-70,  28],\\n        [ 29,  51],\\n        [ 76, -53],\\n        [-27,  88],\\n        [ -3, -94],\\n        [ 65, -89],\\n        [ 92, -17],\\n        [-22,  83],\\n        [ 81, -27],\\n        [ 29,  75],\\n        [-64, -14],\\n        [-28, -48],\\n        [ 56, -21],\\n        [ 57,   9],\\n        [ 31, -34],\\n        [-63,  68],\\n        [  1,  85],\\n        [ -3, -77]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  85],\\n        [ 52,  20],\\n        [-29,  97],\\n        [ 30,  78],\\n        [-61, -44],\\n        [-10, -21],\\n        [ 82,  37],\\n        [ 80,   7],\\n        [ -4,  32],\\n        [ 36, -44],\\n        [-27,  22],\\n        [-99,  14],\\n        [ 94,  54],\\n        [ 43,  23],\\n        [-84, -40],\\n        [ 45, -92],\\n        [ 78, -18],\\n        [-99, -71],\\n        [-12, -38],\\n        [-41,  46],\\n        [ 13,  94],\\n        [-86, -64],\\n        [ 64, 100],\\n        [-10,  71],\\n        [ 69,  83],\\n        [ 75, -54],\\n        [-27,  93],\\n        [ -5, -88],\\n        [ 21, -36],\\n        [ 37, -58],\\n        [-80, -46],\\n        [ 35,   3],\\n        [ -9,  59],\\n        [ 72,  23],\\n        [ 22,  39],\\n        [-13,  26],\\n        [-95, -67],\\n        [-17,  13],\\n        [ 16,  99],\\n        [-93,  73],\\n        [-40,  18],\\n        [-70,  28],\\n        [ 29,  51],\\n        [ 76, -53],\\n        [-27,  88],\\n        [ -3, -94],\\n        [ 65, -89],\\n        [ 92, -17],\\n        [-22,  83],\\n        [ 81, -27],\\n        [ 29,  75],\\n        [-64, -14],\\n        [-28, -48],\\n        [ 56, -21],\\n        [ 57,   9],\\n        [ 31, -34],\\n        [-63,  68],\\n        [  1,  85],\\n        [ -3, -77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  85],\\n        [ 52,  20],\\n        [-29,  97],\\n        [ 30,  78],\\n        [-61, -44],\\n        [-10, -21],\\n        [ 82,  37],\\n        [ 80,   7],\\n        [ -4,  32],\\n        [ 36, -44],\\n        [-27,  22],\\n        [-99,  14],\\n        [ 94,  54],\\n        [ 43,  23],\\n        [-84, -40],\\n        [ 45, -92],\\n        [ 78, -18],\\n        [-99, -71],\\n        [-12, -38],\\n        [-41,  46],\\n        [ 13,  94],\\n        [-86, -64],\\n        [ 64, 100],\\n        [-10,  71],\\n        [ 69,  83],\\n        [ 75, -54],\\n        [-27,  93],\\n        [ -5, -88],\\n        [ 21, -36],\\n        [ 37, -58],\\n        [-80, -46],\\n        [ 35,   3],\\n        [ -9,  59],\\n        [ 72,  23],\\n        [ 22,  39],\\n        [-13,  26],\\n        [-95, -67],\\n        [-17,  13],\\n        [ 16,  99],\\n        [-93,  73],\\n        [-40,  18],\\n        [-70,  28],\\n        [ 29,  51],\\n        [ 76, -53],\\n        [-27,  88],\\n        [ -3, -94],\\n        [ 65, -89],\\n        [ 92, -17],\\n        [-22,  83],\\n        [ 81, -27],\\n        [ 29,  75],\\n        [-64, -14],\\n        [-28, -48],\\n        [ 56, -21],\\n        [ 57,   9],\\n        [ 31, -34],\\n        [-63,  68],\\n        [  1,  85],\\n        [ -3, -77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  85],\\n        [ 52,  20],\\n        [-29,  97],\\n        [ 30,  78],\\n        [-61, -44],\\n        [-10, -21],\\n        [ 82,  37],\\n        [ 80,   7],\\n        [ -4,  32],\\n        [ 36, -44],\\n        [-27,  22],\\n        [-99,  14],\\n        [ 94,  54],\\n        [ 43,  23],\\n        [-84, -40],\\n        [ 45, -92],\\n        [ 78, -18],\\n        [-99, -71],\\n        [-12, -38],\\n        [-41,  46],\\n        [ 13,  94],\\n        [-86, -64],\\n        [ 64, 100],\\n        [-10,  71],\\n        [ 69,  83],\\n        [ 75, -54],\\n        [-27,  93],\\n        [ -5, -88],\\n        [ 21, -36],\\n        [ 37, -58],\\n        [-80, -46],\\n        [ 35,   3],\\n        [ -9,  59],\\n        [ 72,  23],\\n        [ 22,  39],\\n        [-13,  26],\\n        [-95, -67],\\n        [-17,  13],\\n        [ 16,  99],\\n        [-93,  73],\\n        [-40,  18],\\n        [-70,  28],\\n        [ 29,  51],\\n        [ 76, -53],\\n        [-27,  88],\\n        [ -3, -94],\\n        [ 65, -89],\\n        [ 92, -17],\\n        [-22,  83],\\n        [ 81, -27],\\n        [ 29,  75],\\n        [-64, -14],\\n        [-28, -48],\\n        [ 56, -21],\\n        [ 57,   9],\\n        [ 31, -34],\\n        [-63,  68],\\n        [  1,  85],\\n        [ -3, -77]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012686839982052334, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7c4a3e0fd2b44e269c20cc01e399e91d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
