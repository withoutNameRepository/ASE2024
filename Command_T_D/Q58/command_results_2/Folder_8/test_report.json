{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_8_2.py::test_matrix_of_having_29_integers", "location": ["tests58_8_2.py", 28, "test_matrix_of_having_29_integers"], "keywords": {"test_matrix_of_having_29_integers": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002768699996522628, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "975516dbf2a64719b066bdec06c63341", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_8_2.py::test_horizontal_matrix", "location": ["tests58_8_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003809280024142936, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "975516dbf2a64719b066bdec06c63341", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_8_2.py::test_vertical_matrix", "location": ["tests58_8_2.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026483600231586024, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "975516dbf2a64719b066bdec06c63341", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_8_2.py::test_matrix_of_one_integer", "location": ["tests58_8_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004815499996766448, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "975516dbf2a64719b066bdec06c63341", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_8_2.py::test_horizontal_matrix", "location": ["tests58_8_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_8_2.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_2/Folder_8/generated_answer.py", "lineno": 2, "message": "TypeError: unsupported operand type(s) for +: 'int' and 'list'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(29)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 29 < 30:", "            num = 4", "        elif 30 <= 29 < 70:", "            num = 3", "        elif 70 <= 29 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_8/tests58_8_2.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", ">       return matrix.shape[0] * matrix.shape[1] - sum(", "            [0] * matrix.shape[0] for _ in range(matrix.shape[1])", "        )", "E       TypeError: unsupported operand type(s) for +: 'int' and 'list'"], "reprfuncargs": {"args": [["matrix", "matrix([[  1, -10,  -3,   7,   6,   6,  10,   1,   7, -10,   6,   4, -10,\n          -4,  -6,  -2,   6,   3,   4,  -7, ... 1,   7, -10,   6,   4, -10,  -4,  -6,  -2,   6,   3,   4,  -7,\n          -2,   1,  -2,  -1,   6,   0,   8,   8,   0]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_8/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(29)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 29 < 30:", "            num = 4", "        elif 30 <= 29 < 70:", "            num = 3", "        elif 70 <= 29 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_8/tests58_8_2.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", ">       return matrix.shape[0] * matrix.shape[1] - sum(", "            [0] * matrix.shape[0] for _ in range(matrix.shape[1])", "        )", "E       TypeError: unsupported operand type(s) for +: 'int' and 'list'"], "reprfuncargs": {"args": [["matrix", "matrix([[  1, -10,  -3,   7,   6,   6,  10,   1,   7, -10,   6,   4, -10,\n          -4,  -6,  -2,   6,   3,   4,  -7, ... 1,   7, -10,   6,   4, -10,  -4,  -6,  -2,   6,   3,   4,  -7,\n          -2,   1,  -2,  -1,   6,   0,   8,   8,   0]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_8/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_2/Folder_8/generated_answer.py", "lineno": 2, "message": "TypeError: unsupported operand type(s) for +: 'int' and 'list'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00043463999463710934, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "975516dbf2a64719b066bdec06c63341", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
