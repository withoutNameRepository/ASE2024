{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_63_4.py::test_matrix_of_having_57_integers", "location": ["tests58_63_4.py", 28, "test_matrix_of_having_57_integers"], "keywords": {"test_matrix_of_having_57_integers": 1, "__wrapped__": 1, "tests58_63_4.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002881719992728904, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b6c71162449a4127b1b58f7b58924307", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_63_4.py::test_horizontal_matrix", "location": ["tests58_63_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_63_4.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000284984998870641, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b6c71162449a4127b1b58f7b58924307", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_63_4.py::test_matrix_of_one_integer", "location": ["tests58_63_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_63_4.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031122600194066763, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b6c71162449a4127b1b58f7b58924307", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_63_4.py::test_vertical_matrix", "location": ["tests58_63_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_63_4.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025261299742851406, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "b6c71162449a4127b1b58f7b58924307", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_63_4.py::test_matrix_of_having_57_integers", "location": ["tests58_63_4.py", 28, "test_matrix_of_having_57_integers"], "keywords": {"test_matrix_of_having_57_integers": 1, "__wrapped__": 1, "tests58_63_4.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_63/tests58_63_4.py", "lineno": 38, "message": "assert -113 == 1\n +  where -113 = submatrix_with_n_numbers(matrix([[ 67,  33,  11, -42,  89, -57, -27,  -8, -55, -67, -97,  94,  20,\\n          56, -50, -21,  -5, -77, -84, -16,  25, -61,  62,  24, -50,  18,\\n         -40, -80, -57, -74,  72,  79,  -8, -62,  63, -35,  30,  31, -17,\\n           1, -44, -79, -65,  20,  68,  61, -19,  69, -58, -98, -26, -84,\\n         -81, -38,  60,   9, -90]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_57_integers():", "        if 57 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(57 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(57)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert -113 == 1", "E        +  where -113 = submatrix_with_n_numbers(matrix([[ 67,  33,  11, -42,  89, -57, -27,  -8, -55, -67, -97,  94,  20,\\n          56, -50, -21,  -5, -77, -84, -16,  25, -61,  62,  24, -50,  18,\\n         -40, -80, -57, -74,  72,  79,  -8, -62,  63, -35,  30,  31, -17,\\n           1, -44, -79, -65,  20,  68,  61, -19,  69, -58, -98, -26, -84,\\n         -81, -38,  60,   9, -90]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_63/tests58_63_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_57_integers():", "        if 57 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(57 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(57)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert -113 == 1", "E        +  where -113 = submatrix_with_n_numbers(matrix([[ 67,  33,  11, -42,  89, -57, -27,  -8, -55, -67, -97,  94,  20,\\n          56, -50, -21,  -5, -77, -84, -16,  25, -61,  62,  24, -50,  18,\\n         -40, -80, -57, -74,  72,  79,  -8, -62,  63, -35,  30,  31, -17,\\n           1, -44, -79, -65,  20,  68,  61, -19,  69, -58, -98, -26, -84,\\n         -81, -38,  60,   9, -90]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_63/tests58_63_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_63/tests58_63_4.py", "lineno": 38, "message": "assert -113 == 1\n +  where -113 = submatrix_with_n_numbers(matrix([[ 67,  33,  11, -42,  89, -57, -27,  -8, -55, -67, -97,  94,  20,\\n          56, -50, -21,  -5, -77, -84, -16,  25, -61,  62,  24, -50,  18,\\n         -40, -80, -57, -74,  72,  79,  -8, -62,  63, -35,  30,  31, -17,\\n           1, -44, -79, -65,  20,  68,  61, -19,  69, -58, -98, -26, -84,\\n         -81, -38,  60,   9, -90]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008741019992157817, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b6c71162449a4127b1b58f7b58924307", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
