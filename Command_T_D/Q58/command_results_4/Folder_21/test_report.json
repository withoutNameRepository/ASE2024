{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_21_4.py::test_vertical_matrix", "location": ["tests58_21_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019941100617870688, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "0dafd6a9f2d74119a09335d6a0ba0402", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_21_4.py::test_matrix_of_one_integer", "location": ["tests58_21_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003084400013904087, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0dafd6a9f2d74119a09335d6a0ba0402", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_4.py::test_horizontal_matrix", "location": ["tests58_21_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002457000009599142, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0dafd6a9f2d74119a09335d6a0ba0402", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_21_4.py::test_matrix_of_having_139_integers", "location": ["tests58_21_4.py", 28, "test_matrix_of_having_139_integers"], "keywords": {"test_matrix_of_having_139_integers": 1, "__wrapped__": 1, "tests58_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027508699713507667, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0dafd6a9f2d74119a09335d6a0ba0402", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_21_4.py::test_horizontal_matrix", "location": ["tests58_21_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_21/generated_answer.py", "lineno": 7, "message": "TypeError: unhashable type: 'numpy.ndarray'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(139)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_21/tests58_21_4.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", "        matrix = np.array(matrix)", "        matrix_size = len(matrix)", "        matrix_width = len(matrix[0])", "        submatrix_size = matrix_size * (matrix_size - 1) // 2", ">       matrix_set = set(matrix)", "E       TypeError: unhashable type: 'numpy.ndarray'"], "reprfuncargs": {"args": [["matrix", "array([[ -9,  -1,  10,   2,  10,   3,  -4,   0,  -3,  10,  -7,  -7,  -8,\n          9,   2,   3,   5,  -3,   7, -10,   ...,  -5, -10,   9,   6,   0,  10,\n          7,   9,  -1,  10,  -8,  -1,   4,  -1,  -7,   1,   3,  -4,  -5,\n         -5]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_21/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(139)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_21/tests58_21_4.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_n_numbers(matrix):", "        matrix = np.array(matrix)", "        matrix_size = len(matrix)", "        matrix_width = len(matrix[0])", "        submatrix_size = matrix_size * (matrix_size - 1) // 2", ">       matrix_set = set(matrix)", "E       TypeError: unhashable type: 'numpy.ndarray'"], "reprfuncargs": {"args": [["matrix", "array([[ -9,  -1,  10,   2,  10,   3,  -4,   0,  -3,  10,  -7,  -7,  -8,\n          9,   2,   3,   5,  -3,   7, -10,   ...,  -5, -10,   9,   6,   0,  10,\n          7,   9,  -1,  10,  -8,  -1,   4,  -1,  -7,   1,   3,  -4,  -5,\n         -5]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_21/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_21/generated_answer.py", "lineno": 7, "message": "TypeError: unhashable type: 'numpy.ndarray'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035159300023224205, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0dafd6a9f2d74119a09335d6a0ba0402", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
