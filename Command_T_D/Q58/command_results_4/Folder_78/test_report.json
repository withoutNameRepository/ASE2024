{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_78_4.py::test_matrix_of_having_91_integers", "location": ["tests58_78_4.py", 28, "test_matrix_of_having_91_integers"], "keywords": {"test_matrix_of_having_91_integers": 1, "__wrapped__": 1, "tests58_78_4.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003433869933360256, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "61b28e4107674974b982372db8881a23", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_78_4.py::test_matrix_of_one_integer", "location": ["tests58_78_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_78_4.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023030100419418886, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "61b28e4107674974b982372db8881a23", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_78_4.py::test_horizontal_matrix", "location": ["tests58_78_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_78_4.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002303709989064373, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "61b28e4107674974b982372db8881a23", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_78_4.py::test_vertical_matrix", "location": ["tests58_78_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_78_4.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022241599799599499, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw4", "testrun_uid": "61b28e4107674974b982372db8881a23", "node": "<WorkerController gw4>"}
{"nodeid": "tests58_78_4.py::test_matrix_of_having_91_integers", "location": ["tests58_78_4.py", 28, "test_matrix_of_having_91_integers"], "keywords": {"test_matrix_of_having_91_integers": 1, "__wrapped__": 1, "tests58_78_4.py": 1, "Folder_78": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_78/tests58_78_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 54,  79,  65, -74, -38, -30,   7,  31,  78,  11,  72,  13, -35,\\n          55,  42, -78,  22, -41, -81,  60, -73, -30, -38,  90, -55,  58,\\n         -37,  85,  83,  23, -67, -97, -78,  61, -42,  88, -89, -86,  22,\\n         -85,  83,  64,  44,  36, -19,  25, -98,  36,  58,  49,  45, -82,\\n          14, -30,  70,  31,  -9,  90,  39,  96, -73,  88,  46,  91,   5,\\n         -41, -60, -38,  74, -85,   0,   4, -43,  55,  91,  -1,  87,   0,\\n          80, -89,  -3,  30,  24, -42,  82, 100, -16, -96,  46, -97, -44]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_91_integers():", "        if 91 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(91 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(91)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 54,  79,  65, -74, -38, -30,   7,  31,  78,  11,  72,  13, -35,\\n          55,  42, -78,  22, -41, -81,  60, -73, -30, -38,  90, -55,  58,\\n         -37,  85,  83,  23, -67, -97, -78,  61, -42,  88, -89, -86,  22,\\n         -85,  83,  64,  44,  36, -19,  25, -98,  36,  58,  49,  45, -82,\\n          14, -30,  70,  31,  -9,  90,  39,  96, -73,  88,  46,  91,   5,\\n         -41, -60, -38,  74, -85,   0,   4, -43,  55,  91,  -1,  87,   0,\\n          80, -89,  -3,  30,  24, -42,  82, 100, -16, -96,  46, -97, -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_78/tests58_78_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_91_integers():", "        if 91 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(91 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(91)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 54,  79,  65, -74, -38, -30,   7,  31,  78,  11,  72,  13, -35,\\n          55,  42, -78,  22, -41, -81,  60, -73, -30, -38,  90, -55,  58,\\n         -37,  85,  83,  23, -67, -97, -78,  61, -42,  88, -89, -86,  22,\\n         -85,  83,  64,  44,  36, -19,  25, -98,  36,  58,  49,  45, -82,\\n          14, -30,  70,  31,  -9,  90,  39,  96, -73,  88,  46,  91,   5,\\n         -41, -60, -38,  74, -85,   0,   4, -43,  55,  91,  -1,  87,   0,\\n          80, -89,  -3,  30,  24, -42,  82, 100, -16, -96,  46, -97, -44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_78/tests58_78_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_4/Folder_78/tests58_78_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 54,  79,  65, -74, -38, -30,   7,  31,  78,  11,  72,  13, -35,\\n          55,  42, -78,  22, -41, -81,  60, -73, -30, -38,  90, -55,  58,\\n         -37,  85,  83,  23, -67, -97, -78,  61, -42,  88, -89, -86,  22,\\n         -85,  83,  64,  44,  36, -19,  25, -98,  36,  58,  49,  45, -82,\\n          14, -30,  70,  31,  -9,  90,  39,  96, -73,  88,  46,  91,   5,\\n         -41, -60, -38,  74, -85,   0,   4, -43,  55,  91,  -1,  87,   0,\\n          80, -89,  -3,  30,  24, -42,  82, 100, -16, -96,  46, -97, -44]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011081499978899956, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "61b28e4107674974b982372db8881a23", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
