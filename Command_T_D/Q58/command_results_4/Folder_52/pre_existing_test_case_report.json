{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00031
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -4,    8,    5,  -32,   30,  -63,  -79,   95,  -68,   45,\\n            5,   10,  -92,   37,  -72,   19,  -54,  -43,   82,   22,\\n            3,  -75,  -88,   49,   24,  -31,  -97,   96,   98,   18,\\n          -88,  -43,  -26,  -74,  -55, -100,  -18,    1,  100,  -31,\\n           35,   43,    6,  -97,  -51,  100,   25,   42,  -84,  -42,\\n          -40,   26,  -30,  -41,   18,   65,   57,   -5,  -93,  -16,\\n          -11,  -48,   21,   72,  -51,   54,    5,   98,   11,  -86,\\n           88,   35,   36,   91,   43,   18,   22,  -69,  -47,   78,\\n          -60,  -18,   23,  -80,   -1,   47,  -17,   80,  -85,  -55,\\n           72,   45,  -37,  -61,  -68,   62,   50,   98,   46,   66,\\n          -13,  -95,   67,  -81,   97,   12,  -50,   82,  -44,    3,\\n          -96,  -57,    6,   -4,   70,  -45,  -17,   85,   31,  -69,\\n           33,   86,  -62,   92,  -80,  -55,   88,  -87,  -42,  -27,\\n           46,  -89,   -9,   74,   93,  -68,  -19,   87,   85,   76,\\n          -31,   86,   19,  -75,  -38,  -40,   33]]))",
    0.00108
  ]
}