{
  "parameter(s)": [
    139
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00049
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00048
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00026
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[100, -54, -49,  34,  93,  -8,  99, -50,  79, -17,   1,  45,  24,\\n         -65, -50, -34, -52, -93, -60, -53, -42, -27,   0,  80,  87, -52,\\n         -64, -73,  39, -52,  -6, -10,  -4, -25, -88,  -1,  49,   0,   4,\\n          53, -76,  74, -77, -29, -98, -78, -41,   6, -53,  35,   9,  96,\\n          74, -71, -27, -75,  13,  42, -55, -33, -62,  56, -44, -25, -85,\\n         -38,  49,  19,  67,  -3, -66, -18,  25, -88, -15, -76, -51, -15,\\n          94,  51, -75,  99,  91,  55,  84, -99,   8,  -5,  56,  16, -48,\\n         -20,  -5, -19,  -4,  39, -36, -64,  53,  40,  94, -85,  93,  69,\\n          51,  -3, -15,  49, -96,  88, -86, -77, -83, -45,  74, -95, -57,\\n          56,  20,  -6, -93,  65,  -3,  93, -38,   6,  94,  11,  96,   5,\\n         -19,   2, -56,  73, -17, -90, -15, -25, -73]]))",
    0.00858
  ]
}