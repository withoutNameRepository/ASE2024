{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00031
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00024
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -72,  -46,  -84,  100,   49,   44,   85,  -91,  -36,   99,\\n          -55,  100,  -74,    2,   85,  -41,  -94,   66,  -53,  -26,\\n          -34,   70,  -49,   69,    9,   21, -100,  -29,   40,   83,\\n          -34,  -26,   49,   98,  -76,   72,    2,   13,  -59,   19,\\n           25,  -73,  -43,   76,   59,   67,   97,   -9,   73,   42,\\n          -32,   71,   47,   62,  -97,  -10,  -13,   63,  -26,  -72,\\n           40,  -55,  -29,   85,   42,    5,  -99,   95,   -5,  -29,\\n            2,  -84,  -21,  -80,   65,   21,  -91,   21,   96,  -90,\\n          -22,   47,   54,  100,   -9,   48,  -72,   35,  -41,  -31,\\n          -43,   67,   60,   93,   -4,   32,  -59,   33,   14,   22,\\n           82,   18,  -40,   77,   -7,   22,  -87,   88,  -24,   70,\\n          -24,   63,   18,  -55,   86,   45,  -61,  -38,  -23,   -9,\\n          -93,  -51,   43,    1,   12,   90,  -72,  -35,   60,  -69,\\n          -52,  -91,  -43,    6,  -17,   22,   62,   29,  -58,   86,\\n          -83,   42,   28,    3,   70,  -26,   63,   -6,   27,  -85,\\n           64,   -5,   55,  -93,   73,  -72,   20,   55,  -91]]))",
    0.00126
  ]
}