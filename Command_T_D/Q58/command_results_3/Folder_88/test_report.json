{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests58_88_3.py::test_matrix_of_one_integer", "location": ["tests58_88_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026906499988399446, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f8a5da5cc9ee477ba308f65462d6ec81", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_88_3.py::test_vertical_matrix", "location": ["tests58_88_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025560899666743353, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "f8a5da5cc9ee477ba308f65462d6ec81", "node": "<WorkerController gw3>"}
{"nodeid": "tests58_88_3.py::test_matrix_of_having_67_integers", "location": ["tests58_88_3.py", 28, "test_matrix_of_having_67_integers"], "keywords": {"test_matrix_of_having_67_integers": 1, "__wrapped__": 1, "tests58_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002713490030146204, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f8a5da5cc9ee477ba308f65462d6ec81", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_88_3.py::test_horizontal_matrix", "location": ["tests58_88_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00034048200177494437, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f8a5da5cc9ee477ba308f65462d6ec81", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_88_3.py::test_matrix_of_having_67_integers", "location": ["tests58_88_3.py", 28, "test_matrix_of_having_67_integers"], "keywords": {"test_matrix_of_having_67_integers": 1, "__wrapped__": 1, "tests58_88_3.py": 1, "Folder_88": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q58/command_results_3/Folder_88/tests58_88_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 38,  38, -81,  88, -29, -34,  88,  61,  -5, -92, -22,   6,  98,\\n          96,  76, -19, -11,  83,  58, -92,   6,  40,   2,  16,  36, -22,\\n         -74, -99, -74,  80,  96,  83,  16, -92, -64,  74,  81,  12, -39,\\n          63,  40, -31, -55, -83, -80,  81, -74, -65, -76, -72,  79,  77,\\n          84, -83,  31, -29,  -3,   2, -10,  55, -53,  93,  46,  46,  95,\\n           8, -29]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_67_integers():", "        if 67 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(67 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(67)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 38,  38, -81,  88, -29, -34,  88,  61,  -5, -92, -22,   6,  98,\\n          96,  76, -19, -11,  83,  58, -92,   6,  40,   2,  16,  36, -22,\\n         -74, -99, -74,  80,  96,  83,  16, -92, -64,  74,  81,  12, -39,\\n          63,  40, -31, -55, -83, -80,  81, -74, -65, -76, -72,  79,  77,\\n          84, -83,  31, -29,  -3,   2, -10,  55, -53,  93,  46,  46,  95,\\n           8, -29]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_88/tests58_88_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_67_integers():", "        if 67 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(67 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(67)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 38,  38, -81,  88, -29, -34,  88,  61,  -5, -92, -22,   6,  98,\\n          96,  76, -19, -11,  83,  58, -92,   6,  40,   2,  16,  36, -22,\\n         -74, -99, -74,  80,  96,  83,  16, -92, -64,  74,  81,  12, -39,\\n          63,  40, -31, -55, -83, -80,  81, -74, -65, -76, -72,  79,  77,\\n          84, -83,  31, -29,  -3,   2, -10,  55, -53,  93,  46,  46,  95,\\n           8, -29]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_88/tests58_88_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q58/command_results_3/Folder_88/tests58_88_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 38,  38, -81,  88, -29, -34,  88,  61,  -5, -92, -22,   6,  98,\\n          96,  76, -19, -11,  83,  58, -92,   6,  40,   2,  16,  36, -22,\\n         -74, -99, -74,  80,  96,  83,  16, -92, -64,  74,  81,  12, -39,\\n          63,  40, -31, -55, -83, -80,  81, -74, -65, -76, -72,  79,  77,\\n          84, -83,  31, -29,  -3,   2, -10,  55, -53,  93,  46,  46,  95,\\n           8, -29]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008641029999125749, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f8a5da5cc9ee477ba308f65462d6ec81", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
