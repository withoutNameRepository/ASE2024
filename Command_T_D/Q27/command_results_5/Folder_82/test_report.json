{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_82_5.py::test_presence_of_inserted_element_at_index_84", "location": ["tests27_82_5.py", 20, "test_presence_of_inserted_element_at_index_84"], "keywords": {"test_presence_of_inserted_element_at_index_84": 1, "tests27_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015878200065344572, "start": 1701648563.3823566, "stop": 1701648563.3825161, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "688c1ddf2d574824aae2efe0988a2b85", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_82_5.py::test_presence_of_inserted_element", "location": ["tests27_82_5.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024779397062957287, "start": 1701648563.3825524, "stop": 1701648563.3828013, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "688c1ddf2d574824aae2efe0988a2b85", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_82_5.py::test_presence_of_inserted_element_at_index_84", "location": ["tests27_82_5.py", 20, "test_presence_of_inserted_element_at_index_84"], "keywords": {"test_presence_of_inserted_element_at_index_84": 1, "tests27_82_5.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_5/Folder_82/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_84():", "        initial_list = [i for i in range((84 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_82/tests27_82_5.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", "        ins = (771.92,)*1", ">       bisect.insort_left(lst, ins)", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["lst", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_82/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_84():", "        initial_list = [i for i in range((84 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_82/tests27_82_5.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", "        ins = (771.92,)*1", ">       bisect.insort_left(lst, ins)", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["lst", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_82/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_5/Folder_82/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001848780084401369, "start": 1701648563.3827584, "stop": 1701648563.382944, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "688c1ddf2d574824aae2efe0988a2b85", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
