{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_43_5.py::test_presence_of_inserted_element_at_index_29", "location": ["tests27_43_5.py", 20, "test_presence_of_inserted_element_at_index_29"], "keywords": {"test_presence_of_inserted_element_at_index_29": 1, "tests27_43_5.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015263096429407597, "start": 1701648503.639037, "stop": 1701648503.6391902, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c8728675778e484a953b0ab8a14d44cd", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_43_5.py::test_presence_of_inserted_element", "location": ["tests27_43_5.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_43_5.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001632829662412405, "start": 1701648503.639077, "stop": 1701648503.639241, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c8728675778e484a953b0ab8a14d44cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_43_5.py::test_presence_of_inserted_element", "location": ["tests27_43_5.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_43_5.py": 1, "Folder_43": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_5/Folder_43/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'set' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((29 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_43/tests27_43_5.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_left(nums, 28)] + [28, 53] + nums[bisect.bisect_left(nums, 28):]", "E       TypeError: '<' not supported between instances of 'set' and 'int'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_43/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((29 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_43/tests27_43_5.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_left(nums, 28)] + [28, 53] + nums[bisect.bisect_left(nums, 28):]", "E       TypeError: '<' not supported between instances of 'set' and 'int'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_5/Folder_43/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_5/Folder_43/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'set' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000151375075802207, "start": 1701648503.6395106, "stop": 1701648503.6396627, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c8728675778e484a953b0ab8a14d44cd", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
