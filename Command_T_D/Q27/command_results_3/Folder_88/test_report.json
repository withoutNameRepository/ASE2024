{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_88_3.py::test_presence_of_inserted_element_at_index_91", "location": ["tests27_88_3.py", 20, "test_presence_of_inserted_element_at_index_91"], "keywords": {"test_presence_of_inserted_element_at_index_91": 1, "tests27_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001534600742161274, "start": 1701648316.767796, "stop": 1701648316.76795, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1e0d90c1d0ff48199e6512fc0ca93d19", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_88_3.py::test_presence_of_inserted_element", "location": ["tests27_88_3.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_88_3.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001498139463365078, "start": 1701648316.767801, "stop": 1701648316.767952, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1e0d90c1d0ff48199e6512fc0ca93d19", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_88_3.py::test_presence_of_inserted_element_at_index_91", "location": ["tests27_88_3.py", 20, "test_presence_of_inserted_element_at_index_91"], "keywords": {"test_presence_of_inserted_element_at_index_91": 1, "tests27_88_3.py": 1, "Folder_88": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_3/Folder_88/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'list' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_91():", "        initial_list = [i for i in range((91 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_88/tests27_88_3.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums, [46, 13])] + [91] + nums[bisect.bisect_right(nums, [46, 13]):] + nums[bisect.bisect_right(nums, [46, 13]):]", "E       TypeError: '<' not supported between instances of 'list' and 'int'"], "reprfuncargs": {"args": [["nums", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_88/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_91():", "        initial_list = [i for i in range((91 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_88/tests27_88_3.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums, [46, 13])] + [91] + nums[bisect.bisect_right(nums, [46, 13]):] + nums[bisect.bisect_right(nums, [46, 13]):]", "E       TypeError: '<' not supported between instances of 'list' and 'int'"], "reprfuncargs": {"args": [["nums", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_88/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_3/Folder_88/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'list' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014851999003440142, "start": 1701648316.768171, "stop": 1701648316.7683203, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "1e0d90c1d0ff48199e6512fc0ca93d19", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
