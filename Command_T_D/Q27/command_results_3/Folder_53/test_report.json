{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_53_3.py::test_presence_of_inserted_element_at_index_92", "location": ["tests27_53_3.py", 20, "test_presence_of_inserted_element_at_index_92"], "keywords": {"test_presence_of_inserted_element_at_index_92": 1, "tests27_53_3.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020673393737524748, "start": 1701648276.2744756, "stop": 1701648276.2746835, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e8edcd5405f543b5a1881f3594955c77", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_53_3.py::test_presence_of_inserted_element", "location": ["tests27_53_3.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_53_3.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018648302648216486, "start": 1701648276.2745497, "stop": 1701648276.2747371, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e8edcd5405f543b5a1881f3594955c77", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_53_3.py::test_presence_of_inserted_element", "location": ["tests27_53_3.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_53_3.py": 1, "Folder_53": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_3/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'set' and 'float'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((92 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_53/tests27_53_3.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(num_list):", ">       idx = bisect.bisect_left(num_list, 709.87)", "E       TypeError: '<' not supported between instances of 'set' and 'float'"], "reprfuncargs": {"args": [["num_list", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((92 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_53/tests27_53_3.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(num_list):", ">       idx = bisect.bisect_left(num_list, 709.87)", "E       TypeError: '<' not supported between instances of 'set' and 'float'"], "reprfuncargs": {"args": [["num_list", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_3/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_3/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'set' and 'float'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022759998682886362, "start": 1701648276.2750478, "stop": 1701648276.275276, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e8edcd5405f543b5a1881f3594955c77", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
