{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_35_2.py::test_presence_of_inserted_element_at_index_100", "location": ["tests27_35_2.py", 20, "test_presence_of_inserted_element_at_index_100"], "keywords": {"test_presence_of_inserted_element_at_index_100": 1, "tests27_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011532509233802557, "start": 1701648163.2303364, "stop": 1701648163.2304523, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c5a072dbba6f4e6abdfec3e66e1b759d", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_35_2.py::test_presence_of_inserted_element", "location": ["tests27_35_2.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_35_2.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001427170354872942, "start": 1701648163.2304318, "stop": 1701648163.230575, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5a072dbba6f4e6abdfec3e66e1b759d", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_35_2.py::test_presence_of_inserted_element", "location": ["tests27_35_2.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_35_2.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_2/Folder_35/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'list' and 'set'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((100 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_35/tests27_35_2.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums, [876, 203])] + [876, 203] + nums[bisect.bisect_right(nums, [876, 203]):]", "E       TypeError: '<' not supported between instances of 'list' and 'set'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_35/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((100 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_35/tests27_35_2.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums, [876, 203])] + [876, 203] + nums[bisect.bisect_right(nums, [876, 203]):]", "E       TypeError: '<' not supported between instances of 'list' and 'set'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_2/Folder_35/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_2/Folder_35/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'list' and 'set'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014198897406458855, "start": 1701648163.2307832, "stop": 1701648163.2309258, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5a072dbba6f4e6abdfec3e66e1b759d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
