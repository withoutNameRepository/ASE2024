{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_86_1.py::test_presence_of_inserted_element_at_index_990", "location": ["tests27_86_1.py", 20, "test_presence_of_inserted_element_at_index_990"], "keywords": {"test_presence_of_inserted_element_at_index_990": 1, "tests27_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032988598104566336, "start": 1701648126.7596812, "stop": 1701648126.7600124, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "99c492c7d46c46b394e6d0e7f0419f4f", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_86_1.py::test_presence_of_inserted_element", "location": ["tests27_86_1.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_86_1.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00031850708182901144, "start": 1701648126.7598293, "stop": 1701648126.7601497, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "99c492c7d46c46b394e6d0e7f0419f4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_86_1.py::test_presence_of_inserted_element", "location": ["tests27_86_1.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_86_1.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_1/Folder_86/generated_answer.py", "lineno": 3, "message": "TypeError: slice indices must be integers or have an __index__ method"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((990 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_1/Folder_86/tests27_86_1.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", ">       lst.insert(lst.index(905, lst[990])+1, 742)", "E       TypeError: slice indices must be integers or have an __index__ method"], "reprfuncargs": {"args": [["lst", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_1/Folder_86/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((990 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_1/Folder_86/tests27_86_1.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", ">       lst.insert(lst.index(905, lst[990])+1, 742)", "E       TypeError: slice indices must be integers or have an __index__ method"], "reprfuncargs": {"args": [["lst", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_1/Folder_86/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_1/Folder_86/generated_answer.py", "lineno": 3, "message": "TypeError: slice indices must be integers or have an __index__ method"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006881300359964371, "start": 1701648126.7605944, "stop": 1701648126.761284, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "99c492c7d46c46b394e6d0e7f0419f4f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
