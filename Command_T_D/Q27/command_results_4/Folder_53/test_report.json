{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_53_4.py::test_presence_of_inserted_element_at_index_92", "location": ["tests27_53_4.py", 20, "test_presence_of_inserted_element_at_index_92"], "keywords": {"test_presence_of_inserted_element_at_index_92": 1, "tests27_53_4.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013809592928737402, "start": 1701648393.2444072, "stop": 1701648393.244546, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "24f0da86e36748b0bd06c68215e3d02b", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_53_4.py::test_presence_of_inserted_element", "location": ["tests27_53_4.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_53_4.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015924498438835144, "start": 1701648393.2446961, "stop": 1701648393.2448564, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "24f0da86e36748b0bd06c68215e3d02b", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_53_4.py::test_presence_of_inserted_element_at_index_92", "location": ["tests27_53_4.py", 20, "test_presence_of_inserted_element_at_index_92"], "keywords": {"test_presence_of_inserted_element_at_index_92": 1, "tests27_53_4.py": 1, "Folder_53": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_4/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_92():", "        initial_list = [i for i in range((92 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_53/tests27_53_4.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", ">       ins_idx = bisect.bisect_left(lst, (709.87,))", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["lst", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_92():", "        initial_list = [i for i in range((92 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_53/tests27_53_4.py", "lineno": 23, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(lst):", ">       ins_idx = bisect.bisect_left(lst, (709.87,))", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["lst", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_4/Folder_53/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012265401892364025, "start": 1701648393.2447422, "stop": 1701648393.244865, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "24f0da86e36748b0bd06c68215e3d02b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
