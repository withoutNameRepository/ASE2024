{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests27_94_4.py::test_presence_of_inserted_element_at_index_74", "location": ["tests27_94_4.py", 20, "test_presence_of_inserted_element_at_index_74"], "keywords": {"test_presence_of_inserted_element_at_index_74": 1, "tests27_94_4.py": 1, "Folder_94": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002016749931499362, "start": 1701648444.0895083, "stop": 1701648444.0897105, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "054cf2cd7b0141c5a6d1616623c58073", "node": "<WorkerController gw1>"}
{"nodeid": "tests27_94_4.py::test_presence_of_inserted_element", "location": ["tests27_94_4.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_94_4.py": 1, "Folder_94": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021773099433630705, "start": 1701648444.089663, "stop": 1701648444.089882, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "054cf2cd7b0141c5a6d1616623c58073", "node": "<WorkerController gw0>"}
{"nodeid": "tests27_94_4.py::test_presence_of_inserted_element", "location": ["tests27_94_4.py", 4, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests27_94_4.py": 1, "Folder_94": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q27/command_results_4/Folder_94/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'float' and 'set'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((74 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_94/tests27_94_4.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums[:74]+[nums[74]]+nums[74+1:], 517.71)]+nums[74+2:]", "E       TypeError: '<' not supported between instances of 'float' and 'set'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_94/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element():", "        initial_list = [set() for i in range((74 + 1) * 2)]", ">       returned_list = insert_after_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_94/tests27_94_4.py", "lineno": 7, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_after_index(nums):", ">       return nums[:bisect.bisect_right(nums[:74]+[nums[74]]+nums[74+1:], 517.71)]+nums[74+2:]", "E       TypeError: '<' not supported between instances of 'float' and 'set'"], "reprfuncargs": {"args": [["nums", "[set(), set(), set(), set(), set(), set(), ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q27/command_results_4/Folder_94/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q27/command_results_4/Folder_94/generated_answer.py", "lineno": 5, "message": "TypeError: '<' not supported between instances of 'float' and 'set'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002301810309290886, "start": 1701648444.0902262, "stop": 1701648444.0904574, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "054cf2cd7b0141c5a6d1616623c58073", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
