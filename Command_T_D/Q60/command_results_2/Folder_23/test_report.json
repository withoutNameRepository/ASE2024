{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_23_2.py::test_if_result_is_less_than_equal_to_77", "location": ["tests60_23_2.py", 43, "test_if_result_is_less_than_equal_to_77"], "keywords": {"test_if_result_is_less_than_equal_to_77": 1, "tests60_23_2.py": 1, "Folder_23": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.824100950732827e-05, "start": 1701018383.7354693, "stop": 1701018383.7355578, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "94c60f65bc434f6890e419eb8646f100", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_23_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_23_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_23_2.py": 1, "Folder_23": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012094801058992743, "start": 1701018383.735436, "stop": 1701018383.7355573, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "94c60f65bc434f6890e419eb8646f100", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_23_2.py::test_if_result_is_less_than_equal_to_77", "location": ["tests60_23_2.py", 43, "test_if_result_is_less_than_equal_to_77"], "keywords": {"test_if_result_is_less_than_equal_to_77": 1, "tests60_23_2.py": 1, "Folder_23": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_23/generated_answer.py", "lineno": 3, "message": "TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_77():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(77 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_23/tests60_23_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(list(range(2, x // 2 + 1)), key=lambda x: str(x))", "E       TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(135, 496, 483, 912, 93, 950, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_23/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_77():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(77 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_23/tests60_23_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(list(range(2, x // 2 + 1)), key=lambda x: str(x))", "E       TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(135, 496, 483, 912, 93, 950, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_23/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_23/generated_answer.py", "lineno": 3, "message": "TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016387799405492842, "start": 1701018383.7357347, "stop": 1701018383.735899, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "94c60f65bc434f6890e419eb8646f100", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
