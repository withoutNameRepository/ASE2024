{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_24_2.py::test_if_result_is_less_than_equal_to_65", "location": ["tests60_24_2.py", 43, "test_if_result_is_less_than_equal_to_65"], "keywords": {"test_if_result_is_less_than_equal_to_65": 1, "tests60_24_2.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010149599984288216, "start": 1701018384.3095238, "stop": 1701018384.3096256, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f354252b8ad24ebd80d3fe04d85e5ba1", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_24_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_24_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_24_2.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001630930055398494, "start": 1701018384.309505, "stop": 1701018384.3096688, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f354252b8ad24ebd80d3fe04d85e5ba1", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_24_2.py::test_if_result_is_less_than_equal_to_65", "location": ["tests60_24_2.py", 43, "test_if_result_is_less_than_equal_to_65"], "keywords": {"test_if_result_is_less_than_equal_to_65": 1, "tests60_24_2.py": 1, "Folder_24": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_24/generated_answer.py", "lineno": 5, "message": "TypeError: 'int' object is not iterable"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_65():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(65 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_24/tests60_24_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(range_):", ">       result = list(itertools.filterfalse(lambda x: (x > 1) and (x < range_[0]) and (str(x) in str(range_[0])), range_[0]))", "E       TypeError: 'int' object is not iterable"], "reprfuncargs": {"args": [["range_", "(358, 207, 457, 181, 230, 971, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_24/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_65():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(65 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_24/tests60_24_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(range_):", ">       result = list(itertools.filterfalse(lambda x: (x > 1) and (x < range_[0]) and (str(x) in str(range_[0])), range_[0]))", "E       TypeError: 'int' object is not iterable"], "reprfuncargs": {"args": [["range_", "(358, 207, 457, 181, 230, 971, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_24/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_24/generated_answer.py", "lineno": 5, "message": "TypeError: 'int' object is not iterable"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001410400145687163, "start": 1701018384.3098059, "stop": 1701018384.3099475, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f354252b8ad24ebd80d3fe04d85e5ba1", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
