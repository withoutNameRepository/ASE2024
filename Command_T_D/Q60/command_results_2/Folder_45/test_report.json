{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_45_2.py::test_if_result_is_less_than_equal_to_61", "location": ["tests60_45_2.py", 43, "test_if_result_is_less_than_equal_to_61"], "keywords": {"test_if_result_is_less_than_equal_to_61": 1, "tests60_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.614200098440051e-05, "start": 1701018403.4737957, "stop": 1701018403.4738922, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3c78f1f8447c49a19c66e74e710d64a0", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_45_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_45_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_45_2.py": 1, "Folder_45": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012176501331850886, "start": 1701018403.4739976, "stop": 1701018403.47412, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3c78f1f8447c49a19c66e74e710d64a0", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_45_2.py::test_if_result_is_less_than_equal_to_61", "location": ["tests60_45_2.py", 43, "test_if_result_is_less_than_equal_to_61"], "keywords": {"test_if_result_is_less_than_equal_to_61": 1, "tests60_45_2.py": 1, "Folder_45": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'tuple' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_61():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(61 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_45/tests60_45_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        #sys.setrecursionlimit(10**6)", ">       if x < 2:", "E       TypeError: '<' not supported between instances of 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(449, 193, 85, 607, 823, 583, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_61():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(61 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_45/tests60_45_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        #sys.setrecursionlimit(10**6)", ">       if x < 2:", "E       TypeError: '<' not supported between instances of 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(449, 193, 85, 607, 823, 583, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_45/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'tuple' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001297999988310039, "start": 1701018403.474057, "stop": 1701018403.4741874, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3c78f1f8447c49a19c66e74e710d64a0", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
