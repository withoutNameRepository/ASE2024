{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_81_2.py::test_if_result_is_less_than_equal_to_98", "location": ["tests60_81_2.py", 43, "test_if_result_is_less_than_equal_to_98"], "keywords": {"test_if_result_is_less_than_equal_to_98": 1, "tests60_81_2.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011175099643878639, "start": 1701018580.7892473, "stop": 1701018580.7893596, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fdd5b31ef08c4d63ac015c3487e20aa6", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_81_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_81_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_81_2.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000134292000439018, "start": 1701018580.7892792, "stop": 1701018580.7894142, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fdd5b31ef08c4d63ac015c3487e20aa6", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_81_2.py::test_if_result_is_less_than_equal_to_98", "location": ["tests60_81_2.py", 43, "test_if_result_is_less_than_equal_to_98"], "keywords": {"test_if_result_is_less_than_equal_to_98": 1, "tests60_81_2.py": 1, "Folder_81": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_81/generated_answer.py", "lineno": 8, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_98():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(98 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_81/tests60_81_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", "        primes = []", ">       for num in range(2, n):", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["n", "(641, 903, 599, 693, 1000, 287, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_81/generated_answer.py", "lineno": 8, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_98():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(98 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_81/tests60_81_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", "        primes = []", ">       for num in range(2, n):", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["n", "(641, 903, 599, 693, 1000, 287, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_81/generated_answer.py", "lineno": 8, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_81/generated_answer.py", "lineno": 8, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015741202514618635, "start": 1701018580.7895458, "stop": 1701018580.7897036, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fdd5b31ef08c4d63ac015c3487e20aa6", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
