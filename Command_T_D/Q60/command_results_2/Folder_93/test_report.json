{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_93_2.py::test_if_result_is_less_than_equal_to_11", "location": ["tests60_93_2.py", 43, "test_if_result_is_less_than_equal_to_11"], "keywords": {"test_if_result_is_less_than_equal_to_11": 1, "tests60_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.850598871707916e-05, "start": 1701018589.2804208, "stop": 1701018589.28052, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "57ea67576670461295b261fcc9031074", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_93_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_93_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015116200665943325, "start": 1701018589.2805364, "stop": 1701018589.280688, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "57ea67576670461295b261fcc9031074", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_93_2.py::test_if_result_is_less_than_equal_to_11", "location": ["tests60_93_2.py", 43, "test_if_result_is_less_than_equal_to_11"], "keywords": {"test_if_result_is_less_than_equal_to_11": 1, "tests60_93_2.py": 1, "Folder_93": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_93/generated_answer.py", "lineno": 4, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_11():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(11 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_93/tests60_93_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        res = []", ">       for n in range(2, x + 1):", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(12, 84, 955, 389, 611, 124, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_93/generated_answer.py", "lineno": 4, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_11():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(11 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_93/tests60_93_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        res = []", ">       for n in range(2, x + 1):", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(12, 84, 955, 389, 611, 124, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_2/Folder_93/generated_answer.py", "lineno": 4, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_2/Folder_93/generated_answer.py", "lineno": 4, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013037800090387464, "start": 1701018589.2806983, "stop": 1701018589.2808292, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "57ea67576670461295b261fcc9031074", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
