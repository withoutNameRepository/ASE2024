{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_70_3.py::test_if_result_is_less_than_equal_to_433", "location": ["tests60_70_3.py", 43, "test_if_result_is_less_than_equal_to_433"], "keywords": {"test_if_result_is_less_than_equal_to_433": 1, "tests60_70_3.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011513498611748219, "start": 1701018637.530498, "stop": 1701018637.5306137, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "82c9d318cbb547578b403e1c0405c636", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_70_3.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_70_3.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_70_3.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014399600331671536, "start": 1701018637.5305214, "stop": 1701018637.5306659, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82c9d318cbb547578b403e1c0405c636", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_70_3.py::test_if_result_is_less_than_equal_to_433", "location": ["tests60_70_3.py", 43, "test_if_result_is_less_than_equal_to_433"], "keywords": {"test_if_result_is_less_than_equal_to_433": 1, "tests60_70_3.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_70/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_433():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(433 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_70/tests60_70_3.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(filter(lambda n: n <= x and all(n % d == 0 or d == 1 for d in range(3, int(n ** .5) + 1, 2)), range(2, x + 1)), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(946, 196, 750, 844, 506, 717, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_70/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_433():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(433 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_70/tests60_70_3.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(filter(lambda n: n <= x and all(n % d == 0 or d == 1 for d in range(3, int(n ** .5) + 1, 2)), range(2, x + 1)), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(946, 196, 750, 844, 506, 717, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_70/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_70/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023191500804387033, "start": 1701018637.5307755, "stop": 1701018637.5310078, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "82c9d318cbb547578b403e1c0405c636", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
