{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_87_3.py::test_if_result_is_less_than_equal_to_39", "location": ["tests60_87_3.py", 43, "test_if_result_is_less_than_equal_to_39"], "keywords": {"test_if_result_is_less_than_equal_to_39": 1, "tests60_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011060401448048651, "start": 1701018646.5864685, "stop": 1701018646.5865796, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d831565660304abdbdd0f2f360603544", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_87_3.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_87_3.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001343199983239174, "start": 1701018646.5866177, "stop": 1701018646.5867527, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d831565660304abdbdd0f2f360603544", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_87_3.py::test_if_result_is_less_than_equal_to_39", "location": ["tests60_87_3.py", 43, "test_if_result_is_less_than_equal_to_39"], "keywords": {"test_if_result_is_less_than_equal_to_39": 1, "tests60_87_3.py": 1, "Folder_87": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_87/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_39():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(39 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_87/tests60_87_3.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(range(2, x + 1)), key=lambda x: str(x))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(693, 994, 583, 431, 997, 692, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_87/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_39():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(39 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_87/tests60_87_3.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(range(2, x + 1)), key=lambda x: str(x))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(693, 994, 583, 431, 997, 692, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_87/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_87/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013363000471144915, "start": 1701018646.5867672, "stop": 1701018646.5869012, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d831565660304abdbdd0f2f360603544", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
