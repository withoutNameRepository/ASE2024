{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_39_3.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_39_3.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_39_3.py": 1, "Folder_39": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012575200526043773, "start": 1701018621.479507, "stop": 1701018621.4796333, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4c7652c2c8ae4105a297680a8ae245e3", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_39_3.py::test_if_result_is_less_than_equal_to_30", "location": ["tests60_39_3.py", 43, "test_if_result_is_less_than_equal_to_30"], "keywords": {"test_if_result_is_less_than_equal_to_30": 1, "tests60_39_3.py": 1, "Folder_39": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001177400117740035, "start": 1701018621.4795501, "stop": 1701018621.4796684, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4c7652c2c8ae4105a297680a8ae245e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_39_3.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_39_3.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_39_3.py": 1, "Folder_39": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_39/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (30 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_39/tests60_39_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(str(z) for z in range(2, x + 1) if all(z % d == 0 or z % d == 9 for d in range(3, int(z ** .5) + 1, 2)) and z > 9), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(1, 1, 1, 1, 1, 1, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_39/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (30 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_39/tests60_39_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(str(z) for z in range(2, x + 1) if all(z % d == 0 or z % d == 9 for d in range(3, int(z ** .5) + 1, 2)) and z > 9), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(1, 1, 1, 1, 1, 1, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_3/Folder_39/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_3/Folder_39/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010338699212297797, "start": 1701018621.479807, "stop": 1701018621.4799109, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4c7652c2c8ae4105a297680a8ae245e3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
