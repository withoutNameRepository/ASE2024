{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_53_4.py::test_if_result_is_less_than_equal_to_86", "location": ["tests60_53_4.py", 43, "test_if_result_is_less_than_equal_to_86"], "keywords": {"test_if_result_is_less_than_equal_to_86": 1, "tests60_53_4.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014323697541840374, "start": 1701018877.8281155, "stop": 1701018877.8282592, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8bf7fb7f6cb74f96bb85c0b1f895a0d4", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_53_4.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_53_4.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_53_4.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019722801516763866, "start": 1701018877.8280783, "stop": 1701018877.8282764, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8bf7fb7f6cb74f96bb85c0b1f895a0d4", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_53_4.py::test_if_result_is_less_than_equal_to_86", "location": ["tests60_53_4.py", 43, "test_if_result_is_less_than_equal_to_86"], "keywords": {"test_if_result_is_less_than_equal_to_86": 1, "tests60_53_4.py": 1, "Folder_53": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_4/Folder_53/generated_answer.py", "lineno": 10, "message": "TypeError: 'str' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_86():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(86 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_53/tests60_53_4.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(tup):", "        start, end = map(str, (tup[86], tup[0]))", ">       s = set(str(p) for p in range(2, end) if all(int(d) for d in str(p) if d!=\"0\"))", "E       TypeError: 'str' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["tup", "(157, 333, 594, 137, 237, 395, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_53/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_86():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(86 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_53/tests60_53_4.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(tup):", "        start, end = map(str, (tup[86], tup[0]))", ">       s = set(str(p) for p in range(2, end) if all(int(d) for d in str(p) if d!=\"0\"))", "E       TypeError: 'str' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["tup", "(157, 333, 594, 137, 237, 395, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_53/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_4/Folder_53/generated_answer.py", "lineno": 10, "message": "TypeError: 'str' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001792539842426777, "start": 1701018877.8284872, "stop": 1701018877.828667, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8bf7fb7f6cb74f96bb85c0b1f895a0d4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
