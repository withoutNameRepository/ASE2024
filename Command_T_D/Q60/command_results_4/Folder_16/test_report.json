{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_16_4.py::test_if_result_is_less_than_equal_to_792", "location": ["tests60_16_4.py", 43, "test_if_result_is_less_than_equal_to_792"], "keywords": {"test_if_result_is_less_than_equal_to_792": 1, "tests60_16_4.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001357309811282903, "start": 1701018831.697053, "stop": 1701018831.6971893, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3b0c6fb9a9604306af2610b62883db3a", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_16_4.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_16_4.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_16_4.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014937299420125782, "start": 1701018831.6970232, "stop": 1701018831.6971736, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3b0c6fb9a9604306af2610b62883db3a", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_16_4.py::test_if_result_is_less_than_equal_to_792", "location": ["tests60_16_4.py", 43, "test_if_result_is_less_than_equal_to_792"], "keywords": {"test_if_result_is_less_than_equal_to_792": 1, "tests60_16_4.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_4/Folder_16/generated_answer.py", "lineno": 5, "message": "TypeError: filter expected 2 arguments, got 3"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_792():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(792 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_16/tests60_16_4.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(lim):", ">       return sorted(list(filter(left_right_truncatable_prime, range(2, lim[0] + 1), str(lim[0]))))", "E       TypeError: filter expected 2 arguments, got 3"], "reprfuncargs": {"args": [["lim", "(651, 494, 709, 119, 565, 356, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_16/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_792():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(792 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_16/tests60_16_4.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(lim):", ">       return sorted(list(filter(left_right_truncatable_prime, range(2, lim[0] + 1), str(lim[0]))))", "E       TypeError: filter expected 2 arguments, got 3"], "reprfuncargs": {"args": [["lim", "(651, 494, 709, 119, 565, 356, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_4/Folder_16/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_4/Folder_16/generated_answer.py", "lineno": 5, "message": "TypeError: filter expected 2 arguments, got 3"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004673280054703355, "start": 1701018831.6974053, "stop": 1701018831.697873, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3b0c6fb9a9604306af2610b62883db3a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
