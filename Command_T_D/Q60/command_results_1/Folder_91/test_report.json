{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_91_1.py::test_if_result_is_less_than_equal_to_0", "location": ["tests60_91_1.py", 43, "test_if_result_is_less_than_equal_to_0"], "keywords": {"test_if_result_is_less_than_equal_to_0": 1, "tests60_91_1.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.91240085568279e-05, "start": 1701018365.8289864, "stop": 1701018365.829086, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "a6a15e01c8a14d3e8f99a8ec26d7bf8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_91_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_91_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_91_1.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010372899123467505, "start": 1701018365.8288815, "stop": 1701018365.8289855, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a6a15e01c8a14d3e8f99a8ec26d7bf8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_91_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_91_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_91_1.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_91/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (0 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_91/tests60_91_1.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(filter(left_right_truncatable_prime, range(2, n + 1))), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["n", "(1,)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_91/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (0 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_91/tests60_91_1.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(filter(left_right_truncatable_prime, range(2, n + 1))), reverse=True)", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["n", "(1,)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_91/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_91/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.49509849306196e-05, "start": 1701018365.829154, "stop": 1701018365.8292496, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a6a15e01c8a14d3e8f99a8ec26d7bf8f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
