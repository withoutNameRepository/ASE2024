{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_65_1.py::test_if_result_is_less_than_equal_to_32", "location": ["tests60_65_1.py", 43, "test_if_result_is_less_than_equal_to_32"], "keywords": {"test_if_result_is_less_than_equal_to_32": 1, "tests60_65_1.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.549999958835542e-05, "start": 1701018340.2856414, "stop": 1701018340.2857373, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fca057b21f4d4b288463224b50972d2c", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_65_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_65_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_65_1.py": 1, "Folder_65": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001783770276233554, "start": 1701018340.2858121, "stop": 1701018340.2859914, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fca057b21f4d4b288463224b50972d2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_65_1.py::test_if_result_is_less_than_equal_to_32", "location": ["tests60_65_1.py", 43, "test_if_result_is_less_than_equal_to_32"], "keywords": {"test_if_result_is_less_than_equal_to_32": 1, "tests60_65_1.py": 1, "Folder_65": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_65/generated_answer.py", "lineno": 7, "message": "ValueError: too many values to unpack (expected 2)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_32():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(32 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_65/tests60_65_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(test_list):", "        res = []", ">       for (left, right) in itertools.permutations(test_list):", "E       ValueError: too many values to unpack (expected 2)"], "reprfuncargs": {"args": [["test_list", "(772, 255, 977, 738, 821, 30, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_65/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_32():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(32 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_65/tests60_65_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(test_list):", "        res = []", ">       for (left, right) in itertools.permutations(test_list):", "E       ValueError: too many values to unpack (expected 2)"], "reprfuncargs": {"args": [["test_list", "(772, 255, 977, 738, 821, 30, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_65/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_65/generated_answer.py", "lineno": 7, "message": "ValueError: too many values to unpack (expected 2)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011250100214965641, "start": 1701018340.2858913, "stop": 1701018340.2860043, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fca057b21f4d4b288463224b50972d2c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
