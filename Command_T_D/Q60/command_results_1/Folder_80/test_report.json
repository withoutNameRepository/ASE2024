{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_80_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_80_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001731649972498417, "start": 1701018360.201894, "stop": 1701018360.2020679, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "380b625a646347b3ae4e0f2ad092b5c0", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_80_1.py::test_if_result_is_less_than_equal_to_14", "location": ["tests60_80_1.py", 43, "test_if_result_is_less_than_equal_to_14"], "keywords": {"test_if_result_is_less_than_equal_to_14": 1, "tests60_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013720401329919696, "start": 1701018360.201794, "stop": 1701018360.2019317, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "380b625a646347b3ae4e0f2ad092b5c0", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_80_1.py::test_if_result_is_less_than_equal_to_14", "location": ["tests60_80_1.py", 43, "test_if_result_is_less_than_equal_to_14"], "keywords": {"test_if_result_is_less_than_equal_to_14": 1, "tests60_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_80/generated_answer.py", "lineno": 3, "message": "ValueError: invalid literal for int() with base 10: ')'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_14():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(14 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_80/tests60_80_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(x for x in range(2, int(str(n)[-1]) + 1) if all(x % 10**i == 1 for i in range(1, int(str(x)))))", "E       ValueError: invalid literal for int() with base 10: ')'"], "reprfuncargs": {"args": [["n", "(49, 602, 581, 582, 467, 707, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_80/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_14():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(14 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_80/tests60_80_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(x for x in range(2, int(str(n)[-1]) + 1) if all(x % 10**i == 1 for i in range(1, int(str(x)))))", "E       ValueError: invalid literal for int() with base 10: ')'"], "reprfuncargs": {"args": [["n", "(49, 602, 581, 582, 467, 707, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_80/generated_answer.py", "lineno": 3, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_80/generated_answer.py", "lineno": 3, "message": "ValueError: invalid literal for int() with base 10: ')'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001509740250185132, "start": 1701018360.2021472, "stop": 1701018360.2022989, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "380b625a646347b3ae4e0f2ad092b5c0", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
