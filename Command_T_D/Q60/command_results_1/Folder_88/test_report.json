{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_88_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_88_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_88_1.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011303799692541361, "start": 1701018363.8362, "stop": 1701018363.836314, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "73068a1dee8749d6bb85081a4a1ff595", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_88_1.py::test_if_result_is_less_than_equal_to_93", "location": ["tests60_88_1.py", 43, "test_if_result_is_less_than_equal_to_93"], "keywords": {"test_if_result_is_less_than_equal_to_93": 1, "tests60_88_1.py": 1, "Folder_88": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010897900210693479, "start": 1701018363.8362832, "stop": 1701018363.8363924, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "73068a1dee8749d6bb85081a4a1ff595", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_88_1.py::test_if_result_is_less_than_equal_to_93", "location": ["tests60_88_1.py", 43, "test_if_result_is_less_than_equal_to_93"], "keywords": {"test_if_result_is_less_than_equal_to_93": 1, "tests60_88_1.py": 1, "Folder_88": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_88/generated_answer.py", "lineno": 3, "message": "TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_93():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(93 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_88/tests60_88_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(list(set(range(2, x // 2)) + range(x // 2, x - 1, 2) + [x]))", "E       TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(319, 558, 19, 200, 800, 472, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_88/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_93():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(93 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_88/tests60_88_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(list(set(range(2, x // 2)) + range(x // 2, x - 1, 2) + [x]))", "E       TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"], "reprfuncargs": {"args": [["x", "(319, 558, 19, 200, 800, 472, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_88/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_88/generated_answer.py", "lineno": 3, "message": "TypeError: unsupported operand type(s) for //: 'tuple' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015846500173211098, "start": 1701018363.8365796, "stop": 1701018363.8367386, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "73068a1dee8749d6bb85081a4a1ff595", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
