{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_76_1.py::test_if_result_is_less_than_equal_to_370", "location": ["tests60_76_1.py", 43, "test_if_result_is_less_than_equal_to_370"], "keywords": {"test_if_result_is_less_than_equal_to_370": 1, "tests60_76_1.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012327401782386005, "start": 1701018345.7526078, "stop": 1701018345.7527316, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "47339bab89304f5da246e2229c93de40", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_76_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_76_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_76_1.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013725299504585564, "start": 1701018345.7525973, "stop": 1701018345.7527351, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47339bab89304f5da246e2229c93de40", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_76_1.py::test_if_result_is_less_than_equal_to_370", "location": ["tests60_76_1.py", 43, "test_if_result_is_less_than_equal_to_370"], "keywords": {"test_if_result_is_less_than_equal_to_370": 1, "tests60_76_1.py": 1, "Folder_76": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_76/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_370():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(370 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_76/tests60_76_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(str(n).count(\"0\") == 2 and (n - 1) // 10 ** 4 + 1 for n in range(n + 1) if all(int(c) for c in str(n - 1)) and all(int(c) for c in str(n + 1))))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["n", "(505, 185, 785, 338, 636, 491, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_76/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_370():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(370 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_76/tests60_76_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(str(n).count(\"0\") == 2 and (n - 1) // 10 ** 4 + 1 for n in range(n + 1) if all(int(c) for c in str(n - 1)) and all(int(c) for c in str(n + 1))))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["n", "(505, 185, 785, 338, 636, 491, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_76/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_76/generated_answer.py", "lineno": 3, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002738849725574255, "start": 1701018345.7529342, "stop": 1701018345.7532084, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "47339bab89304f5da246e2229c93de40", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
