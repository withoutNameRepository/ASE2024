{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_85_1.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_85_1.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_85_1.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011399501818232238, "start": 1701018362.1545932, "stop": 1701018362.1547077, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7216979b7dad492eb51af114298d5b0f", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_85_1.py::test_if_result_is_less_than_equal_to_94", "location": ["tests60_85_1.py", 43, "test_if_result_is_less_than_equal_to_94"], "keywords": {"test_if_result_is_less_than_equal_to_94": 1, "tests60_85_1.py": 1, "Folder_85": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010546599514782429, "start": 1701018362.1546173, "stop": 1701018362.1547232, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7216979b7dad492eb51af114298d5b0f", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_85_1.py::test_if_result_is_less_than_equal_to_94", "location": ["tests60_85_1.py", 43, "test_if_result_is_less_than_equal_to_94"], "keywords": {"test_if_result_is_less_than_equal_to_94": 1, "tests60_85_1.py": 1, "Folder_85": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_85/generated_answer.py", "lineno": 3, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_94():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(94 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_85/tests60_85_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(range(2, x + 1)) for i in range(x) if i == int(str(i)[0] + str(i)[-1]))", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["x", "(323, 970, 539, 584, 536, 144, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_85/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_94():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(94 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_85/tests60_85_1.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", ">       return sorted(set(range(2, x + 1)) for i in range(x) if i == int(str(i)[0] + str(i)[-1]))", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["x", "(323, 970, 539, 584, 536, 144, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_1/Folder_85/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_1/Folder_85/generated_answer.py", "lineno": 3, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013816900900565088, "start": 1701018362.1548936, "stop": 1701018362.1550322, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7216979b7dad492eb51af114298d5b0f", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
