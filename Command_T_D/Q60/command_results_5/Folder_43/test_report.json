{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_43_5.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_43_5.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_43_5.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001489990099798888, "start": 1701019097.6715941, "stop": 1701019097.6717436, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0eb3fddb74c41bcaf6c953574c2b67a", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_43_5.py::test_if_result_is_less_than_equal_to_89", "location": ["tests60_43_5.py", 43, "test_if_result_is_less_than_equal_to_89"], "keywords": {"test_if_result_is_less_than_equal_to_89": 1, "tests60_43_5.py": 1, "Folder_43": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013959899661131203, "start": 1701019097.671589, "stop": 1701019097.6717286, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e0eb3fddb74c41bcaf6c953574c2b67a", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_43_5.py::test_if_result_is_less_than_equal_to_89", "location": ["tests60_43_5.py", 43, "test_if_result_is_less_than_equal_to_89"], "keywords": {"test_if_result_is_less_than_equal_to_89": 1, "tests60_43_5.py": 1, "Folder_43": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_43/generated_answer.py", "lineno": 8, "message": "ValueError: invalid literal for int() with base 10: '(4'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_89():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(89 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_43/tests60_43_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", "        res = []", "        for p in itertools.permutations(list(str(n)), 2):", "            tmp = p[0] + p[1]", ">           if int(tmp) <= n and tmp[0] == '2' and tmp[1] == '5' and tmp[2:] in str(n):", "E           ValueError: invalid literal for int() with base 10: '(4'"], "reprfuncargs": {"args": [["n", "(432, 605, 598, 733, 45, 21, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_43/generated_answer.py", "lineno": 8, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_89():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(89 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_43/tests60_43_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", "        res = []", "        for p in itertools.permutations(list(str(n)), 2):", "            tmp = p[0] + p[1]", ">           if int(tmp) <= n and tmp[0] == '2' and tmp[1] == '5' and tmp[2:] in str(n):", "E           ValueError: invalid literal for int() with base 10: '(4'"], "reprfuncargs": {"args": [["n", "(432, 605, 598, 733, 45, 21, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_43/generated_answer.py", "lineno": 8, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_43/generated_answer.py", "lineno": 8, "message": "ValueError: invalid literal for int() with base 10: '(4'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015349499881267548, "start": 1701019097.6719792, "stop": 1701019097.6721332, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e0eb3fddb74c41bcaf6c953574c2b67a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
