
import itertools

def all_left_right_truncatable_prime(n):
    #if not prime, no need to check if left-right-truncatable
    #is_left_right_truncatable = lambda x: x in left_right_truncatable
    #left_right_truncatable = set(itertools.permutations(str(x), 2))
    #l = [x for x in range(3, int(n ** .5) + 1, 2) if all(is_left_right_truncatable(x) for x in range(3, int(n ** .5) + 1, 2))
    #return sorted(l)
    #get_left_right_truncatable_prime = lambda x: x in left_right_truncatable
    #left_right_truncatable = set(itertools.permutations(str(x), 2))
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_right_truncatable)
    #return sorted(left_
