{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_3_5.py::test_if_result_is_less_than_equal_to_100", "location": ["tests60_3_5.py", 43, "test_if_result_is_less_than_equal_to_100"], "keywords": {"test_if_result_is_less_than_equal_to_100": 1, "tests60_3_5.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014942599227651954, "start": 1701018920.6135557, "stop": 1701018920.6137059, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5fd32ffaa8e340fa9144ae6621ed6e09", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_3_5.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_3_5.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_3_5.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001739530125632882, "start": 1701018920.6135905, "stop": 1701018920.6137655, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5fd32ffaa8e340fa9144ae6621ed6e09", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_3_5.py::test_if_result_is_less_than_equal_to_100", "location": ["tests60_3_5.py", 43, "test_if_result_is_less_than_equal_to_100"], "keywords": {"test_if_result_is_less_than_equal_to_100": 1, "tests60_3_5.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_3/generated_answer.py", "lineno": 7, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_100():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(100 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_3/tests60_3_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        def is_left_right_truncatable(p):", "            return bool(re.match('(.*[1-9][0-9]*)[1-9][0-9][0-9][0-9]*$', str(p)))", ">       return sorted(x for x in range(2, x+1) if all(x%d for d in range(3, int(str(x).count('0'))+1)) and all(is_left_right_truncatable(x) for x in range(3, int(str(x).count('0'))+1)))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(857, 955, 296, 737, 476, 601, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_3/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_100():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(100 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_3/tests60_3_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(x):", "        def is_left_right_truncatable(p):", "            return bool(re.match('(.*[1-9][0-9]*)[1-9][0-9][0-9][0-9]*$', str(p)))", ">       return sorted(x for x in range(2, x+1) if all(x%d for d in range(3, int(str(x).count('0'))+1)) and all(is_left_right_truncatable(x) for x in range(3, int(str(x).count('0'))+1)))", "E       TypeError: can only concatenate tuple (not \"int\") to tuple"], "reprfuncargs": {"args": [["x", "(857, 955, 296, 737, 476, 601, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_3/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_3/generated_answer.py", "lineno": 7, "message": "TypeError: can only concatenate tuple (not \"int\") to tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020503299310803413, "start": 1701018920.6139514, "stop": 1701018920.614157, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5fd32ffaa8e340fa9144ae6621ed6e09", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
