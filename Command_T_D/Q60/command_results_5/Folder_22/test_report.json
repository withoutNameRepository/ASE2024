{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_22_5.py::test_if_result_is_less_than_equal_to_85", "location": ["tests60_22_5.py", 43, "test_if_result_is_less_than_equal_to_85"], "keywords": {"test_if_result_is_less_than_equal_to_85": 1, "tests60_22_5.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014225300401449203, "start": 1701019082.9234202, "stop": 1701019082.923563, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0a388fb486c54012849d1d1b5bd968d3", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_22_5.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_22_5.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_22_5.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001611789921298623, "start": 1701019082.9235435, "stop": 1701019082.9237056, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0a388fb486c54012849d1d1b5bd968d3", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_22_5.py::test_if_result_is_less_than_equal_to_85", "location": ["tests60_22_5.py", 43, "test_if_result_is_less_than_equal_to_85"], "keywords": {"test_if_result_is_less_than_equal_to_85": 1, "tests60_22_5.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_22/generated_answer.py", "lineno": 3, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_85():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(85 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_22/tests60_22_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(range(2, n)))", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["n", "(996, 568, 302, 205, 278, 648, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_22/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_85():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(85 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_22/tests60_22_5.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_right_truncatable_prime(n):", ">       return sorted(set(range(2, n)))", "E       TypeError: 'tuple' object cannot be interpreted as an integer"], "reprfuncargs": {"args": [["n", "(996, 568, 302, 205, 278, 648, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_22/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_22/generated_answer.py", "lineno": 3, "message": "TypeError: 'tuple' object cannot be interpreted as an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001994270132854581, "start": 1701019082.9238057, "stop": 1701019082.9240057, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0a388fb486c54012849d1d1b5bd968d3", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
