{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests60_100_5.py::test_if_result_is_less_than_equal_to_26", "location": ["tests60_100_5.py", 43, "test_if_result_is_less_than_equal_to_26"], "keywords": {"test_if_result_is_less_than_equal_to_26": 1, "tests60_100_5.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010183500126004219, "start": 1701019135.7697022, "stop": 1701019135.7698042, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "408182407bd842e0a0afb1a58cc78903", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_100_5.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_100_5.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_100_5.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014253900735639036, "start": 1701019135.7697268, "stop": 1701019135.7698696, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "408182407bd842e0a0afb1a58cc78903", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_100_5.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_100_5.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_100_5.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_100/tests60_100_5.py", "lineno": 9, "message": "assert not <generator object all_left_right_truncatable_prime at 0x7fcde1ded070>\n +  where <generator object all_left_right_truncatable_prime at 0x7fcde1ded070> = all_left_right_truncatable_prime((1, 1, 1, 1, 1, 1, ...))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (26 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)", "E               assert not <generator object all_left_right_truncatable_prime at 0x7fcde1ded070>", "E                +  where <generator object all_left_right_truncatable_prime at 0x7fcde1ded070> = all_left_right_truncatable_prime((1, 1, 1, 1, 1, 1, ...))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_100/tests60_100_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (26 + 1)", "            if i < 2:", ">               assert not all_left_right_truncatable_prime(input_tuple)", "E               assert not <generator object all_left_right_truncatable_prime at 0x7fcde1ded070>", "E                +  where <generator object all_left_right_truncatable_prime at 0x7fcde1ded070> = all_left_right_truncatable_prime((1, 1, 1, 1, 1, 1, ...))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/command_results_5/Folder_100/tests60_100_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q60/command_results_5/Folder_100/tests60_100_5.py", "lineno": 9, "message": "assert not <generator object all_left_right_truncatable_prime at 0x7fcde1ded070>\n +  where <generator object all_left_right_truncatable_prime at 0x7fcde1ded070> = all_left_right_truncatable_prime((1, 1, 1, 1, 1, 1, ...))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014018401270732284, "start": 1701019135.770033, "stop": 1701019135.7701738, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "408182407bd842e0a0afb1a58cc78903", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
