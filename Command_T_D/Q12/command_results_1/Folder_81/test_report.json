{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests12_81_1.py::test_all_zero_range", "location": ["tests12_81_1.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015312699997593882, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_result_is_in_range", "location": ["tests12_81_1.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017849500000011176, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_81_1.py::test_all_zero_range", "location": ["tests12_81_1.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013798799955111463, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_all_zero_range", "location": ["tests12_81_1.py", 16, "test_all_zero_range"], "keywords": {"test_all_zero_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.562999937566929e-05, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_all_n_range", "location": ["tests12_81_1.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.055999998963671e-05, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_all_n_range", "location": ["tests12_81_1.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018995600021298742, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_all_n_range", "location": ["tests12_81_1.py", 21, "test_all_n_range"], "keywords": {"test_all_n_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.086199977697106e-05, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_unsorted_large_range", "location": ["tests12_81_1.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001007389992082608, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"nodeid": "tests12_81_1.py::test_unsorted_large_range", "location": ["tests12_81_1.py", 27, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests12_81_1.py": 1, "Folder_81": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q12/command_results_1/Folder_81/tests12_81_1.py", "lineno": 33, "message": "assert 294 == -986\n +  where 294 = find_smallest_num([-792, -956, -171, -638, -945, -605, ...])\n +  and   -986 = min([-986, -957, -951, -949, -915, -905, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, (100 + 1) * 3)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[10:100 + 1]", "        sliced_list.sort()", ">       assert find_smallest_num(initial_list) == min(sliced_list)", "E       assert 294 == -986", "E        +  where 294 = find_smallest_num([-792, -956, -171, -638, -945, -605, ...])", "E        +  and   -986 = min([-986, -957, -951, -949, -915, -905, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/command_results_1/Folder_81/tests12_81_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, (100 + 1) * 3)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[10:100 + 1]", "        sliced_list.sort()", ">       assert find_smallest_num(initial_list) == min(sliced_list)", "E       assert 294 == -986", "E        +  where 294 = find_smallest_num([-792, -956, -171, -638, -945, -605, ...])", "E        +  and   -986 = min([-986, -957, -951, -949, -915, -905, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/command_results_1/Folder_81/tests12_81_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q12/command_results_1/Folder_81/tests12_81_1.py", "lineno": 33, "message": "assert 294 == -986\n +  where 294 = find_smallest_num([-792, -956, -171, -638, -945, -605, ...])\n +  and   -986 = min([-986, -957, -951, -949, -915, -905, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000791794999713602, "extra": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "df08512e30914e7891f6a44a7ca0e94b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
