{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests56_67_4.py::test_large_string", "location": ["tests56_67_4.py", 23, "test_large_string"], "keywords": {"test_large_string": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018993299454450607, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw3", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw3>"}
{"nodeid": "tests56_67_4.py::test_one_character_string", "location": ["tests56_67_4.py", 12, "test_one_character_string"], "keywords": {"test_one_character_string": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032011100120143965, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw1>"}
{"nodeid": "tests56_67_4.py::test_string_of_same_character", "location": ["tests56_67_4.py", 5, "test_string_of_same_character"], "keywords": {"test_string_of_same_character": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029616599931614473, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw0>"}
{"nodeid": "tests56_67_4.py::test_same_character_string", "location": ["tests56_67_4.py", 18, "test_same_character_string"], "keywords": {"test_same_character_string": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002781220027827658, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw2>"}
{"nodeid": "tests56_67_4.py::test_length_of_substring_result", "location": ["tests56_67_4.py", 32, "test_length_of_substring_result"], "keywords": {"test_length_of_substring_result": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002801549999276176, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw4", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw4>"}
{"nodeid": "tests56_67_4.py::test_one_character_string", "location": ["tests56_67_4.py", 12, "test_one_character_string"], "keywords": {"test_one_character_string": 1, "tests56_67_4.py": 1, "Folder_67": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "re.error: unbalanced parenthesis at position 5"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_one_character_string():", "        # Since the parameter generater (i.e. genparams.py) generates only parameters", "        # of equal to or greater than 2, the answer should be an empty list.", ">       assert not all_substring_of_size_n('a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_4/Folder_67/tests56_67_4.py", "lineno": 16, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return re.findall(r'<(.)?)>', s)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_4/Folder_67/generated_answer.py", "lineno": 3, "message": "in all_substring_of_size_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", "            p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        except Verbose:", "            # the VERBOSE flag was switched on inside the pattern.  to be", "            # on the safe side, we'll parse the whole thing again...", "            state = State()", "            state.flags = flags | SRE_FLAG_VERBOSE", "            state.str = str", "            source.seek(0)", "            p = _parse_sub(source, state, True, 0)", "    ", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 5"], "reprfuncargs": {"args": [["str", "'<(.)?)>'"], ["flags", "0"], ["state", "<sre_parse.State object at 0x7fcdae61c550>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_one_character_string():", "        # Since the parameter generater (i.e. genparams.py) generates only parameters", "        # of equal to or greater than 2, the answer should be an empty list.", ">       assert not all_substring_of_size_n('a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_4/Folder_67/tests56_67_4.py", "lineno": 16, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return re.findall(r'<(.)?)>', s)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_4/Folder_67/generated_answer.py", "lineno": 3, "message": "in all_substring_of_size_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 240, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_compile.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/re.py", "lineno": 303, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = sre_parse.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_compile.py", "lineno": 788, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        try:", "            p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        except Verbose:", "            # the VERBOSE flag was switched on inside the pattern.  to be", "            # on the safe side, we'll parse the whole thing again...", "            state = State()", "            state.flags = flags | SRE_FLAG_VERBOSE", "            state.str = str", "            source.seek(0)", "            p = _parse_sub(source, state, True, 0)", "    ", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 5"], "reprfuncargs": {"args": [["str", "'<(.)?)>'"], ["flags", "0"], ["state", "<sre_parse.State object at 0x7fcdae61c550>"]]}, "reprlocals": null, "reprfileloc": {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/usr/lib/python3.10/sre_parse.py", "lineno": 969, "message": "re.error: unbalanced parenthesis at position 5"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003101620022789575, "extra": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "ba08066f83694ae08409823399f72cde", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
