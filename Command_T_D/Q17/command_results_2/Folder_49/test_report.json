{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests17_49_2.py::test_negate_of_lists", "location": ["tests17_49_2.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022522604558616877, "start": 1701450589.9670374, "stop": 1701450589.967264, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_49_2.py::test_list_of_zeros", "location": ["tests17_49_2.py", 3, "test_list_of_zeros"], "keywords": {"test_list_of_zeros": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002760459901764989, "start": 1701450589.9679146, "stop": 1701450589.9681919, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw0>"}
{"nodeid": "tests17_49_2.py::test_negate_of_lists", "location": ["tests17_49_2.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003330889157950878, "start": 1701450589.9678178, "stop": 1701450589.9681518, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_49_2.py::test_negate_of_lists", "location": ["tests17_49_2.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001231400528922677, "start": 1701450589.968542, "stop": 1701450589.968666, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_49_2.py::test_negate_of_divisors", "location": ["tests17_49_2.py", 23, "test_negate_of_divisors"], "keywords": {"test_negate_of_divisors": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017101201228797436, "start": 1701450589.9704797, "stop": 1701450589.9706516, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_49_2.py::test_negate_of_divisors", "location": ["tests17_49_2.py", 23, "test_negate_of_divisors"], "keywords": {"test_negate_of_divisors": 1, "tests17_49_2.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q17/command_results_2/Folder_49/tests17_49_2.py", "lineno": 30, "message": "AssertionError: assert [10000, 10000...0, 10000, ...] == [10000, 10000...0, 10000, ...]\n  Right contains one more item: 10000\n  Full diff:\n    [\n     10000,\n     10000,\n     10000,\n     10000,...\n  \n  ...Full output truncated (118 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_divisors():", "        neg_div1 = -10", "        neg_div2 = -1000", "        mul_of_negs = neg_div1 * neg_div2", "        mul_list = [mul_of_negs for _ in range(0, 200 + 1)]", "        expected_list = [mul_of_negs for _ in range(80, 200 + 1)]", ">       assert all_ints_div_by_both_two_nums(mul_list) == expected_list", "E       AssertionError: assert [10000, 10000...0, 10000, ...] == [10000, 10000...0, 10000, ...]", "E         Right contains one more item: 10000", "E         Full diff:", "E           [", "E            10000,", "E            10000,", "E            10000,", "E            10000,...", "E         ", "E         ...Full output truncated (118 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_49/tests17_49_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_divisors():", "        neg_div1 = -10", "        neg_div2 = -1000", "        mul_of_negs = neg_div1 * neg_div2", "        mul_list = [mul_of_negs for _ in range(0, 200 + 1)]", "        expected_list = [mul_of_negs for _ in range(80, 200 + 1)]", ">       assert all_ints_div_by_both_two_nums(mul_list) == expected_list", "E       AssertionError: assert [10000, 10000...0, 10000, ...] == [10000, 10000...0, 10000, ...]", "E         Right contains one more item: 10000", "E         Full diff:", "E           [", "E            10000,", "E            10000,", "E            10000,", "E            10000,...", "E         ", "E         ...Full output truncated (118 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_49/tests17_49_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q17/command_results_2/Folder_49/tests17_49_2.py", "lineno": 30, "message": "AssertionError: assert [10000, 10000...0, 10000, ...] == [10000, 10000...0, 10000, ...]\n  Right contains one more item: 10000\n  Full diff:\n    [\n     10000,\n     10000,\n     10000,\n     10000,...\n  \n  ...Full output truncated (118 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.003352488041855395, "start": 1701450589.9710011, "stop": 1701450589.974355, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "e013f011d1e74c7c882a1b6bd26f3a38", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
