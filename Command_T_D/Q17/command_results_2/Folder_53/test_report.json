{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests17_53_2.py::test_list_of_zeros", "location": ["tests17_53_2.py", 3, "test_list_of_zeros"], "keywords": {"test_list_of_zeros": 1, "tests17_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018266600091010332, "start": 1701450593.625903, "stop": 1701450593.6260865, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6c2081a9548f4eafb4a6fa7e0f4305c5", "node": "<WorkerController gw0>"}
{"nodeid": "tests17_53_2.py::test_negate_of_lists", "location": ["tests17_53_2.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_53_2.py": 1, "Folder_53": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018595100846141577, "start": 1701450593.6259253, "stop": 1701450593.6261122, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6c2081a9548f4eafb4a6fa7e0f4305c5", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_53_2.py::test_negate_of_lists", "location": ["tests17_53_2.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_53_2.py": 1, "Folder_53": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q17/command_results_2/Folder_53/generated_answer.py", "lineno": 5, "message": "IndexError: list index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 200 + 1)]", "        neg_initial_list = [-i for i in range(0, 200 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_53/tests17_53_2.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        result = []", "        for i in range(200, len(nums) + 1):", ">           if nums[i] % 17 == 0 and nums[i] % -5 == 0:", "E           IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_53/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 200 + 1)]", "        neg_initial_list = [-i for i in range(0, 200 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_53/tests17_53_2.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        result = []", "        for i in range(200, len(nums) + 1):", ">           if nums[i] % 17 == 0 and nums[i] % -5 == 0:", "E           IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_2/Folder_53/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q17/command_results_2/Folder_53/generated_answer.py", "lineno": 5, "message": "IndexError: list index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001961280358955264, "start": 1701450593.6263385, "stop": 1701450593.6265352, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6c2081a9548f4eafb4a6fa7e0f4305c5", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
