{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests17_99_5.py::test_list_of_zeros", "location": ["tests17_99_5.py", 3, "test_list_of_zeros"], "keywords": {"test_list_of_zeros": 1, "tests17_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020126404706388712, "start": 1701451094.0132084, "stop": 1701451094.0134106, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "66d393faea054b03a5a124cc27c66ff4", "node": "<WorkerController gw0>"}
{"nodeid": "tests17_99_5.py::test_negate_of_lists", "location": ["tests17_99_5.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020344904623925686, "start": 1701451094.0133, "stop": 1701451094.0135045, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "66d393faea054b03a5a124cc27c66ff4", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_99_5.py::test_negate_of_lists", "location": ["tests17_99_5.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_99_5.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q17/command_results_5/Folder_99/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 798 + 1)]", "        neg_initial_list = [-i for i in range(0, 798 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_99/tests17_99_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        result = []", ">       first_idx = bisect.bisect_left(nums, (275, 1))", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_99/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 798 + 1)]", "        neg_initial_list = [-i for i in range(0, 798 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_99/tests17_99_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        result = []", ">       first_idx = bisect.bisect_left(nums, (275, 1))", "E       TypeError: '<' not supported between instances of 'int' and 'tuple'"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_99/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q17/command_results_5/Folder_99/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'int' and 'tuple'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003014319809153676, "start": 1701451094.0138202, "stop": 1701451094.0141225, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "66d393faea054b03a5a124cc27c66ff4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
