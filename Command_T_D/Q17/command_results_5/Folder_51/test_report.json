{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests17_51_5.py::test_negate_of_lists", "location": ["tests17_51_5.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015139207243919373, "start": 1701451021.122504, "stop": 1701451021.1226563, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb11868e61a9495ea4207f5cb3bbccc3", "node": "<WorkerController gw1>"}
{"nodeid": "tests17_51_5.py::test_list_of_zeros", "location": ["tests17_51_5.py", 3, "test_list_of_zeros"], "keywords": {"test_list_of_zeros": 1, "tests17_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002983030863106251, "start": 1701451021.1226482, "stop": 1701451021.1229482, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "eb11868e61a9495ea4207f5cb3bbccc3", "node": "<WorkerController gw0>"}
{"nodeid": "tests17_51_5.py::test_negate_of_lists", "location": ["tests17_51_5.py", 16, "test_negate_of_lists"], "keywords": {"test_negate_of_lists": 1, "tests17_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q17/command_results_5/Folder_51/generated_answer.py", "lineno": 7, "message": "TypeError: unsupported operand type(s) for %: 'list' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 9 + 1)]", "        neg_initial_list = [-i for i in range(0, 9 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_51/tests17_51_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        if not nums:", "            return np.array([])", ">       return np.where(np.logical_and(nums[6:8] % -1 == 0, nums[6:9] % -10 == 0))[0]", "E       TypeError: unsupported operand type(s) for %: 'list' and 'int'"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_51/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_negate_of_lists():", "        initial_list = [i for i in range(0, 9 + 1)]", "        neg_initial_list = [-i for i in range(0, 9 + 1)]", ">       expected_list = [-i for i in all_ints_div_by_both_two_nums(neg_initial_list)]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_51/tests17_51_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_ints_div_by_both_two_nums(nums):", "        if not nums:", "            return np.array([])", ">       return np.where(np.logical_and(nums[6:8] % -1 == 0, nums[6:9] % -10 == 0))[0]", "E       TypeError: unsupported operand type(s) for %: 'list' and 'int'"], "reprfuncargs": {"args": [["nums", "[0, -1, -2, -3, -4, -5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q17/command_results_5/Folder_51/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q17/command_results_5/Folder_51/generated_answer.py", "lineno": 7, "message": "TypeError: unsupported operand type(s) for %: 'list' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020400492940098047, "start": 1701451021.1229484, "stop": 1701451021.1231532, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "eb11868e61a9495ea4207f5cb3bbccc3", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
