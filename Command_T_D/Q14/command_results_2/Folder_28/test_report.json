{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests14_28_2.py::test_unsorted_large_range", "location": ["tests14_28_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_28_2.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011922599878744222, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c7ba893ecd3546278a69a0bbef3b2993", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_28_2.py::test_smallest_is_in_range", "location": ["tests14_28_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_28_2.py": 1, "Folder_28": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015661599900340661, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7ba893ecd3546278a69a0bbef3b2993", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_28_2.py::test_smallest_is_in_range", "location": ["tests14_28_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_28_2.py": 1, "Folder_28": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q14/command_results_2/Folder_28/generated_answer.py", "lineno": 3, "message": "TypeError: list indices must be integers or slices, not NoneType"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(50 + 2))", "        if 22 == 50:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_28/tests14_28_2.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", "        second_smallest = next((i for i, x in enumerate(nums[22:50]) if x < min(nums[22:50])), None)", ">       return nums[second_smallest]", "E       TypeError: list indices must be integers or slices, not NoneType"], "reprfuncargs": {"args": [["nums", "[692, -54, 819, 613, 55, 337, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_28/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(50 + 2))", "        if 22 == 50:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_28/tests14_28_2.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", "        second_smallest = next((i for i, x in enumerate(nums[22:50]) if x < min(nums[22:50])), None)", ">       return nums[second_smallest]", "E       TypeError: list indices must be integers or slices, not NoneType"], "reprfuncargs": {"args": [["nums", "[692, -54, 819, 613, 55, 337, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_28/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q14/command_results_2/Folder_28/generated_answer.py", "lineno": 3, "message": "TypeError: list indices must be integers or slices, not NoneType"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015187999815680087, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7ba893ecd3546278a69a0bbef3b2993", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
