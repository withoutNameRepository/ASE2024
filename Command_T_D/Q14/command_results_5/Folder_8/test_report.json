{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests14_8_5.py::test_unsorted_large_range", "location": ["tests14_8_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012046999836456962, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "73bec445d6e24add867bc94b1116ad71", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_8_5.py::test_smallest_is_in_range", "location": ["tests14_8_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_8_5.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016136799968080595, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "73bec445d6e24add867bc94b1116ad71", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_8_5.py::test_smallest_is_in_range", "location": ["tests14_8_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_8_5.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q14/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "ValueError: [619, 662, 663, 672, 680, 719, 788, 790, 855, 939] is not in list"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(66 + 2))", "        if 56 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_5/Folder_8/tests14_8_5.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", ">       return nums[nums.index(sorted(nums)[56:66]) - 1]", "E       ValueError: [619, 662, 663, 672, 680, 719, 788, 790, 855, 939] is not in list"], "reprfuncargs": {"args": [["nums", "[-429, -630, -123, 586, -983, -933, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(66 + 2))", "        if 56 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_5/Folder_8/tests14_8_5.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", ">       return nums[nums.index(sorted(nums)[56:66]) - 1]", "E       ValueError: [619, 662, 663, 672, 680, 719, 788, 790, 855, 939] is not in list"], "reprfuncargs": {"args": [["nums", "[-429, -630, -123, 586, -983, -933, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q14/command_results_5/Folder_8/generated_answer.py", "lineno": 2, "message": "ValueError: [619, 662, 663, 672, 680, 719, 788, 790, 855, 939] is not in list"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001629819998925086, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "73bec445d6e24add867bc94b1116ad71", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
