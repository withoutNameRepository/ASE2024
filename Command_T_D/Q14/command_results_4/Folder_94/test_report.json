{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests14_94_4.py::test_unsorted_large_range", "location": ["tests14_94_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_94_4.py": 1, "Folder_94": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011952800196013413, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "f8fea98b9a2842be9a0523c3e6d8e0c5", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_94_4.py::test_smallest_is_in_range", "location": ["tests14_94_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_94_4.py": 1, "Folder_94": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017204799951286986, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f8fea98b9a2842be9a0523c3e6d8e0c5", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_94_4.py::test_smallest_is_in_range", "location": ["tests14_94_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_94_4.py": 1, "Folder_94": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q14/command_results_4/Folder_94/generated_answer.py", "lineno": 3, "message": "TypeError: list indices must be integers or slices, not NoneType"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(71 + 2))", "        if 52 == 71:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_94/tests14_94_4.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", "        secondSmallestNum = next((el for el in range(len(nums) - 52, len(nums) - 71) if nums[el] < min(nums[52:71])), None)", ">       return nums[secondSmallestNum]", "E       TypeError: list indices must be integers or slices, not NoneType"], "reprfuncargs": {"args": [["nums", "[-388, -885, 729, 339, 720, -21, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_94/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(71 + 2))", "        if 52 == 71:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_94/tests14_94_4.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_second_smallest_num(nums):", "        secondSmallestNum = next((el for el in range(len(nums) - 52, len(nums) - 71) if nums[el] < min(nums[52:71])), None)", ">       return nums[secondSmallestNum]", "E       TypeError: list indices must be integers or slices, not NoneType"], "reprfuncargs": {"args": [["nums", "[-388, -885, 729, 339, 720, -21, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_94/generated_answer.py", "lineno": 3, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q14/command_results_4/Folder_94/generated_answer.py", "lineno": 3, "message": "TypeError: list indices must be integers or slices, not NoneType"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016491499991388991, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f8fea98b9a2842be9a0523c3e6d8e0c5", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
