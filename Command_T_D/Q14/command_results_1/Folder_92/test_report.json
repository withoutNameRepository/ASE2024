{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests14_92_1.py::test_unsorted_large_range", "location": ["tests14_92_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012492399764596485, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001303549979638774, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012129700189689174, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_smallest_is_in_range", "location": ["tests14_92_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.863499872153625e-05, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_large_range", "location": ["tests14_92_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010528699931455776, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_92_1.py::test_unsorted_large_range", "location": ["tests14_92_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_92_1.py": 1, "Folder_92": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q14/command_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "assert 999 == -56\n +  where 999 = find_second_smallest_num([-596, -56, -397, 678, -875, -401, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 1 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 1:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:1 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert 999 == -56", "E            +  where 999 = find_second_smallest_num([-596, -56, -397, 678, -875, -401, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 1 + 1000)]", "        random.shuffle(initial_list)", "        if 0 == 1:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[0:1 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert 999 == -56", "E            +  where 999 = find_second_smallest_num([-596, -56, -397, 678, -875, -401, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q14/command_results_1/Folder_92/tests14_92_1.py", "lineno": 30, "message": "assert 999 == -56\n +  where 999 = find_second_smallest_num([-596, -56, -397, 678, -875, -401, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010830909996002447, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c2050027a2f846feaebccf492c7eb067", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
