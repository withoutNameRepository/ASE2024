{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests25_63_1.py::test_presence_of_inserted_element", "location": ["tests25_63_1.py", 3, "test_presence_of_inserted_element"], "keywords": {"test_presence_of_inserted_element": 1, "tests25_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010566203854978085, "start": 1701555990.3390565, "stop": 1701555990.3391626, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e1cd7787699345b7b9964832ba1eb910", "node": "<WorkerController gw0>"}
{"nodeid": "tests25_63_1.py::test_presence_of_inserted_element_at_index_76", "location": ["tests25_63_1.py", 19, "test_presence_of_inserted_element_at_index_76"], "keywords": {"test_presence_of_inserted_element_at_index_76": 1, "tests25_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.135098662227392e-05, "start": 1701555990.339082, "stop": 1701555990.3391738, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e1cd7787699345b7b9964832ba1eb910", "node": "<WorkerController gw1>"}
{"nodeid": "tests25_63_1.py::test_presence_of_inserted_element_at_index_76", "location": ["tests25_63_1.py", 19, "test_presence_of_inserted_element_at_index_76"], "keywords": {"test_presence_of_inserted_element_at_index_76": 1, "tests25_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_Command/Q25/command_results_1/Folder_63/generated_answer.py", "lineno": 5, "message": "TypeError: chain.from_iterable() takes exactly one argument (2 given)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_76():", "        initial_list = [i for i in range((76 + 1) * 2)]", ">       returned_list = insert_at_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q25/command_results_1/Folder_63/tests25_63_1.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_at_index(s):", ">       return [x for x in itertools.chain.from_iterable(s, [[15, 51]])]", "E       TypeError: chain.from_iterable() takes exactly one argument (2 given)"], "reprfuncargs": {"args": [["s", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q25/command_results_1/Folder_63/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_inserted_element_at_index_76():", "        initial_list = [i for i in range((76 + 1) * 2)]", ">       returned_list = insert_at_index(initial_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q25/command_results_1/Folder_63/tests25_63_1.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def insert_at_index(s):", ">       return [x for x in itertools.chain.from_iterable(s, [[15, 51]])]", "E       TypeError: chain.from_iterable() takes exactly one argument (2 given)"], "reprfuncargs": {"args": [["s", "[0, 1, 2, 3, 4, 5, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q25/command_results_1/Folder_63/generated_answer.py", "lineno": 5, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_Command/Q25/command_results_1/Folder_63/generated_answer.py", "lineno": 5, "message": "TypeError: chain.from_iterable() takes exactly one argument (2 given)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.779504034668207e-05, "start": 1701555990.3393233, "stop": 1701555990.3394217, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e1cd7787699345b7b9964832ba1eb910", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
