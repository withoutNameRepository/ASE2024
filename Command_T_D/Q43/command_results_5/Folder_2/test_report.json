{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests43_2_5.py::test_list_of_non_prime_nums", "location": ["tests43_2_5.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011731000267900527, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b41fe4587c6c4ee0a3b8c84ac302cca4", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_2_5.py::test_list_of_primes", "location": ["tests43_2_5.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001825420004024636, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b41fe4587c6c4ee0a3b8c84ac302cca4", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_2_5.py::test_list_of_non_prime_nums", "location": ["tests43_2_5.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q43/command_results_5/Folder_2/generated_answer.py", "lineno": 7, "message": "TypeError: list indices must be integers or slices, not float"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (785 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_5/Folder_2/tests43_2_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for index in range(167, 785):", "            if nums[index] % 2 == 0 or nums[index] == 1:", "                continue", "            else:", ">               for multiple in range(3, int(nums[index**0.5]) + 1):", "E               TypeError: list indices must be integers or slices, not float"], "reprfuncargs": {"args": [["nums", "[6, 9, 12, 15, 18, 21, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_5/Folder_2/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (785 + 1) * 10)]", ">           assert not find_primes_between_indices(list_of_non_prime_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_5/Folder_2/tests43_2_5.py", "lineno": 20, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for index in range(167, 785):", "            if nums[index] % 2 == 0 or nums[index] == 1:", "                continue", "            else:", ">               for multiple in range(3, int(nums[index**0.5]) + 1):", "E               TypeError: list indices must be integers or slices, not float"], "reprfuncargs": {"args": [["nums", "[6, 9, 12, 15, 18, 21, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_5/Folder_2/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q43/command_results_5/Folder_2/generated_answer.py", "lineno": 7, "message": "TypeError: list indices must be integers or slices, not float"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008759330012253486, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b41fe4587c6c4ee0a3b8c84ac302cca4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
