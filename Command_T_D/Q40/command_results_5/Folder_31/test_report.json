{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_31_5.py::test_if_result_is_sorted", "location": ["tests40_31_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_31_5.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024908699924708344, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4050d030ac05416c89cafce57173d681", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_31_5.py::test_strings_of_size_equal_to_70", "location": ["tests40_31_5.py", 5, "test_strings_of_size_equal_to_70"], "keywords": {"test_strings_of_size_equal_to_70": 1, "tests40_31_5.py": 1, "Folder_31": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002814170002238825, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4050d030ac05416c89cafce57173d681", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_31_5.py::test_if_result_is_sorted", "location": ["tests40_31_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_31_5.py": 1, "Folder_31": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'list' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=70 + 1))", ">       result = return_n_smallest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_31/tests40_31_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_smallest_chars(s):", "        res = []", "        for i in range(len(s)):", "            if s[i] in res:", "                continue", ">           elif s[i] not in res and res < 70:", "E           TypeError: '<' not supported between instances of 'list' and 'int'"], "reprfuncargs": {"args": [["s", "'Dg9N<+8>&c${3u:#fW(|T@P[yqsQ%?X]M^)Yv~_m5URtBa2S7rx1kJ}F=IVo.LniHb ;eEK'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=70 + 1))", ">       result = return_n_smallest_chars(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_31/tests40_31_5.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def return_n_smallest_chars(s):", "        res = []", "        for i in range(len(s)):", "            if s[i] in res:", "                continue", ">           elif s[i] not in res and res < 70:", "E           TypeError: '<' not supported between instances of 'list' and 'int'"], "reprfuncargs": {"args": [["s", "'Dg9N<+8>&c${3u:#fW(|T@P[yqsQ%?X]M^)Yv~_m5URtBa2S7rx1kJ}F=IVo.LniHb ;eEK'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_31/generated_answer.py", "lineno": 6, "message": "TypeError: '<' not supported between instances of 'list' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023571199926664121, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4050d030ac05416c89cafce57173d681", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
