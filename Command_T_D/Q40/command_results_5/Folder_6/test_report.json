{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_6_5.py::test_strings_of_size_equal_to_47", "location": ["tests40_6_5.py", 5, "test_strings_of_size_equal_to_47"], "keywords": {"test_strings_of_size_equal_to_47": 1, "tests40_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014745699809282087, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "099b1327ec39466584f4b7217ba00973", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_6_5.py::test_if_result_is_sorted", "location": ["tests40_6_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016474900257890113, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "099b1327ec39466584f4b7217ba00973", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_6_5.py::test_if_result_is_sorted", "location": ["tests40_6_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_6_5.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_6/tests40_6_5.py", "lineno": 28, "message": "AssertionError: assert ['E', 'F', 'H...'O', 'R', ...] == ['z', 'y', 'v...'o', 'n', ...]\n  At index 0 diff: 'E' != 'z'\n  Full diff:\n    [\n  +  'E',\n  +  'F',\n  +  'H',\n  +  'J',...\n  \n  ...Full output truncated (49 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=47 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['E', 'F', 'H...'O', 'R', ...] == ['z', 'y', 'v...'o', 'n', ...]", "E             At index 0 diff: 'E' != 'z'", "E             Full diff:", "E               [", "E             +  'E',", "E             +  'F',", "E             +  'H',", "E             +  'J',...", "E             ", "E             ...Full output truncated (49 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_6/tests40_6_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=47 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['E', 'F', 'H...'O', 'R', ...] == ['z', 'y', 'v...'o', 'n', ...]", "E             At index 0 diff: 'E' != 'z'", "E             Full diff:", "E               [", "E             +  'E',", "E             +  'F',", "E             +  'H',", "E             +  'J',...", "E             ", "E             ...Full output truncated (49 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_6/tests40_6_5.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_6/tests40_6_5.py", "lineno": 28, "message": "AssertionError: assert ['E', 'F', 'H...'O', 'R', ...] == ['z', 'y', 'v...'o', 'n', ...]\n  At index 0 diff: 'E' != 'z'\n  Full diff:\n    [\n  +  'E',\n  +  'F',\n  +  'H',\n  +  'J',...\n  \n  ...Full output truncated (49 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005709010001737624, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "099b1327ec39466584f4b7217ba00973", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
