{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_40_5.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_5.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_5.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017551999917486683, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a8fea2a12d9488398d4bc68262af31c", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_40_5.py::test_if_result_is_sorted", "location": ["tests40_40_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_40_5.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002552580008341465, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5a8fea2a12d9488398d4bc68262af31c", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_40_5.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_5.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_5.py": 1, "Folder_40": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_40/tests40_40_5.py", "lineno": 12, "message": "AssertionError: assert ['.', '1', '8...'N', 'Z', ...] == ['a', 'Z', 'N...'8', '1', ...]\n  At index 0 diff: '.' != 'a'\n  Full diff:\n  - ['a', 'Z', 'N', 'F', '8', '1', '.']\n  + ['.', '1', '8', 'F', 'N', 'Z', 'a']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['.', '1', '8...'N', 'Z', ...] == ['a', 'Z', 'N...'8', '1', ...]", "E             At index 0 diff: '.' != 'a'", "E             Full diff:", "E             - ['a', 'Z', 'N', 'F', '8', '1', '.']", "E             + ['.', '1', '8', 'F', 'N', 'Z', 'a']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_40/tests40_40_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['.', '1', '8...'N', 'Z', ...] == ['a', 'Z', 'N...'8', '1', ...]", "E             At index 0 diff: '.' != 'a'", "E             Full diff:", "E             - ['a', 'Z', 'N', 'F', '8', '1', '.']", "E             + ['.', '1', '8', 'F', 'N', 'Z', 'a']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_40/tests40_40_5.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_40/tests40_40_5.py", "lineno": 12, "message": "AssertionError: assert ['.', '1', '8...'N', 'Z', ...] == ['a', 'Z', 'N...'8', '1', ...]\n  At index 0 diff: '.' != 'a'\n  Full diff:\n  - ['a', 'Z', 'N', 'F', '8', '1', '.']\n  + ['.', '1', '8', 'F', 'N', 'Z', 'a']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00047789599921088666, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a8fea2a12d9488398d4bc68262af31c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
