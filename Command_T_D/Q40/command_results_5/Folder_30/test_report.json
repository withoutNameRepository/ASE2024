{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_30_5.py::test_if_result_is_sorted", "location": ["tests40_30_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015016199904493988, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c7c7c21213f544c7a2f69c3f13cf9f55", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_30_5.py::test_strings_of_size_equal_to_72", "location": ["tests40_30_5.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests40_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015552100012428127, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7c7c21213f544c7a2f69c3f13cf9f55", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_30_5.py::test_if_result_is_sorted", "location": ["tests40_30_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_30_5.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_30/tests40_30_5.py", "lineno": 26, "message": "AssertionError: assert 'RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*' == [' ', '#', '#', '#', '#', '#', ...]\n +  where [' ', '#', '#', '#', '#', '#', ...] = sorted('RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert 'RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*' == [' ', '#', '#', '#', '#', '#', ...]", "E            +  where [' ', '#', '#', '#', '#', '#', ...] = sorted('RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_30/tests40_30_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert 'RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*' == [' ', '#', '#', '#', '#', '#', ...]", "E            +  where [' ', '#', '#', '#', '#', '#', ...] = sorted('RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_30/tests40_30_5.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_30/tests40_30_5.py", "lineno": 26, "message": "AssertionError: assert 'RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*' == [' ', '#', '#', '#', '#', '#', ...]\n +  where [' ', '#', '#', '#', '#', '#', ...] = sorted('RH/r.wC[@Jf}+3 8u5ybQI1Z^|<?p-zci=GDv0kV&%YNABhe*,aS)>2PgnFT#mqE79(;{_OUX*##*##*')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032437800109619275, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c7c7c21213f544c7a2f69c3f13cf9f55", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
