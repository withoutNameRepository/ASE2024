{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_32_5.py::test_if_result_is_sorted", "location": ["tests40_32_5.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_32_5.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014564299999619834, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "17ea86efb3fe46d59f7628ef62810256", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_32_5.py::test_strings_of_size_equal_to_8", "location": ["tests40_32_5.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests40_32_5.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001230710004165303, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "17ea86efb3fe46d59f7628ef62810256", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_32_5.py::test_strings_of_size_equal_to_8", "location": ["tests40_32_5.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests40_32_5.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_32/tests40_32_5.py", "lineno": 10, "message": "AssertionError: assert ['<', 'x', 'l...'M', '0', ...] == ['0', '<', 'M...']', 'l', ...]\n  At index 0 diff: '<' != '0'\n  Full diff:\n  - ['0', '<', 'M', 'O', ']', 'l', 'x', '{']\n  + ['<', 'x', 'l', ']', 'M', '0', 'O', '{']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['<', 'x', 'l...'M', '0', ...] == ['0', '<', 'M...']', 'l', ...]", "E             At index 0 diff: '<' != '0'", "E             Full diff:", "E             - ['0', '<', 'M', 'O', ']', 'l', 'x', '{']", "E             + ['<', 'x', 'l', ']', 'M', '0', 'O', '{']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_32/tests40_32_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['<', 'x', 'l...'M', '0', ...] == ['0', '<', 'M...']', 'l', ...]", "E             At index 0 diff: '<' != '0'", "E             Full diff:", "E             - ['0', '<', 'M', 'O', ']', 'l', 'x', '{']", "E             + ['<', 'x', 'l', ']', 'M', '0', 'O', '{']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_5/Folder_32/tests40_32_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_5/Folder_32/tests40_32_5.py", "lineno": 10, "message": "AssertionError: assert ['<', 'x', 'l...'M', '0', ...] == ['0', '<', 'M...']', 'l', ...]\n  At index 0 diff: '<' != '0'\n  Full diff:\n  - ['0', '<', 'M', 'O', ']', 'l', 'x', '{']\n  + ['<', 'x', 'l', ']', 'M', '0', 'O', '{']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004200280018267222, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "17ea86efb3fe46d59f7628ef62810256", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
