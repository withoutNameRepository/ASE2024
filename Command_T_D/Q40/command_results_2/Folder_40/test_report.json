{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_40_2.py::test_if_result_is_sorted", "location": ["tests40_40_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_40_2.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011490600081742741, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "abcea6563d36499fa8f59f6ceb3f6345", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_40_2.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_2.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_2.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001771420029399451, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "abcea6563d36499fa8f59f6ceb3f6345", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_40_2.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_2.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_2.py": 1, "Folder_40": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_2/Folder_40/tests40_40_2.py", "lineno": 12, "message": "AssertionError: assert ['e', ',', 'C...'@', '9', ...] == ['e', 'Q', 'C...'=', '9', ...]\n  At index 1 diff: ',' != 'Q'\n  Full diff:\n  - ['e', 'Q', 'C', '@', '=', '9', ',']\n  + ['e', ',', 'C', 'Q', '@', '9', '=']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['e', ',', 'C...'@', '9', ...] == ['e', 'Q', 'C...'=', '9', ...]", "E             At index 1 diff: ',' != 'Q'", "E             Full diff:", "E             - ['e', 'Q', 'C', '@', '=', '9', ',']", "E             + ['e', ',', 'C', 'Q', '@', '9', '=']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_40/tests40_40_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['e', ',', 'C...'@', '9', ...] == ['e', 'Q', 'C...'=', '9', ...]", "E             At index 1 diff: ',' != 'Q'", "E             Full diff:", "E             - ['e', 'Q', 'C', '@', '=', '9', ',']", "E             + ['e', ',', 'C', 'Q', '@', '9', '=']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_2/Folder_40/tests40_40_2.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_2/Folder_40/tests40_40_2.py", "lineno": 12, "message": "AssertionError: assert ['e', ',', 'C...'@', '9', ...] == ['e', 'Q', 'C...'=', '9', ...]\n  At index 1 diff: ',' != 'Q'\n  Full diff:\n  - ['e', 'Q', 'C', '@', '=', '9', ',']\n  + ['e', ',', 'C', 'Q', '@', '9', '=']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004835069994442165, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "abcea6563d36499fa8f59f6ceb3f6345", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
