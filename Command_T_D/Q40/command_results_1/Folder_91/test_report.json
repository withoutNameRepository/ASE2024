{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_91_1.py::test_strings_of_size_equal_to_6", "location": ["tests40_91_1.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests40_91_1.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014685499991173856, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8cb5885aae1b4951a84a3ccf585a1c4d", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_91_1.py::test_if_result_is_sorted", "location": ["tests40_91_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_91_1.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014436099809245206, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8cb5885aae1b4951a84a3ccf585a1c4d", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_91_1.py::test_strings_of_size_equal_to_6", "location": ["tests40_91_1.py", 5, "test_strings_of_size_equal_to_6"], "keywords": {"test_strings_of_size_equal_to_6": 1, "tests40_91_1.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_91/tests40_91_1.py", "lineno": 12, "message": "AssertionError: assert ['+', 'D', '^', 'K', 'f'] == ['w', 'f', '^', 'K', 'D', '+']\n  At index 0 diff: '+' != 'w'\n  Right contains one more item: '+'\n  Full diff:\n  - ['w', 'f', '^', 'K', 'D', '+']\n  ?   ^    ^              ^^^^^^\n  + ['+', 'D', '^', 'K', 'f']\n  ?   ^    ^              ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_6():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['+', 'D', '^', 'K', 'f'] == ['w', 'f', '^', 'K', 'D', '+']", "E             At index 0 diff: '+' != 'w'", "E             Right contains one more item: '+'", "E             Full diff:", "E             - ['w', 'f', '^', 'K', 'D', '+']", "E             ?   ^    ^              ^^^^^^", "E             + ['+', 'D', '^', 'K', 'f']", "E             ?   ^    ^              ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_91/tests40_91_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_6():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=6))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['+', 'D', '^', 'K', 'f'] == ['w', 'f', '^', 'K', 'D', '+']", "E             At index 0 diff: '+' != 'w'", "E             Right contains one more item: '+'", "E             Full diff:", "E             - ['w', 'f', '^', 'K', 'D', '+']", "E             ?   ^    ^              ^^^^^^", "E             + ['+', 'D', '^', 'K', 'f']", "E             ?   ^    ^              ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_91/tests40_91_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_91/tests40_91_1.py", "lineno": 12, "message": "AssertionError: assert ['+', 'D', '^', 'K', 'f'] == ['w', 'f', '^', 'K', 'D', '+']\n  At index 0 diff: '+' != 'w'\n  Right contains one more item: '+'\n  Full diff:\n  - ['w', 'f', '^', 'K', 'D', '+']\n  ?   ^    ^              ^^^^^^\n  + ['+', 'D', '^', 'K', 'f']\n  ?   ^    ^              ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00045054500151309185, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8cb5885aae1b4951a84a3ccf585a1c4d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
