{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_40_1.py::test_if_result_is_sorted", "location": ["tests40_40_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001276499970117584, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "46b0091abf34461ca9fe6fcf2c4f8f63", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_40_1.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_1.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_1.py": 1, "Folder_40": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022345900288200937, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46b0091abf34461ca9fe6fcf2c4f8f63", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_40_1.py::test_strings_of_size_equal_to_7", "location": ["tests40_40_1.py", 5, "test_strings_of_size_equal_to_7"], "keywords": {"test_strings_of_size_equal_to_7": 1, "tests40_40_1.py": 1, "Folder_40": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_40/tests40_40_1.py", "lineno": 12, "message": "AssertionError: assert [' ', '.', '1...'N', '_', ...] == ['e', '_', 'N...'1', '.', ...]\n  At index 0 diff: ' ' != 'e'\n  Full diff:\n  - ['e', '_', 'N', '8', '1', '.', ' ']\n  + [' ', '.', '1', '8', 'N', '_', 'e']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '.', '1...'N', '_', ...] == ['e', '_', 'N...'1', '.', ...]", "E             At index 0 diff: ' ' != 'e'", "E             Full diff:", "E             - ['e', '_', 'N', '8', '1', '.', ' ']", "E             + [' ', '.', '1', '8', 'N', '_', 'e']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_40/tests40_40_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_7():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=7))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '.', '1...'N', '_', ...] == ['e', '_', 'N...'1', '.', ...]", "E             At index 0 diff: ' ' != 'e'", "E             Full diff:", "E             - ['e', '_', 'N', '8', '1', '.', ' ']", "E             + [' ', '.', '1', '8', 'N', '_', 'e']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_40/tests40_40_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_40/tests40_40_1.py", "lineno": 12, "message": "AssertionError: assert [' ', '.', '1...'N', '_', ...] == ['e', '_', 'N...'1', '.', ...]\n  At index 0 diff: ' ' != 'e'\n  Full diff:\n  - ['e', '_', 'N', '8', '1', '.', ' ']\n  + [' ', '.', '1', '8', 'N', '_', 'e']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000451036001322791, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46b0091abf34461ca9fe6fcf2c4f8f63", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
