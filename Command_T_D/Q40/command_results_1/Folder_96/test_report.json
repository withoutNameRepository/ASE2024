{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_96_1.py::test_strings_of_size_equal_to_20", "location": ["tests40_96_1.py", 5, "test_strings_of_size_equal_to_20"], "keywords": {"test_strings_of_size_equal_to_20": 1, "tests40_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001796870019461494, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de6a12217c0f47869c5babfc8750b7ff", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_96_1.py::test_if_result_is_sorted", "location": ["tests40_96_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014753600044059567, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "de6a12217c0f47869c5babfc8750b7ff", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_96_1.py::test_strings_of_size_equal_to_20", "location": ["tests40_96_1.py", 5, "test_strings_of_size_equal_to_20"], "keywords": {"test_strings_of_size_equal_to_20": 1, "tests40_96_1.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_96/tests40_96_1.py", "lineno": 12, "message": "AssertionError: assert ['!', '(', '+...'7', '9', ...] == ['w', 't', 's...'m', 'l', ...]\n  At index 0 diff: '!' != 'w'\n  Full diff:\n    [\n  +  '!',\n  +  '(',\n  +  '+',\n  +  '5',...\n  \n  ...Full output truncated (37 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_20():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=20))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['!', '(', '+...'7', '9', ...] == ['w', 't', 's...'m', 'l', ...]", "E             At index 0 diff: '!' != 'w'", "E             Full diff:", "E               [", "E             +  '!',", "E             +  '(',", "E             +  '+',", "E             +  '5',...", "E             ", "E             ...Full output truncated (37 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_96/tests40_96_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_20():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=20))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['!', '(', '+...'7', '9', ...] == ['w', 't', 's...'m', 'l', ...]", "E             At index 0 diff: '!' != 'w'", "E             Full diff:", "E               [", "E             +  '!',", "E             +  '(',", "E             +  '+',", "E             +  '5',...", "E             ", "E             ...Full output truncated (37 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_1/Folder_96/tests40_96_1.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_1/Folder_96/tests40_96_1.py", "lineno": 12, "message": "AssertionError: assert ['!', '(', '+...'7', '9', ...] == ['w', 't', 's...'m', 'l', ...]\n  At index 0 diff: '!' != 'w'\n  Full diff:\n    [\n  +  '!',\n  +  '(',\n  +  '+',\n  +  '5',...\n  \n  ...Full output truncated (37 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004482299991650507, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de6a12217c0f47869c5babfc8750b7ff", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
