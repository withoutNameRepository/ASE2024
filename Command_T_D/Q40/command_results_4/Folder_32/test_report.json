{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_32_4.py::test_if_result_is_sorted", "location": ["tests40_32_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_32_4.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011813200035248883, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "55b039cfbb804c928a152fac97ce3f8a", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_32_4.py::test_strings_of_size_equal_to_8", "location": ["tests40_32_4.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests40_32_4.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019250100012868643, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "55b039cfbb804c928a152fac97ce3f8a", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_32_4.py::test_strings_of_size_equal_to_8", "location": ["tests40_32_4.py", 5, "test_strings_of_size_equal_to_8"], "keywords": {"test_strings_of_size_equal_to_8": 1, "tests40_32_4.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_32/tests40_32_4.py", "lineno": 10, "message": "AssertionError: assert ['b', 'g'] == [',', '8', '@...'N', 'Z', ...]\n  At index 0 diff: 'b' != ','\n  Right contains 6 more items, first extra item: '@'\n  Full diff:\n  - [',', '8', '@', 'G', 'N', 'Z', 'b', 'g']\n  + ['b', 'g']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['b', 'g'] == [',', '8', '@...'N', 'Z', ...]", "E             At index 0 diff: 'b' != ','", "E             Right contains 6 more items, first extra item: '@'", "E             Full diff:", "E             - [',', '8', '@', 'G', 'N', 'Z', 'b', 'g']", "E             + ['b', 'g']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_32/tests40_32_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_8():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=8))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['b', 'g'] == [',', '8', '@...'N', 'Z', ...]", "E             At index 0 diff: 'b' != ','", "E             Right contains 6 more items, first extra item: '@'", "E             Full diff:", "E             - [',', '8', '@', 'G', 'N', 'Z', 'b', 'g']", "E             + ['b', 'g']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_32/tests40_32_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_32/tests40_32_4.py", "lineno": 10, "message": "AssertionError: assert ['b', 'g'] == [',', '8', '@...'N', 'Z', ...]\n  At index 0 diff: 'b' != ','\n  Right contains 6 more items, first extra item: '@'\n  Full diff:\n  - [',', '8', '@', 'G', 'N', 'Z', 'b', 'g']\n  + ['b', 'g']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004081959996256046, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "55b039cfbb804c928a152fac97ce3f8a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
