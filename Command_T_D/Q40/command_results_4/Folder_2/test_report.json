{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_2_4.py::test_if_result_is_sorted", "location": ["tests40_2_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_2_4.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000122891000501113, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec03841d68c54889b982fd15ac3be4b2", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_2_4.py::test_strings_of_size_equal_to_48", "location": ["tests40_2_4.py", 5, "test_strings_of_size_equal_to_48"], "keywords": {"test_strings_of_size_equal_to_48": 1, "tests40_2_4.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016861599942785688, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ec03841d68c54889b982fd15ac3be4b2", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_2_4.py::test_if_result_is_sorted", "location": ["tests40_2_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_2_4.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_2/tests40_2_4.py", "lineno": 26, "message": "AssertionError: assert ['*', '&', '$...' ', ')', ...] == [' ', '!', '$...'&', ')', ...]\n  At index 0 diff: '*' != ' '\n  Full diff:\n  - [' ', '!', '$', '%', '&', ')', '*', '/', '0']\n  + ['*', '&', '$', '%', ' ', ')', '/', '!', '0']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=48 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['*', '&', '$...' ', ')', ...] == [' ', '!', '$...'&', ')', ...]", "E             At index 0 diff: '*' != ' '", "E             Full diff:", "E             - [' ', '!', '$', '%', '&', ')', '*', '/', '0']", "E             + ['*', '&', '$', '%', ' ', ')', '/', '!', '0']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_2/tests40_2_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=48 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['*', '&', '$...' ', ')', ...] == [' ', '!', '$...'&', ')', ...]", "E             At index 0 diff: '*' != ' '", "E             Full diff:", "E             - [' ', '!', '$', '%', '&', ')', '*', '/', '0']", "E             + ['*', '&', '$', '%', ' ', ')', '/', '!', '0']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_2/tests40_2_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_2/tests40_2_4.py", "lineno": 26, "message": "AssertionError: assert ['*', '&', '$...' ', ')', ...] == [' ', '!', '$...'&', ')', ...]\n  At index 0 diff: '*' != ' '\n  Full diff:\n  - [' ', '!', '$', '%', '&', ')', '*', '/', '0']\n  + ['*', '&', '$', '%', ' ', ')', '/', '!', '0']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000510327001393307, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ec03841d68c54889b982fd15ac3be4b2", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
