{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_7_4.py::test_if_result_is_sorted", "location": ["tests40_7_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_7_4.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001590589999977965, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bc2298bdc2a04849856d7576808c611c", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_7_4.py::test_strings_of_size_equal_to_49", "location": ["tests40_7_4.py", 5, "test_strings_of_size_equal_to_49"], "keywords": {"test_strings_of_size_equal_to_49": 1, "tests40_7_4.py": 1, "Folder_7": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022196699865162373, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bc2298bdc2a04849856d7576808c611c", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_7_4.py::test_if_result_is_sorted", "location": ["tests40_7_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_7_4.py": 1, "Folder_7": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_7/tests40_7_4.py", "lineno": 26, "message": "AssertionError: assert ['JK', 'Q', '...M6', 'G', ...] == ['0', '1', '3...'9', 'G', ...]\n  At index 0 diff: 'JK' != '0'\n  Full diff:\n  - ['0', '1', '3', '8IP', '9', 'G', 'JK', 'M6', 'OUE', 'Q', 'T', 'V', 'WL', 'Z']\n  + ['JK', 'Q', '8IP', 'WL', 'M6', 'G', '3', '1', 'OUE', 'V', '0', '9', 'T', 'Z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['JK', 'Q', '...M6', 'G', ...] == ['0', '1', '3...'9', 'G', ...]", "E             At index 0 diff: 'JK' != '0'", "E             Full diff:", "E             - ['0', '1', '3', '8IP', '9', 'G', 'JK', 'M6', 'OUE', 'Q', 'T', 'V', 'WL', 'Z']", "E             + ['JK', 'Q', '8IP', 'WL', 'M6', 'G', '3', '1', 'OUE', 'V', '0', '9', 'T', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_7/tests40_7_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=49 + 1))", "        result = return_n_smallest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['JK', 'Q', '...M6', 'G', ...] == ['0', '1', '3...'9', 'G', ...]", "E             At index 0 diff: 'JK' != '0'", "E             Full diff:", "E             - ['0', '1', '3', '8IP', '9', 'G', 'JK', 'M6', 'OUE', 'Q', 'T', 'V', 'WL', 'Z']", "E             + ['JK', 'Q', '8IP', 'WL', 'M6', 'G', '3', '1', 'OUE', 'V', '0', '9', 'T', 'Z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_7/tests40_7_4.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_7/tests40_7_4.py", "lineno": 26, "message": "AssertionError: assert ['JK', 'Q', '...M6', 'G', ...] == ['0', '1', '3...'9', 'G', ...]\n  At index 0 diff: 'JK' != '0'\n  Full diff:\n  - ['0', '1', '3', '8IP', '9', 'G', 'JK', 'M6', 'OUE', 'Q', 'T', 'V', 'WL', 'Z']\n  + ['JK', 'Q', '8IP', 'WL', 'M6', 'G', '3', '1', 'OUE', 'V', '0', '9', 'T', 'Z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001312652002525283, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "bc2298bdc2a04849856d7576808c611c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
