{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_50_4.py::test_if_result_is_sorted", "location": ["tests40_50_4.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_50_4.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016009099999791943, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b193950c03e494fbc65ee137099f4c6", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_50_4.py::test_strings_of_size_equal_to_16", "location": ["tests40_50_4.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests40_50_4.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001698890009720344, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b193950c03e494fbc65ee137099f4c6", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_50_4.py::test_strings_of_size_equal_to_16", "location": ["tests40_50_4.py", 5, "test_strings_of_size_equal_to_16"], "keywords": {"test_strings_of_size_equal_to_16": 1, "tests40_50_4.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_50/tests40_50_4.py", "lineno": 12, "message": "AssertionError: assert [' ', '#', '&...',', '5', ...] == ['t', 'o', 'd...'Z', 'Y', ...]\n  At index 0 diff: ' ' != 't'\n  Full diff:\n  - ['t', 'o', 'd', '[', 'Z', 'Y', 'V', 'U', 'R', 'F', '5', ',', '*', '&', '#', ' ']\n  + [' ', '#', '&', '*', ',', '5', '[', 'd', 'f', 'o', 'r', 't', 'u', 'v', 'y', 'z']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '#', '&...',', '5', ...] == ['t', 'o', 'd...'Z', 'Y', ...]", "E             At index 0 diff: ' ' != 't'", "E             Full diff:", "E             - ['t', 'o', 'd', '[', 'Z', 'Y', 'V', 'U', 'R', 'F', '5', ',', '*', '&', '#', ' ']", "E             + [' ', '#', '&', '*', ',', '5', '[', 'd', 'f', 'o', 'r', 't', 'u', 'v', 'y', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_50/tests40_50_4.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_16():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=16))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert [' ', '#', '&...',', '5', ...] == ['t', 'o', 'd...'Z', 'Y', ...]", "E             At index 0 diff: ' ' != 't'", "E             Full diff:", "E             - ['t', 'o', 'd', '[', 'Z', 'Y', 'V', 'U', 'R', 'F', '5', ',', '*', '&', '#', ' ']", "E             + [' ', '#', '&', '*', ',', '5', '[', 'd', 'f', 'o', 'r', 't', 'u', 'v', 'y', 'z']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_4/Folder_50/tests40_50_4.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_4/Folder_50/tests40_50_4.py", "lineno": 12, "message": "AssertionError: assert [' ', '#', '&...',', '5', ...] == ['t', 'o', 'd...'Z', 'Y', ...]\n  At index 0 diff: ' ' != 't'\n  Full diff:\n  - ['t', 'o', 'd', '[', 'Z', 'Y', 'V', 'U', 'R', 'F', '5', ',', '*', '&', '#', ' ']\n  + [' ', '#', '&', '*', ',', '5', '[', 'd', 'f', 'o', 'r', 't', 'u', 'v', 'y', 'z']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008482110024488065, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b193950c03e494fbc65ee137099f4c6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
