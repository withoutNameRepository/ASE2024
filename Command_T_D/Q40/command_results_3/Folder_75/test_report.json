{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests40_75_3.py::test_if_result_is_sorted", "location": ["tests40_75_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012357200102997012, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_strings_of_size_equal_to_2", "location": ["tests40_75_3.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001512240014562849, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_75_3.py::test_if_result_is_sorted", "location": ["tests40_75_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013601499813375995, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_if_result_is_sorted", "location": ["tests40_75_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.835600237944163e-05, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_if_result_contains_highest_chars", "location": ["tests40_75_3.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.405599848832935e-05, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_if_result_contains_highest_chars", "location": ["tests40_75_3.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015411899948958308, "extra": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_if_result_contains_highest_chars", "location": ["tests40_75_3.py", 30, "test_if_result_contains_highest_chars"], "keywords": {"test_if_result_contains_highest_chars": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.267500015790574e-05, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_75_3.py::test_strings_of_size_equal_to_2", "location": ["tests40_75_3.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests40_75_3.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q40/command_results_3/Folder_75/tests40_75_3.py", "lineno": 10, "message": "AssertionError: assert ['1'] == ['1', 'r']\n  Right contains one more item: 'r'\n  Full diff:\n  - ['1', 'r']\n  + ['1']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['1'] == ['1', 'r']", "E             Right contains one more item: 'r'", "E             Full diff:", "E             - ['1', 'r']", "E             + ['1']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_3/Folder_75/tests40_75_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'ascending' == 'ascending':", ">           assert return_n_smallest_chars(s) == sorted(s)", "E           AssertionError: assert ['1'] == ['1', 'r']", "E             Right contains one more item: 'r'", "E             Full diff:", "E             - ['1', 'r']", "E             + ['1']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/command_results_3/Folder_75/tests40_75_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q40/command_results_3/Folder_75/tests40_75_3.py", "lineno": 10, "message": "AssertionError: assert ['1'] == ['1', 'r']\n  Right contains one more item: 'r'\n  Full diff:\n  - ['1', 'r']\n  + ['1']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00036778999856323935, "extra": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7fb055ccf6a84bb38ada6a94f6801715", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
