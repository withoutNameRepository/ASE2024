{"pytest_version": "7.2.2", "$report_type": "SessionStart"}
{"nodeid": "tests20_3_1.py::test_unsorted_large_range", "location": ["tests20_3_1.py", 16, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests20_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011392399937903974, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2a6c86d907e1425f8c6bd598903d68ef", "node": "<WorkerController gw1>"}
{"nodeid": "tests20_3_1.py::test_n_th_smallest_is_in_range", "location": ["tests20_3_1.py", 5, "test_n_th_smallest_is_in_range"], "keywords": {"test_n_th_smallest_is_in_range": 1, "tests20_3_1.py": 1, "Folder_3": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001892849995783763, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2a6c86d907e1425f8c6bd598903d68ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests20_3_1.py::test_unsorted_large_range", "location": ["tests20_3_1.py", 16, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests20_3_1.py": 1, "Folder_3": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/home/shahin/Benchmark_Command/Q20/command_results_1/Folder_3/generated_answer.py", "lineno": 5, "message": "IndexError: list index out of range"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 37 + 1000)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[24:37 + 1]", "        sliced_list.sort()", ">       assert find_n_th_smallest_num(initial_list) == sliced_list[14 - 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q20/command_results_1/Folder_3/tests20_3_1.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_n_th_smallest_num(nums):", "        # sort nums in reverse order", "        sorted_nums = sorted(nums, reverse=True)", "        # find the index of the n-th element", ">       index = sorted_nums[24:37].index(nums[24:37][13])", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[654, 385, 295, 709, 464, -356, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q20/command_results_1/Folder_3/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 37 + 1000)]", "        random.shuffle(initial_list)", "        sliced_list = initial_list[24:37 + 1]", "        sliced_list.sort()", ">       assert find_n_th_smallest_num(initial_list) == sliced_list[14 - 1]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q20/command_results_1/Folder_3/tests20_3_1.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_n_th_smallest_num(nums):", "        # sort nums in reverse order", "        sorted_nums = sorted(nums, reverse=True)", "        # find the index of the n-th element", ">       index = sorted_nums[24:37].index(nums[24:37][13])", "E       IndexError: list index out of range"], "reprfuncargs": {"args": [["nums", "[654, 385, 295, 709, 464, -356, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q20/command_results_1/Folder_3/generated_answer.py", "lineno": 5, "message": "IndexError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/home/shahin/Benchmark_Command/Q20/command_results_1/Folder_3/generated_answer.py", "lineno": 5, "message": "IndexError: list index out of range"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009770029992068885, "extra": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2a6c86d907e1425f8c6bd598903d68ef", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
