{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_35_1.py::test_horizontal_matrix", "location": ["tests58_35_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002781609946396202, "start": 1700234781.6864018, "stop": 1700234781.6866806, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002248310047434643, "start": 1700234781.6862292, "stop": 1700234781.686455, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018176900630351156, "start": 1700234781.6867254, "stop": 1700234781.6869073, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_one_integer", "location": ["tests58_35_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.381500083487481e-05, "start": 1700234781.68718, "stop": 1700234781.6872642, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.57720006024465e-05, "start": 1700234781.6876478, "stop": 1700234781.6877341, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_35_1.py::test_matrix_of_having_111_integers", "location": ["tests58_35_1.py", 28, "test_matrix_of_having_111_integers"], "keywords": {"test_matrix_of_having_111_integers": 1, "__wrapped__": 1, "tests58_35_1.py": 1, "Folder_35": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT4_T0/Q58/gpt_4_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 86,  58,  79,  72,  22,   0, -59, -92,  72, -26,  41,  10, -66,\\n          72, -92, -52,   5, -92, -28,  97,  99, -53,  88, -50,  -3, -71,\\n          13, -96, -57,  30, -48, -90,  64,   0,   3,  72,  -1, -81,  -3,\\n         -28,  52, -81, -85,  32, -37, -68,   8,  81,  85,  10,  45,   6,\\n         -18, -67, -48,  57,  92, -70, -20, -29, -89, -10,  -6, -46, -16,\\n         -69, -26,  18,  89, -10, -53, -22, -75, -40, -14, -23,  75,  45,\\n          43,   0, -65, -30,  70,  12,  51, -54,  16, -65,  32, -51, -68,\\n          42,  51,  49,  52,  91, -83,  85, -77,   6, -92,  88, -42, -85,\\n          18, -97,  91,  42, -13,  78,  12]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 86,  58,  79,  72,  22,   0, -59, -92,  72, -26,  41,  10, -66,\\n          72, -92, -52,   5, -92, -28,  97,  99, -53,  88, -50,  -3, -71,\\n          13, -96, -57,  30, -48, -90,  64,   0,   3,  72,  -1, -81,  -3,\\n         -28,  52, -81, -85,  32, -37, -68,   8,  81,  85,  10,  45,   6,\\n         -18, -67, -48,  57,  92, -70, -20, -29, -89, -10,  -6, -46, -16,\\n         -69, -26,  18,  89, -10, -53, -22, -75, -40, -14, -23,  75,  45,\\n          43,   0, -65, -30,  70,  12,  51, -54,  16, -65,  32, -51, -68,\\n          42,  51,  49,  52,  91, -83,  85, -77,   6, -92,  88, -42, -85,\\n          18, -97,  91,  42, -13,  78,  12]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_111_integers():", "        if 111 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(111 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(111)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 86,  58,  79,  72,  22,   0, -59, -92,  72, -26,  41,  10, -66,\\n          72, -92, -52,   5, -92, -28,  97,  99, -53,  88, -50,  -3, -71,\\n          13, -96, -57,  30, -48, -90,  64,   0,   3,  72,  -1, -81,  -3,\\n         -28,  52, -81, -85,  32, -37, -68,   8,  81,  85,  10,  45,   6,\\n         -18, -67, -48,  57,  92, -70, -20, -29, -89, -10,  -6, -46, -16,\\n         -69, -26,  18,  89, -10, -53, -22, -75, -40, -14, -23,  75,  45,\\n          43,   0, -65, -30,  70,  12,  51, -54,  16, -65,  32, -51, -68,\\n          42,  51,  49,  52,  91, -83,  85, -77,   6, -92,  88, -42, -85,\\n          18, -97,  91,  42, -13,  78,  12]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT4_T0/Q58/gpt_4_results_1/Folder_35/tests58_35_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 86,  58,  79,  72,  22,   0, -59, -92,  72, -26,  41,  10, -66,\\n          72, -92, -52,   5, -92, -28,  97,  99, -53,  88, -50,  -3, -71,\\n          13, -96, -57,  30, -48, -90,  64,   0,   3,  72,  -1, -81,  -3,\\n         -28,  52, -81, -85,  32, -37, -68,   8,  81,  85,  10,  45,   6,\\n         -18, -67, -48,  57,  92, -70, -20, -29, -89, -10,  -6, -46, -16,\\n         -69, -26,  18,  89, -10, -53, -22, -75, -40, -14, -23,  75,  45,\\n          43,   0, -65, -30,  70,  12,  51, -54,  16, -65,  32, -51, -68,\\n          42,  51,  49,  52,  91, -83,  85, -77,   6, -92,  88, -42, -85,\\n          18, -97,  91,  42, -13,  78,  12]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007795259880367666, "start": 1700234781.6878564, "stop": 1700234781.6886368, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e29edaf40f36414599442ce90373b783", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
