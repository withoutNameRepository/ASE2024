Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        └── Try
            ├── Assign
            │   ├── Name
            │   │   └── Store
            │   └── ListComp
            │       ├── Name
            │       │   └── Load
            │       └── comprehension
            │           ├── Name
            │           │   └── Store
            │           ├── Subscript
            │           │   ├── Name
            │           │   │   └── Load
            │           │   ├── Slice
            │           │   │   ├── Constant
            │           │   │   └── Constant
            │           │   └── Load
            │           └── BoolOp
            │               ├── Or
            │               ├── Compare
            │               │   ├── BinOp
            │               │   │   ├── Name
            │               │   │   │   └── Load
            │               │   │   ├── Mod
            │               │   │   └── Constant
            │               │   ├── Eq
            │               │   └── Constant
            │               └── Compare
            │                   ├── BinOp
            │                   │   ├── Name
            │                   │   │   └── Load
            │                   │   ├── Mod
            │                   │   └── UnaryOp
            │                   │       ├── USub
            │                   │       └── Constant
            │                   ├── Eq
            │                   └── Constant
            ├── Return
            │   └── Call
            │       ├── Name
            │       │   └── Load
            │       └── Name
            │           └── Load
            └── ExceptHandler
                ├── Name
                │   └── Load
                └── Return
                    └── Constant
