{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00046826800098642707, "start": 1700091146.80938, "stop": 1700091146.8098495, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005765420064562932, "start": 1700091146.8101351, "stop": 1700091146.8107126, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_one_integer", "location": ["tests58_44_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004912669974146411, "start": 1700091146.811021, "stop": 1700091146.811513, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_horizontal_matrix", "location": ["tests58_44_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014477800868917257, "start": 1700091146.8118303, "stop": 1700091146.8119757, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0008774269954301417, "start": 1700091146.811935, "stop": 1700091146.812813, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_5.py::test_matrix_of_having_191_integers", "location": ["tests58_44_5.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_5.py": 1, "Folder_44": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/Benchmark_GPT4/Q58/gpt_4_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   1,  -68,  -83,  -92,  -53,  -78,  -37,  -74,  -50,   90,\\n          -92,  -28,    7,  -20,  -89,  -90,  -31,   43,   17,   54,\\n           92,   29,  -68,  -63,  -56,  100,  -15,   19,  -38,    7,\\n          -27,   28,   10,  -65,  -44,  -43,  -98,    0,   53,  -69,\\n          -88,   37,  -94,  -71,  -17,   67,  -16,   51,  -52,   38,\\n          -80,  -93,  -41,    7,   48,  -64,  -93,   44,  -74,  -12,\\n           58,  -32,  -97,   59,   52,  -84,   84,   79,   95,   77,\\n           87,  -18,  -52,  -25,  -17,  -60,    1,   71,  -75,  -87,\\n           71,   93,   76,   91,  -26,   63,  -87,   51,    7,  -96,\\n          -57,  -68,   -8,  -59,  -31,  -82,  -29,   96,  -39,   83,\\n            7,   23,  -69,   83,  -23,  -44,  -37,  -20,  -70,   -8,\\n           19,  -87,  -72,  -85,   91,  -82,    4,  -79,   62,  -29,\\n           -7,  -50,  -86,   23,   -8,   64,   41,  -22,   67,  -20,\\n           55,  -52,   -7,  -93,    8,  -97, -100,  -36,   68,   11,\\n          -47,   71,  -30,   33,   78,  -58,    5,   -1,  -57,  -98,\\n          -81,   81,    4,  -20,  -98,  -71,  -87,   72,  -96,   56,\\n          -46,  -39,   71,  -91,  -27,  -17,   10,   82,   50,   25,\\n           78,  -43,   -5,   62,  -65,   -9,  -94,   97,  -94,  -57,\\n          -44,   61,  -54,  -43,  -35,   13,   28,   13,  -79,  -12,\\n          -67]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   1,  -68,  -83,  -92,  -53,  -78,  -37,  -74,  -50,   90,\\n          -92,  -28,    7,  -20,  -89,  -90,  -31,   43,   17,   54,\\n           92,   29,  -68,  -63,  -56,  100,  -15,   19,  -38,    7,\\n          -27,   28,   10,  -65,  -44,  -43,  -98,    0,   53,  -69,\\n          -88,   37,  -94,  -71,  -17,   67,  -16,   51,  -52,   38,\\n          -80,  -93,  -41,    7,   48,  -64,  -93,   44,  -74,  -12,\\n           58,  -32,  -97,   59,   52,  -84,   84,   79,   95,   77,\\n           87,  -18,  -52,  -25,  -17,  -60,    1,   71,  -75,  -87,\\n           71,   93,   76,   91,  -26,   63,  -87,   51,    7,  -96,\\n          -57,  -68,   -8,  -59,  -31,  -82,  -29,   96,  -39,   83,\\n            7,   23,  -69,   83,  -23,  -44,  -37,  -20,  -70,   -8,\\n           19,  -87,  -72,  -85,   91,  -82,    4,  -79,   62,  -29,\\n           -7,  -50,  -86,   23,   -8,   64,   41,  -22,   67,  -20,\\n           55,  -52,   -7,  -93,    8,  -97, -100,  -36,   68,   11,\\n          -47,   71,  -30,   33,   78,  -58,    5,   -1,  -57,  -98,\\n          -81,   81,    4,  -20,  -98,  -71,  -87,   72,  -96,   56,\\n          -46,  -39,   71,  -91,  -27,  -17,   10,   82,   50,   25,\\n           78,  -43,   -5,   62,  -65,   -9,  -94,   97,  -94,  -57,\\n          -44,   61,  -54,  -43,  -35,   13,   28,   13,  -79,  -12,\\n          -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   1,  -68,  -83,  -92,  -53,  -78,  -37,  -74,  -50,   90,\\n          -92,  -28,    7,  -20,  -89,  -90,  -31,   43,   17,   54,\\n           92,   29,  -68,  -63,  -56,  100,  -15,   19,  -38,    7,\\n          -27,   28,   10,  -65,  -44,  -43,  -98,    0,   53,  -69,\\n          -88,   37,  -94,  -71,  -17,   67,  -16,   51,  -52,   38,\\n          -80,  -93,  -41,    7,   48,  -64,  -93,   44,  -74,  -12,\\n           58,  -32,  -97,   59,   52,  -84,   84,   79,   95,   77,\\n           87,  -18,  -52,  -25,  -17,  -60,    1,   71,  -75,  -87,\\n           71,   93,   76,   91,  -26,   63,  -87,   51,    7,  -96,\\n          -57,  -68,   -8,  -59,  -31,  -82,  -29,   96,  -39,   83,\\n            7,   23,  -69,   83,  -23,  -44,  -37,  -20,  -70,   -8,\\n           19,  -87,  -72,  -85,   91,  -82,    4,  -79,   62,  -29,\\n           -7,  -50,  -86,   23,   -8,   64,   41,  -22,   67,  -20,\\n           55,  -52,   -7,  -93,    8,  -97, -100,  -36,   68,   11,\\n          -47,   71,  -30,   33,   78,  -58,    5,   -1,  -57,  -98,\\n          -81,   81,    4,  -20,  -98,  -71,  -87,   72,  -96,   56,\\n          -46,  -39,   71,  -91,  -27,  -17,   10,   82,   50,   25,\\n           78,  -43,   -5,   62,  -65,   -9,  -94,   97,  -94,  -57,\\n          -44,   61,  -54,  -43,  -35,   13,   28,   13,  -79,  -12,\\n          -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/Benchmark_GPT4/Q58/gpt_4_results_5/Folder_44/tests58_44_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   1,  -68,  -83,  -92,  -53,  -78,  -37,  -74,  -50,   90,\\n          -92,  -28,    7,  -20,  -89,  -90,  -31,   43,   17,   54,\\n           92,   29,  -68,  -63,  -56,  100,  -15,   19,  -38,    7,\\n          -27,   28,   10,  -65,  -44,  -43,  -98,    0,   53,  -69,\\n          -88,   37,  -94,  -71,  -17,   67,  -16,   51,  -52,   38,\\n          -80,  -93,  -41,    7,   48,  -64,  -93,   44,  -74,  -12,\\n           58,  -32,  -97,   59,   52,  -84,   84,   79,   95,   77,\\n           87,  -18,  -52,  -25,  -17,  -60,    1,   71,  -75,  -87,\\n           71,   93,   76,   91,  -26,   63,  -87,   51,    7,  -96,\\n          -57,  -68,   -8,  -59,  -31,  -82,  -29,   96,  -39,   83,\\n            7,   23,  -69,   83,  -23,  -44,  -37,  -20,  -70,   -8,\\n           19,  -87,  -72,  -85,   91,  -82,    4,  -79,   62,  -29,\\n           -7,  -50,  -86,   23,   -8,   64,   41,  -22,   67,  -20,\\n           55,  -52,   -7,  -93,    8,  -97, -100,  -36,   68,   11,\\n          -47,   71,  -30,   33,   78,  -58,    5,   -1,  -57,  -98,\\n          -81,   81,    4,  -20,  -98,  -71,  -87,   72,  -96,   56,\\n          -46,  -39,   71,  -91,  -27,  -17,   10,   82,   50,   25,\\n           78,  -43,   -5,   62,  -65,   -9,  -94,   97,  -94,  -57,\\n          -44,   61,  -54,  -43,  -35,   13,   28,   13,  -79,  -12,\\n          -67]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.060344796991557814, "start": 1700091146.8129587, "stop": 1700091146.8733046, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "25f951fca1584f6a8e6ff09d33f78c0a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
