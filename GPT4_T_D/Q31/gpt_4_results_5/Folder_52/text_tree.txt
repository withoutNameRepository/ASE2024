Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        └── Try
            ├── Assign
            │   ├── Name
            │   │   └── Store
            │   └── Subscript
            │       ├── Name
            │       │   └── Load
            │       ├── Constant
            │       └── Load
            ├── Assign
            │   ├── Name
            │   │   └── Store
            │   └── ListComp
            │       ├── Name
            │       │   └── Load
            │       └── comprehension
            │           ├── Name
            │           │   └── Store
            │           ├── Call
            │           │   ├── Name
            │           │   │   └── Load
            │           │   ├── Constant
            │           │   └── Name
            │           │       └── Load
            │           └── Compare
            │               ├── BinOp
            │               │   ├── Name
            │               │   │   └── Load
            │               │   ├── Mod
            │               │   └── Name
            │               │       └── Load
            │               ├── Eq
            │               └── Constant
            ├── If
            │   ├── Compare
            │   │   ├── Name
            │   │   │   └── Load
            │   │   ├── Eq
            │   │   └── Call
            │   │       ├── Name
            │   │       │   └── Load
            │   │       └── Name
            │   │           └── Load
            │   ├── Return
            │   │   └── Constant
            │   └── Return
            │       └── Constant
            └── ExceptHandler
                ├── Name
                │   └── Load
                └── Return
                    └── Constant
