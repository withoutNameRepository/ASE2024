{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "Here is the python code according to your specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_sum(matrix, sum_value):\n    results = []\n    rows, cols = matrix.shape\n    \n    for submatrix_size in range(1, min(rows, cols)+1):\n        for r in range(rows - submatrix_size + 1):\n            for c in range(cols - submatrix_size + 1):\n                submatrix = matrix[r:r+submatrix_size, c:c+submatrix_size]\n                if np.sum(submatrix) == sum_value:\n                    results.append(submatrix.tolist())\n                    \n    return results\n\ndef submatrix_with_particular_sum(matrix):\n    return submatrix_with_sum(matrix, -811)\n```\nRemember, the input matrix should be numpy array, not a list.",
        "role": "assistant"
      }
    }
  ],
  "created": 1690905110,
  "id": "chatcmpl-7ilx03T2GVLxN6siJKPR3k9sQyYFm",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "usage": {
    "completion_tokens": 163,
    "prompt_tokens": 121,
    "total_tokens": 284
  }
}